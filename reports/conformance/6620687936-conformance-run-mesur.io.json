{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "716f7169-a120-44a7-a0eb-c791df24c0a3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "01facc79-4b52-4a7e-bfec-38323964436e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d9311a0-83f9-4de8-b9fe-6aa1fe5354a5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a635a6f6-37ce-4d90-87be-94f871c72166"
                }
              }
            ]
          },
          {
            "id": "4c9bdeb1-ca96-4490-9574-cd7dca2757cf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe6cd7ef-6420-4f9e-b0de-e3a838686da3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aa26075b-3d40-4420-b20d-480b1e35c78e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "36b14643-8440-41de-89d2-7d1397b54139",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c79cb573-3448-4391-ba2d-4a19ddf12168",
            "name": "Positive Testing",
            "item": [
              {
                "id": "faa724ab-9783-4e21-adf1-4734ad6969b2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "691225db-4132-4fee-bd34-b1d7e71fb696",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "718c46c7-067a-40e4-88a8-d23cfc6fd798"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "782d1cb4-c0a2-40db-b69f-231a517caec8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ac8dd1e-897e-43ff-82f4-934fc1860050"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0208dd5f-0295-478b-a3b1-7a11e5f8353b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "080fdd55-af95-4e53-bd2b-d3152c95c56d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5672557b-32a0-4040-8977-bec15a613c75",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2d372d5b-c98e-4987-adbe-dc633d61e1ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "205e3235-7919-4487-b5b1-3174991338ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "169c904f-0311-40d3-8b19-c6b1e8888f8a"
            }
          }
        ]
      },
      {
        "id": "7cf05323-4d41-4b71-8b70-a006bea0b0d2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "18f41b80-b152-43f5-968f-98b9113f5fee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57136bd2-8ec1-4911-a51e-1b4baf193ae5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef72c32b-7ed1-4ed0-bab5-ff6140232747",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1dbba9-cf43-4bc7-a41e-ef58e53a7915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6feefb6e-fb78-4b6c-be5b-4102f6dadb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cd3c5b-20a1-4e28-a31e-3e8fe6598593",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31c157a-b599-46ec-9e11-12965b343450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34b32169-ee9e-4745-b422-b34d744dbfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3382bc6f-087c-4a1b-94ab-38ba3317ed51",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dcb4b3-5f16-4137-8e24-fdbea0b4f2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d651ed89-f086-4abe-a5f6-3884b19a67e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6527426-fd44-4fed-8237-7789f9a2706f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa1f0e8c-b913-40d8-ba4e-6ddff10247f4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37e37ec-6ec5-48f1-81f8-286c1235bc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3943d7c3-0f4c-40ac-9121-fae65ab16116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70bbf1b-c00b-44b8-a987-9970d8cc5aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cf14f5-e9ea-40fe-ba80-04cf287405be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0fa42294-a06b-4fd6-81ee-23aee1c67ec2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "84cb0130-dcfc-40f0-80ca-3c205af17cb5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2676581-2c67-441b-8d88-198d277ce378",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3070ca6e-d3be-429f-a63c-c3a529d77cd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96be05bb-f468-4029-8ac2-38211396b4f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cd7ff55c-75c7-4d75-937a-eec903f565f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46e8fac5-dd12-4ced-b354-ec188a080dd6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "537f5873-1476-4002-a922-84555d96faa1"
            }
          }
        ]
      },
      {
        "id": "f170f13f-37d1-40d0-9539-0731e0114ed6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d6ace4c1-f283-4b20-970f-1dd19c9392d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e54b414-4fd3-40a7-b416-dff43b12317e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f678f637-4a29-44a2-a1e5-042df90c84bc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0313ffb0-72c3-48d4-996f-49b9f8d16a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e82135-98f7-4690-99fe-6fd9399209e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b049864b-d742-4888-ad18-65a3fb67c837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "993af495-d369-4adc-b9fa-f35e71c0700b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9657ce6-aec3-4bbd-8c46-9e0f0fe8ea02",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3e4858-29fd-4768-9a0a-10d441eedf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37765130-a9c3-4601-81ce-fe60c5028a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f075eeaf-297b-491e-8e04-0a40b9a61a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccaa3fef-459a-4d47-86b3-ec399273db20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80f2cf2-0ed6-4afc-bd77-9135184dec63",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982d767a-9df9-40dd-8d05-67da305b32a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac817c2d-f181-487c-9704-4557ae22b1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b082cc-f4de-4ee2-8bdd-e3f899cea878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ff57fab-627d-4c6d-ad0e-3316942a6d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f18b2a-b4c0-4a06-b2b5-c04b6d829f04",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7977a38-8934-4a5e-91e3-f9801016e05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f565d3ba-ca01-43c8-a1d7-790dbee3c1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec9689e-930c-4a26-93c8-5b981ebfae14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71c0d282-08f9-4bde-873b-040739148713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e465591-44b4-4b7b-a3f1-c01d1b16a29e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417e23c0-5d7e-43a6-ac78-6ab914e292b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285d3666-67ef-4801-90b9-d3db09aade33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2c28bb-6688-4227-9db4-1f102e8b412d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73ae0e6f-fbad-4045-a011-0b3a00ac6398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfa5a61-6a4a-4e57-9e1a-8bad5f2a819f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ac8fe6-6f2b-4b67-b93a-6338a6dfbb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4fc4b4-78ac-4ba1-918a-9c072ffba51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05c1e31-3536-4aee-9908-f8c1aa5fcbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "933f80f7-3bed-4eb6-bbfe-6a307bcde6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c3e19c-efbf-47c4-881b-710da6838649",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd8510d-ace7-4e05-98c6-eb51c26d9d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca344db-4b9e-498c-9d1e-ec4cfadbb1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276832a9-9f2f-44bc-a989-036769f5a227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a69cf161-7152-45eb-a51e-734d237e970b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3587a33a-8f05-4d8d-a329-154bcb9a9f31",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb245e1-6740-4081-a44d-8b498c57f98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4752c624-5b15-4ee9-a134-791469af785c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25010dd4-36cb-4cc1-a1be-dcea227820c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d426215-69e8-44e5-83be-1075060b81c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f745745-0dcc-45e2-8f40-18b92d5233f7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4f19c9-3521-45b4-929a-64793cf5c798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cc36d2-d21c-4eac-b212-05a5d770a926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ead3211-18d5-4f34-808b-1f3b37054573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bce6198-6919-4da1-8883-0ef2abe51a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7479ae04-4fa1-4a87-96e5-22ac38100bad",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2432ce8f-c556-46c9-8726-7caa4593b399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8de44c6-36d3-4aae-b9db-668226644f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fe430c-b91b-41b0-b9d2-c2babb9f0527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44f1b4c8-7797-4f0f-bd83-5e30620063d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc49fdf-0b43-4931-bb84-d74a51c992aa",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc0d476-7e81-406f-907b-80bbdae6d785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522f7672-90b4-42b6-bc8c-cda42d347462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40360ed7-b410-41cf-b17d-bd7506775e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d701c522-ebcd-4ba1-9f38-2a2b28403f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc6acef-73c3-4887-85f3-b4034a9abd94",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9740ba9-9456-4e52-b48b-008daa1f4def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1133864-b6fc-4544-baec-5fe78688d25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ae0012-5466-4df2-969a-82c753fd1dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f44154a9-41b5-4adb-9408-620de37fcb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be358c73-b095-464e-b143-48ab5357c69b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07437930-3a3b-4d72-b561-8bde449fdba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261d71e5-749b-438d-b716-d47d8d3ed72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784019b7-6aaa-4ce9-b30f-35196a947ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51173ca5-83a2-4832-a8e7-6f7c350fe9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46993dcb-f268-4f92-976e-3ac0387733cc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181ce6ff-5681-4975-aabb-5721817d0684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5db201a-dd36-44a2-a042-c192c76c6916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c53264d-6484-4f2c-a736-8f0a48eb5ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a970275-04fb-4c7f-b1d5-81a4b8e41e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8188489-a969-4819-bda0-37d3e6965bc4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1895bd99-cc21-4adc-a43b-6abe13696662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348d541f-820e-4ed8-b634-aa06108d678b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8e870f-faea-42a1-833d-ab96d62c975e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc22c599-48d3-4aea-9f7d-8020415acc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471053ee-0adc-47e5-8fbb-4a9f5efbc1af",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa3e7bd-84a3-498c-a060-9d2c70515a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e188116-b16c-4f95-a0d4-86823de44a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cc01a0-5c4f-4716-b414-1b61d6560f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ce06a89-b9c8-4ffc-bbc5-07e5ca0dabfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16b4c39-4a9d-415f-b7ef-53984e73b3d6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f794e835-e889-4d01-9cab-18b33457bd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc69686-6d9a-4455-bd32-6ab1b89e38a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbbb393-c231-4e6b-9f18-ac2194c122dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd461522-9ee8-4b6c-9192-efd369279974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57118bd6-f939-49ef-a315-0710d39b1371",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cdd751-dd91-4388-8573-d9653c4fa531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25af61a3-5796-4e05-90a4-e067c4b715cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b40a05-3a9b-4cfb-9c76-f6b720700471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de28412-1684-49ca-ac44-434f783174c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771c5096-470e-44a2-86d9-1baebcd09261",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc643e5a-ce8c-4a86-8871-3fcce1573da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6468074b-cd53-45b9-8c29-1a7328719be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c940427-1a29-4863-bd8f-5da7379281ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f51a0ac-5e1d-4682-b138-41d1915151ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9e7392-64e8-427d-85cb-742cceb8af47",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cb649f-e08c-4a2a-9951-eab32e1d7ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd74ea7-8f4f-4f0e-8435-104f6996468b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c8efbe-c951-446d-8b3d-e4e0fe84c45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e2b9c7-83ee-4eea-a37d-bfb2e9ccbb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321d9c35-4f03-404a-ab64-cbdbe36bcd8e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14c731e-2b0f-4328-8d91-439ca926a40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e03816-2a62-4218-905f-9c914fcd5cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa58a809-3e46-454b-92e1-171ad83a69e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86b9a41a-3283-484b-87b5-24d3ce659226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366f33d1-6f1f-4610-a873-b4c49629bb82",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd8c8cc-5926-4aec-a8cf-45537cec952c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32575e31-feb1-40e1-a3ed-1dbe247df9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775076db-021b-490d-b891-7608b780da64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0da9a50b-09d0-4433-9e80-0fad42cdc8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b95105-924b-4775-8fac-f449b37dff98",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b688846e-2ad7-48d8-af05-3b750d000ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6322854-f146-4f7a-8c4e-9f7ae05cd998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a6daa7-6ca6-45e2-903e-1150cfa8090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7dec56bf-67b6-431d-9184-2dc31d926f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ca0b71-8584-4d74-8a85-cdb646536916",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a840753-b62f-4800-86d5-45a490d7e28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbe2ba6-626c-4d9c-992e-1378b5a15333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb4dfc0-2cd2-44e0-b1a7-5a9060d6c8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "010c00ad-bab6-4a77-94cb-035fbf476bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ac8e11-af4b-43b0-8ffd-f0bd1cc1f057",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd98ce4-3056-4076-b31b-79cf9ff3ec11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d671e6-aa87-4432-b19a-5c93d3f1bafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f535f6-de25-49d9-adf4-3370b7167285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1073c23e-3186-4243-bca2-eeea654f7be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172af2aa-4e54-4562-baf6-d81dc73789f6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a076dd-9fe8-44a8-b5bf-c83a1cda6087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49ae73e-aba7-4acf-a573-bb9ca3ddae3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbe69b5-71bb-46c4-b8b2-8742ad2270e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b2948a-be0e-4532-9693-3a14a6c4b6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c195e2e4-a5e3-4313-bc03-7b69f0bcc7f4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa52f2d-47c8-49d6-a983-edf9887d5a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7ada0a-9014-4c48-befe-6cb4137e8ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8fe72f-051f-42a7-9354-1a034effde03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "867467dd-8444-4768-bfcc-145f57076554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569c81d7-0d5d-4880-927c-f0e1d7048d5c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4368ad8-616e-454c-bfe3-59263d3afed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31166500-ba04-45eb-9c9a-635f615f758e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7184585-c304-40f9-931a-df761c1a6800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11674c0e-9271-4770-9f1e-7393029e135a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495914da-baa9-42ae-9d4e-1ffdf2d237c2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aab94c5-1b38-427b-aab5-e5fb9bc00ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdf3700-f56c-4da5-941f-68d0ef827426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fdd7f8-e7eb-4299-b78b-d36297b2688b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49eaeb4-fdfc-408a-a7ab-0c2d4f4c3270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175b77cc-597a-471c-b9cc-c327a2ada31a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7b2645-7cce-4870-b090-b84139f39588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545a3efe-0e2e-47c7-9d29-b59e46304bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0fcbb6-9413-4b73-a572-94aea4467fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "19b96cda-7fcb-4a38-b075-c95e9e1cb341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd875b7-b62e-4727-9967-b8ed10300b90",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddd65f3-a67b-4e69-abef-aa987210761d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df29c29-16c2-4919-9572-62c037c153a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bd6ec8-04c2-47b7-82a6-72b6bd127c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bb1ee8-757e-4b63-b8e9-c31c178cdd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0522268-f8ed-4743-831d-8b333059126a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2a5ebb-8c24-41c6-8cf0-ffbf86fe5ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee744214-802b-4122-87fe-8326135c6554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbde0de-0be5-43d3-9a99-03e65be4b626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b73b591-2c33-40be-b08a-db20e38a128f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa5eca4-37b4-48d5-8be8-e45f418cc2f0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5f7af4-40ea-4ff3-92a1-842db002a978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1913dcd1-fcae-43c1-828b-9c4666ad72cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bbf262-1b0b-4e1b-b0ea-4406ed28191c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b7f92f-7bed-4039-b718-ed70ff1374d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3621ca-b9de-45ce-8e32-d54a7a9e8b18",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee48bf2e-2022-4a61-a687-8a500dde2234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c24a0bc-20a3-4149-aab1-cee3e712e087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7c2476-d337-41b8-aaec-1f7e33c61bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87375dc-445a-4bf2-a672-23bac3a2dd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a9d018-aa40-4554-96be-1f8a0efdc340",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26021d0-7e7a-4813-80e9-e554f56841d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205d9ead-a622-4313-9843-22aba6c1f1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec6cdf7-d0f8-49c9-ac89-7f55e040e703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d9859356-9813-42e9-ba8e-837b9b263baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986a4dad-e2d3-49cc-91d9-8775e5881271",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888c8077-0cca-4dda-97ac-b5efc62c5895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b108024-6676-49b0-9068-658072dc2ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b60eb1-5b83-4a42-b564-02eb78dfde91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5824ef22-8442-4908-a2a4-39d6986f11e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98edf9bb-4755-4cf8-934c-cfe7523bb0fc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73afa5e6-a11d-4574-b55c-52204e32da8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7120ec6d-9047-4b1c-9996-3f5cd374ee4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e820f69-21d2-4265-87ad-95f9a06c006f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40db1a3a-1436-450a-8589-58215eb5fa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e782b4-459c-4ba4-855f-27432c89f74a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e6cd01-ad2d-4a56-8265-c715d0471cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d649767-0b4d-449b-93c2-2f31bb1fe443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6abd458-8999-49cd-9773-54ff1bafaba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e71296f8-13e2-45d9-80a4-5b64d225f2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec299adc-28c9-4821-a92c-2a78c80ad23a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e57b6dd-c517-4631-9a67-c8d4e4598a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1647faf-fbfd-4347-a8b9-ac7411c3e1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec98a77f-e1c0-4f3a-b578-d7c37f43dfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec55f043-5d3e-449e-8eb2-989fae69d08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc2f193-accf-4876-a82b-1d27a07f96bc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd6ab50-7319-45b0-a9c0-1501125f5964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e80f4d-1ee7-4bc3-83af-1098964be9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c74289-bb13-43a2-84f3-2a77dfd236a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b34051fe-1bd9-494d-a0db-8856e5811b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bec9fa-10cf-46e9-a974-359d25c1e4d6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5cc342-cd82-4eec-b5e0-c9212d6ca84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f29c57f-82cd-4090-9c5a-541cdd33e5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6f0bad-6e5a-421e-a5dd-d9e9b3bb6ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d64db09f-e74b-4cb5-a0c3-626c95975072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eafb384-b5ed-4096-b0ea-5cc295c9d8f8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cabcaa6-17b2-40b0-9a23-833267f362aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71bcd45-399d-4982-af53-1883c8e9e32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3ba7d7-1a89-4cf7-a9a1-1c7838c1ccd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8cc9e0-7a80-4a08-81c0-04336205050c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2047b834-d09f-44b7-b62e-408836abe151",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181dac29-e2b1-4809-9a2b-aa3f2b6ccf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b397c9-74c6-4a01-9284-7e7ad775305f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cd8feb-6dc5-4e29-81bf-b9f03f9234fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd64994-23ff-4534-813a-f0c89c54c239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d0bc1c-79e3-4bca-b2d1-a96c464b9efa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03994ec-9753-430f-9139-a04f788473f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c3dd63-d593-409c-a41f-c075ec53dd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3845845-a8c5-462f-9692-70727d3ba27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd74081-62c3-443e-b661-92a1a5dc0780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38a8467-fb87-4b65-98bb-e374bece996c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bfeec0-b0f8-45f8-8360-7ca39a89a851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5147befe-af4f-4177-a446-c00b486900e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c70e0c4-95f5-44e7-bec1-0bce21236894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f543c12-2033-46cf-bbb6-1bca66455049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd7cfce-ef9f-439f-b4c3-f38d2112b156",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ad7973-fdd7-4daa-9c05-b3593d03eec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3e06b1-27d0-447c-9e77-a1644eb86206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8372ff01-a415-49d5-8b8f-34c39782900d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f672abe5-8bc4-4beb-8f8f-b2f33d005461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bb5c7f-9c3c-467d-af10-3cee6203b053",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6055264b-10f0-4de6-bbb9-4516a8d2f1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22ef80b-a6e1-491e-ae50-d313dadb1fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f070c185-9d2d-4f66-9147-2f226380b5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b40d4235-0685-44eb-9718-af59928864bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9410cea-6538-40bb-b4a7-022bb9c1b159",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f223d3-c078-4b21-ac39-0803a476bb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4061c232-6e36-450b-8b4f-89cccfca8691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bf13a5-a384-41ad-a5f8-62908947cdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16f17064-fff6-4ea2-acad-59f466eac806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abaa473-c8cb-48f2-9103-3d076230a4ac",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7273b87f-a931-4e28-abfe-bf90a962d722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4564fb-12bd-49ba-82ec-723c82539a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f01ffba-8a13-414f-b679-f10a6b349a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edc4d9bc-eb52-4fd7-b1f8-abc257357796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b428aede-6950-42a0-9816-08eadd6c34a0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab38508-7253-4754-9980-b8bf78044ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb83433-a282-44e8-9812-6f424a492779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4540c746-99fc-46d1-9ad8-f24998ed7fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bc47e3-be50-4294-aa2f-451593f65618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8cdebf-6cfa-430a-b6c6-cd39de1af75f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f311089-de0b-4e5f-92f2-18fbf6b5f842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5937fa98-cb0d-4c35-b341-4d1658e89d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18051c9c-d7f0-4d17-b1c0-186b269f496c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8533979a-afef-4a68-b7a1-47d28aa74714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046abee0-54ef-4602-b54b-91ecef09aa08",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c574461b-7f48-47da-aa63-b3bf90221fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a542beba-8bb2-4a6f-a2b1-22d1e267040d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02f6eec-d383-4d3f-b24a-0ada6a13a224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "523cb8b8-4d64-4256-afdd-029d5429bf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feabba63-8b00-49b4-aa46-e833d76a9d0a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ede148-c7ad-400f-89a5-5061cf5396d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff63ec8-5726-4fc3-9c9c-a60641fd6626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43a7f46-3e60-46bc-a4af-ca402b92cda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbede1c-728b-4409-a1f4-93fdec306cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee814c8-0bb0-44e4-a112-2749ee4a3983",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfe3768-8f5c-4b25-be31-29af7566d469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8aca588-2512-4e65-a9b2-0539f29bb302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82857cef-1bbf-41d3-9d81-23e6c422a1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4addb583-02cc-4d6c-8cd4-94f0f54dfee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af89a37e-504e-4767-83fa-aa0d71112735",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfd25b8-68e3-4038-9c9e-da60296d20ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df09f67-0531-4a9f-9728-4b979093c8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c093569-d4e1-4d50-a048-9203f5b34808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45103207-6809-45bf-83b3-67aad5e1e434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba16e423-da4c-4953-80b1-7141c4e3e515",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae4b834-0e98-47da-bd29-f1c1a63893c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a34db04-6f97-4e01-a9fa-77ef9f0ad362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc5aa74-64f6-4108-8c86-a56dee296dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "96c08746-8fd8-4d9f-b4e8-8cb8e5dc0800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d8bc35-5226-4283-816f-28c31bdf1bd4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc625df9-3b3c-4a82-be15-53c99c218da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a250d375-6fe8-4ea1-8719-efa14074e9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795bb1a7-39ee-40c9-93b7-6da0ca91248e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7143b4f-9fb3-44ac-9974-a9adffc1a5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9d404d-1982-42f3-8d18-779a4ad64fd9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd641646-3cc2-43eb-b84c-9d33eac41777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38394418-0ea4-4399-8b08-b4d8bc642ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb111ab-2902-4f05-974f-ba82e371e6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a803aca-7cc8-45db-ae72-bad3e762bc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2be8a0-cdaa-4b57-9c16-08bd9a428dc7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe2882c-06cc-4502-99f9-8f93e54aa046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e7e3f9-b4b1-4843-98fe-cedf5e084e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4c7fd9-cc2c-40ff-ae49-681ad7bc02a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b68f911-02c0-4e6d-a56a-39ab1d45735f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7604023-f308-4c1e-b1e4-76f457ba14f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9232dc-63c0-44a2-84b3-194657be69a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13df32d9-8259-43c2-b0dc-86424f0f1e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a706163-c38e-4deb-875b-4f3ed5894c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "87211640-308d-4ae6-82a8-f69523f5c3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6ff8ad-34a1-43ef-ba7f-8df42ddbbe13",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429ae6e1-1400-40de-a506-1f4b296c1193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c36bfd5-42e2-4c4c-98bd-d779d6170b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eef0ed-5f39-44e6-88bf-6c7c7d1d2dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5d73fa-2222-4b34-9023-a481159de217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca22fe7-1582-476b-841c-8f3a56f2876e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ae138d-d3c6-45a5-86b9-f3069963a1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a8f0f0-2be3-4b29-9b7a-44f7fdc79972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba376c4-423a-4102-bb97-f6d338c4eb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ac0591-4736-4dac-a63c-2dcb2ae24f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae472d0f-18dc-4c9a-bfb5-3737edbc8f37",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9a33a5-56c7-403f-b60a-39e9c9847beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8890d39-25d2-4bf2-8cce-c0c32bdb0ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa7aca1-c9eb-4283-90d5-32144987fda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c050360-daf3-4eb3-8192-a25ea7fd22e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5673e95-210b-492c-8db1-3d00a16b306c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c312312-ae3a-4345-b40e-d1d021ccc273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580c481d-77d7-4364-8da1-7d535a9af7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b953a763-4384-420d-b620-08cfc653021a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad85700f-b851-4e80-b9ba-75d0941744d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89db24df-42c2-49ac-87d9-8c0a67ada716",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee03f7d-efff-4561-aa3a-ac90e41e6294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ac80cc-be11-4ad2-ac94-171f288b9293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb40beec-92e7-4412-98e0-a7c3cf6fbdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58def0f5-80e5-488a-95a7-c9a16de65e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0622a648-48f7-45a3-bfb9-d6fda45777be",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763d779a-b00f-422a-ab7d-6942171dbe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52af2931-04a9-465d-aa1e-fc0e54ecbc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba9229d-d25b-415b-803a-ab75358edc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e751f6-5b5d-49e6-a7c6-9fdba6b50b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aea9ee2-9016-4681-9ae1-41a9ee081c2e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144a77a3-b2fc-4d68-b4b3-ee16925b3e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae10f940-7c44-4109-8337-1d8d32e3992b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af087398-80cf-4048-bfc8-48711f94b10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "754b127d-123b-4eda-b31a-e46923a9c1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2ac5bb-7807-4bd7-b317-b842e81f9ba7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212b2eed-016a-428c-8cdb-a8f59fc49a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fe677f-44e6-4718-8161-22030f016d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1802b45-5ee3-474e-85ab-24f5af81018f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "025b0345-f96c-4018-872e-629845266de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7935841b-6564-4bf0-854e-b6b9b6c7d053",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c453e0e0-30d4-4af1-9359-a580eef3c855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0bddb9-0215-4176-a17d-812cf3296091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a150677d-f833-4450-9734-bdb16e29dded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "647c6be8-c55f-4e86-92f9-bd010cf2f524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7d51cf-cca8-49fe-818e-da159c95506a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b96ac2-390f-4354-b03c-1bd017aa178f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03b4edc-1a95-4f69-bee9-0c26129f91d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bff5bb-921e-478a-bf5c-a4d974fa084e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f22dc41f-0b24-4662-b75b-2b8762614ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450b7d54-8d47-4629-abe8-c32c0edc0470",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ff8a54-ecce-431f-bacf-784b9620936b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b8e922-e709-47ae-b066-9f529750d456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c6276a-d6a3-4bff-a5cf-c7ac3985ef34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50290adc-adf4-43b6-ba1a-868c2372108d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc892452-60a2-4fab-914e-494c970c8ded",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc143a40-9dd3-4575-b312-e5ca557abd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea5d489-c89f-4b40-9f30-213972566371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c0ffbe-9baa-48b6-b7be-15c022dd9754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ceb33b-2ad7-4b5b-ab0f-9c99b05624c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a872eae5-140b-43ee-adec-7a38e3549987",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991feda8-2cb4-4ea3-91b8-860a45f8b361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b70cfa8-e58c-4024-b716-735b9e180cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df808b3-c722-4b21-9e2f-b02a5f59e480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "603e8dd2-3a37-4653-a574-ef6d69b6b5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f990c944-874d-49c8-83b5-c324e8f55d01",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f77251-9898-4dbe-abe5-c7deaa8fc053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cd0cd5-4897-4333-a858-c3c3980a2978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9fbaf5-96ba-4f23-9b87-f4961ce363b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cecb5a46-12a1-4f55-b381-c456937e65e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3964f704-f24e-435f-83f8-4e335dbcfa4c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e76dae-bf66-44b6-8fc6-9d1255891307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e932f70b-6724-4f16-9f17-76604177ced6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b353504f-4163-478c-a452-07d9eb64e72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f94cff98-5ab6-4a29-9aac-28dc899256c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99b003a-7eb7-4394-b659-37941e8e8777",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91a79f6-1d18-4c4e-8cad-79275fadc57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aac9020-5c64-47df-94c9-acf7c4af90b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7d6a3b-564d-42a5-8037-6669144ff36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48119919-2184-45fd-8acd-df53b70e0678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9515dada-cf85-49b5-975b-cc38013621d0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfc27e7-8073-49b1-aa62-250bb7593594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73023ee2-3ca8-4b39-8612-3e449573a7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfed57f-f81f-4af3-b493-a14e82ed8be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81d0a1c0-a9f7-43c6-8006-0592207ed914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b6b459-deb6-402f-9d6d-bd1f7b2250ff",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fbcbdf-3307-47dc-8568-b97e89765bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac6eb2d-bf09-4d90-8c92-9c33ce44872a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1b9f83-9be0-4ccb-a04f-35f6c3db51b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4021c771-45a5-488c-9424-8d05e2c9e9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693f8977-6a9c-41a6-8471-87f5f7324328",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f71d9c5-111b-46f4-81ae-a06d50a0af12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf50fe1f-f93a-40e2-b55c-086283078e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7447ac-5ff8-437a-9a14-8f2e28e9d271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f515ae2-55fa-45eb-b525-cf1484f15a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaa8dfe-b3b2-42d9-a62a-093480090f18",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56f0260-68e5-4ed7-a122-6d2802413c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977c91e0-bb4f-46b1-95ca-fd318f92db75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbc9c43-b88c-4a8c-ba28-17b51ad478f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc47bf75-96cc-44e1-9a0f-208c661df175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a8824c-38c4-4aa8-a475-abdc32813b34",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1b85d6-b83d-40c6-9601-4d0defbb5e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa93d0f-f422-45de-bc3e-ab8cd5323bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92975f86-d4e6-4de3-aa13-8530b3e6d406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc113e3-5960-4039-9e0d-4254ad9581d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9df38b-a591-47bd-a2ff-e1f3fc8ade7a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ef6586-7d11-4e52-89cf-e147ee750139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33fcd6a-90ad-4b9d-9cd3-1e0757070ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dcfefd-b4e8-4339-9e8f-74899563eb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3f2162-f0a2-4724-b78f-dc2af6982444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0f1ad2-67bb-470a-8d31-7d4f9c9f09bc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ce65ea-b655-4a05-8aa6-48e073f96fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae528b8c-1699-44e9-bdc7-c018cc48fd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed46d0f-3d8c-46a7-a55a-d434c48b92d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77edc3eb-f74a-4d1e-ba6b-2f36c1f76b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924248fd-8fd9-4094-b3b7-b447bc8df357",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5abfe75-0638-4e64-aaa0-b7c5dee50f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe6ad00-969b-4bed-9bce-1219faabfc6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d505dddc-d93b-470a-969a-0378f58663ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8147a9c-1e3c-4379-af3a-bc280dc77b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908db3ba-eb53-491a-86a6-a537170cdcd0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0201faea-2463-4666-aded-6c32e7836087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b978c7-057b-46f8-ac95-34ed1247ebe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167fc83c-4e49-42ea-8e77-3a2b3ee73970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df655d92-fb51-4a5e-b548-5d7bbc5c2bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1171ab9e-d7e8-4af5-b81e-c6d2329e35b3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5166d68b-4b11-4ee7-acdb-cd4c8fdea109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d3ae02-f012-449c-a7e7-14620f0f51f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3781851-13b0-4f36-b0b9-46a52dd3ac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ad1dfe-abb3-461b-8411-30556f7e36a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba92121-b844-4f17-9815-0da6628144bd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e517ce7-0193-495f-bc9d-b79733cc09fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc015cfa-084d-4765-93b0-021bc4d328c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3935c59-5e5b-42f0-8fb3-35dbabc8c9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d26bc86-c357-4f0d-9341-6435d3d29080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c7f587-a840-49e2-9da4-c09ace9142d6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b12c71-03fd-4fe0-8b50-989e063b9e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31e844e-1551-46ad-8e85-f5967e4fed01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc4876b-fe24-4e89-bed5-8a203b9f114f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecaf6253-6f2e-4123-a791-14e7bf012472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e71390-42f0-433a-81a2-2e0b302e72c7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc018f1-42f1-40b2-8568-e6964a035cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3605abd-0ebd-4ef9-a60d-54967ff49173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251dbf7a-b274-48f9-81fd-0db198809c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81e4b56d-483f-4ffd-a904-7a9891f413c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a2a2ae-9f2f-4636-879c-e071b5c3c8c1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62282b4c-1a0a-4a56-85ae-a30d5a46a212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333bff8e-a5eb-40fb-8928-26069a92efa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bfed64-81a7-4561-82cc-31586ccbb843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8a7fcd-0694-4d2b-99b0-0085b333ce79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ddd43b-6a35-4c9f-b904-bd0b0ef19013",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e171dca7-36b7-47e0-a8c2-a2ca2a37c4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc4460d-29ed-48f9-a646-61951ec789be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e736b7f5-510a-4d82-a978-1a0152058cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "16723ab1-368b-49c9-9d3d-3aa343251202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44739697-f82e-43fd-ac08-3ce03b7d79d8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a934a99b-d9d9-47b9-bdd9-86908a4a7014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d1cfeae8-f451-4595-b82a-1f5ad0994cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452410c1-b78c-4b33-88a7-57252b6ef2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "616a3f2e-ab65-4e6d-8492-0830427c34e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2e028c6-e039-4b56-bdd3-2a054a6962e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90458877-b2bf-4a59-8237-5a04011d9000",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ee03f2-b5fe-4a5b-89ab-3a06e88bd63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "480781e1-8daf-4988-a4b5-442996f50606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e881665-ca3a-4ef6-a30d-031cb7f3a0e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d72c1b9d-8317-4c7c-970f-9a11fc440f5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c6af211-a50b-4fee-a2d3-1b28fa72ca62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ed626e2-ce33-455d-aae1-ad6d5e378ef0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "612a520c-e9cb-48ea-908c-945c700a71fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec0c89b6-8f3e-4b98-a6ce-0831cdbd8de0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88968507-ecc3-4ec3-ab29-b8e70b4cadc3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e213b08a-cbaf-44cb-9cbb-1d5c068aebf1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bc0235e6-724d-45f2-bbc1-7ee85dbac600",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93144b92-d8f7-432d-b920-a3bc073620da"
                }
              }
            ]
          },
          {
            "id": "4a9bbd79-1fb9-4f66-8321-932f9b8d3f12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c155de8-43ae-401c-b707-0855f9573eb7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b5ac8c6a-25f3-49a1-a6af-5d9f2c63fc68",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43dc45d-534c-47ca-82fe-58dadca4ef92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ad9b8e55-6c94-46b1-9c3c-6b990a83625a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0163d4-1495-4e03-807d-60bbc400609a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be98f580-8b6f-47bb-86b0-3704ff081dd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "850c6e1d-9acf-485a-89f7-368d79cd8ba8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "972e9312-897b-4879-9ebe-ec3c2838aab9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d556fcb-0d50-4137-91d9-f2936a971329"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d085c3b-635d-47ac-8630-9c385cecfea2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e90f3211-d2e7-4f24-8bc9-9cd431c54066"
                    }
                  }
                ]
              },
              {
                "id": "cb599e33-b6c2-46e9-a994-dcea1655016a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bfbe443-5bd2-413a-b169-9fd3247aa9d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74890687-e317-44ac-9206-9c7309534927"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62376807-96dc-4af0-9c1f-099e8a615324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8e1f9fa-d6e8-4b8a-9b17-a90151391b04"
                    }
                  }
                ]
              },
              {
                "id": "a6b62dd1-7842-456a-8613-44266944da2d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2fd7b79-5a09-4f2e-b49b-1fa05b00d6c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3dfb013-328f-415b-968b-cd5c337b21d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71126b32-0deb-4ec7-9b17-c2e56acefea8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58a58d92-6f08-4c40-94d3-f0108c6b1669"
                    }
                  }
                ]
              },
              {
                "id": "0ce351de-7ec9-403b-abbb-319bf8d73911",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44bfbbb8-4c83-4416-b4e2-f6537d255e22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d5ddd64-f8f6-45c5-85d4-3e0b98b8dac5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1e04516-7d1f-4151-b56a-e9ba5bb34b82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0b0dc909-ffb0-4b6d-bf5d-f320582280cd"
                    }
                  }
                ]
              },
              {
                "id": "204a4fe5-302e-4974-bae0-65320ddd0e27",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6303833d-2327-47fe-81c1-91089742c1d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79f2a9c0-c9c7-4779-bb26-990e8455e7b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "294ea83b-2187-4cc1-acec-2f86becf5eca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7e43bdc1-0ee9-41ac-b88e-a2604265c1b5"
                    }
                  }
                ]
              },
              {
                "id": "b117d96a-9edd-496a-a1ff-9e39d835e192",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f35afc8f-6d41-4d15-9d5e-b99efaa59cd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2eeae887-3837-45c9-86fa-d68c88bd9926"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df207b77-9cac-43e7-9257-0a31dcdba08c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d803a67-5f20-4ea2-b29a-d9855808ba30"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9552690f-b815-406e-962f-d30751c1280e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c50e8fff-156a-4d18-a036-011e179da726"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1387210-633b-4b23-a081-13443f79885a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0260db7-13a2-45bd-a73b-5212f49e695b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5297bfa2-f21d-4522-9e80-e2db46169e08",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d7afb9c6-1c2c-47c2-85a2-d4a200f05396"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b1dec6e-d516-47d5-8bcf-2b765cbaae4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "500a01e5-ea8b-4012-b19e-912a9cc69191"
            }
          }
        ]
      },
      {
        "id": "4e080f3a-f66f-42ea-84a9-95a14f9cbeda",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b73e6bd6-0881-4dc9-ae06-e5c817c060de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49f546e6-dbb4-456d-b648-99255a4add9f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2a08abd6-fcfd-47ba-a8b4-c336e3793ab3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367a4219-d775-4a2c-a4f6-b7eb56033ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bb1e8b-790f-41c9-8949-92f2d898b489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad89bec-9f5b-4a9b-a01f-4c3909bd56ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "51af1964-950a-4df8-8187-9ab6f0401ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82e094a-0de9-4846-a92d-3c8e5960d412",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e479201-2f5e-42e2-8fb0-a21b36d2023b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbb3d2e-89d0-4ecb-aa4d-33a7dee740df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7feb807b-9ee0-4595-9ce8-a7fd27475dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5327d6f-9a56-415d-9534-5ce0886eb6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a541b9-3130-4a1c-8f6c-242bb39198ae",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74498399-13ac-468a-898e-665fdc463be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c8a117-9a03-4231-b52b-12891f9be781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1926f11-c379-48c4-a696-044ca101a238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "738aedae-0a46-491b-ba0f-9befa77dceff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c2196a-c57f-4117-90e6-b317c4a0e375",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4931a76-372c-42cc-a2f8-1b0d7d17ff2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75429140-523e-4e59-b3ba-63ec54245041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec44849b-cc38-4b30-affc-0c6ccae0609a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1205e7-8194-496f-91d4-2fe43fd5f85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b37675-4b07-4655-bf90-d3fa8087e8d4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505dea8b-9d07-4dbf-a934-7d927c3406bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d395127b-de4e-4784-a4db-519c3498ac13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086e6d2a-7f37-476a-a82e-d048c768d169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "497fcc85-fd65-4cb4-a67d-be7db4183724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e2cea9-2176-4643-adbf-a7cc091b0986",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88566660-cf46-4a2e-b177-daa3850c409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c34d297-74b8-458d-bab3-75be51384386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eeca0fb-c8ee-484c-a4f4-affc75e57c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca811b5-d8cf-48e7-a547-0966a46c7a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a0dcba-ae46-4ec3-a420-9996f639e76a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a74920-7f3a-4271-a2f2-10aef3c0fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93730d7-9c88-4b26-92ff-aab722c8b1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac719ef-1112-4530-b7f0-37cdf90ca930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "10ba37a6-2e36-4d51-96d1-5e23de42e5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79d63b4-f5b9-4bf7-b2db-dcddcc37d50b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8d177f-2897-4ec9-81a1-0ff538f97b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11299a15-1b88-4c38-8b95-c7fe127b0131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72298c8-7ead-4a94-be34-5b572901c35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3a73a8-aba0-4323-8f7b-d9e9c7dd666b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b20a1c7-1027-453c-89b0-aa21903b122e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80adbf2-7313-4a31-85ed-889b66478f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830e4d30-0112-429c-bdf2-381de657ea10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66fe905-6b82-4e20-ab71-427f5633474e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb96838f-37a3-4c27-aa9d-be104237896d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982c8fb0-4d5a-4278-aef2-46c41b23f053",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54acbb52-0185-41e7-8fb9-1308419774eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b293f6cc-419c-4a87-a1ea-a8ed01ed0223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f695fd-5c29-47cc-9b7d-bfdbeb955663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06cc20ee-2ebb-45a1-9ddd-3f7f84b4115b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1e45fc-5f49-4059-b7ff-e4fa285e818b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76d454e-8d0d-45ef-b2f2-f6ee384014bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a796955e-f6fd-467b-ab99-3df4e1a0d212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661bd37f-fa1c-4a15-9407-ba871972cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d75d41-aae7-43a3-ad19-63764b77f07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7252bb38-03e1-458a-89e5-a318dcdbf420",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e285f11-8066-4a55-a130-e72f9648f70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e60006-7e30-4f2d-a56b-dfe3b708fc09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb7d456-3d11-494b-86ee-c5ef65c70ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9814a7b8-2d20-42fc-843d-3c426b4978db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba62ac36-d17f-4c13-9caa-e94447bd20be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba76dd2d-151d-4428-9a88-f4dcdddc61ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d390557-6472-4244-bb4a-0160a1c312a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf89e80-025c-484b-a374-27b585cf9f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a47c594-b96c-414d-aa40-3af82a159693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2595b11a-ac17-42e9-8ca5-e713953f1658",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f348446-66e6-4a9b-b3e2-5ea61d2a7250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7402b42c-5327-4ca9-8ffc-97d9e4fd24a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b46d43-5bf0-4c2a-94b4-9d529d5069a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "12411d32-0128-4076-842e-93e10e51494d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c4a892-fd62-4892-a877-fb44f70d4790",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db269b3-4cc5-4c11-89ea-1102d1f45bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b48ec13-6c59-468e-8d78-0fb3a6d12c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df75e88b-450d-4619-ae7c-cf231d2e71b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee8ac1d-ca5f-4ab3-a378-0e00d4179c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2808a213-d6f2-4daf-ad99-0383686474e7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33572b1a-925c-4c4e-af40-a6a110b0c9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e996bd53-d7a9-4336-8c4c-b8babe4d51e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca48911-49e3-4ded-8cdc-505b3e740c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d9926f-fae3-469b-99b0-782cb4b2292c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abf5f34-e350-4d97-88cf-a53157e57b8b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3f63d1-40ce-4988-9273-95fd0b95519e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c469170-24d7-4a80-93ba-388e0d3d5b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c48960b-2b93-4c36-a951-251f81badd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2000392b-4d3b-493f-b28a-f55d1dd1f5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12a8375-62ac-4250-84e5-2c94d33a1e60",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026d043d-b021-470b-a5d0-0e33ed36a99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15540e40-ab9c-4d22-925b-daf6481df4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a0e21d-9c6e-44f8-98b5-5fdf03fbdcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8972e75-188e-4671-b78c-40290557c9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7911c79c-b3bb-41cf-80a0-132881bd14c8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3898232-4f05-4274-b873-f5bf03f3aa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1841c257-3331-4021-a0f6-e95b34e487a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0d6d31-8b77-4aeb-8eba-d8a0a3dc5de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb7792e-0451-4af2-bef3-462aa56e420f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ced455c-e54c-423a-a89a-2818bec50ed6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b20a50-e9a4-4d95-9357-72807a31952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac3fe0c-c4b9-4da9-804a-edd6dccfccc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee1ed79-8299-4c4b-976c-400073e9ed05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5258651-b595-4951-aae6-0ed9e2cc66f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9c534c-b0aa-4537-8ca8-868be7ba37b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cd6483-2483-4487-a50f-08080bf219e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a396116f-d60c-401f-8709-2d4454f2aa04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3481ef-61a0-40bd-b6ec-83d0634bca61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19657777-8a1f-487e-a3d3-4bcfd107fec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9609c579-5b5a-44c9-ab8c-f38fd78e1e0e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4635f49-43fc-4077-b007-3f6a567f11bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba13b84-c9d4-436e-b36c-beed3cff559e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34755994-54d3-4141-9835-da8d25a8a922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd97b7e-2b41-4bb7-92a0-57c0f19deb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6367ce2d-5daa-4870-b3ad-53e61bb92f61",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17877729-408d-45b9-ade9-4e8d4c60a763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ab48f4-c1e0-46d8-bfbf-8dffdfd17833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3aeb5af-350e-4f17-bc25-b3fd1f8bc49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76fb7abe-ec15-43dc-aa0c-8edaec0b65f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b457913-f959-4d34-aa04-67638b248994",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38646efe-66e6-4b94-a696-2162530999f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58eea5fc-47bf-475b-b028-29f9c2bb8c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdf0a4a-eacc-457c-9c99-ddf3034172f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd850201-f7c9-47d4-bbfc-c21100f5ec7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c022cc-07e9-48df-a9dd-229e1b8947a8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b1c9a0-f38b-4abe-b346-7d0f5ed4c879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db202855-0af5-4a29-bf38-57f26778a817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31ea9fb-94a0-4ae6-80d2-fc99c60f66ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4338964f-83d2-46af-b100-99774f773524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6de7d9-d8f3-479a-b4a2-f6b4e63d69f6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8b68c0-9cbf-4bc4-94ef-1fccc3c8c72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb75f76-f028-49ba-809d-0e3f65718558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f113b77a-4cc1-4737-912a-8fd29461b9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d36b1c19-a30f-437d-94b5-32027f6032b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf404cb9-c160-47f1-b8f4-38125354eaec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939f2a08-b851-410f-967e-f9799d726390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67df7830-bedb-4e4d-80e5-6e998c93317d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627b1789-6975-4462-bd81-13f43050cf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c14afd-256b-4403-9638-273f94c2dd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfa7992-c585-450f-b18f-05bf6c28e9a1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0ae397-2ef0-4c75-acca-c84c3143abf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e4dadb-147f-488e-849d-14c8adddbea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c56628-9e4a-4d08-b7dd-5b2764f730f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebf65fe-f5b0-4e37-90e0-b78d74089bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51f722a-3191-4fd8-b9e3-4b0ec247f5f3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa538d2-aaa1-4c51-ad86-fa9f5b449c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07026a9-fb27-4e9e-939e-a7856354ac9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920ddd40-f1b9-4b4e-bf5f-3c0bc883beda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65eac874-124e-402b-9a8b-c986a03d333d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3feed3-5b4f-4901-954d-94e5f12ccd3a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c224c144-bf77-47e5-bdcf-0276b5af5511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f41915-495b-47c4-a620-888ace44e22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e3525f-d787-4724-8def-65511a1a8e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0075c7a-8813-4b06-8bc9-4be3f949db3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7019a3-62db-4584-8b72-d66b9e2e9691",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a87d227-7719-472b-8d8b-4c5ca61c1f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ed5394-671d-4f03-8167-07cffa3fcb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d947136e-cf3f-4f06-809c-ed7f18c46537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18fe3f93-d4fd-4cbd-86f7-e9b0a9cfa7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9f77c6-5de8-4e44-90ce-88c6c7098ad6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5623858-01b0-4e62-875f-de70899d7b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9cd04d-b41c-42bc-9431-301ed31c6598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce5dbb5-0e8a-4cec-8b46-279ad287d281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2315c21-59f9-4613-9e23-8a3fb55c5f2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b5b5d16-33bd-44c7-8c73-6e742fc6e381",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a93076f-7eb4-4cd2-bfc1-33420819a140",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ebf759-c8c2-4109-8717-2320ffd4c6b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc799e2-17c3-4c7a-81c1-e87c8e1a8afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa7ccc8-bdcb-4171-b232-cba810cb5444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "990f6169-0339-436c-922a-97f30d3739f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7161155-331d-43cb-b4a7-09ad4a6c9de5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec4b107f-5dda-4184-912f-bdcc1ff62e01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e771cf0-3e6c-403a-bae1-7a55160f8d1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc7cb517-9a60-4376-9caf-6b4030e1dbc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9accb9b2-d4e3-4eb0-b477-fa0b3b763936",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c0aed883-1f7d-45c7-a5e0-3879c71339fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11b47147-3822-43a9-937e-7201facebda6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69d9cd84-60c5-422f-aa96-e592afa0a9c4"
            }
          }
        ]
      },
      {
        "id": "59df9e48-c307-4559-b608-703f3dde31bd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "74480242-71dd-4d1d-a34c-eb43fe091a7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5881bba-122b-4986-a0bb-184197069d9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08a3a86a-fef2-4ccb-8289-a88735b01bee",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45c0801-1ae8-4cb1-a7dc-32a30b9d8f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1050e9d-559c-4816-bfd3-8d6110ca8c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63750533-d7c4-4996-bf90-e883204dae98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "421541d8-8a11-401c-a75a-caaef3cf1eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35289be6-902d-472e-ac0c-4b43afff8d0b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54441db9-a6f0-4cd5-a3f2-d816367c445f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f1a5da-2fe8-46e0-89a0-36ffa9635100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab068c57-a3e5-4b64-b280-9a60316a31d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7738c1c4-b449-4d83-8e84-8181780b4e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fd226f-3372-4986-b1d6-9bfd50be9fa1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09abeaf1-8817-4d0d-b5d2-04ba4258b165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffa5876-7f7c-43b2-ba9f-20792e52f46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d9a7d0-2590-47fd-8899-b883152963de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5501aa9-8ead-4cac-a29d-1f7e8953ddb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ebc51d-df7b-4ba1-863e-4db88cf713c4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9b05da-5710-4f2e-ace9-4426e9361eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a795f6a1-ffcc-4e9c-b9ab-1c07b8d9f844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2e0259-bfb2-4834-be9a-134a818dbefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d750d463-20fa-4a37-ba41-200f8da6e504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8a563d-2caf-49b1-9fe2-32058cc13c14",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00d9688-fd11-444d-bc08-b37e555f990d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91601e9-540f-4fe4-b3bc-315c717d3be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d87d0eb-9e87-4b19-991b-dd33791d1b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed134aa-9def-4b32-ae2a-8cc09421f64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92729b40-e1c2-4741-b9d1-717dee7a13eb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a62ef75-dc52-4857-85f1-f87a0cfab8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1f6103-7414-4f25-bcfd-8a3bb1957f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c6c5f5-cb86-4a6c-a026-c5e9c6687413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edf07a6e-af37-436b-b1f3-30f518fe5903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed08692-0860-4421-b449-088303ecbd81",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158f94e0-7eec-4898-84ac-475c68628934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a61f131-d9d4-4c6c-9ab2-0708316c1591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2ab364-0ae8-4f6e-bbfc-6c797af94d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c52cf9-bd74-450a-ae29-959e1b3258f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e62500-5eac-47f6-8f16-39e398708819",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39caf1b-5974-4ede-9120-c2d3d0d2a85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec9b53c-baa8-4b7f-b359-f5003a4ebe18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab84ff8-7202-4693-84cc-7b514e7b1780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5dffcc-19a7-42a7-bdce-43b8532326fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fca4eda-fd11-4913-b559-3132eb9b266a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba0ce36-612c-4fc9-85e4-20984e09df1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a296b9-29e7-4440-b29a-ed6a7aed2ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb73caaf-6e16-4dcd-888d-f7001a479e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a46d23-4094-4319-8cdc-6c2054d0b24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59781b63-8997-4de8-ad0e-cdb6b107484a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259a6bcf-ad89-4733-b874-a89e78d4c7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62851c87-955b-418d-b0d4-69b658277a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44865f71-3037-409c-9f2e-22f7f4c1f568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6642d16c-531f-4cdb-a2c1-7eae861ba7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051889ff-07fc-40bd-bbc9-27d2f4ab9144",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080101f3-453d-4c2d-88cc-79a8e078f8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c119b6-1d40-44b6-b241-fb0e74a3314c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e9503a-2c60-4823-9ad8-77e296084b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3af4b360-9359-49a4-9e4b-598b26909939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fa5660-5f4d-4086-b3ff-6aacabebe3e2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d0b946-b5f6-4173-b489-497f7ea519e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae376d6a-818b-4d95-921d-a2363e483779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b723758f-b305-41d5-80bc-1e99a307a3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e57f5b39-cebd-4b12-86f1-dcf328bb372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc4d237-8025-4449-b0b3-a363f5eeb97f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9692be46-e5ce-463f-bdf7-67db11de4f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed562a1-927c-4acc-9369-846f34a46861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18f1a63-eb67-4363-997f-07616f41f9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4e2817-550e-47f2-8496-4586856da0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239f5413-9c62-4ed0-b431-4abe1d197e2a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70475f4-2960-4380-8125-c3404cf491f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9513a8-74c4-40dd-aa33-aa15f7796869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc92ca1b-e868-48a1-82e2-f68edaa53319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f45564d-7e08-4d6c-b01a-c18976b53f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f2cfb0-b328-4cd0-9c8b-06c37675e850",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79179f08-4a49-4ac5-b6d9-9393a6c07888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531a694f-c125-4b56-9c86-b1cd7b7e592e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b8e466-65c3-4ab8-9712-1068886a6356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd56538-6430-438c-a27f-8527516b1c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395cafad-b6c6-488a-b995-f16c1fa868a9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67ee2f3-9559-45e4-a006-5d7e6a628e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50694270-34f8-4f75-88f5-06750bd55e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fd779e-789e-43ba-a1a7-a5ca46a38de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1189b4-c94a-4909-b357-597f0336dce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b598a0-77ff-415a-b783-56645e8ccc28",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c83da35-3854-444e-977f-ba5351aa6788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2548aa7b-3416-430e-bac4-c280a5c5d181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17588c15-1f5a-4194-8f32-3af76068d247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed76383-e9a2-44b3-a054-e25a8d5b8c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7e7287-e238-4ccb-af8b-55406e7c08b0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250c8821-37fc-4e8e-b030-33b8a7b66c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559feb6d-5aa2-4c7e-9b77-9d6f6d9e7aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32caf068-3cf0-4b77-9c6b-d2d5f57c6847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0dd210-ba48-4dc1-926f-3977171a33a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831917ef-649e-44ef-bde6-fe21f9ec57d5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ae1c4d-c6ad-4530-8775-02f06e366a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa93118f-e728-4f32-940b-4a942589b5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8a060a-f56f-4f49-beb9-d7c61579d9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbda51bd-3c44-45a3-ad76-898a7e5af778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a5b691-5652-4e1f-8a2a-41e0a1e85e87",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1b9ba2-05c9-42e6-8398-b706f0257c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b7bcbc-3b72-4202-866f-c1758a4c68eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbf8786-8896-477a-8c26-faa3afba55f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3058d0ea-2c89-4c0e-8193-96e91af2fa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e968ea-a474-4461-ab31-dd41ce4bbe20",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4c46da-30c1-4d26-88f9-443f3443b1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e80d1a8-79e5-4cc7-b543-7f2554e9e339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11425f89-c50b-43eb-8828-9aa7885c0716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec500770-64d1-4345-bad4-51125656ba3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3209ca-1bff-4274-947e-3bcdb925e13d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2f62f4-fc03-4a3c-a758-de7dbc0ee428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dc1bf5-127f-4693-b3b3-c2f5df3eed9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bbc177-a0d7-460f-bf8a-647d7a08f18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "485aeed7-23f1-4a69-877a-76428fe2475d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060c5c03-efbe-4e1f-80c9-fb7512d91e3e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c205b530-9db6-45ff-9e8a-35a1e9b12330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b9c3e0-fc2e-445a-b4f3-3e7877e15dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af610ec-ff0d-4be1-a4f4-736052bb1ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be81ad67-67c8-4ec2-ad87-dfaa70d05f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109c5480-2a18-4362-9d98-656f8aa7d868",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0114b83e-5f4d-4d5d-8668-a0ebbc240ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61108d3-435f-4f84-992b-3e7698932074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec44cbc-5a87-40c9-b7ad-2509ef18b04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9be3edb-586a-461f-8b7f-66d0e755e8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a577a9a-3606-44b5-9cc0-6f89a50612be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0800d5ed-d4bf-4c1f-b7bc-841693f85cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d4a87e-5da7-4a3f-bf4d-9a3ccb72fc6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff68d58-1462-4dc6-97ba-7b25ce74f49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7913050c-6e4a-4bc0-8619-3cbb3cd481d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ee6831-2a2c-4fcb-a26c-d1f709a56ac9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736dea60-b8dd-4562-af03-5d373a49d16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b6f168-b1e1-4033-9a4e-e9256f6aa6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e544df-80ec-4acb-9589-d6e4c18e9a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f029fa9-8e88-4640-876a-1b7f54d5904c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c929cd2a-d0bf-4c05-82e1-6b28e2968a2e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bceb8f-5252-4546-a929-cc229aa89505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee6866d-01ca-4d83-9fe1-d29b356e829d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a095d27-3327-4e42-8a53-fed11486b975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e5f9b7-c8ac-464f-860a-fe8a042d7b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308e48e5-03e7-460c-89be-b27295e9bb2f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4151ea7-f251-48e7-bca1-30e362d60218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f712ff-1dd9-4487-b4c4-a8bcfd4dc899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdadb4cb-a501-4372-9e8a-b6d544b719b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb47cc0b-aa3f-4b29-9b03-abc71e643105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b23b4f-285f-45f9-8cf0-1c37b14c12fb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2df0e56-7cae-4bb8-b804-a1ba0afd7aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9a5e55-6731-4808-be66-9b8c07b1c578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce332a1-0059-4826-82f4-85e4693a7533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27c6a0e-311a-4cf5-b07f-22c9884ac667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a988dad4-44c9-4444-b2cd-261d252e1a14",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29551c3-d14b-4daf-b042-a9821a00e1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d20d759-137c-47cd-82c4-b3e2ddf9778d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b2b79a-e4cb-47a3-b556-0a564b7b2e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64eb8b75-01b8-40e6-9cc6-aa5e29360568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4ec2c8-e210-4e64-8d39-f0a2e08194c1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78aee39-6270-4236-9584-aa4e585c4372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3ee32f-c234-4391-9783-cac14959facf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729c51a2-614c-4c5a-bd82-f9cd5002a59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "986567df-44aa-4894-a85c-48c5ed75ce09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd81221-0bfe-4398-b7f9-eda51c628c24",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3056883-982f-4fd8-a5e1-86d04da8e890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b2a68f-3956-4876-bf18-e08817062ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7142f8b0-018d-45e1-b7be-5a5034e0eb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "781b7c04-c7cd-4f54-b2b7-11b7fddc185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9aa3250-d311-483e-8f04-890b919cc1ca",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b73aed-0f84-4016-b8c1-556c074599d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dec68f8-9839-4d3b-83f2-4e598a2a7afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce5489d-bb11-4c89-91dd-e040127de09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2926ae9-f324-427a-9ee7-e78bfe929506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acafc52d-3b0f-4837-b60a-4efcf12a1b5d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1418e3-7528-41ef-a2eb-43d7534dd82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4909d40-9a7e-4da2-b1d0-ef3ce3dd63ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c308697-1e2f-41f5-8378-58619f3d9421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b936594-7929-4c29-b316-e8abd1d8d050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7f82f4-9304-44aa-8e79-799db7759a8a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fefa4b-69d7-44ec-80fe-e99edf3ce2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07e3c15-15c5-47f5-85fc-bc54a8dae629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17f5875-192c-4115-8a14-4b6866e4022a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7d1862-b8b6-44bd-8323-db05b2d0ab84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d94dcf-64ce-4b47-b443-600b326a514f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44355c01-6fef-456d-890a-1ba954115ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a01a0d-c377-4f71-97c5-ba254cb0c9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243957ac-2bc3-42af-afff-6d33e9ba79c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0782c7d2-5f25-4fa7-b5eb-22c90f40794e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1733e171-41cf-4107-8882-b5e613a68fc8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714bcc21-1490-4f82-9773-cabc37035450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0abb9d-788a-4549-9821-3b76be19fd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ae6194-ae8d-4fb9-bbb4-2978f4b3fcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc7fe79-6f7e-4ca7-9f9e-b01b8360cdab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73592389-cae3-4201-8abf-4b6d25db059e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91e5334d-3015-449b-b05f-9977c809e96d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370e73f4-85f0-4af2-b3f6-333aefb2f5ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0259b2d1-e9d4-4631-af48-66093162b090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589a481a-cf95-43f3-acc3-9a3de422b96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a426932c-6201-4d9c-af0f-03d8ddd8e070"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16ad9fa4-b0dd-4cee-9d37-9e0ea2d1aa01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8489d5c5-e1d0-4b36-8ce8-d6de4833f86a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87f8a7ad-0124-4e5a-bff2-3c67cef3a4f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11788777-f13d-426f-956c-ed20b62c83da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1bbd95f-5fa6-4e50-a995-c6694dba0daa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e4bf676-2e7c-4f49-b90c-dc251d8c6fe7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88fa73a1-4ac6-4868-82ac-95bdcdce7194",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "773198b0-850d-43dc-966c-b4ec0c2ab830"
            }
          }
        ]
      },
      {
        "id": "07872932-4d27-4815-a33f-e3387e02f4a8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5f9b45c7-8b21-44c7-aaed-d5e267e1b3d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93a31157-7cf3-4822-a4f3-8bab4772f900",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ae2f395-20ed-4d20-9501-e5619bf6160e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca59a21-9228-4424-bbd5-2d65869d2058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc45512-d0a8-46a0-a67b-d527efa08940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6262346-cd5c-4416-9184-67b7eb5a79e2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e68eb3d-9bfc-40f7-abd0-45dd8054b155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b9eb2e-2cd5-4774-82a4-9779d0d2dcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6450d776-bdbb-4077-91b0-2e25edf43338",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7883b4a-c4ec-4966-b0ba-19bd698a1577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6721ef29-1a36-4ad7-829e-d80e0595db1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4029e71b-e61c-49bd-8042-85f8466451b3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fd9296-d1af-4d08-bc7d-e3f66a4fa98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae52744-f12f-4b49-9c6f-54f564461074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96db9b04-4d6e-44ac-8374-228e41a9a7b6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1f1e99-493d-4c19-865b-936b365fa94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ea2915-4b19-4de9-8877-05e08396536b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe7ec3e-d04f-4ba9-8e9c-e622c09bb303",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbb3749-61a5-4bf7-b4ac-f4b2799ba384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f88f5c4-5fd8-40b2-9fb3-4b48e8a2c80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f67ea4-af19-4f42-b8bc-95cb0b4567f5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcec5ce-fe93-4f12-8069-84cdaf85f375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3a6cac-c219-4660-8879-b21721238bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2353f6-39bf-4e12-897c-302a31bf7f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07efe817-7542-4a85-8099-ead934a010de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72331a26-9e5d-4dda-9c22-88bd478d2981",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781c107e-ed50-4b64-bd20-1b9a39ec4b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f7d94dc-c351-4274-b3ea-b6be46538a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1954c40-e149-4eea-863c-04c8c84e1a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef54753-a04c-44fa-a1fb-a1cf3782fc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b92259-a1fc-47a4-b775-90edc470a0ac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484eaee2-be74-4176-9989-bdf62bbdfb78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95be259a-dc68-4291-a959-bcc07fe161bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e470e989-09de-4ba9-89c9-a8404bf000d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3c5f9a-2ec0-4bfc-8424-eb9d92180ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529cab0a-e580-4ddd-a0f6-d600d4e1af71",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281229d3-f349-408b-b622-1936c08bb73e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e19d03-aa66-499f-9009-eeae1a85a224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8f218e-2ed9-400c-a998-3c9fbc9d3092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4375ea30-4767-4af8-aaec-ed9217ae2805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0afe63e-1389-4df2-877e-39cb432ec701",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f12568-e3fb-414c-8b74-d98c048362c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312ee422-b9dc-4f5f-8648-57bd2b954055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b2b4db-cdba-48dd-aa2f-d5431a04bc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0b93ee-b83f-4284-8446-fd19fd8809e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f5091f-3efc-45ab-b985-acb4d4cadbd1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ed1da1-2d59-4275-91d4-76c4c62ba4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbd3968-9c2c-4155-9e19-d034e7b87c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbd78ae-fa4c-4006-ba30-bab7ba2c68dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3155fe-79ca-43ee-974c-8d098a55e73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c1216e-2727-42fe-a97d-85a043843621",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a9683b-62a9-48de-9ed8-ddab786406ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94fd19ed-21ea-4235-b9c4-4342e8d6fcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d569291-39c5-4f3a-85ba-f072110d1b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7915acb-4e59-45f3-808e-4e30807f8f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611dc29e-f77d-4801-a073-d270d2e11fe5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd22bb0-ced9-4f9c-a9a4-57d65b865903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0e5266-a831-4347-9579-c524d3a8a517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a015001-9dd3-4b7d-840c-3a4e8fcef8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c831eca8-059b-41f2-9a99-7c9141790da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4ac1c9-685b-4ac1-9f6b-4699a35673b4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565dcd2e-a451-4632-abe0-42b4067fc78c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08ae64e5-81a1-42eb-a657-388aaa0d53ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47982da2-4003-4f5f-93ce-6ebb4ffe538d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f557cfa5-fcf9-4b4f-8968-9b03ec4a55f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e371adfc-c2c1-4e6d-86c0-0cade360e0ec",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafb9c68-a884-4d1b-bb6b-3f0c92c33492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa73216-112e-4df3-af81-ee3746187d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc084ba-a127-4ad5-becc-4625f63e6af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bed51d3-24f3-4dd4-ad3d-437e4c9235f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7db8a1-2acb-42aa-a0e2-fda352f41e7d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28438ad-e168-470a-aa97-f27a1704a2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f44519c-8c5a-4a95-b2c3-8d048166e752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3fb5d3-6e48-4790-b1c1-6f11aec2358e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e27d778-1783-4872-8af2-ef937c6fbddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c34d5ef-2a79-4458-a170-49f1223ca28c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841fd404-0442-42eb-bb90-2fbdb9ccc940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00aab413-a41e-4c74-b558-bb4db30210ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb63ee9-8f5d-4c70-b322-12823c97ca8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4305cf-503f-4114-8176-f047068d1e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0cc395-b6ae-4535-9e12-113aac36f7e9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056712b0-f019-4a8a-83e0-0ab955b40068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf1baf8-f29c-4004-8b16-bd03460cf6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4bcbe2-141d-475b-953b-6579a94e70db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c41d36-72ea-4f12-985e-d5660927fbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5769ad-95b6-4ae2-978f-6b3958926651",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31958d5c-e35c-4231-8c93-e4069f928aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15618efe-5131-4ab0-99f2-24144de0fcce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a169f9-3b42-4e5c-9d82-80d9bb82c9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d86bd2-62de-41a8-a2c4-f36bce6c814a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6676deb2-6e74-45cc-b87f-9b6fd26b132c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca259d6b-68eb-4200-9498-ed6348eb2b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36248c60-8473-4501-ad8a-5ea01091dccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3836c583-638a-4884-ab2b-7766637650b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1618d550-6368-4c1c-9682-d08157329e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048be64d-698e-42b4-ab26-8941fe1575f2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6835d9-b9d5-4aa8-b4b4-16300b1a197c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876a545f-c774-461c-9da1-32747e9ed0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacedcd3-7467-43ff-98de-40b1229c8271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ce682d-bf5c-4d85-8469-9a0af74cabc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14c6ac0-c2e1-4a36-a27e-5ce1d32cfef3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552134b8-56a1-4ee4-bb78-44db430cdd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9bbfb3-40d2-427a-b827-1be56bf636cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376f4022-4e9f-4b1e-9b38-e7c8a5b850b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7f3f4e-bcd0-41e6-81c6-ae0d6546b911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39ee691-a525-4273-9c1a-9ccca3af644a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1082c6b9-8bc5-4628-8dfd-d3825d39f97d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec127221-6a43-43d1-acb1-dd6db66ce38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bc92d1-7c56-4225-abcc-b8db88f21b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603850df-ecfd-4106-ac28-1410ff4929d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f95608-ff88-48ae-b805-c9b79c5db628",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce8ff63-7a7f-409b-8e04-e7ac58e30803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d91afd7-06dd-465d-8d32-d7d50e973c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3d6552-d9e9-446f-990a-8a9a2ec7b107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e22056-50be-4417-aa9f-a06d9e79d4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fe8cc7-0974-432a-9ecf-e5599c9b43e9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f4d361-3338-416d-939b-7ddcb2e04a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e9e447-ba96-4afd-be05-15852c0cd10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62893e9-c3e9-401e-9d6b-263f5db27eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662615c4-4afb-43bf-b1d9-59c650d67235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410dee8f-00c6-4a29-ac91-d0ea746bb00a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73db1bfc-bab3-4c6c-a940-a7346cc240aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac61830c-76b0-49f4-a30b-0e161b303d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b407ba8f-9040-41d4-840b-1b852cbb1cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753e0d09-bab7-45b1-8692-abf1f65c473a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df34de55-85f0-4e12-ba38-9776b3fa2c30",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0038775-44de-4324-b9ed-f07c0907921f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7084bf5-c785-4c75-96a3-58fb82fbed2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec00eb12-ff6b-4f5a-824b-3b40c4045319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf431ec-8805-4cff-8fa0-2421d0df5649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46253455-1881-462d-bee6-d8d682eff1b3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1611b8b-78f1-4df5-b32e-0cd45c62fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5895f9f7-ec61-4bf9-bf2f-2249a34c1913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661ad03c-1a0e-48c4-89d5-cf1f3c0829f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80500e4-574f-469f-b2eb-7c19381c3c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b0418a-0fd8-4ae7-b694-9386139075b2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82543840-4692-430e-bec6-90cd3b7b1e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d068a5be-e849-4e21-b8f1-1ecc4f251c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f1a715-4d8a-4439-8045-d13669a7ce15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b5df2f-b8f5-4e6a-a181-8c7ed308a198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8873c842-bb46-4759-864e-1dc5546f7a1e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0adb693-23d8-4980-bf45-7d3996238c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d089ad1-01fe-4e46-89e2-bfd58e460d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed8358b-0f18-449e-8e04-07bbfbd7c97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0131d216-56c6-4b5e-a8b5-1ef09c794797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba4dbf1-b0ae-4175-ad1b-125915d44368",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234bae6e-19d5-4857-b6e1-cfaa87b62801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2101467-818b-4317-86b4-2abb48a56573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7c2de8-ce54-4da5-80ee-97262471b349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839061c7-0071-4813-b67c-c3eeaaf6574c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f125b1d1-1d9b-4ad6-ae00-2f00ded1f793",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a83588-bb81-46bb-b7f2-3c8e6212cdf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a0ea2c-3116-416d-b3ae-22b01ceac3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfc865b-9ac8-4671-9697-e0ea03f1fbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78842d07-1b81-415e-baed-9b995dd36496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a2ef45-b888-4e04-9c4f-eb76b088aba8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a366629-028c-46e0-87d3-45689d64eedf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a18773-f895-4327-a1ac-11de94e6169a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ca527d-1879-4ce8-9fd8-f7398d29313a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038a6054-a4dd-4e08-b739-bb63af11cf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58880e5f-26d9-44ff-a5b7-fbadc3824f33",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb6b18b-fdd7-419f-ac5a-ad12f2320035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcd3143-aecb-438b-8fb7-ee769bb7140a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891a6451-f320-49b6-aa7f-9eb6c83ec17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f538410-1edf-4f51-8f4c-d9cc8c05be9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53420b8d-3013-4066-a53d-222371c824e0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b2060e-9e0b-47ed-857b-b929f38f5577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e57049-a2b8-4a8d-b31a-9438b8b3e2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2bba55-df6c-43bc-b81a-aa023730e9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d1b799-e8cb-434a-a1e1-75bc2f9eb365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7422c07b-0831-4891-be1f-bfeabb140af1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93ada5d-ce50-4ea9-aa43-3e323771299d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476da2d8-8bf6-4bc0-ad85-f6a6675abe07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15337d0-695f-4edd-b07a-c2914615f9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62295858-851f-4987-a0da-8c302e38a60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1fe9c7-50de-4f6f-8dea-11179c08b198",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfac8d8-57cc-44b3-8ad4-a1615d07cbd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d9d037-657a-4570-b311-5819c4ad73f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5152db25-ddcd-4d3e-880b-281f4a2e0faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d0b2b8-4565-4bc5-958e-5a40c5226dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb6e2bc-62ae-482c-9d38-51cdf751fbcd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b31335-7632-4478-8d9d-f7031d6db876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f644f8-96e5-400a-b8ff-089dd46a174d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a760779-e903-4fab-b14e-2a0514319ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0217dd-7861-4b94-9d33-18c8517cbacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08f2d52-71bb-465c-9631-b9d638efa78a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba2d7b3-f49b-4960-82d1-a78e83440747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a1f2f6-b87f-449a-992c-eaea4bfad197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee81b943-dee2-44a1-9ab5-72a24c887904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07085b5e-c4ce-487e-bb10-5718348bbf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba56d7f-31b9-4a1a-ad1c-01eec1819f08",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4475a1e7-38f5-4e44-823e-0e61b1780ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c019827d-18b1-4faf-aa3f-84a7f5b284f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f2ad10-29a3-47ef-8d1d-670683edd7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5365fdd1-9b0b-4575-a14b-150556bd9b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f777cd-70db-4233-9dfb-8868c45dbe1b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db1370e-4773-42f9-a64d-db732bf8e66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50723b67-9b1c-4dbd-bbd1-dab3bc65c203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c16bb5-369e-4926-ad36-3cf760aa34b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed66dd01-bf06-4065-8895-0a32083dcb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981a2359-a35a-493d-9bb0-96a8be50ea9a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a486006e-6e26-40ae-aa85-853db6af7a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0c6f8e-4144-478f-ae9c-23e7bb8b5923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f54fe70-61c4-4144-8bea-36110f8deeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db142803-b722-446a-8692-3ccebd6cbfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839d1205-229e-476f-a8a2-cdaa4ee58f24",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0db8884-725b-4c4b-93b9-eeef31f044cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f80098-6467-46e8-aef2-9e470593d65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d903e8d-bce3-49b4-b595-1b7b6b8a13ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ae9290-1e01-4374-8bed-d2afaea484fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403d60d2-5861-4607-909d-936f23a4fc30",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa14c964-b297-4d0c-9ef6-8fc5ce27fce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a7e625-5a5d-4a7d-9340-32e9f279ddd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb1f932-ee8e-4e13-9e1c-ac55041e1481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d03186-ed91-440c-a811-d94c54b15124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed985c35-7fef-4d8b-8f37-5937bc023cc7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4c2a1f-7f71-4171-a901-ac6acaa9acae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2ca5aa-92e8-4bb9-b762-3cdc29d97531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441c6b42-141a-47ae-b808-f70a2a7ac60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67716e13-aabb-4c4e-b7b6-ed08d6f431a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa434bd-b2b9-4f8d-88cb-d9546670e1d4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cfe005-81b3-40f4-8ea1-763e0ea40bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1551f7af-a08d-4076-bfe0-1a433cd71d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8e82b3-0bed-43e7-bf7f-a60060548206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63280e97-9ccd-48e3-9fd3-5d3c7634dd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a729eb-2b85-4920-902a-d5c1c7025991",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349f4cfe-d2fc-4039-bdd8-809edbfa1ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2338def8-3dd7-4431-8472-41eec5430373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f816df-e6e1-4745-b6cc-6eb91253f565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c35fe0-28ef-431c-9d47-2bdbddc974f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4035ce55-adf8-4eba-8dd8-d29a993f8bf5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8ae7a1-4c34-4b67-a8f1-025df409ca06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38698f11-8ac1-4599-b860-cba012ba7557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fcf14c-cde8-41e0-8eee-a3da20f23808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58337b5-6a1f-4e1e-8ffb-e56d731468d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aaf8d6b-1997-457c-81bb-fd251b9cb8bc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c825eaa0-e8c4-47c9-b839-e56644bf8617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db729e7e-f62f-42a9-894e-fc77e5828f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cff9078-5963-42ae-948e-c37da0ed2e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc563270-2f89-4dbb-bab9-b432d181020c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42386a7-56f4-4910-869b-b5fe7ed4602f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708ce18a-ed34-4732-9554-41cf90a53b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4678642e-f036-4164-baed-976617168b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6279c5e6-c826-44db-bbe1-040b5457816c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70a861e-cdf8-418c-a722-7d9662f99af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9626e07a-bba2-4e52-9474-12b0ff8c911e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c93478-f7df-46b4-a2ab-766c118e050e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd082ce-0613-4616-8903-ab1ce22e428b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c9e43f-7b18-4a38-afc1-3be7248ad452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c256a988-bcd5-4e89-865d-0e269261d296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433a186d-3ab8-4473-9848-1062d62b15b5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd7a829-f453-41ad-887d-f9c0d46b8a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bdb672-ee8e-459b-aa13-de08ccd7b0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e75d5b2-a823-46d0-b344-d5a3b6d3bece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8487cf7a-5bf1-4732-ae20-2c473137132d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cc3fc2-4894-4637-9047-177bc8cd9ddb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b18a96-4ea7-44fd-a849-4fa6b95cce22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e777e607-67ac-40c3-abc2-a5832800a924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e187cc4a-857b-4516-87d7-057aafe35905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05a4137-385e-474c-a229-58cda4bc12c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51f6f3c-eea2-412c-9cc4-3dbfaa7f865b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da824e5-a652-4e75-938e-4edb512ffbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f2d569-23b0-4ba9-848b-8cb8b53677cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ec32d5-4342-4a64-9c83-86801d075dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5a0a0d-16d2-4e25-8bf5-391e270c05c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c156e69d-e144-4ccc-91b0-b65ec93bbd04",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87056e33-5728-451b-8572-5abcec8fa4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444ddcdd-1aa1-4401-9144-edcd2f8ea808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d382e403-fdbc-4142-a113-0b57e4b073f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd90685-dc44-45c2-82d1-8b66a26a4985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a6c301-9cad-423c-9e9b-7ad7ee93b721",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9a09c7-049c-40b9-8402-324f11775275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a22c3a-0bf7-4279-9a37-f8ce135ce775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0effe61a-07f3-4743-866c-de6f2229c298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f13cc4-9fd7-4b4a-8222-a217aaa2aa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e803d939-5af1-4b3c-a37f-08e73122f45a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8534da-bed5-41c3-97e1-0c56a66ddd0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac53e9e7-0a34-40e2-89b1-0c4bcc6aae36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9e550d-923f-41fb-8b59-e69833fbed88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f75b0a-90ed-458f-943a-03cd34983965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6062e6d9-a141-4f32-a4cc-a6f44e6ce645",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7a516f-1776-4a18-a8e4-b16529de85e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c395da2b-9e8e-4c9c-a010-05e9f7b3f637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6dd73b-01f8-4314-8af9-57a800075123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35776458-3d22-41e0-b8eb-05daa08ff4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272e35d3-3e46-4e1c-aa0b-163df744ded8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8dd3ef-9905-45eb-9f4d-4ffced1f187d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347d432a-2d3d-455c-9d97-859031d1fab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d288488-8fd7-4898-9ba0-8974dde23696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c53587-76a4-465d-bca1-78619f68f4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e1e1dc-f913-497e-b8ba-849643bb58e5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408fd928-8607-497a-84af-a16f48882814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768d6845-3979-4bbd-a970-1fb07f1a79cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8c5868-6e17-44af-97cd-abaf8606dcd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91076536-138c-44cf-a80e-d75464427ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7295d30a-704d-438d-8dca-a9b294206198",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96ac885-0158-4cae-827f-9b350b243104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a7fe0e-351e-476a-8ffd-ce4a578ebeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e13beb5-cdbd-4c20-ac49-5de5ef550b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1ff474-39f9-47f0-ac04-4f93701535a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2e81f5-3622-42cc-81c5-7f2cb1833f9b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328814c9-e68e-463b-8158-b6262857c534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3083c5a7-e18d-455b-aadc-8ca14464b251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cc20df-a728-48cc-9318-df3f5a788afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be73344a-613c-4ba9-a0b1-6dfea0de1b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2407e1eb-4135-457a-9670-f53df82a2595",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fe0a84-de07-4d06-83ef-1c9db6d2bdcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ceb660-0a95-47d2-a89b-99b46e1604b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0f9a01-2964-440c-a4d9-a509a1b69123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07bdf6b-e2f5-4b7e-a03c-dff1386bf95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdd6dc1-5333-4df7-9541-7591c4ae91e6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b9e46c-2214-4527-9159-74ac6386ee98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba2653dd-857c-40e0-a0fe-d900cd22bebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bb4238-a38f-4a1d-b7a4-f89ecdd9f784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be06f32-8a29-4c33-80a2-65461289cf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345bf737-fc04-4cb1-b9d0-c1768e5d305b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330b646a-d793-4565-92c7-89b1ca4d1b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb62627-a421-4a74-92e4-d50011707237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05821491-6a74-403d-8558-5aac9d717f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d92e5d4-aa6f-49a3-8956-ba51a1f1bbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4790ac59-5b01-43d3-b7f0-24b1c2666dd3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fee0d9-ee48-4682-922a-e37519c094d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4582e437-8771-43ca-b9d5-6e03f44ff5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2f8630-f829-4d28-bbb9-97cb1ebfa48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef7e055-ab0b-410e-8e9b-e3217f249040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4923aa-fad9-4613-a3e1-bed84a51b88f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e70072-793f-4d4e-87f6-10bb53568a4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dcb02bf-f5b3-4000-97a2-f226ae35c971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2d387d-f534-4860-bb65-bc83ba134196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f88a097-cb68-4348-9f64-596b5a78a868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab4b324-d3fa-4a42-9797-282a08a7650b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1596fa65-a67a-4d60-ba37-a89c42e30906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd7ecb4-59de-4310-a90e-e1a7eec14a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "526b7d7f-71bb-488b-b825-f81d5236dba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe0bbdd-19ee-4a8e-95e6-fd588d028930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f4d843-05c3-460c-95e3-4cbb4f732e66",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bd0fa5-2698-406e-ae2c-072b2b9e307f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d416da-d995-49cd-9023-9a0e3bc7a494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066f4eb2-2624-4028-aa8e-f31ac61c97e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e41aefe-c854-4af7-bdc7-e1d61e0524b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f08d08-11ea-4ece-ac11-26137b49849f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142c8ea2-646b-4c22-a786-cd9ceb914ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8fa56b-75d9-49c6-ad08-b3f0f1cf2be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646716d9-0a98-4e37-99ba-1a346d4df36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87306c9-6fa2-495a-a437-82e57b627dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8226d30-455d-42c6-ab5f-fcc15bb68218",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4d3ab5-a038-4f3f-9d8a-e0789d116100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ef3b9df-d246-4d25-90ae-4237406afcb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506e3655-9953-4579-8f7c-a22625c3a002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529a5c80-b949-4aa4-9488-2bf90438cad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db882091-5f48-4294-88c8-c5a74b847a5f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9893a32a-6a33-4b89-88a9-8f86f0ddfa17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "479fa27e-0c78-4d25-a83b-5df01d69b646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ad63f5-2f0c-4ffa-a66c-4f22dd2dcbaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6611568c-8f4d-44c9-99fd-a04b33fc99bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c26ddb3-4845-4914-8ae5-b26311a551d9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aecbb42-fa45-4261-9776-d2f8883fa072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74dbcf8b-56db-4291-b37d-d1ce0b57fffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ee49d9-fd6f-4771-b6bb-b3cda93d03be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bf2c1d-a5a2-4710-9b2e-cce6a9d0fed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de7a469-1a63-4f06-bf93-b3ae9fadfc78",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f7cc10-7bb8-4480-9aaa-d213017a2883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2270a305-e348-4c91-bc79-1e35ea8418f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34501635-90fb-4f12-9fb9-6470b63d42d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c3bfd4-8bfc-48cb-a34e-54b57cf63241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9475518b-52bb-415a-be2b-0474d7d231bd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852c8790-867c-48da-8b41-3466a5ec0ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e2d2df-c052-48c7-9744-5c40867d9af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7949b30a-97a7-44c1-861a-8c1a9442ec52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e220cb0f-20dc-485c-8f87-3b70d514e179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f18779-1455-4625-b8c2-1fa33e2a2e65",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ef1155-0b6a-4dc8-b662-29e8f7a7df11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95eceb4c-79e8-4d2b-a4ff-9f58695a4532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695013a0-48cf-42dd-94b9-3807e55847dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3699fc2-b74c-4345-969c-02b3f10b3eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cd6e72-6a0d-4422-82f3-e7e69a7746b4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e0be02-0ebf-4847-9e84-a8fe8c32c8ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2413a6ec-9197-42b3-8dc7-12c1e5f34804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac97a036-b2a8-4f74-9235-9d71cfe988cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7002e5-28cb-4b72-80d8-98f4fa51eba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35ae291-dca9-4b24-a5ce-2a886f7cf60d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f92625-c31a-4f14-a92e-37f1a8f4b33d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b96a8ec-d3b4-41f4-8637-2ad2a4d14763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dbbe65-c230-4ef5-9688-31765adf1261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9466c5c-1993-47b0-8d35-41fed38c1e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52d40a5-e760-445d-8b41-532459196418",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e099a3-f9f6-4d23-a7d9-90a82c1379b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44590b69-0f3c-4425-8379-f1031e97e33b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1f0fd0-b719-49bf-ba0e-8b438813ee08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26b7966-2d0f-409f-90ac-b5286a8c3de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef54c37-1d8a-410c-9551-30de85699d7d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8588f28-8c64-42bb-8e12-b38e9035f283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "932aca0e-e0c4-4431-a9c5-b157f0b2e4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb3b080-f475-4516-9a4a-b953b9529dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a38d02-3e02-4cfe-8292-0ae40665039a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fac3a9-8700-412b-977b-d2f9d6058e7e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7efa547-9972-4987-b6bd-cd18c6c65346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78eee21-5f6b-48b3-89ce-666faa9154fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8e0250-2a42-46a6-a669-ca90eaf16b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7f75dc-d5cf-43bc-9b7f-c0d66d637ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600c84b4-af6c-46ac-b20c-630f9509da27",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24291ae2-7968-4a92-ad25-35dd34e752ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3dde1d-5611-4d33-940f-b83edc9ab955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86e60b8-df76-4732-9c98-a79ec2af6c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910e8c5e-b678-4040-a575-fa0a381139fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f7aae4-b0cd-433d-8568-a51b54ad9dc8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96695954-7d69-4ad9-b704-0f426eabc0c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6303a7bb-1cf5-45ac-bc06-701d5476c7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100f7875-f30b-4c78-a4b5-8b50e46ff9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5ec63c-f84e-4983-b9ac-c214078a8612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b1152c-43d4-4fbe-bcb1-e559fa384950",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc71ebd9-9738-4e3e-a621-6e87815b56b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17341344-45f7-4d8c-9745-85b421c1f046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525575fa-10fa-42a1-8077-6c192757a5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39ed4e2-c413-4800-b108-0bc7a5ec5438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ef2c67-eb62-46b4-85c5-c70d1623f5a5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67840a14-31f6-4efb-af18-918d09c04984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c53a62-73da-4d0e-aae5-41e08ad48d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc34a636-6818-438f-93c1-92d935d5187d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30468422-4156-44c9-8689-f9c2987188f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd309756-d128-48bb-ba4b-22df4980755f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b5ea8f-b3a9-473a-b7f7-82fef14851bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f39c0f5d-5861-4482-a817-802da86b57bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3318244e-497b-4c32-81e0-27ff73a3027a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8001ff6-362f-42a2-a552-7eb13c09123c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef3089d-7f87-4517-b979-ffc740e6ce2e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faa8fff-dbcd-41e7-8944-019f792369de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01af2399-81ac-4d73-aa1a-4a8c6bd8e91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422c567d-d5f0-4ff0-afcd-6bf7760085fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c5947b-4533-4f03-9681-2f87bb8dfca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c18d1d-2a35-41cb-87da-93997c8ee15d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618e1f8c-faae-4284-8a7d-03131938d3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f14b32d7-a41b-467f-9ada-a1e13c151915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae20b807-97ed-4ea5-8d47-6ea4a23d5233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbc2f12-9830-4c6c-8f80-f903ea678139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8247a6e1-1d13-400d-8d11-8f7afe957ec3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545243af-5806-4cf1-a341-e78f49a71aee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5fa28eb-d28b-4c9c-9199-6c88554e6a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca317cdb-7c24-4157-8637-826ed00a5c35",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e53f306-3d06-4e3e-92f5-6aac952fc027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f3b8ce-df56-427c-9c3d-2d165a3b0dbc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11c42bb-f20a-472a-9c85-89ae6470609d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb19d98-6dac-4d1a-aca6-de6cb75f8a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f83c26-46e1-4a84-9d3a-76dd24d0fff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb90332-3451-4016-b1ad-15eb53632ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45efa37b-18e5-429f-9503-9f6a9bbade11",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22824bcb-8fec-431e-8a13-f3720c0bec7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c625adc4-5c06-426a-9afb-421dd0d4e16a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85420adc-4bc0-4d90-a4df-9489fc71ec25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a048e435-8d74-4e9f-b7c8-d1bbb65690d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dca660-c8df-42b4-a426-e91dfa34c7f2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5bf332-7d5e-4aae-bdd6-660fa739fb6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd3424b-76f2-43d1-bbd2-ab6e53644172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593bd98e-6147-4ce5-9ae5-9885dbc4ca7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43ff234-7c32-490b-bca5-cc3a00d44194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec5350c-0dc1-44b8-869f-07e754e0e53e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99904c6-0369-4939-8679-d9cbb6bf4c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c30ca7-7bd8-4943-81d0-107b4860a221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76ff5c3-1fb0-48db-8351-1df965dfff5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb08f63-44ba-4955-a629-72995bd47ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c98d3e-61f6-4c47-ae4e-2b408ef2bdfa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b37660c-2ab4-491d-b9c2-47f22a2988fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16665df8-b576-4023-add6-8cb88bd4ae08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca83e6eb-3d6e-4e31-a468-2abbf4b0ee49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc24a443-3d2e-4428-962a-42e256d0b086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45e7533-6834-4da3-bc03-ad6495314521",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42155510-815e-4b38-87d1-0c7d4003ea48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ff7487e-7fb3-4e2b-8d9a-aacb1462e5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7ce820-3361-42f8-aa17-e2814b31a258",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601dfcb8-53b2-49b3-9772-9eb0793a499f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daee843b-8488-4295-803a-824e13ec83bc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe880bd7-3612-4bdb-9f9e-9dd586b15278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf8f6d4-aef1-4206-aa6e-b78aae202a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecb0ab3-598b-4024-be6c-35f0ea6d30c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8738e68e-623b-4df0-aa1c-1d6db5569bc3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "322de967-c941-4ce9-96f2-4c76a4ef3829",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c0be19d-ca96-4a1e-8a3c-f199d31054bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a36e0b56-a696-4836-b846-947e7b9e4e93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f457eb25-73b6-44e0-8e8b-08e7022656f4"
                    }
                  }
                ]
              },
              {
                "id": "0441d3eb-6977-48a3-9854-063028db249e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7c357e7-7b4a-4d27-a9c1-69647f19b1be",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e62b451-ac5c-4885-a826-b0eb623976ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "70d63632-6049-4d0b-a027-7354077a4286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab66ea8-06b1-4fd0-acdf-6a673a77e3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22716f60-9e61-4932-af0b-3c20315d28ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35e06bf0-bb07-4fd8-af0a-5dad9d66d7ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8f046a1-893c-400e-81d6-f00d63619c92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce76fff0-183c-419f-9b3f-28259e6c0386",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b434f051-587b-4730-be53-43d4dc60c296"
                    }
                  }
                ]
              },
              {
                "id": "4927e184-1e02-4547-b72e-8748f204e464",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b85f1f89-411f-4cbf-8dfa-cf961bc0331e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5842e5b-3373-4c5e-9d6a-6ffbcee09b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "293832e9-2556-4aa5-ab58-5a3252ab7408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddaa291-c4c9-49b8-b3d7-51d0efddec5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ecd0cb-5ac5-4425-b11a-ef6c6de2a02e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "23c74b79-b49b-4694-86d7-a6e411bb83eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ccb0f6e4-aefa-4177-a979-a908264dc113",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5bf520e-da13-4f9b-bce7-12eebbc92a1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30474fb7-ee19-4321-bf35-1af2b99907c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b843629-4036-4729-bf8d-c5a4d1b69383",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0fb82a2-7c83-4bfd-a5bc-314adb9e75dd"
                    }
                  }
                ]
              },
              {
                "id": "67200713-e57d-4f50-bc48-3ced33045e98",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11cdb5ee-83e4-404f-b2c1-1f95aa71183d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d9b1345-152f-4558-a7ea-9cae9bb62b1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5ec8c94-e7d3-4f68-8d46-3b2b7d7aaa0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0603faa1-2eb5-4fc8-becc-98df575b46f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31cb01bd-7414-4b92-acd6-c4c3921bc5f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a3deb005-21f1-4b77-b93e-adaacb4cbb61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6c3450f-e68b-4b3c-aefc-a1e15b239402",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a0647de-c582-4093-a6bd-cb1ee2539ecf"
            }
          }
        ]
      },
      {
        "id": "7cfb1874-1f64-4192-b23f-9fa57be4b225",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "224bc053-9e5b-40c6-978c-d3e02cbce737",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28d51653-0f40-4a7d-9315-4e71ccc4747f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1ac40d6-2144-4bd4-8136-4622d0b17325",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fabb05-8961-4312-99ec-463c29fd76e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a20438d7-cbf5-4aa5-b378-70960f3d85f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb9dce8-ab42-467f-8c86-a2d19a82628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d964c8b-9a00-4ae3-a17d-a2266d8c8076"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5af73e3e-e23a-4edc-9a3a-76049cb9f2c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6576c550-16fb-4e57-96ce-174d2b3092ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a893b068-68a5-4b71-9b4d-d43bc7ce5c31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ebd7e84-3ff4-4cc1-af3d-05fffaab00e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cc4cdd1-8c72-4551-aa72-5dc6bd2c8e57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4adca51f-1c57-434e-a870-4da51e35ade2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0acabff-3ed2-4e5d-bc57-1d127fa97aeb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "962d563f-d180-4705-ade9-f5912fe452a2"
            }
          }
        ]
      },
      {
        "id": "6d252ceb-0273-4936-b580-960553bb508d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "537f2210-4a3b-4cc9-8730-fc31956be660",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6305b52-4381-41c8-943c-2ddabb7074be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af6bb7d9-4b51-4848-a1f6-5d03c510753d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4e7fb6-dde6-4a11-ad56-ca6be548c43a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26011404-6e34-4d76-8deb-9ad5f80b3035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92f4aa2-8652-4ae5-9c5a-6fe071214141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92a6f3b6-6e55-4673-b2d0-733edb8b2156"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b51b9200-8a1a-4688-95f1-1652130a7644",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7a9b51e-db68-4d4b-bf58-b0c28921274f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45642a14-35f7-4bc4-9fcf-c76de53313dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db50b06f-8bb2-40a7-b95d-4ba07ec2a56b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b45c917-3afc-4106-af0e-657cba1f04f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d05d9984-9ed7-45fb-8991-f657eb8cd37b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c184a5d-b71c-4913-af23-5e14f418eb3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a06c7f16-87a1-433f-aac4-bd072f52f2cf"
            }
          }
        ]
      },
      {
        "id": "9dc574af-d287-4399-8133-65ee3993b6ab",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "98f1b2b8-9207-4ab4-bf41-d03f61e49188",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a6acac2-657f-4087-9464-7cdfd405cf6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b130d910-4819-448e-ab55-f21bc5ccfcae",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866423a5-748a-41bd-acbb-c6cb0e5c1339",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4f72480-6815-4f39-87a2-f98b1ff4d42e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bb4e3d-32e8-4dc3-9ff5-5df367d91f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11b437e0-6f75-4ea4-af93-f18e147d5c85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecd23d6c-7532-4fb4-8090-09ad688c971d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f48344d0-d918-408e-a819-4ac47ecab83d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2ff2133-dae8-4406-a339-e6f421d0a8a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a8d1fab-333c-49d1-9792-0f9b200a8dfd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cd7feec-0535-4b5b-b240-77f7349f2368",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3d72c8a-854e-4f10-9540-7fd0cdf8972f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0516fcf8-e48e-4bb3-8aab-de3abe510366",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cfda11a-5b21-4aeb-abf3-7424b915ebe2"
            }
          }
        ]
      },
      {
        "id": "50cf85f3-df70-4f23-8cb6-3c117bba7dc0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c5fcf61-20cd-48a0-a3bf-66d2f37cd751",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78dd9738-b939-404d-acd2-0d1520078818",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "be2d4852-d172-484c-bfae-ed8efa269d35",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5ec30b1-be66-417f-83dd-0a5dab654e83",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19b700a4-5409-4bfe-8c48-6ee7f3eef5dc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 42.71228070175438,
      "responseMin": 16,
      "responseMax": 276,
      "responseSd": 23.773079793509652,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698107657230,
      "completed": 1698107692333
    },
    "executions": [
      {
        "id": "01facc79-4b52-4a7e-bfec-38323964436e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "63cbf7dd-cdc4-4a96-bc30-7f08726c0d77",
          "httpRequestId": "842a81b5-7d9f-453d-88be-c27d434e552e"
        },
        "item": {
          "id": "01facc79-4b52-4a7e-bfec-38323964436e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bdf072ca-1f1e-4d77-a6e5-63ba7bdf3613",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 0
        }
      },
      {
        "id": "4c9bdeb1-ca96-4490-9574-cd7dca2757cf",
        "cursor": {
          "ref": "cd4c2a9e-681b-436f-96a4-4c269eb5d783",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5ae2030a-e92e-46ed-b030-9b30c6acb313"
        },
        "item": {
          "id": "4c9bdeb1-ca96-4490-9574-cd7dca2757cf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "552ff60e-4b20-49c8-894a-262025aa22bb",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "faa724ab-9783-4e21-adf1-4734ad6969b2",
        "cursor": {
          "ref": "2c7cb34b-b233-4a3c-883d-98bb9755e694",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e02449e6-abca-4b38-8d1f-f39d3d20042a"
        },
        "item": {
          "id": "faa724ab-9783-4e21-adf1-4734ad6969b2",
          "name": "did_json"
        },
        "response": {
          "id": "039aa2e1-a8f8-4139-bf3d-15545b9dd17f",
          "status": "OK",
          "code": 200,
          "responseTime": 179,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef72c32b-7ed1-4ed0-bab5-ff6140232747",
        "cursor": {
          "ref": "d76c639c-88e9-4e61-9719-e13943b5b7c8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "391b1c6d-dad9-4280-9885-31b85af485fc"
        },
        "item": {
          "id": "ef72c32b-7ed1-4ed0-bab5-ff6140232747",
          "name": "did:invalid"
        },
        "response": {
          "id": "7422d072-5b7e-4d8b-ab12-cbda88dccb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef72c32b-7ed1-4ed0-bab5-ff6140232747",
        "cursor": {
          "ref": "d76c639c-88e9-4e61-9719-e13943b5b7c8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "391b1c6d-dad9-4280-9885-31b85af485fc"
        },
        "item": {
          "id": "ef72c32b-7ed1-4ed0-bab5-ff6140232747",
          "name": "did:invalid"
        },
        "response": {
          "id": "7422d072-5b7e-4d8b-ab12-cbda88dccb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cd3c5b-20a1-4e28-a31e-3e8fe6598593",
        "cursor": {
          "ref": "43929372-3435-4b39-a9a4-6092ea5d51ef",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f5547d49-cff9-4542-a74c-628f66697a35"
        },
        "item": {
          "id": "37cd3c5b-20a1-4e28-a31e-3e8fe6598593",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fd24a770-44b3-490c-aae2-aa8ee2dc86ea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3382bc6f-087c-4a1b-94ab-38ba3317ed51",
        "cursor": {
          "ref": "7d8df66f-2668-4276-80f0-b5f5bf0d5fd5",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "abb9618d-1948-4c7a-b2be-ed6b97eed96e"
        },
        "item": {
          "id": "3382bc6f-087c-4a1b-94ab-38ba3317ed51",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "78734b63-033b-4a0f-ae1f-8ad7bcdfb724",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1f0e8c-b913-40d8-ba4e-6ddff10247f4",
        "cursor": {
          "ref": "ecbc1ac2-454c-4fad-86ef-6c057e71ea9f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0587bc2a-cf40-40a3-b733-a969e75b194c"
        },
        "item": {
          "id": "aa1f0e8c-b913-40d8-ba4e-6ddff10247f4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "37ba324d-e962-4d8c-83c5-39b06762cb97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cb0130-dcfc-40f0-80ca-3c205af17cb5",
        "cursor": {
          "ref": "9af395cf-823c-47dc-bcaa-20e88c6eb62d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "04646769-8bab-4c84-84d5-98af08356162"
        },
        "item": {
          "id": "84cb0130-dcfc-40f0-80ca-3c205af17cb5",
          "name": "identifiers"
        },
        "response": {
          "id": "bff68c20-0513-4105-9edf-43820fcbed4c",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f678f637-4a29-44a2-a1e5-042df90c84bc",
        "cursor": {
          "ref": "068777ca-a0b9-4089-a2fa-f13e8eecc648",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "80f1a257-6183-4219-9a0b-f2fdb081a209"
        },
        "item": {
          "id": "f678f637-4a29-44a2-a1e5-042df90c84bc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d84c3de2-3381-48f1-96c7-bc8ca4cbb9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9657ce6-aec3-4bbd-8c46-9e0f0fe8ea02",
        "cursor": {
          "ref": "51be61e2-289d-4621-9222-8a285936d1d7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2bd7a79e-a1b0-4dba-ba10-e272fd26c06b"
        },
        "item": {
          "id": "e9657ce6-aec3-4bbd-8c46-9e0f0fe8ea02",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2fc6cb99-0ea6-4ba1-9277-f17606ece6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80f2cf2-0ed6-4afc-bd77-9135184dec63",
        "cursor": {
          "ref": "06d6b4b7-b51e-4774-9d2b-c57548cc7431",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "54bfa492-c67b-4a6e-8b81-783f4349c3c4"
        },
        "item": {
          "id": "b80f2cf2-0ed6-4afc-bd77-9135184dec63",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "aa909b12-d1e4-4f5b-9d45-2a8cd166f78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f18b2a-b4c0-4a06-b2b5-c04b6d829f04",
        "cursor": {
          "ref": "5658222f-a387-43fb-82d2-b55bec66d29f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5a919f84-2ba8-4424-9d08-897972aeb852"
        },
        "item": {
          "id": "b8f18b2a-b4c0-4a06-b2b5-c04b6d829f04",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "702f1a56-df3c-4863-9a7a-a53f59831fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e465591-44b4-4b7b-a3f1-c01d1b16a29e",
        "cursor": {
          "ref": "c3aafcdb-36a5-4b1e-858e-daa4aad5ec38",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bc77c251-ef8a-4b8e-bf16-fbbab0cf1c3f"
        },
        "item": {
          "id": "6e465591-44b4-4b7b-a3f1-c01d1b16a29e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ec5cbc01-9e9f-4655-a785-68b7d8b93581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfa5a61-6a4a-4e57-9e1a-8bad5f2a819f",
        "cursor": {
          "ref": "d4a37789-1d13-449f-b764-5dd982b4bc5c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ba2527f5-42b3-4524-8bac-cf96ba6e1fea"
        },
        "item": {
          "id": "edfa5a61-6a4a-4e57-9e1a-8bad5f2a819f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7d61c787-7da1-44da-98c0-033a98833189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c3e19c-efbf-47c4-881b-710da6838649",
        "cursor": {
          "ref": "bdde8d86-4a50-473c-9c22-ce4e0721c8fc",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c62de378-e47a-4c1c-8fe6-bfe70f392f97"
        },
        "item": {
          "id": "a8c3e19c-efbf-47c4-881b-710da6838649",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "46429178-9074-4e58-bf4b-73c8083dba55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3587a33a-8f05-4d8d-a329-154bcb9a9f31",
        "cursor": {
          "ref": "eced5924-5223-453c-bd74-fc6b761a890f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cf00a197-48f8-46ff-836b-759cbb2fa192"
        },
        "item": {
          "id": "3587a33a-8f05-4d8d-a329-154bcb9a9f31",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cf848b9c-22cd-4eab-9349-193f186920c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f745745-0dcc-45e2-8f40-18b92d5233f7",
        "cursor": {
          "ref": "d4994c08-77b6-44f4-b2f1-f911793c1cba",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6a89268c-80df-4318-bed8-f6f97682a01a"
        },
        "item": {
          "id": "3f745745-0dcc-45e2-8f40-18b92d5233f7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3ed86c55-85e6-4246-9af4-9518769941b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7479ae04-4fa1-4a87-96e5-22ac38100bad",
        "cursor": {
          "ref": "93c79359-ccb0-45d7-83c0-be3003dc98ba",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "76f25cc9-790f-4a06-bf39-f09c3b73a1b6"
        },
        "item": {
          "id": "7479ae04-4fa1-4a87-96e5-22ac38100bad",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6011be3c-2126-4d18-99ba-d033b36af905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc49fdf-0b43-4931-bb84-d74a51c992aa",
        "cursor": {
          "ref": "471f3523-1626-43c7-abbc-871b3849f1f7",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ae73a692-dbad-4dd9-8708-e3826a99a12a"
        },
        "item": {
          "id": "9bc49fdf-0b43-4931-bb84-d74a51c992aa",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1bab1068-f171-4d19-aff0-e13d58501610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc6acef-73c3-4887-85f3-b4034a9abd94",
        "cursor": {
          "ref": "68ee44ed-49da-46ef-b2d0-6c87d37151a1",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7cc4a777-2ae5-4e3f-b078-9a2c8b0affad"
        },
        "item": {
          "id": "6cc6acef-73c3-4887-85f3-b4034a9abd94",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f75e6e9d-9020-40a8-835f-f55d2cc34ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be358c73-b095-464e-b143-48ab5357c69b",
        "cursor": {
          "ref": "0174f56f-a656-4bba-98c5-1a3cf572f372",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d81fff9e-e051-4832-8f44-4baf46535fc4"
        },
        "item": {
          "id": "be358c73-b095-464e-b143-48ab5357c69b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "06ad5ba0-3b06-4201-a9e6-fd7bc1f84594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46993dcb-f268-4f92-976e-3ac0387733cc",
        "cursor": {
          "ref": "e333c107-163f-442b-af57-e5dcd271f04f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d90faed5-1f4a-42c2-9ca4-d71b81ee2dc9"
        },
        "item": {
          "id": "46993dcb-f268-4f92-976e-3ac0387733cc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "32791100-a775-49c6-bfe4-dadb8630ac99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8188489-a969-4819-bda0-37d3e6965bc4",
        "cursor": {
          "ref": "9fe7cb6b-2e31-487c-8579-c670ea762e48",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "54b2a10c-263d-4560-b9c1-8cb8d514ff17"
        },
        "item": {
          "id": "e8188489-a969-4819-bda0-37d3e6965bc4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "16300d36-79bd-4359-a4a4-32747bf63774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471053ee-0adc-47e5-8fbb-4a9f5efbc1af",
        "cursor": {
          "ref": "4b047e59-2f61-46b4-8d7e-4f5fb6968a8d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "24a71b4b-7187-44fa-995d-61914dec196d"
        },
        "item": {
          "id": "471053ee-0adc-47e5-8fbb-4a9f5efbc1af",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9cec2b8b-d110-4f33-9809-3639ba1e5a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16b4c39-4a9d-415f-b7ef-53984e73b3d6",
        "cursor": {
          "ref": "74ebff7d-587d-4252-b59a-c5b363dc1bf0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6532e435-04e9-48e6-afa0-6a32af156ae0"
        },
        "item": {
          "id": "e16b4c39-4a9d-415f-b7ef-53984e73b3d6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c7e3efdf-a54c-460c-b122-9929d3bf545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57118bd6-f939-49ef-a315-0710d39b1371",
        "cursor": {
          "ref": "8afb4de9-d53a-4fab-9439-1643d90416e9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "96b2e82e-b91e-436b-90f5-32e75e061c7f"
        },
        "item": {
          "id": "57118bd6-f939-49ef-a315-0710d39b1371",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "427e0a16-c95b-462b-894a-c410d33fb297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771c5096-470e-44a2-86d9-1baebcd09261",
        "cursor": {
          "ref": "78503b7b-ec16-4a9f-b6c5-d41ef852f85b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a274a6bc-3bc6-4cd3-86de-214f6e809f04"
        },
        "item": {
          "id": "771c5096-470e-44a2-86d9-1baebcd09261",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0aba6ad8-5e0e-429d-82f3-3d797ee933b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9e7392-64e8-427d-85cb-742cceb8af47",
        "cursor": {
          "ref": "f6354ccc-ee01-4168-b5a8-6d56af1c8138",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "28f31367-8246-4e94-806d-09d4359c7881"
        },
        "item": {
          "id": "1d9e7392-64e8-427d-85cb-742cceb8af47",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5cf040b4-dec9-4857-aeb7-6c54be746db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321d9c35-4f03-404a-ab64-cbdbe36bcd8e",
        "cursor": {
          "ref": "41f07f8b-52cb-4bca-a014-d100958c6b80",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae5a5dda-44ac-4b84-8f7b-eeea7d1869d4"
        },
        "item": {
          "id": "321d9c35-4f03-404a-ab64-cbdbe36bcd8e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "168915be-0d05-4b8a-a483-52c426e0c7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366f33d1-6f1f-4610-a873-b4c49629bb82",
        "cursor": {
          "ref": "e8cd7332-e975-4e8d-8762-f41ba735d26d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3618a812-6cc4-4efd-b8cd-1b3aac6012a5"
        },
        "item": {
          "id": "366f33d1-6f1f-4610-a873-b4c49629bb82",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8527df70-998c-40e8-819d-0a4f95d58b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b95105-924b-4775-8fac-f449b37dff98",
        "cursor": {
          "ref": "c40c9376-3b83-4358-b09a-fdd053ebff30",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4c9031d8-b3a9-4b67-98fa-6cccf69e2dea"
        },
        "item": {
          "id": "a2b95105-924b-4775-8fac-f449b37dff98",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "26e6036c-b1ef-45b9-a4e9-aa4835a36710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ca0b71-8584-4d74-8a85-cdb646536916",
        "cursor": {
          "ref": "68a89e4a-993a-49c1-a0c1-d9a46ac42e9e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d814be12-4730-4e23-bfa5-de37c9546943"
        },
        "item": {
          "id": "d5ca0b71-8584-4d74-8a85-cdb646536916",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2ab3bd90-4e48-4886-87f2-b6a24d80297d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ac8e11-af4b-43b0-8ffd-f0bd1cc1f057",
        "cursor": {
          "ref": "fe053cfc-4a98-40b5-8032-72528f7411fd",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5acd0a66-a971-42ec-9ce6-76429e536d13"
        },
        "item": {
          "id": "12ac8e11-af4b-43b0-8ffd-f0bd1cc1f057",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8efb0044-c80e-46f3-9ab3-3c1a7a399b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172af2aa-4e54-4562-baf6-d81dc73789f6",
        "cursor": {
          "ref": "1b608183-d22f-4c91-9582-ca7e897085dd",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "914a5c94-382c-41dd-94b3-11dbbdf2f2e5"
        },
        "item": {
          "id": "172af2aa-4e54-4562-baf6-d81dc73789f6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6f9d9ae9-1f62-4d00-9a9d-5e43d531c618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c195e2e4-a5e3-4313-bc03-7b69f0bcc7f4",
        "cursor": {
          "ref": "5245183c-d24b-484e-bab1-4849b87358d6",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ba435009-1baa-4c56-aeb4-2d525142afd8"
        },
        "item": {
          "id": "c195e2e4-a5e3-4313-bc03-7b69f0bcc7f4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "53d737b9-cf7c-4ef4-956a-160a0d54309c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569c81d7-0d5d-4880-927c-f0e1d7048d5c",
        "cursor": {
          "ref": "20412b8f-3711-4638-850d-b64dd8d63c9e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bbda327c-ec84-493d-ad1e-37e78dc0fa34"
        },
        "item": {
          "id": "569c81d7-0d5d-4880-927c-f0e1d7048d5c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "817d46ba-5e7c-4e9d-a1f7-929ce1acaced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495914da-baa9-42ae-9d4e-1ffdf2d237c2",
        "cursor": {
          "ref": "3b7ae8aa-5bb3-4565-a48d-b0dfd3cf3032",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "24a3b157-b804-4b14-a39f-22c6454ab131"
        },
        "item": {
          "id": "495914da-baa9-42ae-9d4e-1ffdf2d237c2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "716598ee-372e-42d5-a1ae-cb25f5322e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175b77cc-597a-471c-b9cc-c327a2ada31a",
        "cursor": {
          "ref": "1a4fa307-ed1f-46d7-a18c-baf74134b187",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4066ee40-8097-4826-b6a8-2012bed4af31"
        },
        "item": {
          "id": "175b77cc-597a-471c-b9cc-c327a2ada31a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9504b512-ac67-40cd-ac88-5b0980eba453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd875b7-b62e-4727-9967-b8ed10300b90",
        "cursor": {
          "ref": "5967731d-88ec-4b1c-83d9-63a65356f90b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4f6dc254-4c63-4482-8894-aab88502e571"
        },
        "item": {
          "id": "8fd875b7-b62e-4727-9967-b8ed10300b90",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7f7641fd-13e1-47cd-80fc-95c0bd9743cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0522268-f8ed-4743-831d-8b333059126a",
        "cursor": {
          "ref": "dacd68b7-c607-437b-9a42-48c1f706c4f9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "771931a4-f49d-4ab6-a64d-9d5f8f518989"
        },
        "item": {
          "id": "b0522268-f8ed-4743-831d-8b333059126a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8bb97f13-cb78-4319-a91f-c181d42ab6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa5eca4-37b4-48d5-8be8-e45f418cc2f0",
        "cursor": {
          "ref": "63414d9e-c214-412e-a162-c23acbf64e65",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bd315c0f-76ea-489f-8ae5-b4c17e59591c"
        },
        "item": {
          "id": "3aa5eca4-37b4-48d5-8be8-e45f418cc2f0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c7507f20-a552-4632-9c5a-25ab2aa01db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3621ca-b9de-45ce-8e32-d54a7a9e8b18",
        "cursor": {
          "ref": "1459d073-6c89-4ed8-8fe7-ddeb2c80e7e7",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "79987a61-71e3-426a-8a17-adef0c814967"
        },
        "item": {
          "id": "5d3621ca-b9de-45ce-8e32-d54a7a9e8b18",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b875fbae-bc91-47d4-9f3a-5fca9ecf97ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a9d018-aa40-4554-96be-1f8a0efdc340",
        "cursor": {
          "ref": "d2414ab2-d4a7-4665-812d-93190a6e52b6",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "67ee53de-b93d-4cc1-a488-54bb427b72cc"
        },
        "item": {
          "id": "58a9d018-aa40-4554-96be-1f8a0efdc340",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "708b5612-fd97-43ae-9c4b-883bc498f140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986a4dad-e2d3-49cc-91d9-8775e5881271",
        "cursor": {
          "ref": "ca4fa141-137e-4048-b508-7a733c485cf1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b4a0203a-7faa-4cb2-9010-7a065356272d"
        },
        "item": {
          "id": "986a4dad-e2d3-49cc-91d9-8775e5881271",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a4d8da5a-9712-4cfa-98d6-132de31af19b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 69,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98edf9bb-4755-4cf8-934c-cfe7523bb0fc",
        "cursor": {
          "ref": "2b7f4a59-1287-4afd-a84f-9b2fb0f6969f",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a3011f93-e9cc-452d-b158-036d4c14cced"
        },
        "item": {
          "id": "98edf9bb-4755-4cf8-934c-cfe7523bb0fc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b6db4f09-8fb0-422d-b9dc-017019722024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e782b4-459c-4ba4-855f-27432c89f74a",
        "cursor": {
          "ref": "3f1d0f4b-aa92-4891-8ba2-0ffb5da5d543",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "392643f7-c658-4f52-a233-7250f47fe9bd"
        },
        "item": {
          "id": "b0e782b4-459c-4ba4-855f-27432c89f74a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f1d68228-697e-4d0a-ab1b-afa18145a476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec299adc-28c9-4821-a92c-2a78c80ad23a",
        "cursor": {
          "ref": "fabb33d6-91b3-494b-aa5d-d379d0612084",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7c54ad07-8048-402c-b8b9-747d493850c3"
        },
        "item": {
          "id": "ec299adc-28c9-4821-a92c-2a78c80ad23a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "be895955-c202-4113-8e95-12989da12975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc2f193-accf-4876-a82b-1d27a07f96bc",
        "cursor": {
          "ref": "07242760-b8aa-4493-a1ee-efe78cae4b5d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ed8eceaa-761a-40b9-80a3-07bfb97cb16f"
        },
        "item": {
          "id": "cfc2f193-accf-4876-a82b-1d27a07f96bc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bc07aef8-d8b8-468b-b181-5ecf48e4f3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bec9fa-10cf-46e9-a974-359d25c1e4d6",
        "cursor": {
          "ref": "ad153863-e815-47db-91c9-9069ca8ba5a3",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "92edbd13-e00f-4f7c-9da3-bb45f0eb1959"
        },
        "item": {
          "id": "c6bec9fa-10cf-46e9-a974-359d25c1e4d6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6fc49a75-4f1b-4f76-98ef-7dd9f449432c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eafb384-b5ed-4096-b0ea-5cc295c9d8f8",
        "cursor": {
          "ref": "05da3109-df1a-4cf9-ae30-e1a7a0a179f3",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "54ddd6c5-dddb-41f0-a3e3-8d761d0e07ee"
        },
        "item": {
          "id": "9eafb384-b5ed-4096-b0ea-5cc295c9d8f8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bdff08fd-5310-4d3b-bae0-64b8815d4036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2047b834-d09f-44b7-b62e-408836abe151",
        "cursor": {
          "ref": "5d86dd6a-985f-429c-a283-191d4bc6ed03",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1d56cbd0-fce0-4781-a4d7-24a0dc5313ff"
        },
        "item": {
          "id": "2047b834-d09f-44b7-b62e-408836abe151",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1eacd07c-fc85-4389-ac79-f672f8848df0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d0bc1c-79e3-4bca-b2d1-a96c464b9efa",
        "cursor": {
          "ref": "553d82ac-62bc-41b6-808a-19a0fd9a7dd1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d5a79fe9-8596-4d80-91c9-3d6685540f7e"
        },
        "item": {
          "id": "c5d0bc1c-79e3-4bca-b2d1-a96c464b9efa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dc6ba4e2-36c1-48c3-a10a-4b135086f57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38a8467-fb87-4b65-98bb-e374bece996c",
        "cursor": {
          "ref": "c0f512d6-a161-4268-a430-7ec08af60ecc",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7f5adb89-4569-47f6-ab51-a370779a46c7"
        },
        "item": {
          "id": "e38a8467-fb87-4b65-98bb-e374bece996c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d69609d9-9af5-46ab-a675-b66eb902417c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd7cfce-ef9f-439f-b4c3-f38d2112b156",
        "cursor": {
          "ref": "7d5b3a1f-eef7-4b10-9c8c-3b4fdfbba7b8",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9dbd6f32-daea-4ddd-a6be-a3ec2b60e5cf"
        },
        "item": {
          "id": "4dd7cfce-ef9f-439f-b4c3-f38d2112b156",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b55e91d1-82c1-4fd7-9b78-ea570a14a853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bb5c7f-9c3c-467d-af10-3cee6203b053",
        "cursor": {
          "ref": "2852f989-bbe1-4527-8ef1-1329d3567ee6",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9589026f-a9e8-434d-9533-ed0db3f6102d"
        },
        "item": {
          "id": "38bb5c7f-9c3c-467d-af10-3cee6203b053",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "769365b7-cb98-4596-b192-955a20b057a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9410cea-6538-40bb-b4a7-022bb9c1b159",
        "cursor": {
          "ref": "6156f558-9127-4c9d-85cd-f0ba77541c39",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "84f8f751-4316-4b08-9e74-92f8d562076a"
        },
        "item": {
          "id": "c9410cea-6538-40bb-b4a7-022bb9c1b159",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a7ccff31-6678-497f-afad-991e890c1d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abaa473-c8cb-48f2-9103-3d076230a4ac",
        "cursor": {
          "ref": "6f438e39-75d8-4bee-ad18-f357d352ac89",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5e668158-837f-46a3-ac3d-51faeaac90fd"
        },
        "item": {
          "id": "5abaa473-c8cb-48f2-9103-3d076230a4ac",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "17aaa5c9-7e24-48d0-b647-f1a958855391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b428aede-6950-42a0-9816-08eadd6c34a0",
        "cursor": {
          "ref": "db6bb5e2-d0df-4039-ae84-52aebdcd0387",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b0a2ae30-8e55-4f2c-94c4-8e5cd4a201b4"
        },
        "item": {
          "id": "b428aede-6950-42a0-9816-08eadd6c34a0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "452c013d-2df8-4905-9035-32c8e6528e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8cdebf-6cfa-430a-b6c6-cd39de1af75f",
        "cursor": {
          "ref": "8c1048c3-2a32-46d3-81b7-028a37102ffd",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ed4426fa-1364-446d-a615-1e7c863b1284"
        },
        "item": {
          "id": "ce8cdebf-6cfa-430a-b6c6-cd39de1af75f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d006a614-e707-4b30-ac3f-1c0c52e7f143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046abee0-54ef-4602-b54b-91ecef09aa08",
        "cursor": {
          "ref": "dad627d4-0452-4ec1-b256-f963ddd70760",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "96ab4e36-9fb8-46cc-8ea0-5d13e81591d8"
        },
        "item": {
          "id": "046abee0-54ef-4602-b54b-91ecef09aa08",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "04e4044c-f391-470c-84bb-39e7cce6716f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feabba63-8b00-49b4-aa46-e833d76a9d0a",
        "cursor": {
          "ref": "42b7887c-aaef-4467-bd60-3bb1320f596c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "32d2fe76-603d-4df5-b0c5-0a3473640df7"
        },
        "item": {
          "id": "feabba63-8b00-49b4-aa46-e833d76a9d0a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5f33acae-d111-433f-8550-97a6533c8710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee814c8-0bb0-44e4-a112-2749ee4a3983",
        "cursor": {
          "ref": "7b738109-81da-4934-bd7e-0fc561564cab",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b0e088af-a172-4711-9194-ddd9a6a4a905"
        },
        "item": {
          "id": "3ee814c8-0bb0-44e4-a112-2749ee4a3983",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "54a4f80c-4357-41f3-b614-e27b3de7d0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af89a37e-504e-4767-83fa-aa0d71112735",
        "cursor": {
          "ref": "e2f3aa06-eb4a-453f-9e01-9230e6570353",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3750db42-9a02-4b3c-8190-5429d848c85d"
        },
        "item": {
          "id": "af89a37e-504e-4767-83fa-aa0d71112735",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e44b8b43-704e-4fd1-a4a3-1f9cb498489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba16e423-da4c-4953-80b1-7141c4e3e515",
        "cursor": {
          "ref": "08920cac-e1e7-4f21-aed4-832995f4d665",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a368a1cb-32b1-4a19-8ecf-b5338dcd30ef"
        },
        "item": {
          "id": "ba16e423-da4c-4953-80b1-7141c4e3e515",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "57d5e780-be5f-433e-b679-b4642093505f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d8bc35-5226-4283-816f-28c31bdf1bd4",
        "cursor": {
          "ref": "a4885c00-16e8-4902-acba-d0c1be6f92de",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "26e69319-366d-4d6d-ad0f-84cf6148b035"
        },
        "item": {
          "id": "13d8bc35-5226-4283-816f-28c31bdf1bd4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a68ff1b8-4943-43de-83ab-45788deaeaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9d404d-1982-42f3-8d18-779a4ad64fd9",
        "cursor": {
          "ref": "035c7181-4535-4b0d-9ced-196071f0ae9f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f3e536c6-aa31-46a5-87d1-2f878e5f21b3"
        },
        "item": {
          "id": "cb9d404d-1982-42f3-8d18-779a4ad64fd9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f28ed300-e310-4d51-b54f-bd144d81c5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2be8a0-cdaa-4b57-9c16-08bd9a428dc7",
        "cursor": {
          "ref": "40b6b17e-d87a-41b6-ac41-ebd47ef05dc3",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6a5d9b2d-ab9a-426c-9ab5-14be9a8ba23e"
        },
        "item": {
          "id": "6c2be8a0-cdaa-4b57-9c16-08bd9a428dc7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f816e371-7f43-4dd3-81bd-a3221b472d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7604023-f308-4c1e-b1e4-76f457ba14f3",
        "cursor": {
          "ref": "c70e18f0-c081-4de8-8ff3-0eed10b2d9ac",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d1922be8-dcca-4659-9462-b9ba40cbc290"
        },
        "item": {
          "id": "b7604023-f308-4c1e-b1e4-76f457ba14f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c3f30a15-f5aa-4327-b79e-f0e87b0aeb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6ff8ad-34a1-43ef-ba7f-8df42ddbbe13",
        "cursor": {
          "ref": "f130bb97-cb66-4c8b-96c2-e585c163d1f8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "872b8fb6-7517-43a6-a7dc-16fd4df00dc0"
        },
        "item": {
          "id": "ef6ff8ad-34a1-43ef-ba7f-8df42ddbbe13",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bd25dd4e-b845-4ab6-b30e-afb0f4a2f424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca22fe7-1582-476b-841c-8f3a56f2876e",
        "cursor": {
          "ref": "6413df19-bf37-4e85-a92c-16b5308f0681",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "34004e4d-bf46-45db-8fbb-22755bac28c9"
        },
        "item": {
          "id": "9ca22fe7-1582-476b-841c-8f3a56f2876e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9b35f4fc-3aba-4c7d-aec1-ebb6751760dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae472d0f-18dc-4c9a-bfb5-3737edbc8f37",
        "cursor": {
          "ref": "58c3955e-5cde-463b-bd72-e1dbedd262eb",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e6762c30-4a2b-4d31-8f15-a4c859e427ad"
        },
        "item": {
          "id": "ae472d0f-18dc-4c9a-bfb5-3737edbc8f37",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e50671c9-2503-437a-bbb5-5b39ff8e282f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5673e95-210b-492c-8db1-3d00a16b306c",
        "cursor": {
          "ref": "f12b12fd-afa1-40d6-bec5-c9be00337e4b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "854461b1-7c62-4138-b329-2239f4136d28"
        },
        "item": {
          "id": "c5673e95-210b-492c-8db1-3d00a16b306c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e4c5820a-121b-4fbd-a049-da37c6573b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89db24df-42c2-49ac-87d9-8c0a67ada716",
        "cursor": {
          "ref": "65178057-9e37-40b9-90e6-7feb3d2b1f21",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9c6e137c-09c5-4883-b99c-efa9f2a32d00"
        },
        "item": {
          "id": "89db24df-42c2-49ac-87d9-8c0a67ada716",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0e34f3f9-59d4-4185-a92d-c0cf8d1af227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0622a648-48f7-45a3-bfb9-d6fda45777be",
        "cursor": {
          "ref": "4e323d93-6fd9-485c-8dfb-8f7f888a5e38",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b9f84bf5-b79e-4ea9-ba23-8a6abbef26de"
        },
        "item": {
          "id": "0622a648-48f7-45a3-bfb9-d6fda45777be",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "791f3384-cbb9-4133-81ee-3444d09fc815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aea9ee2-9016-4681-9ae1-41a9ee081c2e",
        "cursor": {
          "ref": "23df2e67-c5ac-430f-b77f-288123a081c3",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e9cb3393-8429-4449-baba-4dddef854e6a"
        },
        "item": {
          "id": "2aea9ee2-9016-4681-9ae1-41a9ee081c2e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "68f46728-3cb7-45a7-b32c-777c00ddc30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2ac5bb-7807-4bd7-b317-b842e81f9ba7",
        "cursor": {
          "ref": "aed60725-7cb3-4207-99d7-92e3c69f3b24",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6bfc963d-b936-4ecf-98e9-362ce9d1008a"
        },
        "item": {
          "id": "8b2ac5bb-7807-4bd7-b317-b842e81f9ba7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "26a06e2f-88df-482e-ac5e-18920a573bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7935841b-6564-4bf0-854e-b6b9b6c7d053",
        "cursor": {
          "ref": "1ee12400-77f8-4971-b382-aeda3f13e275",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "800d9288-8e43-4172-8067-4a66268a53ea"
        },
        "item": {
          "id": "7935841b-6564-4bf0-854e-b6b9b6c7d053",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a1137f2c-44c6-4d88-9c17-8e1d53eeeda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7d51cf-cca8-49fe-818e-da159c95506a",
        "cursor": {
          "ref": "9863251e-0420-43da-b573-831b7e3a9858",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a623c0af-8aea-4bfc-9fd6-22db072e7311"
        },
        "item": {
          "id": "db7d51cf-cca8-49fe-818e-da159c95506a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e1c98179-e25b-40a3-bb8e-6901199eedc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450b7d54-8d47-4629-abe8-c32c0edc0470",
        "cursor": {
          "ref": "8c51a0bc-29f8-4320-b575-b2dfd8965205",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "44e20a8c-61f3-4b22-8f80-056f475939f1"
        },
        "item": {
          "id": "450b7d54-8d47-4629-abe8-c32c0edc0470",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ac2dae20-7c41-4025-914b-47eb2a08775a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc892452-60a2-4fab-914e-494c970c8ded",
        "cursor": {
          "ref": "4bf2bdaa-4600-44d0-a13a-0259b4843da3",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2db2d071-17e6-45f1-be3c-8575fdc3f472"
        },
        "item": {
          "id": "fc892452-60a2-4fab-914e-494c970c8ded",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eed3fe81-4bce-4e4d-9933-5ed916d3f00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a872eae5-140b-43ee-adec-7a38e3549987",
        "cursor": {
          "ref": "9d42bf3a-6446-45b8-bed5-7ee193cdf789",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2025403d-139d-4a55-a18a-1077e0a3fef4"
        },
        "item": {
          "id": "a872eae5-140b-43ee-adec-7a38e3549987",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "08b8527c-89d5-47a8-a486-c31cf06f2137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f990c944-874d-49c8-83b5-c324e8f55d01",
        "cursor": {
          "ref": "ee63ce55-6802-4894-8a7f-18e965b097ee",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bfd36d32-f45a-4b56-9199-c15378ad5997"
        },
        "item": {
          "id": "f990c944-874d-49c8-83b5-c324e8f55d01",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7ad3cdb5-ed14-41b1-8e73-ceffcca816c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3964f704-f24e-435f-83f8-4e335dbcfa4c",
        "cursor": {
          "ref": "2862abf1-10bb-4b7b-9f66-e7eb79171f9f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d7da5831-37ad-4de9-b7de-1ebab5963e17"
        },
        "item": {
          "id": "3964f704-f24e-435f-83f8-4e335dbcfa4c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4481b2b4-25d2-4047-998d-2238de35f0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99b003a-7eb7-4394-b659-37941e8e8777",
        "cursor": {
          "ref": "e332e1c4-b5d4-4236-b01e-bb48a5a5691e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b456eaca-c0a7-400d-b763-4dc37e079985"
        },
        "item": {
          "id": "f99b003a-7eb7-4394-b659-37941e8e8777",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a5db42f8-3b62-4deb-a32e-63b74818ed00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9515dada-cf85-49b5-975b-cc38013621d0",
        "cursor": {
          "ref": "89a1eaf6-a660-4c62-9c1a-5a5e35b572cc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1814d63c-674d-493b-bacc-3c906b45d5ef"
        },
        "item": {
          "id": "9515dada-cf85-49b5-975b-cc38013621d0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4e6a652d-b501-417d-af48-a2ecc796be15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b6b459-deb6-402f-9d6d-bd1f7b2250ff",
        "cursor": {
          "ref": "489de65d-a682-439d-aba1-421048918529",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5ecca65b-b13a-4a84-b6d1-7f16a8a9add9"
        },
        "item": {
          "id": "d2b6b459-deb6-402f-9d6d-bd1f7b2250ff",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "84990dfd-1c93-4874-90e3-59307a37513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693f8977-6a9c-41a6-8471-87f5f7324328",
        "cursor": {
          "ref": "4548b694-1624-4a53-88d9-dc291f977ce9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5ab268c2-d6d8-4f7a-8d5d-6c0a6877982c"
        },
        "item": {
          "id": "693f8977-6a9c-41a6-8471-87f5f7324328",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0656af42-a5b7-4962-88d1-da96e5e18f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaa8dfe-b3b2-42d9-a62a-093480090f18",
        "cursor": {
          "ref": "3020fdfa-8d2a-4f91-a150-0dad5c9700df",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cc4f0589-3b3c-4691-a889-239236633c5e"
        },
        "item": {
          "id": "cdaa8dfe-b3b2-42d9-a62a-093480090f18",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6bd58b1c-f00a-4db6-8458-18e7d3fa4dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a8824c-38c4-4aa8-a475-abdc32813b34",
        "cursor": {
          "ref": "3de53c3a-e67b-418f-aa3a-47be25552f7a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "131183c4-4ef1-42b9-84b4-892893dd1853"
        },
        "item": {
          "id": "42a8824c-38c4-4aa8-a475-abdc32813b34",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4f622131-a22c-4c57-b4f5-b3b636e6ba5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9df38b-a591-47bd-a2ff-e1f3fc8ade7a",
        "cursor": {
          "ref": "4a30d482-294c-4204-a6df-0c5561fba095",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "99cbf8b3-45ab-4b5c-8d09-1d432b0792e9"
        },
        "item": {
          "id": "aa9df38b-a591-47bd-a2ff-e1f3fc8ade7a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "73607820-2ec6-44e0-9219-45e3c144c900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0f1ad2-67bb-470a-8d31-7d4f9c9f09bc",
        "cursor": {
          "ref": "e511bf42-42a6-4fa5-a7cb-5f8202ae0b4f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "431065ac-8d74-4348-9629-9463b807f885"
        },
        "item": {
          "id": "7b0f1ad2-67bb-470a-8d31-7d4f9c9f09bc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8c077abd-3ecb-4337-ba01-7cbae9677167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924248fd-8fd9-4094-b3b7-b447bc8df357",
        "cursor": {
          "ref": "16dc8c46-8315-421c-98a8-dd3fca3e77ed",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "187d59cd-d578-4a5e-bc54-2ef5ff6bcced"
        },
        "item": {
          "id": "924248fd-8fd9-4094-b3b7-b447bc8df357",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5b2ccf9e-7471-44ec-8c8b-e827cd7b27c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908db3ba-eb53-491a-86a6-a537170cdcd0",
        "cursor": {
          "ref": "a1aaa773-3ad3-4e55-9eb9-63ad9b5c9a3e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "18121ed2-d976-4a44-bfb9-3160574ed10d"
        },
        "item": {
          "id": "908db3ba-eb53-491a-86a6-a537170cdcd0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eb2d1e7f-c2a6-4b34-9382-5682dca8f493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1171ab9e-d7e8-4af5-b81e-c6d2329e35b3",
        "cursor": {
          "ref": "bff0f592-47cd-4f40-bfb7-ae88cf89275f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f0ef46d2-20e8-4410-8f2a-69d6b7158a0e"
        },
        "item": {
          "id": "1171ab9e-d7e8-4af5-b81e-c6d2329e35b3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8272b646-f6d4-44c5-8fba-4d0b0f0b7abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba92121-b844-4f17-9815-0da6628144bd",
        "cursor": {
          "ref": "926f458b-fc5a-47c0-9e43-1e48a2f2325e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "40e6b9f6-a8f3-45ac-a641-9284c2a4a020"
        },
        "item": {
          "id": "dba92121-b844-4f17-9815-0da6628144bd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "03ddc170-0bad-46c1-99c2-bb08b2bb68be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c7f587-a840-49e2-9da4-c09ace9142d6",
        "cursor": {
          "ref": "88ccd7ce-5937-4521-9979-23360f6825c8",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "06a7d733-402f-42c9-959e-e8b166a14927"
        },
        "item": {
          "id": "63c7f587-a840-49e2-9da4-c09ace9142d6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6a9ca7c5-5584-4416-b2d0-eb8cc5877778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e71390-42f0-433a-81a2-2e0b302e72c7",
        "cursor": {
          "ref": "e2429df0-93c7-4126-8ec9-cf6296df8d35",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f6be05b9-a288-4d90-8103-50ffee8058a4"
        },
        "item": {
          "id": "61e71390-42f0-433a-81a2-2e0b302e72c7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "850d63e2-240e-4f83-97d0-4defc5a6b693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a2a2ae-9f2f-4636-879c-e071b5c3c8c1",
        "cursor": {
          "ref": "ac0e412f-6c84-4f85-b5af-87018ad3f000",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1726ed81-6f4a-49ed-b6f4-1d2f01378bdb"
        },
        "item": {
          "id": "77a2a2ae-9f2f-4636-879c-e071b5c3c8c1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3d523c81-3b01-4a6c-beab-41676cbd1fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ddd43b-6a35-4c9f-b904-bd0b0ef19013",
        "cursor": {
          "ref": "36ee6762-c76e-477e-8692-dfdf8683637a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3f48029b-4b82-4e4f-8296-d7f557e0a22e"
        },
        "item": {
          "id": "58ddd43b-6a35-4c9f-b904-bd0b0ef19013",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ddec50c2-40a3-466a-9028-7b2bf7dc1f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44739697-f82e-43fd-ac08-3ce03b7d79d8",
        "cursor": {
          "ref": "5ba1f7a2-def7-46c2-8768-23abf271121e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "974bb7c2-e610-42ad-87d3-795c6d809d98"
        },
        "item": {
          "id": "44739697-f82e-43fd-ac08-3ce03b7d79d8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a7d60eb0-a529-42a9-81b2-f9ba28e50efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90458877-b2bf-4a59-8237-5a04011d9000",
        "cursor": {
          "ref": "0aa8c684-36ac-4f13-9d62-5efc3463eb99",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "25910303-b0b4-43c9-bbcf-d26666aebc2f"
        },
        "item": {
          "id": "90458877-b2bf-4a59-8237-5a04011d9000",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c7f04ad1-cdd1-4c4b-bc26-4c02bb393503",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ac8c6a-25f3-49a1-a6af-5d9f2c63fc68",
        "cursor": {
          "ref": "aee9e783-e229-44f3-9426-552157176e01",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "59f734fc-1193-4457-9733-d9d522123eba"
        },
        "item": {
          "id": "b5ac8c6a-25f3-49a1-a6af-5d9f2c63fc68",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8506d3ea-c172-4aed-8690-9d40b0baeced",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850c6e1d-9acf-485a-89f7-368d79cd8ba8",
        "cursor": {
          "ref": "d17464de-4ef9-4d6d-841b-8be6cb61a2cc",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6bed4fca-6c9f-4063-9c19-49ad348bcd89"
        },
        "item": {
          "id": "850c6e1d-9acf-485a-89f7-368d79cd8ba8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7b90bf8a-82c0-45b0-94e4-d5929563590e",
          "status": "Created",
          "code": 201,
          "responseTime": 233,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb599e33-b6c2-46e9-a994-dcea1655016a",
        "cursor": {
          "ref": "3d341287-f650-4728-ba1f-533548e468bd",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d41fb289-9921-438d-92fb-055501960747"
        },
        "item": {
          "id": "cb599e33-b6c2-46e9-a994-dcea1655016a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "64c04c22-c747-4cc2-be83-de93cacff765",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b62dd1-7842-456a-8613-44266944da2d",
        "cursor": {
          "ref": "905ae3c9-33f2-4317-a3fb-883e52744a2e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "14bea5c5-eff8-47ab-80b3-885465e20274"
        },
        "item": {
          "id": "a6b62dd1-7842-456a-8613-44266944da2d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "68672841-5232-4974-a7fa-277df2b84b44",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce351de-7ec9-403b-abbb-319bf8d73911",
        "cursor": {
          "ref": "63cb6b0a-a064-4275-9bc1-c0e64313835a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3f5c9d72-db92-4dc0-a558-5059a8c88368"
        },
        "item": {
          "id": "0ce351de-7ec9-403b-abbb-319bf8d73911",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6f9100dd-c248-40e8-ba9f-44e8812654ab",
          "status": "Created",
          "code": 201,
          "responseTime": 77,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "204a4fe5-302e-4974-bae0-65320ddd0e27",
        "cursor": {
          "ref": "34a647f7-caa3-4fba-8467-72e22dbbf155",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0e3cd9e9-01e6-45a3-832b-750e83d15466"
        },
        "item": {
          "id": "204a4fe5-302e-4974-bae0-65320ddd0e27",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e1b8755f-d953-4c78-8424-5ab7d2e539c7",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b117d96a-9edd-496a-a1ff-9e39d835e192",
        "cursor": {
          "ref": "792d79ef-ac50-4866-8956-f55f595f7c4b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "23907362-0743-4938-a111-f1c778579b0e"
        },
        "item": {
          "id": "b117d96a-9edd-496a-a1ff-9e39d835e192",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2f38b431-69da-49d3-ac13-832961a10f5e",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a08abd6-fcfd-47ba-a8b4-c336e3793ab3",
        "cursor": {
          "ref": "46b49eec-7674-45a9-9dda-28d1046ea868",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a126a20b-3089-4305-9d14-7c78b0ac9ba8"
        },
        "item": {
          "id": "2a08abd6-fcfd-47ba-a8b4-c336e3793ab3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "be7cbf6e-3bf2-4d91-85bb-9810990e7e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82e094a-0de9-4846-a92d-3c8e5960d412",
        "cursor": {
          "ref": "ab65d3e1-1251-4fe8-9b97-b4b61f93e4b9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a1b4f2dc-13d4-4f82-ae31-18ae4dbcc190"
        },
        "item": {
          "id": "d82e094a-0de9-4846-a92d-3c8e5960d412",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5cc05bad-555b-4ef4-926e-1ea2c7acdb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a541b9-3130-4a1c-8f6c-242bb39198ae",
        "cursor": {
          "ref": "f04aa83c-59ef-4b26-8ca5-391dc311da94",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5397da7a-8fa2-4fcf-b15f-84a3fd781929"
        },
        "item": {
          "id": "c2a541b9-3130-4a1c-8f6c-242bb39198ae",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "54a09440-67fd-49c9-9e2f-043dbf3d5640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c2196a-c57f-4117-90e6-b317c4a0e375",
        "cursor": {
          "ref": "b405c319-b7e0-4b93-9280-f1e7580384e0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "33c945f9-e71c-4a0b-8861-f5a2489feeb4"
        },
        "item": {
          "id": "d7c2196a-c57f-4117-90e6-b317c4a0e375",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2bbcaf71-8625-43fe-9381-4010a068868e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b37675-4b07-4655-bf90-d3fa8087e8d4",
        "cursor": {
          "ref": "5b4a95b5-31b4-4960-a59c-87431263b147",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a7935478-4578-46ee-b4c8-f10d368eb9d1"
        },
        "item": {
          "id": "01b37675-4b07-4655-bf90-d3fa8087e8d4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c6fa3a79-ddb4-4cf7-b683-d1e2c69af74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e2cea9-2176-4643-adbf-a7cc091b0986",
        "cursor": {
          "ref": "ea6dc357-94ec-4600-bce7-eb273b8cf20d",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7c179389-80fa-4f46-aad9-b488a03a98aa"
        },
        "item": {
          "id": "a9e2cea9-2176-4643-adbf-a7cc091b0986",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "21665f8e-af7b-4308-99e9-f72a83edc2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a0dcba-ae46-4ec3-a420-9996f639e76a",
        "cursor": {
          "ref": "f6c8c8c2-e6c9-4bb2-959b-d82fd5a3ab57",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "456671da-a375-4eff-be47-d56fd7c1e5e1"
        },
        "item": {
          "id": "62a0dcba-ae46-4ec3-a420-9996f639e76a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "19aa7ed5-2ebc-49ef-9b4c-8463225011b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79d63b4-f5b9-4bf7-b2db-dcddcc37d50b",
        "cursor": {
          "ref": "b2e26b67-9038-4cb4-aeaa-028c4823888e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6c5a1f71-12ae-4e22-bb3a-c05f2a3dac63"
        },
        "item": {
          "id": "d79d63b4-f5b9-4bf7-b2db-dcddcc37d50b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b99825f1-dd06-4079-bc56-2e7d16c840af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b20a1c7-1027-453c-89b0-aa21903b122e",
        "cursor": {
          "ref": "74c821de-2f9b-4823-9440-0a485dc6e8d9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "916a701b-690f-4e83-b921-f9676a283386"
        },
        "item": {
          "id": "0b20a1c7-1027-453c-89b0-aa21903b122e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "122723b9-a900-448a-8c57-ea647e63d718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982c8fb0-4d5a-4278-aef2-46c41b23f053",
        "cursor": {
          "ref": "b2c403f4-a1b9-4359-ac98-0b7e281c7bb8",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cbda7465-9491-4f4e-abfd-e6d716822801"
        },
        "item": {
          "id": "982c8fb0-4d5a-4278-aef2-46c41b23f053",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f72e9c07-fcb8-42f0-93df-4430a455f2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1e45fc-5f49-4059-b7ff-e4fa285e818b",
        "cursor": {
          "ref": "8add6eca-b134-42a2-949a-49e8cbf3bb6d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d55e90e7-3335-4a8a-91d4-6421bdd5a98b"
        },
        "item": {
          "id": "6a1e45fc-5f49-4059-b7ff-e4fa285e818b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed56f103-6613-48e5-bc6e-b41b79cee207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7252bb38-03e1-458a-89e5-a318dcdbf420",
        "cursor": {
          "ref": "e37a992b-6eb1-419e-823f-d32e93aba2c4",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "697ff426-7c0a-4a33-a071-5925c410e286"
        },
        "item": {
          "id": "7252bb38-03e1-458a-89e5-a318dcdbf420",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5631dce1-b745-4644-b26b-fd2c8b055641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba62ac36-d17f-4c13-9caa-e94447bd20be",
        "cursor": {
          "ref": "10a74045-a74c-4934-93ed-848914d349ea",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e45fef65-004f-4623-9f8c-3f50770323d6"
        },
        "item": {
          "id": "ba62ac36-d17f-4c13-9caa-e94447bd20be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0221661c-3338-42cb-bc43-25759f466a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2595b11a-ac17-42e9-8ca5-e713953f1658",
        "cursor": {
          "ref": "57e97c25-9d11-4063-ab0a-a15a3f97722c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7a94f396-392d-492d-b060-f083d48316ed"
        },
        "item": {
          "id": "2595b11a-ac17-42e9-8ca5-e713953f1658",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ac8cd9fe-3d29-40cd-a81b-23a3ee7b16a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c4a892-fd62-4892-a877-fb44f70d4790",
        "cursor": {
          "ref": "4c2670e5-f0b9-4850-a77c-828419551439",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a9d5e3fe-4d31-4305-8b98-8bc3827ce114"
        },
        "item": {
          "id": "98c4a892-fd62-4892-a877-fb44f70d4790",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bc21e45f-c20f-41c0-aba6-2c7777887962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2808a213-d6f2-4daf-ad99-0383686474e7",
        "cursor": {
          "ref": "f1428694-14e7-4070-9092-43da1469b454",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f449be77-ace3-4037-9b80-4c1fbf60b54a"
        },
        "item": {
          "id": "2808a213-d6f2-4daf-ad99-0383686474e7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cbeae574-60d5-4650-abb1-d1ffdd7ef553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abf5f34-e350-4d97-88cf-a53157e57b8b",
        "cursor": {
          "ref": "3fcdf618-bc7c-4aa7-9b05-64a1d62049c6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "038232b9-2089-4752-af16-1a333294ddc3"
        },
        "item": {
          "id": "5abf5f34-e350-4d97-88cf-a53157e57b8b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4245ad01-45d5-4b70-8026-149f0b3948ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12a8375-62ac-4250-84e5-2c94d33a1e60",
        "cursor": {
          "ref": "4806f915-823c-4b6a-ac72-44df836807f2",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a77ecf0d-35f2-4c2a-8121-aaed8c16e1ff"
        },
        "item": {
          "id": "a12a8375-62ac-4250-84e5-2c94d33a1e60",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6df63125-53fe-44d8-aa80-637ad7ab4d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7911c79c-b3bb-41cf-80a0-132881bd14c8",
        "cursor": {
          "ref": "bfd82232-f720-45f3-8c7e-a9a0cc2c9726",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a1792495-b600-436e-ba0e-9fbb3ff542d9"
        },
        "item": {
          "id": "7911c79c-b3bb-41cf-80a0-132881bd14c8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "267f81c3-3da7-4bc4-9327-8c012ab36141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ced455c-e54c-423a-a89a-2818bec50ed6",
        "cursor": {
          "ref": "f5d2d191-965b-4608-ac74-da415816e2df",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "902dc769-4fb1-4085-a1c8-1fa5ae61f20a"
        },
        "item": {
          "id": "5ced455c-e54c-423a-a89a-2818bec50ed6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1528c018-1bfc-4c5e-8864-79e91eae8606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9c534c-b0aa-4537-8ca8-868be7ba37b8",
        "cursor": {
          "ref": "7e784052-b121-4a75-bbb6-0ffeefd88071",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b33ac2e3-f2d0-4459-8e8d-a5d4fc7c3b0a"
        },
        "item": {
          "id": "3a9c534c-b0aa-4537-8ca8-868be7ba37b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "622e8e5a-988f-42ff-a7da-e6b888fc7a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9609c579-5b5a-44c9-ab8c-f38fd78e1e0e",
        "cursor": {
          "ref": "3c5e40a5-cac8-4e3c-8df5-720b5e7072f5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c7fa385b-e5a8-4448-8129-08091542d43c"
        },
        "item": {
          "id": "9609c579-5b5a-44c9-ab8c-f38fd78e1e0e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "75da0465-e18c-4105-84eb-e7dacdd46e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6367ce2d-5daa-4870-b3ad-53e61bb92f61",
        "cursor": {
          "ref": "8860c0e9-69d8-4bf9-a5e2-771ba19001da",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2b10b55d-3679-408c-9093-16b0ba256b0f"
        },
        "item": {
          "id": "6367ce2d-5daa-4870-b3ad-53e61bb92f61",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5dc2373d-6aef-4412-ae2c-a13ff747f223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b457913-f959-4d34-aa04-67638b248994",
        "cursor": {
          "ref": "febaa711-b4a9-41dd-afe7-a21237cc5f99",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d26f0ee6-d06b-459d-ad2d-547554656c5a"
        },
        "item": {
          "id": "0b457913-f959-4d34-aa04-67638b248994",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5725be31-558f-4263-8df4-b62753eb46a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c022cc-07e9-48df-a9dd-229e1b8947a8",
        "cursor": {
          "ref": "02d0103d-14ca-451f-a35b-45e8f0eff0dd",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c183f07d-65b0-4060-acef-440ba75adaa0"
        },
        "item": {
          "id": "a7c022cc-07e9-48df-a9dd-229e1b8947a8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4933cbfc-f9b5-4750-b680-7615b849a455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6de7d9-d8f3-479a-b4a2-f6b4e63d69f6",
        "cursor": {
          "ref": "c72973d6-207e-450a-9758-c5f5f30b94d0",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1160f501-0bb4-45b3-8336-11b628b01e13"
        },
        "item": {
          "id": "1a6de7d9-d8f3-479a-b4a2-f6b4e63d69f6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f125642b-3103-4d8b-9bd2-1815202e5914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf404cb9-c160-47f1-b8f4-38125354eaec",
        "cursor": {
          "ref": "db3032b4-c378-477d-a739-f64627321c15",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "42c92e95-3d67-4c59-bc9d-103555b34871"
        },
        "item": {
          "id": "cf404cb9-c160-47f1-b8f4-38125354eaec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fb815056-bcc6-4909-aff4-6fbfaeef9e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfa7992-c585-450f-b18f-05bf6c28e9a1",
        "cursor": {
          "ref": "df851588-375f-498c-a1a3-ff77c12233a6",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "09317e66-dc3e-475c-910c-6dd705d5f8a4"
        },
        "item": {
          "id": "bbfa7992-c585-450f-b18f-05bf6c28e9a1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1a7b3d8d-59f7-4652-9199-f4516c9decce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51f722a-3191-4fd8-b9e3-4b0ec247f5f3",
        "cursor": {
          "ref": "5686274b-7ffb-46af-b22f-39cd941e9a2c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3e15b0ab-4c4a-4784-8a53-bf2dfda92ed2"
        },
        "item": {
          "id": "a51f722a-3191-4fd8-b9e3-4b0ec247f5f3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9d8b9e9e-8df4-412d-b339-624b4170c42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3feed3-5b4f-4901-954d-94e5f12ccd3a",
        "cursor": {
          "ref": "a5e750d8-3af2-4a6e-acdc-075993762c49",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "70c50eb3-4848-4bee-b6c0-e7b5262e5ca2"
        },
        "item": {
          "id": "9b3feed3-5b4f-4901-954d-94e5f12ccd3a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11997721-b622-462f-8871-b5d5ba8291a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7019a3-62db-4584-8b72-d66b9e2e9691",
        "cursor": {
          "ref": "ac95f02b-e64e-4a6b-a1a9-befb28327402",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3afa9c59-be74-4cb4-b527-19847686a41b"
        },
        "item": {
          "id": "fe7019a3-62db-4584-8b72-d66b9e2e9691",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f260940b-133f-4c14-ac8f-b2ca1517e8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9f77c6-5de8-4e44-90ce-88c6c7098ad6",
        "cursor": {
          "ref": "7db1f55f-0f5e-4a2c-bb9f-29182cf6a92d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "84c556af-ffb2-4472-9d46-2293842e7bf9"
        },
        "item": {
          "id": "9b9f77c6-5de8-4e44-90ce-88c6c7098ad6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d332c21d-c9c4-4cf5-899e-91dbe9d33fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a93076f-7eb4-4cd2-bfc1-33420819a140",
        "cursor": {
          "ref": "dda3c4fb-d076-4bf4-ae6f-e4682c3c226d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ba29e9b7-35f5-4499-8232-bf9c603cd255"
        },
        "item": {
          "id": "4a93076f-7eb4-4cd2-bfc1-33420819a140",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e2605da9-4cad-4767-b2ba-fd6015d7a729",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a3a86a-fef2-4ccb-8289-a88735b01bee",
        "cursor": {
          "ref": "92fa51c4-5009-4f67-8452-356934bc61db",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "47c11c4d-7bbf-4a06-bb26-caae608f1570"
        },
        "item": {
          "id": "08a3a86a-fef2-4ccb-8289-a88735b01bee",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d656db79-032a-4519-8b67-5c5aef166a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35289be6-902d-472e-ac0c-4b43afff8d0b",
        "cursor": {
          "ref": "8ef280d1-12a4-4c4e-b25e-75328fdc4dda",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "307e9006-f3ea-4615-951e-55d5110b53f6"
        },
        "item": {
          "id": "35289be6-902d-472e-ac0c-4b43afff8d0b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8d67ff24-8f51-4644-afa8-d8934285fc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fd226f-3372-4986-b1d6-9bfd50be9fa1",
        "cursor": {
          "ref": "26d54304-0f57-4698-84d8-8ffbbfaaaaad",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bb5f3288-bd88-42c9-9107-7a15b022138f"
        },
        "item": {
          "id": "68fd226f-3372-4986-b1d6-9bfd50be9fa1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b374cb36-8312-4ee7-bd5e-34c2646c06db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ebc51d-df7b-4ba1-863e-4db88cf713c4",
        "cursor": {
          "ref": "cfa663b1-062f-40cf-b3c8-7b5963cbdcf5",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3a65419f-08fe-4f78-87e7-747779cea57e"
        },
        "item": {
          "id": "72ebc51d-df7b-4ba1-863e-4db88cf713c4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ab6d2fd8-58e2-4340-a187-49b364210089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8a563d-2caf-49b1-9fe2-32058cc13c14",
        "cursor": {
          "ref": "be2e1806-3386-4354-978a-a4803284b127",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d38b47b7-8850-450a-b61c-3e3a2ff024d3"
        },
        "item": {
          "id": "8c8a563d-2caf-49b1-9fe2-32058cc13c14",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "181e1cbc-65ce-418f-90d0-ccaae839a3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92729b40-e1c2-4741-b9d1-717dee7a13eb",
        "cursor": {
          "ref": "146ae4cf-63ec-4326-be83-44f538a465df",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3f856222-ebd4-4069-8138-d61cf4387534"
        },
        "item": {
          "id": "92729b40-e1c2-4741-b9d1-717dee7a13eb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4b373aea-a2e5-4a50-96a5-02b198a22b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed08692-0860-4421-b449-088303ecbd81",
        "cursor": {
          "ref": "ae22095d-439d-49f5-b80c-34e9ee478f3b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eef36753-233e-4dbb-a9bd-87df54358b41"
        },
        "item": {
          "id": "0ed08692-0860-4421-b449-088303ecbd81",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8d2c7f19-dc68-45f9-ba7b-f1c7ce5e2aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e62500-5eac-47f6-8f16-39e398708819",
        "cursor": {
          "ref": "e1ae56da-1490-4419-b637-276ab55dee25",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "20a5ddff-1fb2-4a5b-abad-490952922383"
        },
        "item": {
          "id": "e1e62500-5eac-47f6-8f16-39e398708819",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "449d98f1-b56b-4cd6-8677-281ab74fa8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fca4eda-fd11-4913-b559-3132eb9b266a",
        "cursor": {
          "ref": "39d07c74-e6de-440f-a471-9882ef471d49",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "932b05d9-e74f-46da-bb8f-0c4cbc0357ef"
        },
        "item": {
          "id": "0fca4eda-fd11-4913-b559-3132eb9b266a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1837da98-30bf-4269-811b-d7cf47c53a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59781b63-8997-4de8-ad0e-cdb6b107484a",
        "cursor": {
          "ref": "d16d6dd5-abe6-4409-a553-6a6841066a3d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7ec28f7b-2ff3-4b0d-ae90-9066f5e8860f"
        },
        "item": {
          "id": "59781b63-8997-4de8-ad0e-cdb6b107484a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4b8b478d-33e1-4ad5-9dc4-562c10d2036b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051889ff-07fc-40bd-bbc9-27d2f4ab9144",
        "cursor": {
          "ref": "0914c315-d068-41bc-83c2-ac1fc79fdedc",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ed8b52c3-9d13-45f0-8705-8c2138f3dbf6"
        },
        "item": {
          "id": "051889ff-07fc-40bd-bbc9-27d2f4ab9144",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9df914b8-d178-4606-b0fa-b0605e08a5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fa5660-5f4d-4086-b3ff-6aacabebe3e2",
        "cursor": {
          "ref": "3d59c079-a463-4ceb-a3f8-ac033d67ce49",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1ffcc11e-10c9-4e0c-a783-fa30458a22d4"
        },
        "item": {
          "id": "61fa5660-5f4d-4086-b3ff-6aacabebe3e2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cb474418-0dbb-4202-ba01-3d6fd4700f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc4d237-8025-4449-b0b3-a363f5eeb97f",
        "cursor": {
          "ref": "6dd90df9-2bdb-4267-800d-b26acaa2c91d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3f95adba-40a2-4d29-9cda-4a154238695a"
        },
        "item": {
          "id": "5fc4d237-8025-4449-b0b3-a363f5eeb97f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "33f53c16-5e9e-4c85-9b58-2b61711998ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239f5413-9c62-4ed0-b431-4abe1d197e2a",
        "cursor": {
          "ref": "21880116-b973-4dce-a794-19da659e8878",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "40f13d51-9b0a-4966-9b69-2bf72b1a2754"
        },
        "item": {
          "id": "239f5413-9c62-4ed0-b431-4abe1d197e2a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fbf0ec80-8a9f-4f4a-9435-09663cfc291d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f2cfb0-b328-4cd0-9c8b-06c37675e850",
        "cursor": {
          "ref": "74ab1158-b513-42d4-a5fd-018292e79209",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d06b9c3f-166a-4423-a539-82b84b9d7bb9"
        },
        "item": {
          "id": "84f2cfb0-b328-4cd0-9c8b-06c37675e850",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "562c5119-c075-46ba-ba5c-f00fe91cdf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395cafad-b6c6-488a-b995-f16c1fa868a9",
        "cursor": {
          "ref": "5df476c1-6e5d-4195-ac1c-5d7efea5c934",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c35fbf17-cf9a-48b6-9481-84518cfff3d9"
        },
        "item": {
          "id": "395cafad-b6c6-488a-b995-f16c1fa868a9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a368390f-6149-48cc-8bad-1021b569a204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b598a0-77ff-415a-b783-56645e8ccc28",
        "cursor": {
          "ref": "04fd700b-8ddc-4589-9896-ddcc06ad431a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1a3903ac-7fa3-46c5-981a-1f8f5e03e3b9"
        },
        "item": {
          "id": "32b598a0-77ff-415a-b783-56645e8ccc28",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "21664119-859d-4f1b-827b-29cf4352e995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7e7287-e238-4ccb-af8b-55406e7c08b0",
        "cursor": {
          "ref": "b5aea7a4-9e49-45a2-b45d-701d88d1490a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "455abc98-ab4e-4027-bd7e-3ee26f68994b"
        },
        "item": {
          "id": "ce7e7287-e238-4ccb-af8b-55406e7c08b0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a8d49245-1ffd-49eb-a757-4bf0a6aa5273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831917ef-649e-44ef-bde6-fe21f9ec57d5",
        "cursor": {
          "ref": "8ce03c36-1c54-4c79-b62c-76cf8ade1e4f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "71fd006e-c2b7-47c1-b7f8-de177c383ed9"
        },
        "item": {
          "id": "831917ef-649e-44ef-bde6-fe21f9ec57d5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cc821674-0a9c-4a83-b109-e96cd06a0483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a5b691-5652-4e1f-8a2a-41e0a1e85e87",
        "cursor": {
          "ref": "a201c4a7-1eb8-45ef-99b1-358bbcd145a4",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7e4653a1-f8de-4990-b049-04e71ce75801"
        },
        "item": {
          "id": "90a5b691-5652-4e1f-8a2a-41e0a1e85e87",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0d827760-4b77-4cfc-98e9-0ae3eb33ea5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e968ea-a474-4461-ab31-dd41ce4bbe20",
        "cursor": {
          "ref": "b1170b3a-3360-4930-a692-5980ee9fae2d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "141d126e-868b-43c2-aa2a-aac598944767"
        },
        "item": {
          "id": "a7e968ea-a474-4461-ab31-dd41ce4bbe20",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bae29e2a-fcfa-40b5-95f2-8d3a60df0c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3209ca-1bff-4274-947e-3bcdb925e13d",
        "cursor": {
          "ref": "90bb3fd2-33ef-401b-afe6-3913fa189ec3",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bcd04e6e-f7e5-4b9a-b583-cdb69219b824"
        },
        "item": {
          "id": "cb3209ca-1bff-4274-947e-3bcdb925e13d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "798e3726-6bb9-4cf0-a240-3c895b9516e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060c5c03-efbe-4e1f-80c9-fb7512d91e3e",
        "cursor": {
          "ref": "6ca18609-c608-4e7e-a677-a0e3220083d2",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "acc4fc86-ed28-4ccd-8767-02ad45b04ccc"
        },
        "item": {
          "id": "060c5c03-efbe-4e1f-80c9-fb7512d91e3e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9c8e4fc7-cd08-4e9d-98bc-d7f16459b064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109c5480-2a18-4362-9d98-656f8aa7d868",
        "cursor": {
          "ref": "8fc2e470-89e3-49fb-94a9-0a5b3ccff957",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "04b793d8-e904-4f27-8cd3-4109ed8d7609"
        },
        "item": {
          "id": "109c5480-2a18-4362-9d98-656f8aa7d868",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8da54baa-4318-4b3d-a521-f3408696566e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a577a9a-3606-44b5-9cc0-6f89a50612be",
        "cursor": {
          "ref": "ff7f0618-1bd8-4d1b-b57f-c89c1a81bcfc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "25979926-4214-40a4-b878-d0a08dd98e27"
        },
        "item": {
          "id": "9a577a9a-3606-44b5-9cc0-6f89a50612be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3445e687-e86b-4491-bfca-51d0d9c9a2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ee6831-2a2c-4fcb-a26c-d1f709a56ac9",
        "cursor": {
          "ref": "42238f7f-c204-4af1-9599-605dac1a8802",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ba47c512-a90e-4e13-aa5a-1791f1958ccf"
        },
        "item": {
          "id": "c1ee6831-2a2c-4fcb-a26c-d1f709a56ac9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "491fe4a7-1716-4190-98cc-71b182b76707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c929cd2a-d0bf-4c05-82e1-6b28e2968a2e",
        "cursor": {
          "ref": "89e66109-9706-4f9a-b299-404f24687314",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d2cc58e2-ee1e-40ec-8c95-27e9f90dc27a"
        },
        "item": {
          "id": "c929cd2a-d0bf-4c05-82e1-6b28e2968a2e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a5950dd9-8736-4f9f-a728-8f15db6f1394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308e48e5-03e7-460c-89be-b27295e9bb2f",
        "cursor": {
          "ref": "8f852888-460b-42b5-b745-b26df434d09a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1d8e55a1-d477-4c2f-8026-d596af0128db"
        },
        "item": {
          "id": "308e48e5-03e7-460c-89be-b27295e9bb2f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "be7b28b7-0bd9-4478-a0ae-29cd95264f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b23b4f-285f-45f9-8cf0-1c37b14c12fb",
        "cursor": {
          "ref": "45ce4f4e-2e9b-495f-a063-05772560fc28",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3b611746-5060-4eb8-a928-253af8977888"
        },
        "item": {
          "id": "f6b23b4f-285f-45f9-8cf0-1c37b14c12fb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8ca96118-b8a0-4698-92b6-33f3acf62eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a988dad4-44c9-4444-b2cd-261d252e1a14",
        "cursor": {
          "ref": "85ed604c-dcd2-4e9d-b2e9-fce986ed59bf",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1254a692-b797-4417-9e61-8557b6b4aacb"
        },
        "item": {
          "id": "a988dad4-44c9-4444-b2cd-261d252e1a14",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c22c1180-0b97-4690-965d-2bab1cfb6c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4ec2c8-e210-4e64-8d39-f0a2e08194c1",
        "cursor": {
          "ref": "21875145-b8a2-4b71-9bc0-88679d46ed4b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "51722128-1da0-48d2-b4cf-9b14de0cf591"
        },
        "item": {
          "id": "4f4ec2c8-e210-4e64-8d39-f0a2e08194c1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f38dab77-2a3b-45db-a1d7-b5b87ed21ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd81221-0bfe-4398-b7f9-eda51c628c24",
        "cursor": {
          "ref": "768c9ec0-b030-4c2e-9578-245508113572",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "493869d1-e04b-430e-99a1-3ae2401e3f54"
        },
        "item": {
          "id": "4bd81221-0bfe-4398-b7f9-eda51c628c24",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f48cc997-8a0a-43e0-bf89-d2d73b7ec184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9aa3250-d311-483e-8f04-890b919cc1ca",
        "cursor": {
          "ref": "adb9f5f7-61c9-4a98-8dd0-85884eaec0ef",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "308c08bb-b7d7-4e04-af10-5a91d7aacbd8"
        },
        "item": {
          "id": "f9aa3250-d311-483e-8f04-890b919cc1ca",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cb119d78-e656-4938-a2a0-d052b3a05450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acafc52d-3b0f-4837-b60a-4efcf12a1b5d",
        "cursor": {
          "ref": "4c2f2d46-120d-4f62-bad1-4a83d85a1237",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3f17057d-9c48-46a0-a025-21a2fa1482eb"
        },
        "item": {
          "id": "acafc52d-3b0f-4837-b60a-4efcf12a1b5d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d742e90f-90f2-4d89-8ff0-81af8fd297c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7f82f4-9304-44aa-8e79-799db7759a8a",
        "cursor": {
          "ref": "5227a0f9-eb86-42d2-b6e8-6334e8c1405d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bda77f20-89e2-4da5-bd8c-48af644f0f79"
        },
        "item": {
          "id": "0a7f82f4-9304-44aa-8e79-799db7759a8a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "45682e92-5e5c-4550-8caa-49bd5c501af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d94dcf-64ce-4b47-b443-600b326a514f",
        "cursor": {
          "ref": "b4db8a84-1e9f-4968-b6bd-dca0d49522ff",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "23270662-7613-45c2-aed8-844df3415421"
        },
        "item": {
          "id": "d8d94dcf-64ce-4b47-b443-600b326a514f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "15d07821-6270-4507-9740-0eb3bc0c0546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1733e171-41cf-4107-8882-b5e613a68fc8",
        "cursor": {
          "ref": "6c2db0cf-1729-4d9f-891c-5066eaa3f581",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "08c87f5a-ec99-474c-aaef-551a8a92668b"
        },
        "item": {
          "id": "1733e171-41cf-4107-8882-b5e613a68fc8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2129eb89-6510-4368-8dea-74c31d9a3a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e5334d-3015-449b-b05f-9977c809e96d",
        "cursor": {
          "ref": "733e1f73-fc98-4feb-957a-3bddf3571ebb",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c31a42b4-c443-4b47-80a9-246a1a592200"
        },
        "item": {
          "id": "91e5334d-3015-449b-b05f-9977c809e96d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "53875f36-8429-44ba-bef3-ec90c1f7d68e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae2f395-20ed-4d20-9501-e5619bf6160e",
        "cursor": {
          "ref": "e99d8541-a57e-4961-9adf-dbb7be2caf0b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "763011c0-e7db-4b62-986c-4b9435847788"
        },
        "item": {
          "id": "8ae2f395-20ed-4d20-9501-e5619bf6160e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c1b29f67-ea4f-49ce-89c1-21e4b1194ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6262346-cd5c-4416-9184-67b7eb5a79e2",
        "cursor": {
          "ref": "37d8a36d-5103-486b-ba16-fc0c714a47b6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f87340bb-3030-422d-a440-344e76a7fbd7"
        },
        "item": {
          "id": "a6262346-cd5c-4416-9184-67b7eb5a79e2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d3110623-bbb3-4876-a97a-b6839e182707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6450d776-bdbb-4077-91b0-2e25edf43338",
        "cursor": {
          "ref": "cfee2f2a-5c8b-4428-a7cb-d5a04e58e4ca",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9ff99b89-9d04-4f35-9442-6a1e478614f5"
        },
        "item": {
          "id": "6450d776-bdbb-4077-91b0-2e25edf43338",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fb62a860-b731-4832-8f2f-8fe5c79d8cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4029e71b-e61c-49bd-8042-85f8466451b3",
        "cursor": {
          "ref": "c9fbd3d5-1a5b-4f1e-93d5-d05c94a65be8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8a697930-8796-44cc-9746-2ac1c7065942"
        },
        "item": {
          "id": "4029e71b-e61c-49bd-8042-85f8466451b3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2e87fe6a-9635-4d97-951e-05824e4cd7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96db9b04-4d6e-44ac-8374-228e41a9a7b6",
        "cursor": {
          "ref": "edc85578-2fc2-47b9-a67a-5c0689db2cb9",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2b807b17-df0c-4541-b7b6-d044c9e15f2b"
        },
        "item": {
          "id": "96db9b04-4d6e-44ac-8374-228e41a9a7b6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0090279a-b67b-4486-8385-710f5818c1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe7ec3e-d04f-4ba9-8e9c-e622c09bb303",
        "cursor": {
          "ref": "8f6f4fc7-7658-405a-ae7d-2e05fdbbb896",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cfc72aef-7af9-48a5-957e-36406b6c866b"
        },
        "item": {
          "id": "4fe7ec3e-d04f-4ba9-8e9c-e622c09bb303",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "db60efbc-83fb-44fa-b546-afbca133a290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f67ea4-af19-4f42-b8bc-95cb0b4567f5",
        "cursor": {
          "ref": "9096d0c7-707d-4041-885e-29d215dacbe8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "85ecdce3-abfa-47ed-ac1a-bfa0f7e1d20a"
        },
        "item": {
          "id": "26f67ea4-af19-4f42-b8bc-95cb0b4567f5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b0e8e5c9-09c5-48ec-b4db-e454c6d55813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72331a26-9e5d-4dda-9c22-88bd478d2981",
        "cursor": {
          "ref": "25ac18c4-0434-4521-9e89-4710125655ce",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fda67d49-c802-4668-a59a-74b38d3436cd"
        },
        "item": {
          "id": "72331a26-9e5d-4dda-9c22-88bd478d2981",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "072c1a68-b6cf-4694-b3b0-fe1911ad58a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b92259-a1fc-47a4-b775-90edc470a0ac",
        "cursor": {
          "ref": "3c972101-2f21-4543-9113-e79f665fe4e0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "979ecf74-7629-4f34-947f-0355fa5044aa"
        },
        "item": {
          "id": "d5b92259-a1fc-47a4-b775-90edc470a0ac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e1620175-e85f-4b00-a066-7c9446264cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529cab0a-e580-4ddd-a0f6-d600d4e1af71",
        "cursor": {
          "ref": "6162a30e-7534-4696-a58c-9f20734de62f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4478b18c-8fef-4e0a-b1d4-99b5d74e143e"
        },
        "item": {
          "id": "529cab0a-e580-4ddd-a0f6-d600d4e1af71",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a270a175-e62d-47bf-80a4-65b4fa24f962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0afe63e-1389-4df2-877e-39cb432ec701",
        "cursor": {
          "ref": "80c9af49-1579-4844-87b1-b5ef5af80c63",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d4febb74-cd40-4f60-8a5b-0d7b65681b92"
        },
        "item": {
          "id": "e0afe63e-1389-4df2-877e-39cb432ec701",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fc92bc6c-0541-4803-8392-6cc7672982c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f5091f-3efc-45ab-b985-acb4d4cadbd1",
        "cursor": {
          "ref": "dbc36e54-5a5a-4270-aa93-fce05de0abfc",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "964b31dd-5976-4a51-be42-efbc28c98daa"
        },
        "item": {
          "id": "b1f5091f-3efc-45ab-b985-acb4d4cadbd1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a3204ebf-af56-4730-8546-e6d64016bcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c1216e-2727-42fe-a97d-85a043843621",
        "cursor": {
          "ref": "7d5ba073-970a-46ba-a06b-405461277846",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a8a6beeb-957b-412f-923c-b3443532d356"
        },
        "item": {
          "id": "b2c1216e-2727-42fe-a97d-85a043843621",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "82c070d8-cd35-4885-9fb5-da6130ff1ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611dc29e-f77d-4801-a073-d270d2e11fe5",
        "cursor": {
          "ref": "253c1523-93bb-49db-8c17-0ff4fdd9b724",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d0346a8a-bc12-4547-8f45-6214c1eb5f60"
        },
        "item": {
          "id": "611dc29e-f77d-4801-a073-d270d2e11fe5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d6f37950-cc7f-4cea-9018-6241a7e21319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4ac1c9-685b-4ac1-9f6b-4699a35673b4",
        "cursor": {
          "ref": "83b123b1-bf84-495a-a5d6-fd30c07082ff",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4f06b9bc-98b2-4cd6-bde3-001c1c968da1"
        },
        "item": {
          "id": "ef4ac1c9-685b-4ac1-9f6b-4699a35673b4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ecf027ac-180b-4700-8444-32653a4f6bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e371adfc-c2c1-4e6d-86c0-0cade360e0ec",
        "cursor": {
          "ref": "71cced66-6fae-4050-aca2-c956361f87e9",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "33c9bdfd-e631-455f-89b3-635eda30dede"
        },
        "item": {
          "id": "e371adfc-c2c1-4e6d-86c0-0cade360e0ec",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e203fea7-3a96-4571-8d76-d29ab065a3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7db8a1-2acb-42aa-a0e2-fda352f41e7d",
        "cursor": {
          "ref": "47734e28-8350-493d-806e-d3d2acc4588d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3fd5d0bf-bf18-43df-a2e7-25b17e90f4b4"
        },
        "item": {
          "id": "5a7db8a1-2acb-42aa-a0e2-fda352f41e7d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d82cca09-c4ba-4dce-b459-db33c5525b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c34d5ef-2a79-4458-a170-49f1223ca28c",
        "cursor": {
          "ref": "641585d8-e9b6-4240-be34-e45789ff3886",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "74615af6-efe9-4c35-bae2-8a818aad5ef6"
        },
        "item": {
          "id": "0c34d5ef-2a79-4458-a170-49f1223ca28c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cece051a-9b56-45ae-92f0-0ba76997044b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0cc395-b6ae-4535-9e12-113aac36f7e9",
        "cursor": {
          "ref": "02070f0a-6f3c-4b93-91f7-249bfa3fc480",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "febfe6fc-e4f5-4126-bd24-627ec3a1728f"
        },
        "item": {
          "id": "cd0cc395-b6ae-4535-9e12-113aac36f7e9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "25eee0fa-83f1-4f01-99c3-e5391d42a7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5769ad-95b6-4ae2-978f-6b3958926651",
        "cursor": {
          "ref": "13f4c08b-34bc-4321-b8de-58cef707c2c8",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "067cc651-fa37-42e6-abc5-45669046a70f"
        },
        "item": {
          "id": "7c5769ad-95b6-4ae2-978f-6b3958926651",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f9162423-8317-4807-8cc7-26c58efb2e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6676deb2-6e74-45cc-b87f-9b6fd26b132c",
        "cursor": {
          "ref": "28608901-c314-4553-881c-704022a6dacc",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "151e761f-2069-4411-bf85-914799d81406"
        },
        "item": {
          "id": "6676deb2-6e74-45cc-b87f-9b6fd26b132c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8a4a37c9-dbc1-4d1f-9c02-22fd3f791c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048be64d-698e-42b4-ab26-8941fe1575f2",
        "cursor": {
          "ref": "0ad8bd6e-0d93-4c23-b5c0-86131829d054",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "87315d40-a80b-4dac-8177-82b3a96b2746"
        },
        "item": {
          "id": "048be64d-698e-42b4-ab26-8941fe1575f2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9fdbfffd-9b76-4b34-be7c-6e4318bb2a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14c6ac0-c2e1-4a36-a27e-5ce1d32cfef3",
        "cursor": {
          "ref": "f56e8596-ca2b-4cc4-96a7-7ac4078a3234",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b7e2aa2a-211e-4a32-9f7f-6852f3373e6c"
        },
        "item": {
          "id": "f14c6ac0-c2e1-4a36-a27e-5ce1d32cfef3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4a59ca86-b9c3-4583-8d4d-3dbc50e4d25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39ee691-a525-4273-9c1a-9ccca3af644a",
        "cursor": {
          "ref": "77fc6970-1409-4b9d-932f-0553729ab261",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7c7e1e24-b36a-4fb9-a9a6-ac02ae773cfe"
        },
        "item": {
          "id": "f39ee691-a525-4273-9c1a-9ccca3af644a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3f446883-01ef-47e5-9b07-fbf230db57c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f95608-ff88-48ae-b805-c9b79c5db628",
        "cursor": {
          "ref": "c9dfd0db-21df-4d08-bf2c-a2af746f9bc6",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0726adc2-6d63-4f90-8a14-a25aa36ec8d4"
        },
        "item": {
          "id": "15f95608-ff88-48ae-b805-c9b79c5db628",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1fda2b2b-0bc0-4aed-b532-77629aa502e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fe8cc7-0974-432a-9ecf-e5599c9b43e9",
        "cursor": {
          "ref": "7e34d4cc-17ba-4e9c-bf5f-af86446ff107",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "90fafbee-5cf5-4913-9639-4c93dc9767b2"
        },
        "item": {
          "id": "a0fe8cc7-0974-432a-9ecf-e5599c9b43e9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "90479e15-73b6-45ab-b979-8f80e0657617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410dee8f-00c6-4a29-ac91-d0ea746bb00a",
        "cursor": {
          "ref": "a4c68961-e055-4af5-9936-cfbc5fbfc0f8",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a1f55216-c0a2-4ced-98c7-2473dd542b9a"
        },
        "item": {
          "id": "410dee8f-00c6-4a29-ac91-d0ea746bb00a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "04af3e05-4c54-4e51-bede-ee4e243ddc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df34de55-85f0-4e12-ba38-9776b3fa2c30",
        "cursor": {
          "ref": "2dbcd6b5-4a92-4488-9680-62bb9144651d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "54a71813-1c82-4620-ad41-dcfe81257da1"
        },
        "item": {
          "id": "df34de55-85f0-4e12-ba38-9776b3fa2c30",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a3f3fbc2-ba00-4d42-a3af-9b98fe01bd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46253455-1881-462d-bee6-d8d682eff1b3",
        "cursor": {
          "ref": "5604711e-8b1d-4d91-bffd-7d84aa862c29",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "abbadfa3-42f0-49e2-9436-09ad80a4163b"
        },
        "item": {
          "id": "46253455-1881-462d-bee6-d8d682eff1b3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "03030631-beb1-4035-8743-85c30f9b5167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b0418a-0fd8-4ae7-b694-9386139075b2",
        "cursor": {
          "ref": "36f01fed-40b6-495a-9c0d-839e45f2c5a1",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b4f756e9-c0cc-4c54-8b36-f1308d725ae3"
        },
        "item": {
          "id": "30b0418a-0fd8-4ae7-b694-9386139075b2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4885b878-5489-4a25-a2bf-f63fcc1cd3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8873c842-bb46-4759-864e-1dc5546f7a1e",
        "cursor": {
          "ref": "ce4bae44-cf6d-4f50-b758-92c61a49778c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "87d54263-e240-4654-b0df-6190dead6a78"
        },
        "item": {
          "id": "8873c842-bb46-4759-864e-1dc5546f7a1e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "da27d208-93f1-4fc3-b21b-6f783166edb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba4dbf1-b0ae-4175-ad1b-125915d44368",
        "cursor": {
          "ref": "93031072-390d-4a29-8f5f-d59a1bfb75df",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6ee47f55-688b-4252-a723-668372b92172"
        },
        "item": {
          "id": "9ba4dbf1-b0ae-4175-ad1b-125915d44368",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c737bb4c-a897-472c-959c-21883a538d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f125b1d1-1d9b-4ad6-ae00-2f00ded1f793",
        "cursor": {
          "ref": "cc6562b6-97de-4cf4-bfd3-56d21d6b41b8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d67b3d53-47e9-4838-ab7c-ffd30e4981de"
        },
        "item": {
          "id": "f125b1d1-1d9b-4ad6-ae00-2f00ded1f793",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "35061170-0a70-4b0a-80b6-8330c3566d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a2ef45-b888-4e04-9c4f-eb76b088aba8",
        "cursor": {
          "ref": "a2fd6c94-2d99-4d35-b09d-d967640df532",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "62a4f409-879a-474e-a961-91dcebdf3319"
        },
        "item": {
          "id": "46a2ef45-b888-4e04-9c4f-eb76b088aba8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c1762abb-9afe-4dde-a20b-0fe47cfc25be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58880e5f-26d9-44ff-a5b7-fbadc3824f33",
        "cursor": {
          "ref": "cba7631b-51e0-45da-89e7-36aecc3e076d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b8fceb3a-6254-4590-b553-d8bce27762a6"
        },
        "item": {
          "id": "58880e5f-26d9-44ff-a5b7-fbadc3824f33",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4ca2ec3f-8501-4f60-980b-0437b786d845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53420b8d-3013-4066-a53d-222371c824e0",
        "cursor": {
          "ref": "8e5ff943-b88b-479e-9fea-6672a044097b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "157dcb3a-255a-4107-9139-bd689b014bce"
        },
        "item": {
          "id": "53420b8d-3013-4066-a53d-222371c824e0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a5d75ad8-3a58-467b-a29a-78af990207bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7422c07b-0831-4891-be1f-bfeabb140af1",
        "cursor": {
          "ref": "92888272-c0c7-4663-9484-babbf018fdcd",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "62bf5ddb-e263-4064-8b1c-2cc432c8bf26"
        },
        "item": {
          "id": "7422c07b-0831-4891-be1f-bfeabb140af1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "90244834-587f-47f2-a8a9-392bb1068bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1fe9c7-50de-4f6f-8dea-11179c08b198",
        "cursor": {
          "ref": "7ff97dc3-5e20-40a6-9a11-fc200f48acf6",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c877db05-a9c1-4e25-83a6-efb54149c47b"
        },
        "item": {
          "id": "6d1fe9c7-50de-4f6f-8dea-11179c08b198",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8cf1b258-935d-4e5c-acb8-80da3789b564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb6e2bc-62ae-482c-9d38-51cdf751fbcd",
        "cursor": {
          "ref": "e3dcfa19-d88b-4bac-b4ba-3f417aa4430a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b41d0534-88f4-451e-a93e-e96c065a8bb6"
        },
        "item": {
          "id": "5eb6e2bc-62ae-482c-9d38-51cdf751fbcd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d1696f5a-c528-48d0-9a4b-6a1fbba2b40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08f2d52-71bb-465c-9631-b9d638efa78a",
        "cursor": {
          "ref": "95ac1eac-343e-4b9f-8b6d-cb55fb22347a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "51020103-15ac-4531-baf4-5aa8d669fe03"
        },
        "item": {
          "id": "e08f2d52-71bb-465c-9631-b9d638efa78a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f774c706-79e9-4532-8638-78ae8bae7419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba56d7f-31b9-4a1a-ad1c-01eec1819f08",
        "cursor": {
          "ref": "7fe8343d-a146-4a80-8d8a-548f64522e81",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f5a49569-cec4-4ebc-8b08-b779b95f7b7c"
        },
        "item": {
          "id": "9ba56d7f-31b9-4a1a-ad1c-01eec1819f08",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "05d742db-7054-4f85-885f-677884622828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f777cd-70db-4233-9dfb-8868c45dbe1b",
        "cursor": {
          "ref": "007f756b-a4ff-401e-be33-3f72496ec3ef",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ab739fde-f3f8-4334-b966-c4bef779cbcb"
        },
        "item": {
          "id": "09f777cd-70db-4233-9dfb-8868c45dbe1b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7aecaf4b-a0b1-4a4a-9e41-cacc63085544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981a2359-a35a-493d-9bb0-96a8be50ea9a",
        "cursor": {
          "ref": "031e8afd-0b13-4843-9436-9fd9ae53c2c0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c8b5f096-4a3c-4922-878a-e1e12c682a6c"
        },
        "item": {
          "id": "981a2359-a35a-493d-9bb0-96a8be50ea9a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "413e399a-9a41-451d-b721-dafc5ac754dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839d1205-229e-476f-a8a2-cdaa4ee58f24",
        "cursor": {
          "ref": "9db16efc-bc63-4af0-afd4-fb8e4a55c100",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "73a0e9ee-b75d-49e2-82d2-cbd78425e225"
        },
        "item": {
          "id": "839d1205-229e-476f-a8a2-cdaa4ee58f24",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ff1ead5b-e03f-489b-84e4-d68fd3e6aa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403d60d2-5861-4607-909d-936f23a4fc30",
        "cursor": {
          "ref": "55d062e1-fb90-4a38-8aca-ca720ef0aa50",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "91ef2ba9-bd4c-433b-95d4-a3461ec52859"
        },
        "item": {
          "id": "403d60d2-5861-4607-909d-936f23a4fc30",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4e25e7bd-150a-4dc1-bedd-ad7d37559edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed985c35-7fef-4d8b-8f37-5937bc023cc7",
        "cursor": {
          "ref": "081750c5-b1a8-4199-a8e2-03c27b76915d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a1075805-1fdc-4628-82b4-1dc7c5753511"
        },
        "item": {
          "id": "ed985c35-7fef-4d8b-8f37-5937bc023cc7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6f204417-9ca5-45dc-bb7d-1ffe6529078b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa434bd-b2b9-4f8d-88cb-d9546670e1d4",
        "cursor": {
          "ref": "715314d4-55bd-430b-adc8-d601cb6ec4b0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2404b7e5-8deb-43c5-9d97-d6700e3ae9b4"
        },
        "item": {
          "id": "dfa434bd-b2b9-4f8d-88cb-d9546670e1d4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "603c3b2a-532f-4b39-b702-15bdb2a57a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a729eb-2b85-4920-902a-d5c1c7025991",
        "cursor": {
          "ref": "9e9ab44f-0dae-4036-bec9-0562116f9e65",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "11331caa-cc43-4e64-ac75-ade5c253ce18"
        },
        "item": {
          "id": "66a729eb-2b85-4920-902a-d5c1c7025991",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "de212877-19d0-4e0f-8c84-c0dcd987b558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4035ce55-adf8-4eba-8dd8-d29a993f8bf5",
        "cursor": {
          "ref": "a1529633-8c6e-4794-a884-109aaa9e159e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1a25daaa-fc38-4e4e-8fd9-63b4c6b3570d"
        },
        "item": {
          "id": "4035ce55-adf8-4eba-8dd8-d29a993f8bf5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bd414572-4a20-47ff-953a-20cbf1dd93ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aaf8d6b-1997-457c-81bb-fd251b9cb8bc",
        "cursor": {
          "ref": "6d7e4666-41f0-4fe0-895f-01ee90ddb96b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8102ecfd-5c35-43c7-86a1-36632ed0acd0"
        },
        "item": {
          "id": "0aaf8d6b-1997-457c-81bb-fd251b9cb8bc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5d3ff282-e5c7-411a-ab71-c734e8ac2c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42386a7-56f4-4910-869b-b5fe7ed4602f",
        "cursor": {
          "ref": "72b3613d-2716-4b06-a96b-601d364ef372",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c6545515-b7a4-484e-b279-0a2cedab605a"
        },
        "item": {
          "id": "b42386a7-56f4-4910-869b-b5fe7ed4602f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1687cc6e-c08e-4ea1-ad09-d1f0ff95d164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9626e07a-bba2-4e52-9474-12b0ff8c911e",
        "cursor": {
          "ref": "eeeb55e4-b4b7-4270-bcf5-1ac5f448ca46",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6d8f6b68-841e-4f14-99d7-a173c448cf1f"
        },
        "item": {
          "id": "9626e07a-bba2-4e52-9474-12b0ff8c911e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0f588973-9c65-4ada-a0d6-0918373a729c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433a186d-3ab8-4473-9848-1062d62b15b5",
        "cursor": {
          "ref": "2ea9b7a3-b8cc-431b-b930-689da6e93aa3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "91f9f9be-1409-4042-a590-65378cfc683c"
        },
        "item": {
          "id": "433a186d-3ab8-4473-9848-1062d62b15b5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d1aaf1be-51cc-40e8-b574-1aa3ba6e331c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cc3fc2-4894-4637-9047-177bc8cd9ddb",
        "cursor": {
          "ref": "263dc453-6944-4184-8f9d-86cff9c4081f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fd96653b-391b-41fd-bda5-d7a38838fd35"
        },
        "item": {
          "id": "e3cc3fc2-4894-4637-9047-177bc8cd9ddb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "68c56b8c-7b04-4814-8d03-801c5614e716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51f6f3c-eea2-412c-9cc4-3dbfaa7f865b",
        "cursor": {
          "ref": "5682ca7d-144b-4224-bf40-48e2f0701af7",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d1524954-c8e6-4a2c-80a8-8c4f15e964b9"
        },
        "item": {
          "id": "e51f6f3c-eea2-412c-9cc4-3dbfaa7f865b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "16326211-b594-4db4-b07e-f36790b3dc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c156e69d-e144-4ccc-91b0-b65ec93bbd04",
        "cursor": {
          "ref": "764234b8-4497-4c83-8df3-820fa5463d75",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b5889f8b-2a9d-430e-aca8-99245ea36e5d"
        },
        "item": {
          "id": "c156e69d-e144-4ccc-91b0-b65ec93bbd04",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9c3fee0a-18db-4a3e-9ffa-b3b8b35bc23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a6c301-9cad-423c-9e9b-7ad7ee93b721",
        "cursor": {
          "ref": "76c2eecd-c27f-4a3b-bf45-3ce60b00e14a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e58e3147-ceea-4bde-84c6-4b86b1707afd"
        },
        "item": {
          "id": "f3a6c301-9cad-423c-9e9b-7ad7ee93b721",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0bee7e2c-f0d0-4cab-975b-f1d0b35bcb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e803d939-5af1-4b3c-a37f-08e73122f45a",
        "cursor": {
          "ref": "442d3c63-c671-444a-88ea-582352d1f8e9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "df85c901-c8e8-407c-969c-4ab527c22019"
        },
        "item": {
          "id": "e803d939-5af1-4b3c-a37f-08e73122f45a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "420ced17-0bec-4db6-b98e-6833913baed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6062e6d9-a141-4f32-a4cc-a6f44e6ce645",
        "cursor": {
          "ref": "6d439e6c-f156-4893-900e-63b4403153a6",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b36c50ce-41c6-4958-9e65-abc8face31cd"
        },
        "item": {
          "id": "6062e6d9-a141-4f32-a4cc-a6f44e6ce645",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aabfc011-9886-4ae7-8a2b-4e6366684abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272e35d3-3e46-4e1c-aa0b-163df744ded8",
        "cursor": {
          "ref": "f96a3c43-cb23-4570-9fc3-1cd88090a0d6",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "901cbbd4-c0c5-4d99-aa52-3a994c6a9902"
        },
        "item": {
          "id": "272e35d3-3e46-4e1c-aa0b-163df744ded8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2e3068a3-e0f8-489c-957d-036817450b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e1e1dc-f913-497e-b8ba-849643bb58e5",
        "cursor": {
          "ref": "8b617b36-e908-4552-91d6-e917e0887baa",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c03ab8a5-5840-4e4f-880f-65f874d5eec6"
        },
        "item": {
          "id": "15e1e1dc-f913-497e-b8ba-849643bb58e5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3da16f45-4651-4594-9dcc-03f463669465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7295d30a-704d-438d-8dca-a9b294206198",
        "cursor": {
          "ref": "618e791f-1cf9-4144-a6e1-e1f2052a88ce",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3a806fbd-3c53-4701-819a-08de24cf6e4b"
        },
        "item": {
          "id": "7295d30a-704d-438d-8dca-a9b294206198",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "41194a0a-9a6d-42ad-9f5e-67d7144de0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2e81f5-3622-42cc-81c5-7f2cb1833f9b",
        "cursor": {
          "ref": "741e7f45-4eb9-4625-8e7d-eac518753e70",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2938bd29-f5d9-4623-ba75-310d9951252e"
        },
        "item": {
          "id": "8a2e81f5-3622-42cc-81c5-7f2cb1833f9b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "64d5e2c2-ec10-4347-b04f-7a3c1d9066ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2407e1eb-4135-457a-9670-f53df82a2595",
        "cursor": {
          "ref": "48335ec4-1d6f-4ebd-9b5d-e6547d8aaf1c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "18a642d8-fa25-4b8f-bab9-64e520e43b73"
        },
        "item": {
          "id": "2407e1eb-4135-457a-9670-f53df82a2595",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b7d84002-ec0f-44cf-9f5d-9a5cc71d0509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdd6dc1-5333-4df7-9541-7591c4ae91e6",
        "cursor": {
          "ref": "b40de7ca-6dbf-4001-9069-7099b074c583",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "721a7e2e-0584-4c4c-b7d2-32a8a5712a33"
        },
        "item": {
          "id": "ccdd6dc1-5333-4df7-9541-7591c4ae91e6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "452627a4-9a3e-40c6-acbe-1af15a00746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345bf737-fc04-4cb1-b9d0-c1768e5d305b",
        "cursor": {
          "ref": "70f90612-7a52-45b4-aa13-452a489105de",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "57ed9578-7fa4-4370-af2a-d780bf2e2c46"
        },
        "item": {
          "id": "345bf737-fc04-4cb1-b9d0-c1768e5d305b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2605e684-77ad-485d-8f07-4ba049589fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4790ac59-5b01-43d3-b7f0-24b1c2666dd3",
        "cursor": {
          "ref": "aa8b35b5-d649-46a4-a0dc-bdce66a9700e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9f705896-79ea-401d-aba0-4fc7879d994f"
        },
        "item": {
          "id": "4790ac59-5b01-43d3-b7f0-24b1c2666dd3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f6dee51c-0a29-4eb9-a895-e2bab3dc66f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4923aa-fad9-4613-a3e1-bed84a51b88f",
        "cursor": {
          "ref": "989c9a37-de0a-4f15-86cb-4795c158616c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f0ec7588-9f3d-4475-b28a-9fd7d6458127"
        },
        "item": {
          "id": "2f4923aa-fad9-4613-a3e1-bed84a51b88f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "29260a4d-0fda-4cf1-933c-fba883c93cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab4b324-d3fa-4a42-9797-282a08a7650b",
        "cursor": {
          "ref": "47e2eaa1-fa3f-41b7-b774-ca0aef6934b3",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6d56eeba-073e-4967-9dff-ed8e2fb2949a"
        },
        "item": {
          "id": "aab4b324-d3fa-4a42-9797-282a08a7650b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2d016426-d0b3-441b-95f5-cd57f4597325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f4d843-05c3-460c-95e3-4cbb4f732e66",
        "cursor": {
          "ref": "3e034486-0559-4a76-a77a-7f1f7043d158",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c8c9b6b8-b5f0-4404-9beb-6761ae2af925"
        },
        "item": {
          "id": "29f4d843-05c3-460c-95e3-4cbb4f732e66",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6d0dc0e4-a518-4548-b27c-0a37db6a1356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f08d08-11ea-4ece-ac11-26137b49849f",
        "cursor": {
          "ref": "8b44396b-19ca-4de1-a676-272371e676a3",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ae15fd3f-39cc-442a-a8d5-6da82dbc9efa"
        },
        "item": {
          "id": "43f08d08-11ea-4ece-ac11-26137b49849f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a872fb70-ff81-47ca-9104-90afab8fbc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8226d30-455d-42c6-ab5f-fcc15bb68218",
        "cursor": {
          "ref": "766c0ec9-7054-4e21-b63f-119a5a2d218f",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "58fa55a4-cf71-4cfc-8b5b-7e802d1e3253"
        },
        "item": {
          "id": "f8226d30-455d-42c6-ab5f-fcc15bb68218",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d68cf7f6-ffc8-4fa9-8f59-e9a7ad23ddde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db882091-5f48-4294-88c8-c5a74b847a5f",
        "cursor": {
          "ref": "3a489e52-9f8d-49bb-a9d7-d2e41bbff704",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f83b3cc3-c6e2-4f52-80e9-a292bc30d865"
        },
        "item": {
          "id": "db882091-5f48-4294-88c8-c5a74b847a5f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1ae94103-c2ec-43ed-a53d-f86069cbff65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c26ddb3-4845-4914-8ae5-b26311a551d9",
        "cursor": {
          "ref": "9b997b3e-f2df-4194-9d29-e9e6245c28ce",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b5451f5c-24e1-41a8-8753-647a9a0cde89"
        },
        "item": {
          "id": "0c26ddb3-4845-4914-8ae5-b26311a551d9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e329a7b1-a603-4b0f-af00-b1d859587ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de7a469-1a63-4f06-bf93-b3ae9fadfc78",
        "cursor": {
          "ref": "54e6b0ad-172d-434c-8087-907db45107db",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4d582d87-c718-4549-ab7b-bbe5c2e09210"
        },
        "item": {
          "id": "8de7a469-1a63-4f06-bf93-b3ae9fadfc78",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7d835112-cd52-4093-b7cb-a46f75f1db52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9475518b-52bb-415a-be2b-0474d7d231bd",
        "cursor": {
          "ref": "cc877c6f-e4c1-4006-beb5-372568bef5fe",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "65658f15-5537-4ad3-abdd-ca47a0b3ca27"
        },
        "item": {
          "id": "9475518b-52bb-415a-be2b-0474d7d231bd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ace25719-8f12-4999-b6c1-bb76dab580ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f18779-1455-4625-b8c2-1fa33e2a2e65",
        "cursor": {
          "ref": "ecc3e4b6-257d-4866-96ca-93414ab5911e",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3a352eec-5182-4bfd-90d0-390daec22b84"
        },
        "item": {
          "id": "e3f18779-1455-4625-b8c2-1fa33e2a2e65",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "702c90da-00c2-468a-8f78-c049d59d179d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cd6e72-6a0d-4422-82f3-e7e69a7746b4",
        "cursor": {
          "ref": "5ddddd40-8e84-47a2-b994-1706e2c73533",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e70f9aea-3d56-4c9b-a81f-16a68f1e8529"
        },
        "item": {
          "id": "18cd6e72-6a0d-4422-82f3-e7e69a7746b4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4ef2131d-2ea7-4f61-a890-a9ec18dd3764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35ae291-dca9-4b24-a5ce-2a886f7cf60d",
        "cursor": {
          "ref": "e6c49562-a744-49e4-aa32-ffc80c759e8b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ec6b7f7e-5697-4fa2-9dfb-d3144962856a"
        },
        "item": {
          "id": "f35ae291-dca9-4b24-a5ce-2a886f7cf60d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "29220b0e-796c-4eff-a7f0-4a2ce8550f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52d40a5-e760-445d-8b41-532459196418",
        "cursor": {
          "ref": "e0ad535c-5dfd-41ed-b997-d126d271637d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0e797738-b1a1-4c66-a1bd-5210fb441f2f"
        },
        "item": {
          "id": "d52d40a5-e760-445d-8b41-532459196418",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "87a23b16-6c33-4598-ae61-7233b8f41433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef54c37-1d8a-410c-9551-30de85699d7d",
        "cursor": {
          "ref": "6261ede3-3e4a-4bb3-a416-c320e3b8f016",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "63a090d1-3dff-4e58-8b91-77ce0acdd652"
        },
        "item": {
          "id": "fef54c37-1d8a-410c-9551-30de85699d7d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7363dc1d-6049-4f77-a4ef-8319baef8278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fac3a9-8700-412b-977b-d2f9d6058e7e",
        "cursor": {
          "ref": "b7fa25b5-2a91-47e9-be63-2c67a3f1c542",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9998015c-93e7-4941-9eac-ff79d28bb5f9"
        },
        "item": {
          "id": "26fac3a9-8700-412b-977b-d2f9d6058e7e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ae7d0ba8-9c88-49da-9048-bd51c681fe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600c84b4-af6c-46ac-b20c-630f9509da27",
        "cursor": {
          "ref": "a825c31b-98ec-465b-90d5-91d62ea3fd28",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "71b26f57-eb68-4c65-95c2-facf49d0750b"
        },
        "item": {
          "id": "600c84b4-af6c-46ac-b20c-630f9509da27",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "acea46b2-b22e-4daf-b75c-185169e92fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f7aae4-b0cd-433d-8568-a51b54ad9dc8",
        "cursor": {
          "ref": "4bab5f97-f058-4496-a4d4-9c3b42178afd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a37461d3-2c7d-4550-a454-4dffc3ee622e"
        },
        "item": {
          "id": "52f7aae4-b0cd-433d-8568-a51b54ad9dc8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dc90268b-54c6-4c50-b7cb-c04f49824a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b1152c-43d4-4fbe-bcb1-e559fa384950",
        "cursor": {
          "ref": "cdb1ed84-f96e-470b-831a-410a4c2f05f2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4325d81b-798b-4092-b85e-861e96de497a"
        },
        "item": {
          "id": "21b1152c-43d4-4fbe-bcb1-e559fa384950",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bd7cab9b-8b5d-4f21-96cf-c4dcbd067ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ef2c67-eb62-46b4-85c5-c70d1623f5a5",
        "cursor": {
          "ref": "47839c99-3abf-4ad9-8e4b-e55d133d375e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "245ad5c6-2200-4068-93a3-11e77b6dc66b"
        },
        "item": {
          "id": "72ef2c67-eb62-46b4-85c5-c70d1623f5a5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "19002afb-7d01-4558-aac3-36f62ffb3af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd309756-d128-48bb-ba4b-22df4980755f",
        "cursor": {
          "ref": "732d4a0a-a02f-41c4-a3ad-c3c49692a5b3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d5a54a2a-0c93-4733-80ef-19e9451ada4b"
        },
        "item": {
          "id": "fd309756-d128-48bb-ba4b-22df4980755f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0365735f-2b9b-480b-9dcf-3333b0da641b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef3089d-7f87-4517-b979-ffc740e6ce2e",
        "cursor": {
          "ref": "d76ebcb3-8e9c-4e12-97fe-034ce64d588a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e6d61b6e-6fae-4575-a1f6-c976880c88ed"
        },
        "item": {
          "id": "4ef3089d-7f87-4517-b979-ffc740e6ce2e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "728a2224-a612-4fe8-bcc6-7a271a619baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c18d1d-2a35-41cb-87da-93997c8ee15d",
        "cursor": {
          "ref": "b94bac41-991a-4c26-bad6-3679546ed795",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1dde5ac4-cea3-4877-9182-810946d3f9a5"
        },
        "item": {
          "id": "66c18d1d-2a35-41cb-87da-93997c8ee15d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "264a6b1a-9f9e-4434-86c1-16582a9d2d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8247a6e1-1d13-400d-8d11-8f7afe957ec3",
        "cursor": {
          "ref": "d93dbd5c-87d7-4a0d-9930-1396e4919e5a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9ab86f09-1729-453d-990f-7bdef773a380"
        },
        "item": {
          "id": "8247a6e1-1d13-400d-8d11-8f7afe957ec3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "95480769-ad4d-4ff0-aa13-88facd6b2fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f3b8ce-df56-427c-9c3d-2d165a3b0dbc",
        "cursor": {
          "ref": "8563f705-a554-4f97-823e-851af58c2b3f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6807f44d-b126-4cb7-a397-8a3b3ff82547"
        },
        "item": {
          "id": "06f3b8ce-df56-427c-9c3d-2d165a3b0dbc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2f98b88c-07bb-404a-b165-6a426db61de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45efa37b-18e5-429f-9503-9f6a9bbade11",
        "cursor": {
          "ref": "b7a8f509-b7eb-46e3-88db-0488575878ce",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c3f970ed-de49-4efb-b7ed-58529f725086"
        },
        "item": {
          "id": "45efa37b-18e5-429f-9503-9f6a9bbade11",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "59edca74-8184-4e2c-8086-23d6f693e2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dca660-c8df-42b4-a426-e91dfa34c7f2",
        "cursor": {
          "ref": "595e6fda-ee71-499a-a620-e9041a2a89e8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e21c79b2-dd2d-4fad-a577-d45449d2156f"
        },
        "item": {
          "id": "39dca660-c8df-42b4-a426-e91dfa34c7f2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "de330c64-f3f1-43d9-a573-77666d1ea46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec5350c-0dc1-44b8-869f-07e754e0e53e",
        "cursor": {
          "ref": "6463e2d1-506f-49a6-ad48-ef014b4b477f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b4110e18-3d91-4f29-939c-a1fe01f6420b"
        },
        "item": {
          "id": "5ec5350c-0dc1-44b8-869f-07e754e0e53e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c9114cb0-0a25-4c8b-91ad-ff073859b9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c98d3e-61f6-4c47-ae4e-2b408ef2bdfa",
        "cursor": {
          "ref": "70fae394-d432-46c9-9294-1f17a7eaff3a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "969d3bba-7493-44a4-b93c-b86aaac2068f"
        },
        "item": {
          "id": "15c98d3e-61f6-4c47-ae4e-2b408ef2bdfa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1d90c883-33cc-4b08-abc4-f78ec11dd543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45e7533-6834-4da3-bc03-ad6495314521",
        "cursor": {
          "ref": "587bafb8-a42e-4cd8-a155-e72ca843cece",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9eaa1291-62fd-4aad-a857-e870cd21cd9c"
        },
        "item": {
          "id": "d45e7533-6834-4da3-bc03-ad6495314521",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "30d66560-a9bb-4596-b5ab-70d974f4bb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daee843b-8488-4295-803a-824e13ec83bc",
        "cursor": {
          "ref": "9493fa39-593e-45c1-93aa-acd63cfa90b4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5e9d35f9-d7af-4a9e-837f-cf614c21440b"
        },
        "item": {
          "id": "daee843b-8488-4295-803a-824e13ec83bc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0d72b528-93f2-40d2-a9f0-912d81e72b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c357e7-7b4a-4d27-a9c1-69647f19b1be",
        "cursor": {
          "ref": "be99a00c-149c-4357-9ff6-6b9e7fc609fa",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "addbd61f-936f-4608-9e41-ac7ff0c9b3a5"
        },
        "item": {
          "id": "d7c357e7-7b4a-4d27-a9c1-69647f19b1be",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "057aefa3-ea38-45b0-8cde-bd168aad5f02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85f1f89-411f-4cbf-8dfa-cf961bc0331e",
        "cursor": {
          "ref": "ff8db8a7-3349-4041-9788-2c788b383d7a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a5f6702b-99d2-43cb-89e8-f32aec0fc266"
        },
        "item": {
          "id": "b85f1f89-411f-4cbf-8dfa-cf961bc0331e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "264d5726-7b4a-4a49-ab52-d8b7963684ac",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb0f6e4-aefa-4177-a979-a908264dc113",
        "cursor": {
          "ref": "58f2f069-68d7-491a-a8de-88eddee46f49",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c52e8a25-b061-4a77-9c0a-5d4e16705fd0"
        },
        "item": {
          "id": "ccb0f6e4-aefa-4177-a979-a908264dc113",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0ed8e186-1802-4761-b093-2bb13cd4a70e",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "67200713-e57d-4f50-bc48-3ced33045e98",
        "cursor": {
          "ref": "a1ede5eb-42a9-44e2-a37d-d5875d56fedd",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4a2612f0-47a6-46f8-b5a5-f0662e99ac30"
        },
        "item": {
          "id": "67200713-e57d-4f50-bc48-3ced33045e98",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e24d50cd-73d4-4ac8-91b0-6c00ba2a0954",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ac40d6-2144-4bd4-8136-4622d0b17325",
        "cursor": {
          "ref": "ece689a4-2726-46b9-9c04-cfa349fc020d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9fb704c8-3108-42c7-8eda-34cd5b46ef1a"
        },
        "item": {
          "id": "a1ac40d6-2144-4bd4-8136-4622d0b17325",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2b79c454-57b1-4a0a-be38-fa22214808fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ac40d6-2144-4bd4-8136-4622d0b17325",
        "cursor": {
          "ref": "ece689a4-2726-46b9-9c04-cfa349fc020d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9fb704c8-3108-42c7-8eda-34cd5b46ef1a"
        },
        "item": {
          "id": "a1ac40d6-2144-4bd4-8136-4622d0b17325",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2b79c454-57b1-4a0a-be38-fa22214808fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6bb7d9-4b51-4848-a1f6-5d03c510753d",
        "cursor": {
          "ref": "eafc94a8-5b5a-42ce-b72a-282c6c00b4c0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e7fc25bd-553e-4f53-99a5-57431df9ff76"
        },
        "item": {
          "id": "af6bb7d9-4b51-4848-a1f6-5d03c510753d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7a600016-6c48-480f-ac4d-9068ccdb1515",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b130d910-4819-448e-ab55-f21bc5ccfcae",
        "cursor": {
          "ref": "20930bcc-5564-4955-a609-79ef040a7b29",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "06cebf11-230d-4c71-a542-5480312c31ed"
        },
        "item": {
          "id": "b130d910-4819-448e-ab55-f21bc5ccfcae",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b67e9372-095c-447c-8c3f-4aa3be214226",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}