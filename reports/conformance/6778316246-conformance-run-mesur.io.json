{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e488f70e-b3aa-4474-bd3a-3d340607edee",
        "name": "Clear Cache",
        "item": [
          {
            "id": "edd15bca-2e91-442e-800f-66b0d3918059",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1cf94a6d-69ad-4705-9135-0e363712301a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b95148f0-9a78-411d-bba7-a4b726e0707a"
                }
              }
            ]
          },
          {
            "id": "04a005d4-15f9-46c2-a9b2-80fa30ff477f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce38e6f6-1010-44e9-a780-904125c09d5c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f705d5e0-f3d3-4405-a16f-9eb702a3dd72"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bce854c7-9b3c-497b-a7ea-a702e9f027e1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bff5d7e1-d636-41db-b707-c1426f387853",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5bce1e06-fe35-45af-8d8d-f60b0d312f39",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cdae651-b180-4e4a-adc2-93fac7f8419e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2a28297-babf-4d7c-9153-aa04c30c520a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10250a1b-b857-4de3-996b-30b86cbe19e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4a0aa1a-1a21-48b5-8496-03a6b76fcbe4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f47b819-1061-4064-9ab1-7a8a029acfac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ec8e0d4-becf-468e-bd12-9760c9694ac6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7937dab-0329-45d4-a6df-e461a6844e21",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f28ac0d1-b66d-4592-afaf-7a5c2360570b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baf3a264-2809-4602-9eb8-0459a911dd62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6304b2c-253c-49dc-b87d-539754553318"
            }
          }
        ]
      },
      {
        "id": "9657767d-6022-4563-be7c-82c0cb51df80",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7d3f95a8-60a5-4265-ad5d-ce060b847946",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc00355d-e6c8-4c7f-a00e-06c3a7bbc1e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73cb4326-ada1-4dfa-9803-f24926837267",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5b5841-eac4-4329-91b7-4458954472c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65cc5139-dc88-4f8f-ac1b-b1f60c97a7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecafd154-95c1-4b6e-ae7d-1c2e4518f6db",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e6d987-b6cb-4f36-8aba-9accd50aedf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4290849-52db-40fa-92ef-bef997794e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2711ac-9dac-489f-943f-d09994dc6010",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f2efaf-875a-4397-b7ca-2d423c6f7074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6253313e-ea1d-47de-9a87-9d468693506b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f95d0ca5-9acd-49f9-8af1-9b854e1403b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c43165a0-d9f8-43f1-bf7f-ae93091b7a00",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b244603-b056-46a9-969a-b44e9fe5280b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49466783-c8b9-42b7-9213-38f8fb8a0625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504b1b7d-96e2-4435-b5a1-f24a60c8e344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9b2d02-2394-4446-ae3e-9ab49fdebc82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "51d966ad-a9c7-49a0-a2a7-a4c017d5b1a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d21972dc-d36f-4f09-8f67-997d79501619",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "728fc014-4db1-4357-9e45-5053ef0e86a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5daddb8a-8aab-4039-9a06-7e6c91f72855"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5afca032-6ccd-40b8-9da6-e29041da0044",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "66eedc3e-c7fd-4eb7-b85b-424c5a590637"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10a7e30c-30ff-44df-8161-736d69e162de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5c62133-e95c-4ecc-bc8b-abdf5462430f"
            }
          }
        ]
      },
      {
        "id": "606a6bb5-e0b6-44e8-8ca0-25af107c5e38",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e0857cc4-20d9-46bd-acce-2dbbc8f371ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "271c6981-07b2-4e07-b27b-ffbcba95a478",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8784d1b8-471a-45b5-a898-9d3480954c9a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63f6512-71f5-4b11-a4ea-35601414c5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b8eff1-71f7-425b-8b45-856c191a9c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba3b6ae-9844-40eb-b659-c4b481f00e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bd4e996-2c2c-4fb2-a823-8aec0e2a1621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd55d9f-851e-4859-abb6-5fdafbd40ee5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea34821-1b08-49d8-86b6-888551578f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271704f9-f205-4d17-8d0b-f681ac7a264e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98030bb-657e-41a9-91b0-302f2c54baa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5872152-fdfd-414f-8e42-28ee774e1aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafae777-60a5-4524-ad00-26a4c563e3b0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b73b9b-0233-4a84-a988-47765b89942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7be17b-18f2-44a6-b3ef-d66511bea677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2b61a6-3f18-4e5b-9730-6863423da191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03a1c550-77cb-4a92-a222-2cdb18c57cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee977a5d-bb15-44f4-b89c-31342ee3d772",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d56999a-f02d-42d3-b4ca-5de76d359ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89766df1-c670-4142-a1fe-04f3a8977b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459f3f17-fc55-4fee-ab4e-6f216b90a166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "179ad520-5e26-45d9-8ff8-70559a78d783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee22d2e-a8a9-4bf2-84b4-c0eddfcb02cc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aecfe7d-02c6-4a58-b66e-d3395249f1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e362528d-6530-45cc-a781-9a8232281027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7a47ef-7979-4dd5-9160-893b45718d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35a81b48-1805-4f93-8cf6-b501c40dc1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1beca208-d5fa-4c9a-bffd-d4db65bd1797",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81670497-7de9-4c70-8c8e-e4e69d1392d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6b1d7d-134e-48c7-b116-fd6eefacdc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867bae34-62b6-4978-91b9-03f64d216747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f58b4af-c171-4137-b362-99e60aa70221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bb9c7f-8067-404b-b003-d23d9b73eda9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed36bda4-9973-4a7f-a162-a11f74cbb785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d0e9d5-aa94-4894-a5f1-f1e37490a05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0df314-36b2-474e-b568-f53c58752307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6005ffe-f175-409a-8749-9c71d341e0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78756b27-353a-45ae-b87b-9e1c62b03f8f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9de973-f582-4522-a26e-ea760af75c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1322aef-10ac-4d36-b54b-ae89c97ca858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d9c10b-9ce3-4701-b83f-4230c72235b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b0f2ca1-bd8d-4650-be05-65943dc8aea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bc7165-edb8-4c42-bda8-cc0eff9e92f5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a47ec6-88fd-499c-8841-23d65cb3434d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c4674c-4a0f-4d83-87c9-44808f926cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02040b8b-2546-4506-b55d-a89706f44853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ded7571d-3621-4098-8774-8ab0b451f922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791caa25-9f39-480c-b610-7778d46a9559",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f459cb-8020-4b8a-9590-0e4678864911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4451e38-9032-4656-8f7b-c979ae2ace99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57444eb-9c41-479d-aec5-e156a96f1daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a637b55e-4a27-4c89-bb10-adad5c8a3f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1276ea0-4e7b-403d-b5dc-81a94e8bfb11",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115264f0-6681-48d4-8b8e-8e5f37dd0636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9955cea-5c78-4cba-a11f-a95d607ce4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7d10f7-aace-4341-8587-2b284dc6f2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d9f02b4-cf50-49e5-801f-c399276ed2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10081575-7378-4e60-bcbb-f25a15b37ce4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175f929d-5378-4e05-b94a-efeab39c6e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed14271-dd5f-446e-8eb5-0249fc31dc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6766e79-6053-46c6-80ee-67bae31251f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4aaf5308-fbc8-42a9-ac13-1821d07d072c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db286601-555a-4689-bb3a-09c177a7f601",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106eb60a-0084-4a14-b7e4-92b6afc83be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba57eba-2925-4f58-8899-07599fb35029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38be8fd4-58ad-48d6-a139-da81d145a256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2639345-ddfc-414b-8622-965e41fc468d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca4348a-ed62-4f67-88d1-661903673fec",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a10ffd-14c8-40e2-ba80-2bde9680d4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fee992d-fc27-4988-b832-e587bf4af0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4150321-9aaa-4f41-8d82-d7a9be5ed09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5434137d-34f0-4360-adbb-24964d1f186d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9607340-53d0-4f13-a717-b1d82c31bb27",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93513ec-297e-4ac6-88ee-c4aea808effd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e48282-f883-48b1-a652-e509f52e6cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a78c2c4-cadc-47b5-9faa-114f8d2af63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "640c2511-7088-4843-a5ec-c07a1b564ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27119cdb-5e47-440d-bc28-061a3729517a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064d8813-7085-48aa-97c4-796bbfea76c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946e67ad-9ca9-4d9d-a678-a35ccb7fced4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e621b8-f921-41e4-94d6-b816975992fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dff6807-2808-4bc1-b33a-7602d2de1915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33667e7-49d9-4ef4-a24b-25834ed6ca49",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d0e132-50ed-4ea1-bbf8-6e4e3c146079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e4a86f-a4f2-445b-8365-3b54c3eefc1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64892d9-fb39-4ff8-98da-37346461e0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49a791a9-e765-4efb-b2b6-313480a10d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59180f27-30de-4422-b4b5-1b033a4687e2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880b8a62-bab8-4459-8817-e001017324fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c701a2fb-272f-48b4-a85f-1c6c71d6a974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83070e2-f4c7-4513-8c41-f7a465d2050b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "506920f1-08d8-490a-967f-55dd556ba68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6086a3da-7620-45cd-8964-41b9445846d1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2296e4-99ce-486e-84f0-64b05925dad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4201ab15-845a-4211-a7c8-a43137777a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a438c856-03bb-40da-a648-b94c8ddf73a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e3d872-3545-4295-a625-df541fb92990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840412bb-61e8-41c7-a7b1-836202849f22",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb15f828-7057-4495-ba70-7ac37d7f3037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8dd07d-9856-4f6e-8fce-24e7e7894e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f30324e-1ee9-4314-94c3-ef39a101f918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9d1ef9-2e3f-4470-b5e8-16a703675b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7917d8-0156-4eb0-866c-9a88ea3a9ff0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d792e33b-e764-4702-9c15-644f7ec8025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67581263-54b5-4085-a910-1e4eb6b15dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9d01da-0585-4ef1-ab7a-562bbb7d55c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf513bab-455d-4a86-86c5-bd990fec2433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c38cb68-dbaf-415b-abbf-8612bfe68856",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce62696-c7a5-4905-acdb-18d8a6e20bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adf4860-3e2a-4dce-b651-4350607722eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc4e679-615f-4f3e-878f-9ed221905100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91d1ed44-9106-48d8-bca6-15757ae8d0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fc5ab1-b3a9-4411-bd18-c594d3416f24",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1aab46-54af-4599-956a-0ea3f7ef38c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e580ba2-bbf6-46a7-815f-553e5c2c71a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95741ef-504e-482b-8d1f-123456ca30f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9337b9-eea0-4994-8b79-bb187c8fef2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d93ce7-7737-48d5-85a1-8db5ed116bf7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c120aaa9-d274-4052-b466-62e5de5b4430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06be0eb8-c56e-4b59-b44f-2bae3c2aa568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ca712c-3dc6-4d34-a3ef-127487b3fc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b20c5b5b-25b1-429e-ad4d-57a900883f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0a35c3-d2a8-44c7-8ab2-5f9abdeaa261",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beb30dc-4f7d-4c06-9a49-78e76ef5af84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6aba41-fab6-4d58-bc9a-5947d526b33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac34cdd-7364-423d-b49e-5d32a08ec0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3fa1128-6382-428c-a036-1026aa1378ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd056d8-56a9-4161-9940-6391cf4df01e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9820e8-9288-4792-a949-aaad135b5d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a455a44-77a2-4edd-95ba-7bcab7251bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59418bd3-cb9c-466e-8550-e2a77f3c9257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4071bca-39bc-42d5-9a6f-2f6fe4315b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f6f6c2-90d9-403f-b128-e99174752790",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec6be36-dd44-4dc2-bce4-8f263297d1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937c832c-1e78-406f-9196-bf6b6004c917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c777443-88cb-4b6a-8457-16ab40b02b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98e5153b-6957-4dcb-8e9d-dcfa4afed608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3d6098-c829-4035-bd38-857ed824e51e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3159cb0-4954-495d-b73b-8a2d8c797cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418b30b5-b873-4150-bba4-0391441d95fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b6becb-4614-4e81-81ec-238f5c4ffb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2beaccfd-ff76-4d0d-b2dd-46c7a137915c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a878cb-5f5d-43dc-b352-54dc6a3066ce",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607d9245-3af1-4463-82b6-7c48d4afb15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d60014c-4fab-4576-a3b5-17d893bb66bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3740b5-6859-4c93-9dbb-7398ac8e0663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f98748c-97f8-4e33-b337-f91752cc2aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a1164e-613d-4fc4-931f-3ff67b0c3c61",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32404cab-d1c4-45bc-a77e-17a9cae22b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304e45b9-d2d3-4145-b225-e8fd680539b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6831ea6d-36ce-4b1a-9e5b-25e294d3b6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee08b02-1d49-41ac-8cfe-5a6c580bcffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2402d9bc-a3c3-4db8-a213-3395a6fbc621",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a652fbc-2842-4381-ba51-354ddf47aef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ccbe6e-f8f5-4287-ab82-c70cfcbeb4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9da0264-2bc7-44cb-949c-7408b67656c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ab044a-09f1-41bd-a1b6-2960718a57ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34a4a92-7129-400f-bb42-60629075fb9f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d70a2fc-26e7-4596-9557-51c512c159f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40430b0d-b343-464e-94db-2851907aa6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a01e3b-fdd1-47cb-adca-280d6881cc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a62d93bf-f197-4c86-b652-24e43d034adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417eb928-b968-4d33-b6a9-c5f828c451da",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f898cd30-db7e-4ab0-a1df-d5e19264864d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876ea3c0-082c-40f3-bff5-603b8bca9bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0ffe5d-ec35-4966-b070-54ade1c702eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb506e2-1737-4527-b424-d6ea55596c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7ef36c-edd5-4730-8788-d88633bb820d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1784161-5246-4b5a-9ddf-255f1ab78115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce42da61-3489-4565-8a9b-51993432cebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244779c2-9c8d-489e-b6da-fdc4c5cd7cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25b5dd51-8fb8-4b18-881d-0601f6e4e47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5451d15e-20e0-42de-b625-07dbe77ce519",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52da8a27-3874-428d-820a-c91cd5d3a564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13096d7-511b-4ab4-9e05-5d002a88cc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3b9316-1012-4475-9463-3250392b9958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4bef0d89-3af3-4b41-b061-6fa4acf9e823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682c6452-15a9-4ee3-b065-013d6119e384",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22c37c5-c90e-4f6c-b9da-1dfc4ab143c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15145d25-5ae2-4b42-a6f2-dde431c45d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d2ea43-c9a6-42f6-933a-05ac17248810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e412ad-ce51-4353-9e2e-49ba995e792d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26b1654-66f6-441f-8ccf-6ab2981ba1e5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cc7e4f-2754-4327-bf5c-a7c10199b024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65552060-c69d-4e0e-b3bf-092a8141d639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3c296f-2a44-46c8-bb04-2098fe9811cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5316f927-6312-4144-8b21-01c658466248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe2f413-89e6-4969-ac50-122903b265b3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854d93a7-7752-456e-a6f9-57b831b00145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24381638-5483-47bb-b567-893c67818caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3205478e-60b6-43fd-ac29-8c40ac125262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3059b25-7df6-4423-b34a-4ef8e6d6ec21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e964d9c-fe5f-454b-a81f-32208dc49fce",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c978b922-93a8-455e-9a8b-f67e88b23abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ccc9fd-21d7-4d92-9a49-4797717db008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301b12f4-8b56-4b57-86ac-390afd673cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "facdf748-6d9f-4427-a717-bca163b282d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15002a38-5eef-4932-b5bc-63e8923eb189",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19befee1-7311-4ac9-a49b-cf15e49e2a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ea0011-0221-4670-a710-9c852071aca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882669b6-7e0e-4d02-9dd3-cb7ad799cd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9adc1b4f-e35d-48be-bbf1-b1ad21e48d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc99eb2-38d2-4971-a51c-00f73794da17",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f117fd79-129a-4cf8-8c91-b0bfdfa2aa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3034af7a-5790-4f56-b5af-6716bfbc81f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4959ea-56f3-4018-abe7-57388b58771a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b11ffce9-fe54-4cbb-a8da-5576d8a7dbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ee7728-d050-41f9-a8f6-3264ec134e49",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdfe915-6df6-4948-b296-593bebd09609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef0767d-0cdc-4e23-8d2c-a64b1d156d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a0b843-dc53-49e0-a897-5b643dfa32fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9fedac-e6c8-4bef-9046-942966562bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62fffd9-5568-419f-be44-d8d9b8fb7aa1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b57112-1a11-4c6f-8bcc-da8ff273e249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d436fc0-2f48-42cc-96ce-242c8fb13bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67939dd-d90f-4be9-94c9-92de30bf97b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e22b4f-b9d9-4db2-bca6-6c93520cec8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef183ab6-8b2f-45ce-a6b1-4475310883ea",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf00316e-0d7e-4751-87fc-42203a8fc8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7845d28-44d9-4868-ab91-eea2cc9eab6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25613d2b-1841-410c-8531-5af4a11a7497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "886f2ba4-37ec-477d-9494-a34b12abff39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824ccf06-687a-468b-be1f-b6b5edd636d0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0944df-5056-4fe1-ad5a-87f89b932c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e026df78-a977-4820-9dd0-e58543d7f196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e415d32c-830d-4981-beed-34d456d4f822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "663778b2-542a-4ca9-bbaf-3539137e66b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39479983-4ffc-433b-90cb-91915cfe18a8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e41652b-0738-49eb-8523-b090314e0bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb3deb2-d151-44ef-82da-4ab82fddb97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3792413a-9567-4e12-aaef-df7b9d0b1dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19436de-2332-4ca2-b88d-108ee25e5952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a29529-6358-4b0e-8737-5d72cbaa0f99",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9eb6bd-1345-404b-9cd4-fdf072a3c5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220cac3c-9280-4c10-af18-d46372c2c7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfb4462-763d-4b30-92ad-c1a91cd5a49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c38fd6d-a606-437a-9d76-b53be5493e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a51ff2-2bd6-452c-864f-33b669d224e9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff293230-ca6d-413a-8227-86838f08f63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc5cb6f-271e-442e-a777-91c030a181d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52174904-cfc8-4159-bb86-a14ee949839a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93380055-a298-492b-8ea6-bcf130e19be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7b21cf-ba78-4ff7-ac4a-2fbcfceb9f6d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eea6f74-39d7-4261-b50d-22f97c7c409c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f11bdf3-3d6c-4612-942b-d1b2339bfb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100e4c33-b80f-4d06-a235-9e8c17e31c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f40dab9a-5f9f-424d-853d-1f784b484f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e644362-52de-4997-8bac-37ad54561d60",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82616623-3e42-46fd-a631-284e647180a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa6ab1f-89f9-4b1e-941c-713e05206bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b1aa63-f943-4b73-aef7-147cbbdd0463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de20db57-5b16-462c-9fba-e27e232ec859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3fd9e4-7862-4af8-b34d-4e1fd2b60368",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e233e344-9996-456a-b17b-358a4514d0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a831bd-45dd-4075-99b1-cac441a28ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59f3ec8-448d-4f43-8795-bcf39f115c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca6ed3f-26c5-40c7-96ba-1c8321fdddd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4f2c62-a6c9-4b54-8e6e-b9f6cac87154",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2909f1-57f9-4d6c-9451-352696b929b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4c0d1b-d146-4003-8e4a-f68be8ba3d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bce16d-edb5-423d-af16-881ffb61462c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7610537-d9f9-4ae2-8f97-9c24d48f2625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd82a9d-9ec1-4dc2-97de-db121c120947",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f2a343-cc6d-4498-b168-c648dc2937fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4922ea9c-ccc3-4d53-bc35-dff9d5b7564a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e0b3fd-03a3-43ed-a4b4-c97e7ea35418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b38b291f-46ab-424b-bf7c-f265ad2b6216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7c2304-ff99-4784-9117-e88a6e033f9a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff539bf-d474-4d00-9d34-7df4b1b227ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b216584b-b48b-4335-a1b9-c27189e9c856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2747a237-2092-4fa6-9c22-c5e4b7045aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe3f076-9cf4-47d6-a656-ee0103939f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a88631-47d7-4b49-a4e6-c45b794db3fe",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382aff2a-82ce-43c4-98da-f402ea8de733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099c37e3-bbb5-4579-9160-423bbaecd5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184b016a-3625-4b95-bd69-f54aa2db0104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3b1a5d-67de-4dba-a592-6800d024d128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a79b2c-0fb1-4fd5-b7e7-328f8973ad15",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9009d67f-87e2-4b2b-9fae-c6fb9a79e7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b97437-8e3f-4c2f-8c93-3b126238f9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8a6bef-1749-43b2-883e-c8283764c476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "be3bae87-c0f0-474c-96f7-ce717790f789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81fe3f2-0423-4138-aeb8-91852cfad767",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a07646-49e0-42d5-bf25-5e2b20a1d5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97fb5a3-b011-443e-894a-7df1f02d2fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d619724e-699a-4f9e-9203-91e1a9dfb7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e05a4e25-71b7-4a07-9fc7-a405c711eb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da51460d-cbe8-45bd-921c-330761440535",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc3354e-6e87-48ed-8ef0-3c55b82c9e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000f65a3-daf6-47b7-8677-ef6216597ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b421bc-ed4e-498f-87b9-fd256a17b933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d45547ea-6415-452e-b262-1b83218d2a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542d9ca8-a655-484e-8d95-243cc70c9fce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fedd70-c293-4183-9f10-b40be3db1c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f7f6c2-89c4-4314-be9f-1f7f666a993f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d1b8f8-7ad4-4d0c-959d-5ce719f76928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dedcf06-5f78-43fe-a794-f8fdcdf1c23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b66bb96-470d-44a8-81fc-87bc9ce78a42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47a37df-79c5-442a-8ae9-6b9fad1bf689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d129f547-7fde-4ea1-bb01-1ee02e59d1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb8abbb-43a3-4c32-9880-b8862bcb1d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f25548a3-cacd-45c9-9417-9e26a0798528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f96770-462b-4adf-97b5-f287d279add5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078d93a4-b76a-4abc-804f-00e3b9b79699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b26c3f6-6b67-4a1c-b836-f3edeb113885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d556e0-1bbd-4b52-889f-945da2980ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "030d6773-08f4-45b1-8db0-56bfe411a0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6e5a2a-9b35-4ffb-8032-2d86140d3369",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23248fd5-9fc5-4e65-9d19-4ccb3a738899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc5d13d-5e5a-4598-9474-819be20c15be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceea7f5-92b7-4955-8c24-24d507752fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "27417ac0-1e9c-4148-805c-289840ded988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47cd006-efe7-4e20-aec7-610b0fac1b50",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d961c04-e3c9-4359-abb5-7fb3de6c0eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7b867a-f04d-4b73-acdc-7dd1daa95f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11844adb-bb87-4811-bde8-ee8a6840ef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9bd0f9-c66d-4f36-a03c-8e13981ea9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71737bb3-09f2-475c-9281-f197a03e2cb5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5992c48f-966a-4ac7-92a9-db2947e9b0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c712ac-bbbe-4b98-ae51-28f9c7c43476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555a578f-2bf9-412d-bf78-ce8c86ab0225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc178380-f49a-4c36-8539-5634092cb6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a7946d-cbb6-4411-9968-c9061a8914b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325d9afb-d63b-4129-8b6b-b676e7efb555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9fd0f7-ee45-47cd-abb2-4020ec00064a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3ab0f5-0a5d-441a-8117-0dd4c704cdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb851df-531f-487a-be37-198a6c14b618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebfb8cf-d796-42c6-8f4f-33793c449df5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fa01d1-8b45-4f44-9d27-430093a4c818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de6f35a-c3dc-48c4-93f7-c7d71835e729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc8f6a7-21bb-4958-9b75-2811f59cb304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0769924-f5e7-44f5-b6aa-bec47ac8daac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b67f58-b601-42f1-a269-55e573d06688",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1830e69b-6ed2-48c0-9328-f89c7e9b8830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7607c880-63af-49a3-b2bc-e3900d26c049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6501bbda-1c93-4a62-8ad3-092f2504f1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64768372-a5c5-48a2-8e23-e3f8aeedfdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddd8825-9e87-4913-aca5-7ccc939f1f0c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8918c21-05cc-43dd-a8c4-8168fb4169ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399f7f27-72c9-4ef2-81d6-1aecd47df07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ae09dc-1a1b-46dc-af37-c7553bc631a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae52500-252e-4c48-88dd-478af6e83eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e450ee0-7e85-4257-9455-813bdedaf7cd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb8001c-00af-4f6e-b834-5c5695c74fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989252d8-799a-4664-870c-1f3cff6f5663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9c0c81-bf89-4603-87ac-4ede71fd9f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af64b26-fd59-49c7-916d-a684a319ee57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70318be-3204-40a3-bb30-e3a3bbbc7fb3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825d940c-192f-45c8-a6ae-95f1798abd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2ea741-0106-4d3b-adfe-00f6a819850c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefeb0ce-3d03-4b3f-9367-2f32d2b461de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48da1dbc-3a20-45d8-a0a2-01ce8d628322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0900867-e1a0-446f-8495-f9044f32cfae",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd3af9b-6734-4bf7-82fc-98344419b63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91fc0fa-92f2-4236-928b-32d8f7974766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc669dbb-fb1b-4e4c-b101-11a7e347cb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3059215-eadf-4669-b177-36193840f265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cbe8a5-56d8-4bef-9b77-290a1d2ad472",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341460ec-931b-41a5-815f-34106a9c37d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e54aa55-1812-4457-96bf-9571c3c2be2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831f860e-408f-4570-a5c7-835a6664976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "952652a5-3951-433b-a2c9-7ab0920cb7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a070ed5b-d665-40a9-bc82-881e507d4e11",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93be6dd8-50b2-4edc-b41b-80f09e7c8d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79dcf98c-440c-45ca-a675-21cdd24da44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81d8c46-ef3e-405c-be5e-a1ab05e9d09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64cb221a-4edf-4a42-b54d-4fb195247f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2f0396-f240-4166-844a-ed1e61f319ef",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7622d4ca-4b34-4aba-bd40-aa65450795a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f229b53-36b8-4518-81d7-c095a26c672e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cc03f8-4057-4778-8483-b3865df2bf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83fbdd87-b86b-4d65-ba8b-a6eb67f51b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d311d1-84da-4335-bf3f-abdb606f5c32",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3bf19b-32f8-4a00-b353-2a9cc81986d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14eb4441-c704-4049-8e5e-3dd29ab0aaa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691aed73-6f14-4d08-9bb4-2ac53f82c2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7aeb288-6027-4b0f-8296-9ec4825ece9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8c74b5-776d-41f5-8924-c1cb23bfa845",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbade9ac-2734-4cc2-b556-fbd2d405b4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6fb48e-dae0-492b-962a-e5b7e095d27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc47925-20e3-40e4-95eb-3c4680ee7f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcddfcc-bbad-49c7-9b8c-32236181861a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac57b469-5d60-4c8a-90eb-9ecde12fb9a4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67ed2b6-d732-4ca4-914a-d23885830be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45538ff6-54b9-4e27-b3fc-e259363da89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848282a2-4bef-49ff-a5a6-c4164a8467a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38328858-b22b-41cf-ad86-4a38298e689b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6af8fd-dbf8-4dec-887a-06720b1d069e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3498cfb-abb5-45f5-a789-36e6c1a8a46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985fd7e8-aced-477a-959a-d0c01a6d0a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387b81c0-033b-460c-a05c-a01c3c7cadcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "075a0617-9671-41a7-97a0-4c6c0a0a1dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee086b82-7615-45e8-b394-1d54353da82a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7af8d06-e4e9-48fd-8c16-80dcb7205614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ca97dc-29df-42a8-8015-d31896b19ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee51ced-377c-4a9d-920f-83714b62933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52e4f25b-fd94-4b32-836a-22292fb72bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6afe0d-dfc0-4f86-91c7-93f5cde710b2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71620e5c-3e48-44a3-8024-4a768f872b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818f329b-95c7-4f7f-8b80-7904dca4baac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9a8f82-3cd3-4685-943e-101202114b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8aade5d9-50e5-457c-a1d8-f576761f88fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85164d23-05e5-4ff6-9412-fbb1f2eedc42",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f3381c-31dc-4767-91b7-56e74d487618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591a595a-30ff-44db-88dc-931265f681d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f60c94-d773-4bab-846b-7de098a1ee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16b9a507-86ef-4131-93f9-e8c69ad2d6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd19fb53-2679-42a5-8717-9a5395b3f2fc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba236d90-d0b9-4290-a6c9-040bcaedd9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddba1da8-8034-4ca3-8cff-a6d1724bde1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8083b41a-88a5-4bf0-bbf2-b8d1e23b5c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf1f143-3ddc-4451-8e67-decc93736e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3ca5ee-8284-4385-8f59-69dca58e226f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5f622c-9eda-4429-8778-7b36aec26081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1679ec58-ef7e-4109-acac-362af1c48357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf734e62-9746-4ba0-a701-bd93a6baf6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02325a26-2035-41cc-a99d-b1a6b8c28f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1868305-b5d4-412e-af93-541211632a1e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06107ce3-8eb4-4ae3-a3c5-f69682cb8a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63735457-4bf5-42c1-86e6-3b9446e28051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb055c9-1e9c-43cf-ad3d-bbcadac264ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4991607-95db-4930-93ee-3968013112d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726d8934-9054-44d7-89fc-99f858d1ef0c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35e5a38-9dda-4e1a-9c70-0266fd37b77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76b6322-5609-4b9a-8391-2e4e91facb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83344403-c32d-41eb-8843-e35dde814e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c038a649-b74a-47e2-8cda-743f9bd6258f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451a99f9-f6bd-4433-925b-72cc235c89f9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02320e5d-7ebc-4921-a100-d8ad2aa46d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e8ad59-34de-49d7-bc81-9ca0c77e72d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e48c9d9-c208-4a07-ac36-72f8fd91b08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3acf72-e25b-48af-9226-e8d0bf6038ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bb7b45-4f38-4ade-ac1e-4c8108d3a4a4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e453c494-aaec-4b8e-9596-696e16a8a551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92676e72-201e-4198-9d50-da5cd326f742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a096730-1e93-4a2b-bfa9-f4f5ca94bf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1fa965-ca15-44c6-8ea8-d97975e82330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3896d90-7430-4736-a19f-204becc5c5bb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096bac5f-8259-47eb-9f1f-44e9e413cf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe901c0-65fd-4306-9832-a8047a1c0adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ec0f65-f031-4417-8a8f-8d3879f78764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1db1322a-87e0-49fc-a5ff-54ca3a7965e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b5ae23-13e8-4be7-a32f-6581a1153ed7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89baec1f-d80b-4a08-9504-08c37626e572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881738a0-58e1-4e28-9d7b-76d5e4e9c23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f5eeb4-3474-42f1-992b-be7cff5a1b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9093a7a0-3a0d-4e7e-8c9f-bd850cf622cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cd95d4-7d18-443b-bac2-27009c9ef32f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5dd143-c5fe-4ac7-983e-5970da42a629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b19d8bd-eaf0-46d4-aff8-8cc60a9bb778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238f3933-a21c-499a-8d13-2bb4c765f4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e40bcc9-c52b-4606-8a59-30a216c3d987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76105015-d2fe-4a23-b327-5ff85d84ae77",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ce2380-5458-4c3f-9d1a-961145a69436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a5f38f-a12e-49f1-acaf-974bb393c04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e96581-31d3-4b63-8343-d34f7e012282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a28ee9c-a689-447f-b9f8-3051f08a8b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e4c8aa-f638-46ed-9a15-30424c2dd621",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dc493b-8cc8-4ca1-9904-7a9bbcc181eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "650a7308-fbd3-46b5-8255-6894d0da374b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe510887-8e6e-47fd-b5c7-a01c17ae2ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8410b416-35e6-4986-8367-d231e75a7b4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70d96e18-0a4c-47c0-800a-14a65438ee48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1cf81ec-23c8-4fc8-80b2-8e1c12406cb2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f843429-a828-4784-9622-8e6a4312af1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26d4f1e2-1dc5-442a-bc46-f50397392f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88741ee2-3724-4a8f-8a52-0aa66a4cb5e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f0b5c1b-b5c6-4101-83dc-f56cd7f57725"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1ff3fa8-e62b-47e5-9bf7-59919ebd9252",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fe909c9-daf9-42c7-ad49-32de2413f5df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e52179e-6310-4c1b-97c3-111333dc248f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "174d7e51-df6a-4157-b8c6-e69919837eb7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da246dc4-709e-4c6f-a6e2-aff97f6515c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf628561-7fcc-4848-b281-d89e10c06e68"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f34c0abe-53bb-4e1a-9037-5af8c4347b5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "762054d2-7250-4b11-98dc-031db4bbc827"
                }
              }
            ]
          },
          {
            "id": "d52c545c-cef9-404b-9bc7-502b83ed5ed1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c51163fc-8877-4f2e-93af-cae7ea356998",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9511c443-6f37-4cb1-adc2-3fa324411bea",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6480bd6f-81d5-401e-bbc7-36a5285b16a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f590d94e-87bb-49c8-9c1d-81ec64eefc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acecd4a0-f451-4b2a-ab0f-d29ed285750d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de19cb1-9d2f-450a-b156-94733f960439"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "97765319-fb34-4a7a-805c-5b2b8a3a9bc0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44f59e13-a9dc-4c27-a5e8-5e0b9d5d0e93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "363a816e-e006-4034-8a2b-a0be57f0c3f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fee3500-4fa3-4d7a-9325-df71155b4cc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c77d8caf-d9ea-488c-bac4-174b8fa48b99"
                    }
                  }
                ]
              },
              {
                "id": "445dd72e-f5d1-4b2f-99e3-2d0c5c6d8d38",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19cdc736-9a88-47bb-8e03-6016fa858fb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0790688-d9a5-4b64-af6b-c3f745af11ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e1e4bbb-7a56-4cbe-9f1f-6d6993e721b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "722f0ba6-8cab-4cbb-b03a-37c537308cea"
                    }
                  }
                ]
              },
              {
                "id": "8f0c3732-ca32-4ed5-b86c-ba3a5467fc0c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e8b7360-4410-4731-9593-531afa7e730b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83d512f4-569a-4083-b0f7-f433cb2b75bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee5ebf03-f172-4486-ba12-ea98689a3bfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "395e54cc-c34d-44bd-8f84-5ab93d53f2f4"
                    }
                  }
                ]
              },
              {
                "id": "c715c111-ef93-4560-9b1d-baf1886c55dd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbb55404-1275-4e3e-bbf3-83ef08ade8d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80148679-ca90-4f4d-b3ed-cb7c5a0d60ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30ffcefc-9d9f-43ed-93aa-8bc8413ad049",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2ca3b39f-c23e-4af3-bf98-fd75b7f6cded"
                    }
                  }
                ]
              },
              {
                "id": "3adaceff-f55a-41e0-8edf-d5ead40dec42",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d457b0da-8dfb-44d5-a72a-2a3b159d0967",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b8b94a1-fc89-4d4c-8fbd-6ddee9197e04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "012336f6-4db1-458f-ab0c-664c6bea188f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dd4c1ead-6f6e-4d44-9ee4-54204e967220"
                    }
                  }
                ]
              },
              {
                "id": "789d4af8-fa82-4a27-8491-824f32c0fb0a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2333909f-eb80-49df-99f3-903569dda4dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a2f4bba-98bf-4b3d-9f74-b9613cf502c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a43d7aa4-49fa-484a-8d36-9a85b7c4c54f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86cfbc71-1036-4f6e-b44e-941c829eb20b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a10de54-9f10-4bf2-a326-13f9e6b42118",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25e0cecb-a503-4e04-8e94-cf57832fdf11"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "16686353-ded5-42f4-af79-507c5ea4f1c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cbb4d2f7-f37d-4d64-8532-05f5bbd91a1b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aad58667-bae1-4c72-a1dd-ae93c3677d8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c176f669-f51e-4e01-805d-9cfe0725cb55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a3e35f9-998c-41f2-9fbb-060c236e6b5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acff618a-55e8-46ab-a4e4-c479f760d171"
            }
          }
        ]
      },
      {
        "id": "27a73cec-ed76-4a74-9268-b2451e08aa35",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "16ac8026-8b8b-472e-8848-22ae13e9b170",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c485a57-1267-4a43-8de1-a5db7c6dfbab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac6c5b00-0884-4d61-b881-89f7690846e7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faac2763-b4f9-4953-b2ce-49caac303429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5fdd53-c8ea-4e5f-96c1-bbc1f78d85a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe528b2c-079a-402c-bdc3-442d1005d105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "27660271-7b69-4303-84ed-567caef8ec6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e8a6af-26c4-4aa4-836a-03c00af2a436",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7629c1f1-7365-4e4e-820f-6ba02eaeb842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2751e162-2217-446c-884b-355b9c127fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d5ca8f-8969-48f9-a230-d2d5148391f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e933d4-3939-4dfd-99fa-7e26274d3fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a4e451-0f99-4cfe-bd81-1d4cf3a86d83",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd23da69-1932-4716-a317-e8d2f248f79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dd5892-25ce-449d-b5d2-96d9d14d1777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdc9c73-8e91-44b3-8440-083fd884b362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e495dd7-348e-4de3-917e-8ea4614920a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c66cf2e-f913-4d59-bd34-12e01fe5ea85",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f588c4e6-119c-40a4-834b-1b56038b1af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15aae343-16a7-4e61-ab90-d40551f7bfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1886869-873e-463b-8642-11fe31693129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6149ec01-f47b-4017-ae91-31d170de3269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b7cf29-0fff-4997-a89b-542d26fcbf24",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9ca9bb-1320-4a67-8e0e-95ee156eab4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d2e3f2-d270-431a-881d-d7605abeb166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9aaaa67-b50b-4add-bfca-3dbac561cb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "325f02fa-70c6-4489-89b5-54556085401a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7564f6c-736f-4898-adae-b5977acce519",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe1596d-b475-42e5-bd36-377f195cf6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5b8193-f781-45b2-acda-f5081671794d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b87868-9fa9-4150-8c6b-12148dd2abf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91452871-1136-4b0f-a634-6eaaac421571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef88bb5-824b-428d-83ad-8acf67a3ca60",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71144146-81cc-49f7-89ac-99426731efc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43438f2c-86f3-4573-ad80-e8c6056dff56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2cd162-b353-4afe-8991-c21e00576ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e584333-e02b-451c-b878-8c9f0d3e1cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b24cfb-f0b3-488d-95bd-60c2b0d672f0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902a11a4-6d84-4048-a42c-ab8959b0d1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313ca899-ab82-4c2b-a36c-320c7c47ffd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a00f4f8-d70e-4a12-af90-c2493fb20113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85280e77-b907-4784-84a7-77a17956e410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443fcddd-d66b-4d17-879f-56cde2749e61",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbe3d8d-3e68-40fd-a7bc-fd9438173947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597c7651-8f32-40e5-a1cf-0cd28e407cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21901ff1-545b-40cd-8d95-5c313f631634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11886e2a-8709-43ad-b140-c191cfb5849b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73b4771-2616-4cb0-9577-9cde2173f47b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76b867f-4ebb-443b-a4d8-aed5921a2735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5217d166-7e8f-4e54-b6ac-ff8c65b86795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91b3179-a6ae-4a46-a80a-3dd20ece1d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b625337-33ef-4693-9151-6d55c366f02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d26e6a-159c-43bc-acad-442d96aae640",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8995842-1c90-4157-96dd-ac190ad27351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451f0311-e422-4d17-938b-ad2d6fc920bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd59d8d5-754c-40d4-8aa7-46e7c036a352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b17c8c8c-ec9a-4b4e-ad15-9650acde9f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffd914b-98d4-4eb8-b2da-910564bb9cf7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4845ba8d-9915-4a13-9e46-9198f9b7a793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499df8ca-4b1b-4d12-80f4-50aaad0e52ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17451d84-806e-487f-8e90-195112400f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ac68fc-dd11-453a-90db-4d1cf89cf1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123e0d99-95f2-4a70-a694-2ae25da5c390",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2027d1b-e34d-48d7-b98a-c8da81992158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8edd1b-15c5-4778-bf4f-b4cd48abbc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a66041a-4ef7-4049-a39d-f286fdaa02bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb81fbb9-0a3a-420f-82df-30e1dd3e512e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff10f87d-9783-4787-85af-e7622a9288c9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b652ed7e-5aff-4b4a-825a-6f682b2c2dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcf2f11-cd76-4374-a83e-2d3068d290d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a580fa-0a75-4f43-8b82-aadd49f708a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3b3cb7-416f-408e-a1f0-d1aa4f233c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f134305c-fb01-4105-b6bf-224503cba939",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfd06ea-c58b-4085-91b2-40c88ca66a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131e2716-af86-4b2e-8c5a-50f36b897551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64134e60-c0bb-4709-8018-bbe555b7a13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "64d4e6e2-71c0-4f01-b70c-83bf5432a609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508839d2-6d84-4b29-b4ea-9f7854cb721a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b893de1-b70e-4069-89b4-b9c6002c1a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24f8ba3-0c95-465d-9dea-12913cc49d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d5693f-029e-44ff-9a4c-a55430b9fbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "33095d62-289d-43f2-b840-7194cbab3633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7c984c-3993-4900-8935-30c6a2554a05",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d840785a-23ff-4eac-b38b-3fe0244a011c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1a59e1-0e96-414f-aaa4-2d019b56a091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941c61bc-a098-4f20-a371-eee7df5cbee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0c6012-0174-42dd-a678-9d9497da0066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e565ba-cef8-4973-b0dd-11eed7b302a1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5056022-455c-4449-a190-2123027d9997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2169a85-f4de-4ab0-a605-e73f49411fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e018bb6d-2366-44c0-85e0-3bb3b3a607b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "162f22a4-a2bf-4eb7-8471-bcde9ab75062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd955602-3e3a-4c25-8e6a-390a45d03aaa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753b44c8-cf66-43a7-b9b8-d8a35b7d4e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddf8591-b54f-43d8-9600-2c038ab134ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcf0cfc-59e7-44a5-b629-930e5ab69ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02787a50-5d18-45de-8cbe-1042ea13d58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d53167f-edb9-471e-a5b9-bc99ef847154",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30233b84-e440-46ae-b0b4-722138a91596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52965a2b-5a12-4f42-8af7-0174f16563b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab513ea-fbe8-4bfa-8b59-aeb1367aaac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9ddbfd-a002-44b7-895f-5c4696c22deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db897d16-2546-48e6-809c-bbd4374fabea",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bafa35-61b9-4a88-9531-927cf342e396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6dfdd4-de97-4ec3-8afc-4d36f0240edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22882991-aa0b-4053-94ae-ea5d49d3f756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8520c27c-d862-40d7-b9f5-e1423cb34fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f42064-a6f3-4640-96ef-c8e4a6494476",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cb6001-53ae-466e-a2e4-cec2de0d021a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59880ea6-ac73-44ed-ac71-fdbbd3ac8253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbe1b35-11bf-4cc8-8796-d5a2d94fa149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71c8741-61bb-4ead-8a6f-8f4f1ea7db48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f4335f-e950-4ec5-bc44-08ee9e2a1bd8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1791ff-a091-47bb-91cb-c13f8aaa53d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056f687b-f6ab-4a57-a5e9-c6259512a55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadfc53c-9b38-47de-9069-b65155c3cc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d77aa7-2e7e-4f3a-88b4-1adb69488ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a550ef-ec84-42ee-a8b2-af66a90cc805",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0d4aed-54f8-4d53-94e6-af1c86e806eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169026aa-6570-4472-baa6-01421eb73906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9245e3-74dd-4e4d-b89e-278e29f5db09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf3b7f4-c1db-44af-bb49-3352deed5623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521de601-9d99-49c6-b4d1-dd22b9a5e2b3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8676368e-20b0-4e67-92e1-bb6c80ee64e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f5cce0-6e56-492c-bc45-beddf9b85357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad856ccb-b7c0-4a8c-8919-fa4e165efde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5826fb-6e03-4872-9004-181f0ba5578b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e30e398-2c97-44ae-948d-cdbf20f8199b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec097b4-59ca-4b74-a9a2-4e2a884cadcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac72c7b4-156b-4e6f-84cd-ccc9a3feff10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b807295f-3371-4956-a05d-27fc868796ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8811f6-db55-4ae5-bde7-038dfc3461a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593a0bfc-b144-404f-8c6e-2b9b118056da",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d381e32-bbee-4b17-9e04-8d13d5ee3840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd21d66-be54-4e2c-b5f6-0269558e6e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5332f1de-660c-47ca-9ef8-6736eb5101d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b87d2b3e-254c-4846-82a3-df1ed47d84fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2e4787-f356-4755-9be4-a25d4be69d0a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a447bc0-580d-417c-a968-4155950e4760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35145b16-5493-4ba0-a167-d2508bcee028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdb1c49-227b-4d91-a27f-497a93ccb923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87eb8518-6093-4514-8e65-7d1e7a4373d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c044e0ad-9437-457d-ae39-998a5144bede",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1deb5cc2-7760-4ad5-8f82-c1ac7605b84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dc7470-b4ad-4a7e-9f05-e89a21f55d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c0d518-34c6-4eb2-ab71-8b092bc83a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78178bc8-a989-4268-a497-f3320d56f554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7195244-6659-4a5f-ab84-3d7086656b17",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2b71c0-a7ae-43ce-ac02-a6fd87e41dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93614ef-6902-45b5-a4e7-a98c2d30a64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe4b61a-7c10-44f1-b4e5-6ea705590911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a41c129-f537-49d6-933b-ff48f1aeccf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3e6726-ed6d-46b4-b57a-693f96f48bac",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acd9aab-1afc-47ab-95ab-95928fe2d134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ee566f-fc57-4cf6-99ef-18f276f362cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af473655-53ae-435b-8121-76d563c2985b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4bcaf97-205d-49a2-b431-e49dd479aca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7696c2d5-99fd-4fa5-aa7e-f323c29394a2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e9e198-df93-40db-8082-38ade11f7109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57710fa4-21cd-4429-9398-533149da882e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1681e6-0ce6-4d1b-8b67-0795f5245bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4344c66-f199-43fe-a96f-814b27df1ff2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "26c29ae0-2895-44e7-a546-1b1b21817bde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70932cc9-cf54-427c-8f2f-074f31562064",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d636413-975f-4dc9-ac28-ec19ad06dcc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d33799db-9451-4a33-bbec-0e2dc4c06fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d45eb9-db43-4df5-a17e-b366e757fb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86bd0cd2-2e33-4621-99ae-6a3b0a99f072"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5875fde5-6f19-4b09-93d7-efeb5066ac65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "842663fd-38ee-4786-8889-22cea125c630"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57b8116e-44c6-4ead-927a-6c65ba41ae09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "896d723b-8992-4e62-99c1-a2f4b16de00e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfc6da19-cfc6-41bb-a74f-e8bd64531c21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c3a4a74-5d94-4efd-a07c-44b76383c825"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db346297-2a7a-4ef1-aef9-923e05da4e88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "210cdeb5-6758-4295-9caa-2d3bcd1dbe75"
            }
          }
        ]
      },
      {
        "id": "b69d1ec4-5431-4377-953d-fd090db147c8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "509290e1-9460-4ecf-9055-9ccf0ab87c59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8195a26-7b10-411c-b687-70b97650d758",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "865aeb39-a1e4-4a90-a759-987e2a46e196",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b99098-25b1-4276-af0c-1d4ec21dc977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754dfff0-0837-4c7c-b617-2947271215dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92048538-0888-4aae-8850-341d141f5537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed35a28-4b07-47b1-89f8-cc5a2ec7a471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f81c29b-5f31-48ec-843f-2700fb9464e0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691ebfa2-d4a4-4eb5-bf29-fdc6baf99bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb0a9e2-3710-45c2-84b8-dc757e20dd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec01a51-d8f4-4ffc-b01c-6e31a4a86b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9400eefc-7bcf-49d9-8db8-90839c0809e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff75fc2-fb72-4311-aa7c-d6393e6f3d9c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a26448-332e-473a-8ab4-d611637695a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eaf5667-1a42-4035-9092-b64fff7917be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804ab0f9-b363-4a37-9500-f9c8fc75d365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e95a70d-6268-46f2-86ed-42e4d34d78d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9e886a-f088-4220-8918-a46be88a604c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b02e18e-46e0-4b69-a6d2-02ea6170e350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3db705-882f-4b8d-90b7-0cee2cec7351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939e634b-cfda-4ca8-ae45-a31b88b33c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "667a1347-886f-430a-ac33-b1b0af11cadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba64bef9-449f-4854-92da-cc697e299481",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5db68f-59cd-407c-b0fc-4d64c63218bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e823e11-d300-454d-bec1-468b0e1c5520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9829f6c9-47a6-4740-b543-e05c40faf353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68428b95-688f-41ac-8ba0-0b46b2c3f476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7642c8-c136-4d3a-a18b-2e2ef85b49bd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6432c865-93a0-46f9-aec2-0225564f6378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1707bd1c-0060-4827-a88d-a3a39a76558d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b535b7-68ba-4822-9595-04b9541344b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfa0b35-9803-46c7-a319-ff2ec44f9c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6652cb01-49fd-4778-9810-cdd407ed1b7e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0a6a62-4f53-441f-ace7-d78633b0035b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7273b716-1026-4f06-9683-46190c5ac802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892e30bb-c897-470d-9dc0-b23f35ce05bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "42da89b5-1b4a-4420-b9f4-1bd898b35349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972dfaae-785a-46a2-bddd-85865cd91715",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4051e03-b622-45d0-96f1-b552d9998bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3277d06f-c283-412c-875b-46171e66d70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d30c6c0-0e7a-4929-b204-8c4fe65eaa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6260abc8-1389-4551-a3b8-e2721ed61276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4c35e0-eb25-467a-88e9-36f155f2ee15",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f46b69-9e3e-4f16-be4f-299386b9a857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a2f56c-e2ef-4c81-ae0d-61516f8d354a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bacb04-0356-4caf-9cd3-dec1418b5754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2295593b-785c-48fc-85fb-fb53acd1e353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3454728f-7b5b-4370-b564-f2bb7211351f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8186c7d8-95b3-411e-9fa5-e9c3a8e3aeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834e734c-128f-4ef9-932c-33e8701eef80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eadbc6c-2532-4ad8-a205-dd2566620c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "879c7839-b5d7-4f17-a966-c7d9e1c04e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c368471-fae3-424f-a951-bd59e1d9f1a6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97169411-9a6c-4e56-98c0-578a04eb2d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cc7d0d-8231-4981-bcfb-319fdd3568d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95099d9a-b091-4522-94c1-d6520a855950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "49c9f28c-4f7a-4291-9a37-c7c73e8840ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d040a93d-7bbf-4a7d-843d-7bdb89b0609b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cee97f8-9dc2-4a08-b179-19543e391416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c8e0d7-e9a5-4591-89f1-a1f8983f241c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58a530d-ed9f-48e8-8fe4-5bb3bb37ae24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2f05eb-a200-4820-9c04-0e473cbaecee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29795d83-c86d-44a9-b910-9b2a10158688",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb99947c-3fe2-4d6b-81e2-c89fd534a74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f609272-a490-4976-9e4e-bc70367cb403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ebbaba-c1bb-4bc5-95f2-4eab1f39e576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6301fe-a550-4ba3-b774-9765589de342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2097f2c4-f0be-4281-9ee2-4ae4d30dafcb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74839cb3-8966-4b49-b540-92874bf2dad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d3288a-4290-44d9-b827-9fc45eb6c9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3028217-1ebb-4178-a5c3-250cf6b4ad59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb740eba-87e2-4bc4-9ef7-562dd9c50652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1264beb5-60a1-4e63-b4c4-76a580352cc8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ca9042-919e-4953-8d74-5fcd8948354c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3be21e9-e07d-4b73-b5ce-f62815e7836c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94da9e35-d559-4c56-92fc-55f3603561f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e21db4f9-2ab0-45a1-95dd-b434bd2ae333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df33166f-9df6-4856-8a04-e8e053f282b9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef83474e-816a-473a-a85c-b886eddf9a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa647a45-e63a-4356-826d-266ee66bd8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba5c8a0-94ca-4a48-b341-f8760c21b8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3537d75-72b2-4ad8-a13d-74cd708acede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3b7653-fc3a-4f3d-8f4e-5ef3df19b855",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0276c0a-4112-473a-9519-bc32ec425c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e895eb12-2fc0-49bc-ae93-0cc806702c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f56b10-77f9-42a2-a7d8-bf2229603473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "78ddef7d-a247-4070-b767-ccf3dbcecfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dff579-f90e-443d-9571-f4c39e225f8c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa314f3-e9ed-4c26-98d2-a6b9d5fdfcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87793ff6-74a7-47b3-8ba2-03c25e2bbbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3b2f5b-5ad0-4988-a861-4b9949383bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9145fc16-6401-4f1b-a20e-e795da3c4edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c041fc0b-22eb-4510-8e41-2a5429889ffd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6504694b-7bf8-45c9-92d5-e61512ee2066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45adba7-69d5-4410-a94a-24dc49181a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4daa90-565e-4b47-a742-35f5d258db76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0109b7e1-70ad-4f25-a5b2-4d1a2ad79b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2269594b-f4dc-445e-980e-814e853a78e9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b079b6d4-c32d-4958-954a-b2fa056e813b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53791c93-b9b2-4058-ad07-24c89a9d6a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec5a678-aba7-4174-a995-835c8eede027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11fe8299-b918-4124-afc5-157ff36984d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92efb802-32ef-498d-9f1e-7865162d568a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4683b9e5-1bfd-4a33-8d37-124fe0c80fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d38486-7a42-44a0-8750-2955328813e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7292fba-7734-42e2-a03c-61170b292096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff0e252-92ef-4be9-a071-657a665473a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120b35bb-0cfc-4ff7-b458-bdb8f0a65bb5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e3dfa7-155c-44a7-9fa2-abf568ae680a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0b893f-3752-4c86-a8f5-bc18eb285fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720cb245-de23-47d3-adc2-7c0cce346537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d083d27b-8db7-4506-a7c5-6eced6c34754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8a6b48-1d1e-4cd2-a447-0e8ac7b294fa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43684602-512f-40c9-9652-5448d4dcc3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c8e30d-ab9a-463a-ab98-43970b14e487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02b623a-8bd6-40cd-b339-24b41024b03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3f4a0d-2907-4a70-82d9-6fcab0dc5309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699f0c24-3de9-435c-9257-4a1558853628",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe86f102-ef24-45fa-aec3-f1710102f639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a56aa5-447a-4894-9a37-5495a0c90b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802e64ce-14d7-431d-aa54-a9c652193092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "648aef36-9236-4adc-9dea-b7a5c2fb3ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0245f7-b8fd-4f80-8b34-0d648b54b073",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61857e06-95d2-4667-ab72-a9b086b1ce37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335b1cc2-a3c9-45ed-8089-c8f01c69dbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29724d3-698d-4712-b4e5-637a8480e7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db331554-8fc1-4fab-b2df-cc28073d2943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500a20bc-3524-4416-9c1f-d12d01fcccd6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f503e4c8-6b86-4301-b12c-5f858b0ddf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c018ef8-6585-4131-8e14-bce30e41945e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259dc5cc-045a-41d4-ac58-a73f81ddd38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0b16d8-5983-4286-8243-212dbabf28b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1985348-4f3e-4d2f-9eaf-10789267cce6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34827de-4329-4d47-b247-871f3c6425e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a883cb-0db9-483d-b917-3afa108dda6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a71513-00a8-40ca-9501-e90972203a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f02773b-23a0-4c81-9491-e6bb094d4b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4703f0b-fa9b-442b-8cad-b86071666640",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee0eadf-d16e-4033-830c-d84c454dfab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42aafc39-7e14-46c5-a4d2-ca2ede1d276b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7018246a-88c4-43a7-aa3f-1eba0018b9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2592343-fdae-4c3c-a4dc-8e68bcf24e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb70c0a-9e42-4cb9-a913-6b37d1950dc4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45c223d-adec-4364-915a-630967bba516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ae43c9-2ccf-4b3c-aa87-9e825b3c2858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55b7213-2815-46df-95e3-b37fddbaa40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4cea21-ac47-43e2-9fcc-81558f01e274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d6debb-141c-47d2-8ba5-5d7a972d76ca",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae8d574-07cd-4c6c-998d-3134f5452b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991e3261-c48f-45ce-9f39-6c6e7b216374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8566454e-afc3-4ce9-8155-8f525c39c37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd68ab5-0305-4a50-847c-e484e68bb450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe23986-7bd8-4a3e-8acc-7d0275f95b4c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46c0e9d-f991-4544-8877-a73967079bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0660db20-52ec-40d8-b6cc-1c0b19dee692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5439a9d9-00e3-4c12-add8-212d34bf2fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d913ab-823b-48e5-b980-8c11b68d4061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b61aab-a135-4e08-92fe-4184fd83324d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737908d3-0a13-40ee-9cda-d460b88261b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ceaa6e-3237-4620-848d-78fb886da6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385340b8-2982-4fc7-bdad-b62d85287882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83b9c6a-8a95-4892-b4a4-513039a7b131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd28a343-bb88-427f-9dfe-11cc5ebfb132",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3df322c-bdd5-4b62-b3de-b90b19e82e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2b4dfe-11ac-4caf-891e-5064d81c6780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a719068-dbb8-40a2-9807-a6e727b49a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "486870cc-cb4d-4010-9b9d-2e03e59884fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3245a4-0649-4297-80a3-fed465a9ec40",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa3a949-391c-45b4-8563-45a198383fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5191afc-fc9a-429d-8e68-8f9db12bcc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd6b8ed-dfce-4376-acee-a991e2ab966a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28da61d1-1bfd-48ac-8735-132f8e33f48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ee4730-1ba4-49f7-bd4d-9ff62ae2db26",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5f325a-c568-4c27-9d68-da1d7b711b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2128c8-c228-4d79-9aaf-0516f001c378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6246ca3b-a4d7-4f23-b8df-25d8e180f165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d332246d-5e1d-43ba-b144-d3d1d3449030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133bd9f4-5e4a-48a0-8b53-c9eb87299c00",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04dbe59-8d79-4bce-93b9-ba10c0390f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00002740-38b8-46e1-967b-1e6df72469ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d84c44-22fc-48b7-a0e5-cd3e4e341dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4388f09-0a91-4920-8d84-4aaa94a78469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284de981-1d8c-4dbf-828f-610645287c85",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009a6aa6-c26d-4da0-a4b0-bbb069bcc81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bbb1e2-9571-4735-89f5-21cb2f08b461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd98ce7-8ee9-4fc0-9ba7-6bfdaa33bec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f4b187-2b4a-446b-8b8a-df10fbe8e89c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "32a9e210-4911-4ce8-ac97-1d7066482748",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17a21428-b029-4908-9b9c-e74b92e45cf9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9117ba-7570-4064-a394-2fa2956eae14",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "47535c81-1a44-47a3-aebd-8f5f66a0faad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fd1405-f26e-4c0e-a297-26497a5ff44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b44264b7-8a2b-4248-ad7b-1f6669daa932"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52a598e3-2936-4f17-9b56-02d341bbb724",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c51e5f0c-1c8f-4a0b-bd35-910b606e8a49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "488187c4-2486-4369-9b9d-400cb438dc85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d2d23ea-622d-4309-9f0b-6cb9b81dac83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9746b5d7-5e4b-428a-ba45-986fc3ea314d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98eecb27-9d60-43e9-85d0-24190b1d15a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a57538a1-ebbd-4a4f-8589-e8e5c002f1b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fee532e4-1b01-491e-8e72-bba738b0c68d"
            }
          }
        ]
      },
      {
        "id": "27d77e47-4e19-4571-8065-19d0e246f42a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "954e7b29-e00c-49cb-8491-a8ba16b95278",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79ac8ecc-c312-4e44-bb93-84244f7656e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "89706d7d-f9f2-4f0c-94cd-8b0720e63fce",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeb8f3f-4c5f-4ef4-8c71-0cf224c2a007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc9ba9e-c944-495b-8f15-c74badfc44e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa2d331-a64c-459c-93f4-bb9cd1fbc503",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d316f61-e2b1-4ce9-9590-26cacd6c6a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637590fb-b316-4d52-8de4-f01e30695820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791dfd00-4807-4733-b55e-c0c6bc6b8104",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f42dc20-9ce1-4b9b-8024-c6ed3a44904b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddad1b1a-66a3-4fca-b5e9-63ca0b50a6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b9f5a4-d46b-402f-a702-294d17fd696a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b1ac23-c86d-49f6-a34a-05c67db4570a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051d2377-b3f7-4a55-b722-e71c85c8d3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c91006-7db2-4fb8-ac16-70837f0bbf28",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee53b35d-f2ce-4207-8e15-1bf492d250f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7354e124-bee2-4c25-8b03-e5cbea8d37c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede959b6-7df2-42c3-9a76-7166e2238894",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd05c04-e4b9-4c77-9fb6-65821a95044f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea36aa17-ec42-4b7f-8907-70c705f6d11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b989afd-ea95-484f-86b8-d315332c797a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cf4656-5ab7-4fda-8627-4aa7d787814c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7251dd-701a-4f0d-9c75-4c2ad0fc9fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c130456-68e9-458d-9cde-25d7bc1fd52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa586d1-0295-4254-9e97-4392cdd612f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70205022-74d0-4943-a077-a49253827ab6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2716adb6-4947-4828-b3dc-7e391427677b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ada826-100d-4671-9df7-01e0668f9275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33f6989-ac6b-4c61-a12a-9e6539ddb629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7214278-fc4e-47fb-b562-b94264dcdd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030e5ce4-2aa2-4f42-a7d4-b51e1e202ef5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe26b3fd-463e-4c61-a6bb-6acad99caa4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ee007c-8b44-47d5-ad62-953ad9e21e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e009c92-6f6f-4f1e-98c4-40b42a8f0006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8868b7-de91-4a5a-9d51-cca2b0020389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698efa5c-1127-4cac-b376-9d5fe593f03c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c5150b-20b3-47b1-89e9-e074d3372e62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e28cd2dc-e37e-4c50-a07b-df9ee479f15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a748d3d3-3168-4d95-8e4e-58cc5c682d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643d7976-0305-48c6-9294-8bf6cf2e7afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2e2fbf-8e20-4ae6-9edf-901f33198824",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73295dd2-9e0b-4e1d-8779-f24d4fa9ba9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c32cf0-94a7-40dd-a3ed-004d51069844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1757eaf6-1f54-4c66-ac26-61536ad25de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e587bbb8-aa21-4c24-822a-6f62b78e51b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c4282f-45cd-48f0-86ef-252228dcdb9b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f12cbaf-066f-49a4-970b-c925ac5b6cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7be581-880a-470a-ae30-c5bb9368b4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e47ff2-140e-4fba-9e1c-70fefb9b26aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f35d66b-cab1-47e3-9bdb-3d830679a7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd02bae4-f062-4e15-94f7-1829e82b8812",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f13add4-e3fa-4551-ad7e-e50083aaa942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0958e58-19f2-4ba9-ac00-420bdee578ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce348e67-fa42-4b07-825e-3a35331a1b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25c8f5b-0b3d-4514-b28d-9fd3c79093b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2239c3bd-8b53-49e7-b4ff-1d587533b838",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df202db9-aadb-4641-9e1e-559dd4cbad5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "196b5850-97ee-46a6-b868-722711984178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146f5697-b13f-4f41-bfeb-9beed0156651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674169db-bf6e-4ded-be04-18cae0097694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7179ce8b-c2ee-424e-b65a-37946146e707",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cbf089-3f32-4ebb-9629-b07db1ba7b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84dbaddf-e7cd-4ad2-951b-6a1725674863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e58db3d-f702-4cbb-ad65-2f28509c3c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8a76c5-dc84-4e9e-b661-ae786b0ea4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c2eb31-7221-4857-aca1-3cb7c555bc71",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc09b913-21fb-415b-890a-25610e2b5e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5fc3b2-f9e4-4e83-a83b-8c014b2db2b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbac8af-946c-4487-a8fb-08d51f60d718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41469b48-3748-4888-ac1d-ce5407cd1cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dc0771-d63d-4aa8-bef2-82497ae54c29",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec22010-71fe-48fe-a534-a9a8678116cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c230be-3b76-4fa8-950b-2f29f382dad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562b2d6a-4a9d-4677-b865-425e92743218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed26aaa-9f53-43c7-8679-3d1b473d66c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc07283-5917-49a7-8faa-b5a4eeebe946",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20104030-9721-4762-a8e2-2d503aaf5073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cb342e-4bfd-4219-a7a4-c1c2ea7a9e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb2f25a-b486-47bd-8eeb-67c9069e6b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6577b61d-5ebe-45e4-9611-aa1094a350f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a540cc-fb0d-4cce-95eb-404a9853343b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5c309d-b102-4a91-aa96-2ef1beae212c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d9181c-ff8f-413b-9cf5-5988d072ce41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e267382-3e7a-4a1d-9dd2-64067e46f18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c8772e-52df-4f17-8c90-0c4d3290cd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b4a360-8dde-46fa-bbc8-b15ef3470786",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daf00a8-547c-4620-b1c7-8fd479799f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09fb058-bf51-4eec-b61f-096196a2aa92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e900a41-2364-4b53-b4bc-97310462f8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ed14a5-e4d8-4b77-8ad0-67622b0e1ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f56aef-2d2b-4ce3-9e3f-493ddf671008",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e666f9c-b54a-4f1a-80a5-3d81fe19a359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27965c2-df90-40e9-b202-0b6933536ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96c3e92-a870-4d53-9b30-4e3f28c96a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bb8ef5-cf8b-4728-a9fd-16b6c324496e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82833841-65c6-46ae-89fd-d8e0a3f56be8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2f246a-19e7-4cce-a4cb-f39a5c24561e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83430841-098d-4c4d-b48d-84fb4b1106e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93839bcf-3b28-41e5-9bbb-ae89e664639f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc376c7e-b1d4-455a-9616-f81c107b99b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b47a36-1e50-4638-975a-77219829e639",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96c0ea4-9899-4a1a-9bef-4fdeb09cfb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f31327d-0cbd-4934-a646-fccf3b4387fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3ee583-6663-49ce-84e1-1837a7f449ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043fed4d-afd4-429a-8f65-cb1d5eea019c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb63071-9e05-4ddf-815f-5088494b2371",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82bb512-66cb-4651-b385-319a316f6cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fea96b27-529c-4752-b1e3-bd295dc06ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc0eaf2-1ea2-4a96-8d00-c1bb956c279f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23214b77-bb44-4bd8-b71f-5df8d08d892e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7949afa8-9f68-4de0-8066-1f0e50d26804",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5548a9a-5bde-4954-8d3a-97c9a7fe9468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4dcb8fb-bfb2-445a-8435-0928cbad9d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa18098b-2114-40ed-b817-2f3e5c5d0f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435e9fad-bbee-48a0-a66e-9bb509e59181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1aea03-ba9c-4910-a25e-7c084530e4b0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff48b4d7-7c06-4290-8ec4-cbf024ee781d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a7a6344-3f77-4889-9653-61905f102f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac948ab-7bb6-4fd6-978f-a243b9a5d5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f787d1c-4ca6-4baa-be8b-d782eae655d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f97e406-cca0-4973-861f-a77294728275",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5c9d0a-e53b-430e-b24c-53dbd87b4abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "032b131c-96c9-4a40-ae4b-f698de455d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a777d46-8991-4778-8648-0656c8eff9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c32b75e-885f-47f9-83fc-d9b433b7040b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8dbc76-c60f-4b4f-a7d2-21e016133d52",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963fd4d1-ce06-4898-ae73-e7f0752453aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edf0fd3-3dba-46ff-a49b-4e285669104b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548140f6-7a65-4886-8acc-61c5cca2451e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89b09a7-56bb-4d04-9e79-26a115718320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b530de-6b63-4529-9b9e-5d980984882d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0837ca-1ac8-4fa6-a9b5-3ffc61526e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e862f3-f6a3-4c78-879a-8d74325f6327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf7e0a9-33a4-41c9-9c0e-abb50ced6e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafc5196-c844-4f62-a1f1-ea8a2a983fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed94eaf-51fc-470f-a3f2-9a11f80b4c29",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb99bd22-8726-44f2-9bf4-8c4cfd5f600c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1025739e-af97-41ea-ad7d-4b5b6eab2572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3622a496-6efd-4460-a497-bd0cb9451f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a36a8c-ea02-4d79-a064-a7c4d048302d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf58015b-c157-4cb3-a826-1c095db3a28e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38360f6b-7b98-432a-b524-38523d886063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb37ab75-b85b-4789-b057-0cfd1af1e7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5096ed80-760d-49bd-81b6-afda9f582ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3e77d4-79a7-4ad8-98fe-a0eba784eace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e533ec4c-b5b5-4c9c-aab8-160e4d0f3f9b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f78929-a036-4942-b408-f158c4863129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0311e7d4-d741-4bb3-96f1-1fcfa6646091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba80aaf-09d2-4398-b4a4-0e6b2ed18534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f1de1e-bc46-42f0-b644-12b3edd4bd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2757b10d-0541-4e3f-bfd2-d651eb8565ce",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929cde4c-e19b-400f-a911-a86f7461f37c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a45fccb-b452-4995-911e-37809eb208d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82aca3f7-17fe-47fc-a8ea-f035588085fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65eb117-03da-4e3c-bdd2-a74fdc66df89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e57d0fc-641a-4cca-8e9f-b9458a94e76a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305ff40f-cf8f-4651-a38b-11f0f478617e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce337fd-75b8-4d66-9d68-ffb3529e85df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca7da18-c535-4dc2-9028-d301e3090674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582f1370-14d1-4807-852b-52136c0c1eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5291403d-0cfb-497d-b4e1-dea346278e6d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be104f32-3082-4b5a-8dcd-8fb86ecd059a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3db3b7-4c80-4f1b-af94-ef8bf061a946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ef435f-b762-4b3a-be39-ab862c18305e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1c963e-7e46-4365-aeab-fe61a6343391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aabfbf0-bb1d-4ef5-b897-b795793592fd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e33eee-7e4b-4f84-b994-601ca42d7c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a06859-15cd-43df-901c-64f6ec14f028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc571518-ed5c-4391-a969-4377b321f125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745390d9-6201-4fb2-b7f8-3ebf15f73c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d796db-f5cf-4e99-a4ab-369defcbf1c6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f0878a-db2b-4500-82ca-f590fe6f0ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6065e360-6191-4cdc-8ad8-8df3a771e817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355ec863-7a7e-48d5-b355-6c002bcfe181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5415fe52-883f-47c3-9e8c-6cd659201ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98bffa6-3fc9-4ada-acd3-702f651dd898",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366fc5d3-ef9c-4b71-847c-e1b759026138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173fe8d0-5223-4170-a130-653e49d43374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7393e382-0ae6-4d4d-8b87-2af5ebf812aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d95c8c-449c-454a-b921-fe5c97c63a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768de190-568a-4bdc-82e2-a2c35cb6283b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae18102-648e-482d-ae91-de75a5dc040a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1383ab4-ea29-4933-aba6-588ab52334b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702711af-1f2b-4ed5-a4f6-c10450b95c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea0a6f4-49cb-40b1-b054-303b38f41d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec02e432-caec-402c-b167-9974b091662c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f0a4e0-f815-4781-a612-4aa0fef78cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86a3ccc-8322-4fac-9b46-050511a165e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf017e5e-c9aa-4974-8a09-fec9b637655f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2575455d-0b90-4ecb-b5eb-c83f74093cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1369385-12e9-4680-b038-feb2c0afb0c3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc1cadc-28d4-4c8c-b42a-870032b53d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a437f683-d2a9-415a-8e60-c80b5a6fc496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33be783-3c2a-46f8-a401-302ee5f59fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382582da-da48-414c-850d-466fe287aab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf72b82-875a-481a-8cfa-ef16eff24fd2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409e37d2-f242-42af-9858-2b6b9b27471d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ec805c-74eb-4c48-b3ba-3443c703507a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32db9f27-f47b-4cac-acf1-ef651a1a21e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b4bb9c-8761-4a50-9c2d-aeaac1f07d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb2602b-22ed-49b8-94c7-eafda8790363",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48376653-27d2-4a17-a7dc-cafb41946dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b57bde-111f-4dce-b234-4adfcb74f8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d42dbd-0f82-4b12-a269-628817d99dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddab3b13-5bba-4a97-9771-6a910a94269b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71c445c-f53a-47e0-bdf7-638125989a33",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d928ac8a-0fbf-440d-89fc-b9f11b3b6270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cec59d-bca5-4fe6-8ea9-3d8c41193af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbde947a-3e92-4b02-979c-790401caa08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966d6210-7a83-44f0-be83-df06515522fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd820f5-48d4-4056-a329-77f801bc86ac",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fae6e36-d6ba-4464-a307-1521ea4885a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767ee670-91eb-4498-9501-fe410c9c2965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561d1ae0-27c4-4405-8aca-4f2e863b6a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d541679-c36a-4c91-85ed-96242d2cbbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e950b4-f706-484a-a61c-920e804839bd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734383e0-5d87-4428-987a-89bdc3c225b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92732c4d-104b-486d-b962-68a358a11039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224f9db1-8a65-4642-a2a4-84bc45ebe25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572c481e-1939-423a-84ea-8a6afe92d08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae3bf05-f58a-4a20-a193-ff094d5829d6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5083feff-b80c-4607-99dd-30fe47fa2376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb806dff-1d0e-450a-b445-db98574914e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7608128-6d12-4e6a-a8f2-e17a349b3cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1faff7d-96cb-46f0-9644-2b34e5703b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff67f1e-a990-40f0-9b6a-6f7a49ada18f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d16b8c-2ea7-472a-9f17-52ba914789b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d16d450-8082-4570-801d-430a8eecd78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504304ff-2235-445f-8d86-4339037926aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40540a01-7dc9-4557-ab13-33e752625c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866806f2-1dfc-4ad2-825f-9d7d8aafc49c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c231dac-f351-41f5-b6f6-4043399c8093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dade8ab-8d3c-4cc3-a737-bdfe756b2b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5dc3fa-cde2-4960-be58-5ccfa9f79b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f928945-377b-495d-a25d-4fffccb5610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e0a620-c193-46ab-97de-6da42ddf634f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82410c37-b8a8-4124-a81f-b6769fdc1d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b446578-5f08-4327-91c9-a8ecd006696b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5196f61b-4456-46cc-bb66-bc1a0167d01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937fb2ba-f009-4e75-a082-da798c0343c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d689b052-03e0-4327-bfee-f96ff3924c70",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cab1992-ced5-4564-8eee-4a29e7e63eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fb45ea-1d2e-46db-bee4-da90f7acf793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5941b74-752c-4d9c-a742-0c27d8caf23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d667043f-e114-4b49-add6-e9a66284d3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e67f93-68b6-45f9-8a44-a5535225f00d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44236a9a-d6a3-4ed0-a6c9-70a20fddaeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b474af47-a997-477e-bee0-8e27606e293f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a13511-314d-4c89-97bd-95a83b41bb3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0ebc8b-2c3b-4e32-9d2d-2f387fa3572d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589c19dd-ef62-4ef7-92e3-c74f827ac4e2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cec25d-3595-49f9-885e-d621a2c2e6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac26ee6-c295-440d-a05b-b629d6494e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0827c622-713d-4ec3-af32-4605b93745f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a062e79-84d2-4e92-bdce-e5ec9f6a9f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa28002d-9560-491b-9166-16331311286f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a84830-fc24-4206-8658-c4dc796b18fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1875a7d7-d02d-4905-b688-77453b33e8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04076d8-0e1e-4db7-a7b6-fbedf0157e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7e2abb-f6dd-4504-a867-326102a06c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01c2fd6-9b28-4a60-8ca8-8adf1458dc00",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab8b831-00ad-4373-bf32-31b7b2f22eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97c12ac-8de4-4f3d-a3c2-a663d324ec91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e85ac24-79c2-45f8-a4b6-fae2b821147e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8daad7a9-34b5-41f5-8ee6-bcac6d15bbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b7c133-3221-404d-9abb-2fc8d3a4baa8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f465ca-2810-4eb5-91c2-e4aa77482f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643e2ad1-37a1-429f-b286-748c3752a522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3f6cef-ca1d-4bec-886f-28aa9a5e7d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ddb299-14cc-4859-a80b-f4c5df5f258e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaef0799-a098-4020-83b9-51e5d23e6b7a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f71a90-722c-4987-8303-88f4a8e0facc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f22b114-95fd-43b6-bf11-fe784b1ea30e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fca367-4b3f-422b-8d82-e3001205715c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165754e3-267a-48cb-bcf2-62acee2b993e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e108a21-02ab-4f67-9bd8-60fc6c6a9e16",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15395684-ec41-4861-9728-0442a45302f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ded6c2-faf8-410e-96db-85a6b733a09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5b7597-05d3-4d5b-a98e-987d2213ed6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8226fb5-3713-45e8-9795-78d8750d527e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce025681-8c58-4fba-8860-a5b6c813b779",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3676de4e-d0ee-472d-80bb-381c8bbb93d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f8e6df-9240-4479-9e58-fbf95d23c6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fdcd51-9ed0-4628-96dd-07a1050d25cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b877bb6-ba68-4403-980b-fd196973bbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ffc681-2940-4b9d-803d-9267ca67c609",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e15323-562e-49e1-9d28-f6d7c9dff8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf1211d-36a8-440a-a3cd-d7cd885296d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418204ea-6a6e-48b9-b576-6ee5882d34b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f5708b-fdb9-4b73-b855-94ca6414ef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe93f942-ae14-494a-afa7-85b41148063f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e615dd-2c78-4f59-81bb-5c47d48166a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096dda3d-4d18-4abe-91a4-2c53e73323de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42f82f8-a3fe-4c03-bf83-d2fab87f18e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa4284f-2edd-444b-b8f2-1c7ad04e17c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a09cf3-831f-45c7-b0e1-b8e813767bff",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a40bafb-b52d-4c20-adad-36ab349e2e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4515d24c-fdd5-4dc0-bfc1-527c4fabc1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7638673d-cfca-4dad-9ecd-6985a40f5f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3af7e10-699b-4336-b3a8-28b9f2b98f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeabc4c-5228-4838-ac50-8bb35989c5a1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7638eea8-c2c2-4b30-8d2f-e62c9b352fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3e157a-5177-4bc5-8f52-c07f0f7d430c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736b237f-b1ca-4ed4-b18b-cbf187182af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a80ee05-80db-4266-bcf5-499ee809e43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645b7b93-dbf6-4b44-9351-55287bd7230c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7d1595-b91c-4725-9f0a-d39cbd202023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c51eaa0-be13-469f-b73a-38120333a565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6513c0d0-3e84-4a52-ac37-3475deb16d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeab7d81-c2a2-4e55-b3de-fd82c13ca913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc122501-55fb-4987-b763-9febbd3efde3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b169060-94e7-439a-a7e4-faee57f31403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08e9710-650c-4f82-8981-67777cc9b9a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5457d0a1-dbf0-4ed2-8bc3-e7357e2013a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29392b5-2c81-46f2-9f66-c255fb4d1cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4169cd1d-aea0-444e-a647-16ff1dde7aab",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcd21aa-c5ca-4e23-b2ce-74abcf44a2ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3083b4e3-52d7-483d-808d-f700f5e5ea1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3248704b-30f1-48a6-a8b9-2135bfcf585d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3f22ba-20c7-483c-896a-1e31d83fa199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0583d18-40c2-4d3d-b0f3-f662cc5ff7e3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e8d0b1-76c3-4364-b06b-3e745879148b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c03975c-5d59-4b2d-89ec-cc928130a4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7873ea45-1ddb-47d5-913b-23bf31756b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2aeb6c3-2715-44cb-b1f4-2c4cb4b7c471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1a0c18-58e0-49de-95cf-365c1a236a87",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f947427-adc7-4f85-b3e1-a40737b97df7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c3f91e-d212-4e79-94f4-c16952037031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5543fc4d-dc87-4bb6-b844-21e5335d4e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01de42f-5402-4bb6-8e42-9e91520f46e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b823a32-2f09-4f5d-a0b5-2f6588d62503",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42eff3fc-f610-4160-8bca-f7b71bb82958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29805bb3-f60e-4069-ab6e-e9c5ced162d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5d2ff9-9028-4906-a898-8515cba7334c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c834c4-d221-401b-887d-77499910f5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb39837b-885c-4772-9135-3468bee6be7b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c131d1c-2b7e-4622-a4cd-a72292472137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eddadf0f-7730-4e74-b3e0-e14a666c62b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21e0767-fb9c-46ee-93a0-4315a90cc4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d961851-cee0-4560-9b10-0424f03c800c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7b8b50-ce63-4275-a60b-8713a5c46aa5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e34647-62ec-4e25-a858-34efbcaa0b03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71f0847c-0b0e-4a7f-8f52-687adeb767f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a98833-cf4e-4588-a2c7-a035b9463722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4842c919-d458-455c-b332-7bd432767685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0a0a49-b15a-41c9-9008-9e8e6b842ab5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb67215-f83a-49f8-9471-486ba982912b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9ddc43-a2e4-4de1-8ad7-196a438cce89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213cecd4-0815-4314-b3b9-f3fe9757744d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2e8af7-ac9b-4eed-9e38-c6fa1b7b0d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ee6849-b95a-4f48-919a-75d9865219f8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98079609-f5ae-4075-a7a2-09c871a3ac72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b49b120-62d2-4be4-99a1-f8666c331426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb88525c-99f6-43b5-9fab-9466be061144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cb733c-8d14-4901-9f87-704db2b056b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a86e8fe-7db4-4ebf-8947-79c3ca30557e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5e2ce1-fa5a-4f93-9a81-52518f5a2d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a3db927-2b87-4954-a271-9abad359c633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab919dc-3363-4c9a-a696-f8248d45b436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae328093-38a6-487b-bab6-132329ae7610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4502299-6cb5-4522-8b15-3875c6af3ecd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10afbb8-03e5-452e-9533-d427e9aad5fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c06bec-53a7-46cb-8630-591b41adaf84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2e59d2-7cb1-4815-b738-81d9e963a098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffce570-7896-4131-a782-c13b6faf41e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7567e1-68d3-422a-ab85-58ee4229424f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dfa89b-c29d-43fe-92c1-888e8d4df8d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2617280-089d-4f52-8b6e-5cbeead665d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37aa214f-7c1b-449f-89aa-f8cddaeb6378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12589385-58b4-4854-82e0-beabc5e8f484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc90c8c2-90ce-42ff-a394-175778c269ae",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f566a7d-1e7e-4f19-8db1-41177fc9648f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2d44fa0-38f8-40f0-bd60-5e487eae6522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ab70a3-4ebd-4593-9051-eceaf2c19a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fad59db-ca5c-4180-8290-f36aa2ca759e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6713be-974a-492d-9c5e-7ad6f1b1fca5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45911294-9895-4862-b3ab-84c0d7acd969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01976f6b-bae9-44cd-8a36-95aede0b556f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db86a80b-ba4b-4989-b1f6-a9b99c72820b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c303878a-e691-4cb2-9a46-43e4067e8773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8768361-c66a-4c8e-9bcc-8054a397595b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a4ab2b-f00b-42c0-879b-03036619cb5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "004342a9-6b3d-4d61-8388-d91303e27af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daefea65-da26-498f-8e22-c48df58f1a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd6bfdc-04a4-4e3d-84dd-53e92d077dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434f3b90-45d7-495f-b57d-3e39c78f8dcb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b507e87f-bba1-4ba3-bc11-b12c47dfff8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6726b79a-e6d9-4ffe-991c-4e6539425190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bf20b5-062f-4a8a-a1d9-ec9d44e7a137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5779fd04-0c93-41a4-877d-977029e82d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e289e445-c0a0-425e-b953-16ca9f18cedc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3803acd9-33f6-4835-8bf8-7480ba725f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "996ee563-6f53-4aba-b4d4-e4800526b96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bc9eea-5e20-4713-9c28-e2a3fc92bf6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a44a37-4d91-49df-9cfa-e88b384cb002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc50972-3f71-4dff-85e5-1043fe503b45",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2596f5f3-5dca-44bf-8a8f-b9c6a86d2e29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5406fc55-46f9-456d-a946-8e97c9ad87cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba1f53d-ba1f-43d8-8dba-e15490ecc6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3967db-bd8b-4b9b-9268-e8274eaabc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d417708-e73d-411c-b667-815f36cac1b3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66118c5-1b7f-454f-ac30-793591245119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "512f3bc3-f4f0-44cc-9b92-869b55415a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b30163-3ba2-4366-8741-fa6c01fe7204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a72d1d-e844-4654-9008-852fc69a9d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bad011e-06e3-46f4-8448-ba911cc1f755",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2c455f-38d1-4aba-ae8a-a852515abc8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82c0ba3-4a0e-4773-bf51-6009e4ca4632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9a73b5-ab9e-48b5-aa0f-cb447836e066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a78e472-cf81-4cbc-a40a-97eddda8e064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d25e0e-4c39-473b-b96f-901a863cb124",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbcfc2b-6995-4f59-b135-067846f3b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ad827f-3727-408f-9a30-6bf2df77b690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d191b1-f412-47b1-8f0b-e39521a6ed5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bb5e4e-99e5-4a72-88c3-d65080e4ab80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ff7856-bcc9-4e60-a753-180e353a32d7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a33d6e-a976-4254-a607-a29676bcbf2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11465e60-d5ce-41c9-ad9e-d338f0cb1334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab107398-98b0-43b1-8915-85f41a49b8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69bdda0-b282-4724-a256-ccb8d1a9cea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b4801d-bb59-4769-8def-95be8dbfb37c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a3935c-25eb-4a18-9c14-0efc3247e698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e9d46c-430e-46b4-be61-441044f57133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d774d611-bf0f-4a32-8d63-a9a77373b35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41649d7-67a3-444e-8ec2-567d836e9a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8346b913-ddee-4c40-b428-8a4645b9c1ad",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1dd96b-6b4c-4cc2-8cfc-49c8dedd2978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae028c5-43ea-4aa4-ab25-76807e746026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09924a0-5cbe-42d6-a4c1-049c4803aa5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5b3c3a-a282-45ea-a382-1a22397049eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bacae09-0dc3-4d7e-942c-33b0594ad704",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151d4b67-fffe-4291-8a88-8617876d13c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c618b7-e20d-4a6b-ad86-6c38b830ede8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33125828-2f24-4535-a679-60bef194cf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51aa5df2-5fe0-425b-8b95-2ebef3677b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3e08b7-b755-47b7-9ce0-17b7820dfc78",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd781d22-7c80-450f-a575-621703d21a01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c465aa-2428-4be8-b75e-ddd78d87a15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c38234-5329-4f3a-bb0d-11004ad89aae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527208b9-f765-47e9-952d-9e2e29eb708e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0d0d50-b61e-4f6f-a956-39337cb75e9e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb7b9a9-030b-43cf-aae2-90cf2d7636cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cf485f0-5eff-4899-9200-b3521d48b4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca02ebd-0423-4f20-9f63-dd0fe69ff155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4385f9ee-5d6a-432d-b7f1-9a5d76d86569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c17c358-91bf-4578-bf9a-0f3f388ec424",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adca7eca-19ea-4833-a666-985be45de966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5787bc14-eb41-40df-96ac-7332eb2c667f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddae7258-1f11-405b-8dbb-6ad1cf3549e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15c7c95-acee-485e-9cc9-488b2c5fc37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437ee7f5-6e66-4753-a4c7-544b5f7f337b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7614ca-b9ec-47c5-a34a-104ef367cfae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77374965-4403-4273-bf6b-bc2e9b04b446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc2bad0-b58a-4a46-ab84-a3d30a5fd462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d87ffe-fd8d-4ef2-b1c1-3da7555bd6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210ac386-5eb1-4840-9ec4-1b84022a2167",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28939323-2965-4193-a3b8-04439e43db2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e617f8f8-fd92-4bc1-9d9f-230bba841828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3131ba1d-54e2-4197-a8c5-57b37315f901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c71b40-ec62-4b9b-b717-15a982e11227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956522ba-da6f-4bd5-a9c3-e4ad0f9207a8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd65f72a-193e-4a71-856e-6f2844085183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3001d4ba-4ff9-49ea-b326-5eda47332981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8ecb7a-705c-4696-b0d3-7134431a0903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312046a6-3545-4d3b-83f6-a9974e5a6368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc551a1-279a-4c8d-83c3-a85dd97a7549",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1432768e-eaad-43bd-9c6b-1e3e7e977d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62465da4-a235-4c95-9d85-cb3f49c04858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1ebf7f-7794-4992-b48b-3552b7662398",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fd8483-effd-442f-87fe-81bbbb9fb899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10380198-66e6-4c83-a062-4044461ad6f4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3807a22b-6d3f-43b4-98ca-ce7c3031a6cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a7e912-e5a2-46a5-9896-ec916520903e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7f1bfb-1af2-47f4-a4ce-3b1366b0dad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb56916-401c-422c-ab5b-c98dc09e99e7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f672935-a750-4e40-bf4b-a721ef5c24a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e21ed19-db00-4e69-a51a-ab768c1d3e86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30cdec62-493e-4554-a941-9b16d092c538",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14b09a9d-218c-4337-a679-9c68f3c251da"
                    }
                  }
                ]
              },
              {
                "id": "ff57fb47-1e89-491e-a25b-1b8ecdde6d33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a6990d7-8b10-4d07-9327-ac87c3bdb569",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7f16cc-277a-48b0-8375-a6bef3ad0642",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "65e9bb2c-b2e3-41d3-8c41-34edd4eaabac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921b8862-08bf-414f-b798-b78d46211497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "209b4782-cd3b-465c-ab30-99e5916bd418"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "885d4956-e3de-4b4a-9bea-f7c0869f6485",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13b34a5a-e2ab-45c7-a4d8-5bae521d9d08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "931bc021-1228-4dda-ac21-df885c0d1561",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8ab59ea-253f-48fa-8ff5-96cc41af6060"
                    }
                  }
                ]
              },
              {
                "id": "965a430f-e160-4050-a345-fc9d9a5ee19b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3ec685c5-7b0e-402d-871f-c72f99f4d03f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f931d5b-183c-4233-a10b-2f5dcdb66fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "207a96a7-0b67-4ee7-ab14-8d1304fc3bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a81eb17-b2c2-483b-8045-0c6a4329d816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22f7957-4485-4879-9f85-e3a874d3afb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "309856f1-34fc-4068-98e7-aa0b6c6e27f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a31a866b-4e3b-41f0-bd9b-13030451fa9c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cebd7ae9-4d55-4153-8681-4dcb4bf7c36a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f24e04bb-301e-4c24-b919-b98ffa98aa9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3bda81f-7138-48ce-b87b-9043eaf3ca80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3707d8a4-f9d4-41c1-9c06-51f764ee33ce"
                    }
                  }
                ]
              },
              {
                "id": "22770b84-93fe-4614-adf4-d054d7fd1d09",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50cfd501-ccb2-4347-a89e-85364223b424",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e51f534b-2f23-4a6e-993d-0f9e49d52fba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc84993e-e3f0-46f2-9d08-4cac16172a6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5808d4a-5e6f-48d2-a9ee-af422b1b8a81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46801f2f-f57d-496b-9165-902f2909efea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6519005e-660d-4f0c-84c7-2a48c941c65e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e407f0f-efce-4af4-939d-8d3e63f4bd2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd455e31-d2c8-45ec-a9f4-3c0ce55aa2d0"
            }
          }
        ]
      },
      {
        "id": "c57d81b8-9070-4667-9a69-0f67dc1bdf2b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "97ec24b2-b678-4d9a-9b56-ff2dc87d3813",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cee88b88-e4a6-4c9a-a047-d884b481f6c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6aaab05-02c6-428d-8878-70f8e945f20f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef733eeb-4b89-4e9b-a45c-feeba4ce4966",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "12495bb2-053e-45fd-8991-823450d2ce21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce936fc-9990-47bb-b9d3-2454243a83ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ff69155-4d79-48b7-b071-69a915353d38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0731d26d-6992-4a59-aa35-e8375e57b55f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3964ff5-e062-4833-85d9-e0237014f74e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb110529-4bc2-4a39-9244-c51480b9e2c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc9d3958-48f3-4c56-b69c-397bb5cf5518"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0faa201-0de8-4f51-bdb9-cf77f8cad4c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3d7a00fd-3f87-4515-aab8-89ea8139a0b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "976ef72d-b446-4815-82fc-d65996fae63d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc14e340-bca6-46e2-bfdf-0074141e600a"
            }
          }
        ]
      },
      {
        "id": "9c355169-71d1-4f98-894b-9a9724d076a1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "81b8d03c-0f32-4ba2-bc00-4f1a69dc7ec5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd39e589-058d-4b02-8545-31e762636535",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3215c62-2696-4d59-84e1-90ea892b7a9a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a807ae5-749e-466b-98f1-b48c0a3a2f21",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87185ee3-84cd-4502-834b-363c92cad897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53524059-2901-4ebc-b3e7-5f4f82e387f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e596dc72-1e9f-4bdb-a0ac-8dfe2d247b41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20f6d68a-58fe-428d-9fc7-bd554a551581",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "550ff67a-a579-4b8b-9c18-35e667a9fa1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2db5516-7323-468c-a854-e79911d779be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "178e873e-693e-453a-9bbb-9572871390e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc207e70-4f38-4e1c-99c1-0cec0dbcfb89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea68b618-39c1-4d06-ae32-33b42a344bd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7325df3-8a34-4db4-8b65-ce7f8f5f8fbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbe1d94d-8ebe-48b7-a0e6-f723c2ec4c67"
            }
          }
        ]
      },
      {
        "id": "074a1760-20d7-4fb3-862c-3b1b722fbaa5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0a914d4f-4d62-421e-b4f5-65b485c0fda8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3576652-1efe-4513-bda6-7a36666f8a4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0108ff0-a09e-4796-bc00-ca8429c126bb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5870ec0d-237d-4bdc-9b20-e0a50d7a0c27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c95540e-dda1-4b46-b335-26500fda64af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b770785-687b-4ecd-8c67-7a1d9f6e3558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f77eb729-6722-4270-aaab-9a0b8f0e1a9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "753ce2bc-c8a4-4a90-b861-06adb98976fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "600f7c2d-801d-4bbc-9403-8f7480c28bbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84f51fb6-ce5a-4e31-aaf6-8681131869b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c80342bc-df33-4a25-bcb6-94d169bfd3b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e69cae67-4e93-4a66-88ac-650426c6b822",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1791c98-6b62-42f0-9161-0e4138c179aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf236e00-7e9d-4354-8b6a-79acd6f39fff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bdf10205-93ad-43ea-9357-ddc8fac600fb"
            }
          }
        ]
      },
      {
        "id": "42e8705e-245c-4909-be0d-b0c2bcd3c9fc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff5131af-0d3e-43a8-836a-8b651ec61b29",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13b30e03-5bab-493d-a468-d35d94041a42",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c624ab45-2042-4d23-a297-6f5fcbacb183",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7391bd2b-8d88-41d3-8b5e-5d08ab9858fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fef2c3b3-25d2-4479-a95b-e9b6e3eb9ab3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 15.277192982456125,
      "responseMin": 8,
      "responseMax": 245,
      "responseSd": 24.535910077857725,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699317280248,
      "completed": 1699317299994
    },
    "executions": [
      {
        "id": "edd15bca-2e91-442e-800f-66b0d3918059",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4a788305-55a5-4cfe-a2ce-13bca941b2de",
          "httpRequestId": "23c4ef7e-8a15-43f1-9d05-9a44301630d5"
        },
        "item": {
          "id": "edd15bca-2e91-442e-800f-66b0d3918059",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c76ae7b7-b8dc-4dc9-836e-dfb2f05d5569",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "04a005d4-15f9-46c2-a9b2-80fa30ff477f",
        "cursor": {
          "ref": "446679e2-8224-441c-8b4a-11495e0efb7a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c1ef820b-2dee-4397-9aec-ff1726a942c7"
        },
        "item": {
          "id": "04a005d4-15f9-46c2-a9b2-80fa30ff477f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3b58f6e7-69a5-469c-a11e-7467217f85c5",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "5bce1e06-fe35-45af-8d8d-f60b0d312f39",
        "cursor": {
          "ref": "73442541-823c-4b1c-b055-b8b10d1ce0b8",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6b046860-c375-4e18-ab8d-808930c6bfe2"
        },
        "item": {
          "id": "5bce1e06-fe35-45af-8d8d-f60b0d312f39",
          "name": "did_json"
        },
        "response": {
          "id": "3f257ce5-2e4a-4121-8c0a-b9562cc0d737",
          "status": "OK",
          "code": 200,
          "responseTime": 230,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cb4326-ada1-4dfa-9803-f24926837267",
        "cursor": {
          "ref": "9538aba1-4c56-47aa-974f-f073981cf828",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8c0bb4f2-94b7-4bc5-8cab-ff71dfd992f6"
        },
        "item": {
          "id": "73cb4326-ada1-4dfa-9803-f24926837267",
          "name": "did:invalid"
        },
        "response": {
          "id": "82ce8aa6-5944-4d37-b838-f3cc79f603bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cb4326-ada1-4dfa-9803-f24926837267",
        "cursor": {
          "ref": "9538aba1-4c56-47aa-974f-f073981cf828",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8c0bb4f2-94b7-4bc5-8cab-ff71dfd992f6"
        },
        "item": {
          "id": "73cb4326-ada1-4dfa-9803-f24926837267",
          "name": "did:invalid"
        },
        "response": {
          "id": "82ce8aa6-5944-4d37-b838-f3cc79f603bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecafd154-95c1-4b6e-ae7d-1c2e4518f6db",
        "cursor": {
          "ref": "97318ccd-0dea-43eb-a1f8-db2df1d8dcc2",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "24257d4a-39fd-48c8-8c45-6db9131a05bd"
        },
        "item": {
          "id": "ecafd154-95c1-4b6e-ae7d-1c2e4518f6db",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "51dd3484-caf5-4238-a032-811d394ed168",
          "status": "Not Found",
          "code": 404,
          "responseTime": 115,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2711ac-9dac-489f-943f-d09994dc6010",
        "cursor": {
          "ref": "72e4a11c-ed56-4646-8289-c5bb6ab3d5ce",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "91ab85aa-d3f6-41b3-8ef3-9c087c99ea68"
        },
        "item": {
          "id": "5f2711ac-9dac-489f-943f-d09994dc6010",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "25c57601-e40a-41e5-9a12-d9da2d138b7f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43165a0-d9f8-43f1-bf7f-ae93091b7a00",
        "cursor": {
          "ref": "12b96d83-a0ba-4565-9111-d54d483a893e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "12510d80-4826-45fc-bfc3-a5b1b2e9b855"
        },
        "item": {
          "id": "c43165a0-d9f8-43f1-bf7f-ae93091b7a00",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fff2f636-c099-455d-8773-cda09e29732f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21972dc-d36f-4f09-8f67-997d79501619",
        "cursor": {
          "ref": "f43f846f-77c8-47fd-af01-bed1d949e3e5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bfa709f2-f42e-4b30-8998-5a4ee2b375eb"
        },
        "item": {
          "id": "d21972dc-d36f-4f09-8f67-997d79501619",
          "name": "identifiers"
        },
        "response": {
          "id": "1b1d261d-4520-4b33-8584-41fba74d9520",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8784d1b8-471a-45b5-a898-9d3480954c9a",
        "cursor": {
          "ref": "79d00df6-4f09-405c-a7eb-c839dc609b00",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "429e652c-4e0c-4035-b3ee-33f90d039eff"
        },
        "item": {
          "id": "8784d1b8-471a-45b5-a898-9d3480954c9a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "77157616-a37d-468d-8caa-60db667407cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd55d9f-851e-4859-abb6-5fdafbd40ee5",
        "cursor": {
          "ref": "76757c8a-a902-4210-aba3-2176defd6d66",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4d953e40-e4f2-495b-bd1e-050345258b89"
        },
        "item": {
          "id": "bdd55d9f-851e-4859-abb6-5fdafbd40ee5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d90b647d-c103-4fcb-9fb6-19443f13ddcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafae777-60a5-4524-ad00-26a4c563e3b0",
        "cursor": {
          "ref": "8e75170b-5378-430c-a1d4-555f03ff5fc3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a48201bc-e590-4c0e-96cb-31ad5415310f"
        },
        "item": {
          "id": "cafae777-60a5-4524-ad00-26a4c563e3b0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8bd0497e-5407-43ab-8b76-8fd60e28f97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee977a5d-bb15-44f4-b89c-31342ee3d772",
        "cursor": {
          "ref": "97117cfd-248d-458a-9424-13b040ec2f27",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b98fcb00-f3a9-464a-8048-6d72eff26d6b"
        },
        "item": {
          "id": "ee977a5d-bb15-44f4-b89c-31342ee3d772",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5c2f01ba-0bb2-483c-8727-91f2e87f167b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee22d2e-a8a9-4bf2-84b4-c0eddfcb02cc",
        "cursor": {
          "ref": "41d44410-3ec5-4378-b0cb-9c5d374c5917",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2ec05d41-f390-4bdf-9473-4fe6bbe81a17"
        },
        "item": {
          "id": "2ee22d2e-a8a9-4bf2-84b4-c0eddfcb02cc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3cb229a0-9fce-4f42-948b-a432701a2654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1beca208-d5fa-4c9a-bffd-d4db65bd1797",
        "cursor": {
          "ref": "3c6f0f50-f041-426e-bfd3-498416fab6f8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4a8ba1d6-c8b9-46be-a364-6fd70ed52863"
        },
        "item": {
          "id": "1beca208-d5fa-4c9a-bffd-d4db65bd1797",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5bf3f775-fcbd-4575-b69c-868e04bf0022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bb9c7f-8067-404b-b003-d23d9b73eda9",
        "cursor": {
          "ref": "7920a554-5c2f-452b-b695-32cdacabf97a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dff83fbb-87fb-44b2-9903-9fe86e85176c"
        },
        "item": {
          "id": "e9bb9c7f-8067-404b-b003-d23d9b73eda9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7c3cd800-96e9-4f7e-a88d-6fc192224d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78756b27-353a-45ae-b87b-9e1c62b03f8f",
        "cursor": {
          "ref": "addd8e9a-6bde-43b1-ad7e-d3aebd66a912",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2c3ba6b6-c2bf-42d2-b202-557f38001c59"
        },
        "item": {
          "id": "78756b27-353a-45ae-b87b-9e1c62b03f8f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "363b77d7-5e34-4be5-bc37-abbd32b87acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bc7165-edb8-4c42-bda8-cc0eff9e92f5",
        "cursor": {
          "ref": "1bb6db66-2878-46ef-b191-3c134dc3f474",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "099a4255-8b23-4450-9c01-c20eedb55f08"
        },
        "item": {
          "id": "a4bc7165-edb8-4c42-bda8-cc0eff9e92f5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bd3d794e-2b66-4897-8f29-6a751fd92011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791caa25-9f39-480c-b610-7778d46a9559",
        "cursor": {
          "ref": "af01b288-f00d-49ba-8530-44fa04858d85",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a810a187-ba0c-4cd1-94f8-6d19bbcfe18f"
        },
        "item": {
          "id": "791caa25-9f39-480c-b610-7778d46a9559",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a0b7c114-4704-490e-9811-b187409adc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1276ea0-4e7b-403d-b5dc-81a94e8bfb11",
        "cursor": {
          "ref": "8f649bc4-319e-4a13-815d-6a4872864cee",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9d7b0e14-46f4-4852-b063-d0366ea5dc0e"
        },
        "item": {
          "id": "c1276ea0-4e7b-403d-b5dc-81a94e8bfb11",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "31e6c7d5-e8ef-4212-8591-03021c21b9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10081575-7378-4e60-bcbb-f25a15b37ce4",
        "cursor": {
          "ref": "f6356284-7f66-41c0-94e1-026a9e1fa439",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e5c85ecb-40aa-448d-b8c0-c7bcf13d5ff1"
        },
        "item": {
          "id": "10081575-7378-4e60-bcbb-f25a15b37ce4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e5821e91-4fcf-4ed5-a843-9318751281fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db286601-555a-4689-bb3a-09c177a7f601",
        "cursor": {
          "ref": "66692bf7-74af-456b-b9bb-42d161116e4f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e5be7474-e976-4dc3-9b8d-d60b3ae5970c"
        },
        "item": {
          "id": "db286601-555a-4689-bb3a-09c177a7f601",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d88c4489-bdcd-4cd7-b220-53651d303ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca4348a-ed62-4f67-88d1-661903673fec",
        "cursor": {
          "ref": "518715d9-a015-4f02-90ad-0b1012cb55fb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5ebec965-bf0c-4331-8014-1a49f7b67c9b"
        },
        "item": {
          "id": "6ca4348a-ed62-4f67-88d1-661903673fec",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5429c7a4-b5cb-4b3c-ba67-d88812c805c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9607340-53d0-4f13-a717-b1d82c31bb27",
        "cursor": {
          "ref": "a3311fd3-a98f-444c-82fb-d0ba3af22796",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "adf8826a-1741-4953-81df-48fcc82e42f4"
        },
        "item": {
          "id": "f9607340-53d0-4f13-a717-b1d82c31bb27",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1fb7cb43-7cb4-4329-90cc-4052de3bea7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27119cdb-5e47-440d-bc28-061a3729517a",
        "cursor": {
          "ref": "912d5365-9958-445c-a333-4263a7372983",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "548f81af-47a2-4863-9d25-01ad7598171f"
        },
        "item": {
          "id": "27119cdb-5e47-440d-bc28-061a3729517a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "57f4b43e-5026-401b-ac19-41dd87f8df31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33667e7-49d9-4ef4-a24b-25834ed6ca49",
        "cursor": {
          "ref": "784db1ba-d84f-464f-874f-b4f59adce999",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3c3ada14-7b6f-4d8b-ad00-bfd4bad74a53"
        },
        "item": {
          "id": "a33667e7-49d9-4ef4-a24b-25834ed6ca49",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cf79cf2f-a3ae-414f-a455-bc05f87eed8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59180f27-30de-4422-b4b5-1b033a4687e2",
        "cursor": {
          "ref": "13c4049f-5aa9-47f5-a0cc-3d1d4e3bc839",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b192f4a7-fd7e-49e6-84f7-eeb2c06999ea"
        },
        "item": {
          "id": "59180f27-30de-4422-b4b5-1b033a4687e2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3a93923c-9d06-4397-a09b-79ab7b3141a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6086a3da-7620-45cd-8964-41b9445846d1",
        "cursor": {
          "ref": "c1c3b885-fd39-470c-99e0-4bb0aef51a2d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "83e3615d-d2ce-4477-9cf0-e19ffa099781"
        },
        "item": {
          "id": "6086a3da-7620-45cd-8964-41b9445846d1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7aa9c078-4988-4bf8-ae62-8a38cf03f255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840412bb-61e8-41c7-a7b1-836202849f22",
        "cursor": {
          "ref": "d0565c4f-bc22-4175-bb49-2a5453202a18",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "18db071c-57f3-4f72-875e-c7344029397b"
        },
        "item": {
          "id": "840412bb-61e8-41c7-a7b1-836202849f22",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a380de77-7ad1-4cf7-8cbe-e837df8d9371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7917d8-0156-4eb0-866c-9a88ea3a9ff0",
        "cursor": {
          "ref": "dd197418-59d5-41e7-bcd8-8a1cf4945855",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "58577b1f-07c0-452b-9ead-443becd51fe2"
        },
        "item": {
          "id": "ee7917d8-0156-4eb0-866c-9a88ea3a9ff0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5f73614a-a6ed-475c-8a0a-81c4be1980a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c38cb68-dbaf-415b-abbf-8612bfe68856",
        "cursor": {
          "ref": "36fae73c-b954-4f8b-ad62-6faba66146c1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "909f18c2-0fa9-4b00-b9e9-11450b298b7e"
        },
        "item": {
          "id": "7c38cb68-dbaf-415b-abbf-8612bfe68856",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b5d6926a-7f3d-4f24-b6b7-aaf18821ae64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fc5ab1-b3a9-4411-bd18-c594d3416f24",
        "cursor": {
          "ref": "6c8416e1-cfda-45ab-aa3c-3ca7efb5dfb5",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5d83ee23-94eb-44a0-b25e-1dd359871be7"
        },
        "item": {
          "id": "13fc5ab1-b3a9-4411-bd18-c594d3416f24",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d49bcf5b-401b-439c-bbc7-261a0c07245e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d93ce7-7737-48d5-85a1-8db5ed116bf7",
        "cursor": {
          "ref": "8849c085-91e7-4c77-bbab-eabbe0e3669d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "533efff0-ddfc-47e7-8567-f6ad6e00e41a"
        },
        "item": {
          "id": "45d93ce7-7737-48d5-85a1-8db5ed116bf7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4889e343-2376-42e9-bf80-b36e68ac08da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0a35c3-d2a8-44c7-8ab2-5f9abdeaa261",
        "cursor": {
          "ref": "2b6c64c6-9ffc-4956-965a-ac9be08c51f9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "59a556e3-e97a-4680-b4f6-4dedf9a544a9"
        },
        "item": {
          "id": "1e0a35c3-d2a8-44c7-8ab2-5f9abdeaa261",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2933f9df-b252-415b-9962-46af3c76ceb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd056d8-56a9-4161-9940-6391cf4df01e",
        "cursor": {
          "ref": "65f3f110-6c17-452f-8dc1-a66bb12915f0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "70170733-313d-4189-9285-6f6266548864"
        },
        "item": {
          "id": "2fd056d8-56a9-4161-9940-6391cf4df01e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f90e50cb-619e-497f-9da9-2643c7c78ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f6f6c2-90d9-403f-b128-e99174752790",
        "cursor": {
          "ref": "30a52e55-84f4-4697-aca1-9a693f3bcbe8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "19c2edf9-93f7-47e6-a9fa-b1b82de49bd4"
        },
        "item": {
          "id": "23f6f6c2-90d9-403f-b128-e99174752790",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "39ca1c59-3284-441c-90f0-3c178a099dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3d6098-c829-4035-bd38-857ed824e51e",
        "cursor": {
          "ref": "f7d279f3-4772-43e7-a957-2b27cabba897",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2896db3c-ab38-42dc-8302-4744ac705d86"
        },
        "item": {
          "id": "0b3d6098-c829-4035-bd38-857ed824e51e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "032a087b-a757-4684-b3e4-0c1f1c3c3fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a878cb-5f5d-43dc-b352-54dc6a3066ce",
        "cursor": {
          "ref": "1511277f-0a2b-4210-b57d-fffb1ceabacf",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1317ef93-eae4-4196-8ae1-81f010233bee"
        },
        "item": {
          "id": "67a878cb-5f5d-43dc-b352-54dc6a3066ce",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2be4714b-99fc-47ba-aae5-965c24f5d91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a1164e-613d-4fc4-931f-3ff67b0c3c61",
        "cursor": {
          "ref": "77dbff60-387d-4dfa-9b97-0a5779acc2fd",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "35f21019-390e-43dd-9edd-d68260f83699"
        },
        "item": {
          "id": "d3a1164e-613d-4fc4-931f-3ff67b0c3c61",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a1623d00-3fd8-448e-a7a4-87c4c0cda41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2402d9bc-a3c3-4db8-a213-3395a6fbc621",
        "cursor": {
          "ref": "0481060b-4e26-43c2-9c2b-a92c0c49df76",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a1a22bb9-6753-404f-a5f0-a5d5a7813339"
        },
        "item": {
          "id": "2402d9bc-a3c3-4db8-a213-3395a6fbc621",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "acb98316-30eb-42c5-93ff-a2ebc3f7f915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34a4a92-7129-400f-bb42-60629075fb9f",
        "cursor": {
          "ref": "bddb01db-dc0e-4b5a-9c46-421edfcede54",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e6d68977-eabd-4a2a-b277-cd18dec200c3"
        },
        "item": {
          "id": "f34a4a92-7129-400f-bb42-60629075fb9f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b1d6d413-1d14-4853-a662-098f135b4ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417eb928-b968-4d33-b6a9-c5f828c451da",
        "cursor": {
          "ref": "015e8b83-b145-4613-be3a-7b54a0ac0297",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "34c17512-97dd-4ebb-b040-69ddf42e22bc"
        },
        "item": {
          "id": "417eb928-b968-4d33-b6a9-c5f828c451da",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "030d5525-c5b2-4092-9a67-b02956b2a7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7ef36c-edd5-4730-8788-d88633bb820d",
        "cursor": {
          "ref": "5a246b7f-27e8-40e1-944a-83bea90048f4",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fed714df-fc03-492a-9575-d977c8ee5b27"
        },
        "item": {
          "id": "be7ef36c-edd5-4730-8788-d88633bb820d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4912ed14-2d36-4fd3-a89a-778361e1ffb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5451d15e-20e0-42de-b625-07dbe77ce519",
        "cursor": {
          "ref": "678a3c7f-181e-44ca-ad34-24fc32a23bfe",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c2d491c4-a864-47f5-8fc6-5086c0ac5074"
        },
        "item": {
          "id": "5451d15e-20e0-42de-b625-07dbe77ce519",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "85941555-1d0f-4429-be41-3edc52db1012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682c6452-15a9-4ee3-b065-013d6119e384",
        "cursor": {
          "ref": "93b5fd6c-f3ee-4eb2-b8de-a61826a88eeb",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d5a9daff-52ae-4c32-b125-41068ea4cb33"
        },
        "item": {
          "id": "682c6452-15a9-4ee3-b065-013d6119e384",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "03dfd285-1fe3-4056-85d1-b93a9b873ea9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26b1654-66f6-441f-8ccf-6ab2981ba1e5",
        "cursor": {
          "ref": "caeec2bc-f8bd-40a4-8637-56cf5c50c5d6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7483e1d0-04da-4bb8-af9c-bff1185b0f0d"
        },
        "item": {
          "id": "f26b1654-66f6-441f-8ccf-6ab2981ba1e5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b193e0ee-f471-4d22-b88f-55ebe0b3e15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe2f413-89e6-4969-ac50-122903b265b3",
        "cursor": {
          "ref": "ea779a7d-0c68-411b-9e5a-e872bf25495a",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "74ee0bb5-ba87-416f-822b-945cd862888a"
        },
        "item": {
          "id": "5fe2f413-89e6-4969-ac50-122903b265b3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "602a35fc-4c5b-447e-b629-cc9e461dd6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e964d9c-fe5f-454b-a81f-32208dc49fce",
        "cursor": {
          "ref": "6fb361b2-f3b8-4d78-b27e-77c02e8c6271",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4586dabf-2644-4e9a-904d-551a8bfc0088"
        },
        "item": {
          "id": "6e964d9c-fe5f-454b-a81f-32208dc49fce",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c1027de9-8f87-4d03-96ec-ff51bb4f0438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15002a38-5eef-4932-b5bc-63e8923eb189",
        "cursor": {
          "ref": "2187a904-8959-4565-8b40-8c94d74e2d24",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "996ad9bd-7666-4851-9f4c-5d0d762d8d5b"
        },
        "item": {
          "id": "15002a38-5eef-4932-b5bc-63e8923eb189",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "62c05de0-e4c0-4932-8d48-dce7557600a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc99eb2-38d2-4971-a51c-00f73794da17",
        "cursor": {
          "ref": "e7379db0-4314-4927-8a78-58127e875158",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "97353d9a-d4d2-450d-8e8b-0229e2c56e4e"
        },
        "item": {
          "id": "5fc99eb2-38d2-4971-a51c-00f73794da17",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0066a71a-d1ae-4e76-ab9d-85dc462a4628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ee7728-d050-41f9-a8f6-3264ec134e49",
        "cursor": {
          "ref": "3c715ecf-2923-44d2-859f-d05d521cee64",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "63e2e3c7-6c2e-47ad-b2f9-87400353ac8e"
        },
        "item": {
          "id": "01ee7728-d050-41f9-a8f6-3264ec134e49",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b8c8c37b-e68c-4c4e-8c03-a16e3f62acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62fffd9-5568-419f-be44-d8d9b8fb7aa1",
        "cursor": {
          "ref": "0f40ff9b-ca24-4b2f-b492-d3c52409ff21",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "da6f8a83-5d9d-41eb-a315-c28b03ab1131"
        },
        "item": {
          "id": "c62fffd9-5568-419f-be44-d8d9b8fb7aa1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9027a084-c646-4d4f-bee1-3e455161b7f8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef183ab6-8b2f-45ce-a6b1-4475310883ea",
        "cursor": {
          "ref": "0b3192f3-b39d-4bd4-ad90-8cccfcc52644",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3782193a-d4bf-4b19-89cb-42810b7bcf9e"
        },
        "item": {
          "id": "ef183ab6-8b2f-45ce-a6b1-4475310883ea",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0a7aef48-4f9e-4c3b-9fb4-d27954712e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824ccf06-687a-468b-be1f-b6b5edd636d0",
        "cursor": {
          "ref": "419a9745-4fbf-4ef8-a0ff-3d69422d8768",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "82f6c502-4754-43a6-a0a9-d77b71abacf1"
        },
        "item": {
          "id": "824ccf06-687a-468b-be1f-b6b5edd636d0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae7d8a26-ab8d-4ac8-9673-cfccdec7cab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39479983-4ffc-433b-90cb-91915cfe18a8",
        "cursor": {
          "ref": "3634aba4-a771-490f-8d3e-b72ad948b9a2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9c64f045-d05b-4b10-8e6c-b0f14cb12a11"
        },
        "item": {
          "id": "39479983-4ffc-433b-90cb-91915cfe18a8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8d07dd48-631a-4f18-8fd0-ca2c97a62bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a29529-6358-4b0e-8737-5d72cbaa0f99",
        "cursor": {
          "ref": "434a9a32-733e-43d2-9385-d5b62f66f569",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "20dd4a14-6278-45e9-b613-1a2295680e29"
        },
        "item": {
          "id": "27a29529-6358-4b0e-8737-5d72cbaa0f99",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1e07460e-598f-486d-8bbb-092ed63fbbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a51ff2-2bd6-452c-864f-33b669d224e9",
        "cursor": {
          "ref": "2e42f559-cfb7-4eb5-855b-461b1dc4a3fd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "08558a78-6a95-4754-b050-d28803ed60dd"
        },
        "item": {
          "id": "40a51ff2-2bd6-452c-864f-33b669d224e9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bc5ee8ab-4dc8-40f3-9650-1b2376f87dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7b21cf-ba78-4ff7-ac4a-2fbcfceb9f6d",
        "cursor": {
          "ref": "b7cea6ca-be93-496b-bc59-2db685db740f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1125782d-1315-4e91-8185-fb98354986ea"
        },
        "item": {
          "id": "ad7b21cf-ba78-4ff7-ac4a-2fbcfceb9f6d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9f2f9cbc-aa94-43f3-be3e-ab4a23749473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e644362-52de-4997-8bac-37ad54561d60",
        "cursor": {
          "ref": "f86fa1ea-7cdd-458a-8c44-49a47def6626",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ede44709-8224-449a-a14c-89b1cc849d6d"
        },
        "item": {
          "id": "1e644362-52de-4997-8bac-37ad54561d60",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fd70cef5-8693-4c07-8c9d-4aeacd61bc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3fd9e4-7862-4af8-b34d-4e1fd2b60368",
        "cursor": {
          "ref": "0122fc86-5312-477f-85d4-3cbb05ed5c53",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6196da8d-6314-4518-a9fc-d2be3fe614f4"
        },
        "item": {
          "id": "db3fd9e4-7862-4af8-b34d-4e1fd2b60368",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1a1fabd3-fbfb-4e27-aa29-fa9b17f72e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4f2c62-a6c9-4b54-8e6e-b9f6cac87154",
        "cursor": {
          "ref": "f3412c4c-acaa-4e77-a4ce-71a19dcf03a3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ad8dd761-353d-4b09-a4db-37ea26bf0767"
        },
        "item": {
          "id": "ed4f2c62-a6c9-4b54-8e6e-b9f6cac87154",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "53ccef25-9e87-4815-8031-e1d837d0c0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd82a9d-9ec1-4dc2-97de-db121c120947",
        "cursor": {
          "ref": "ade736d6-03fb-4936-8a85-1d5ba26519a2",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f4e36925-74d7-4e47-82bb-c5d3ea22905e"
        },
        "item": {
          "id": "8dd82a9d-9ec1-4dc2-97de-db121c120947",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ee9da3b2-9865-4ff6-94be-ddd10c05b083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7c2304-ff99-4784-9117-e88a6e033f9a",
        "cursor": {
          "ref": "1688bab8-73f1-46ce-88ed-c840a2c255f3",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c0869e6e-0b18-4423-8fff-c1cbabafa5d9"
        },
        "item": {
          "id": "4d7c2304-ff99-4784-9117-e88a6e033f9a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f3e34138-14e5-47e9-b560-eaaa8a31d33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a88631-47d7-4b49-a4e6-c45b794db3fe",
        "cursor": {
          "ref": "02221a4d-f417-4f83-9030-a45e4e069be4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bfd0a573-76f0-4759-bc76-2deece7dc76d"
        },
        "item": {
          "id": "90a88631-47d7-4b49-a4e6-c45b794db3fe",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "20060bbf-5f82-42e2-9de4-8a816c6d21bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a79b2c-0fb1-4fd5-b7e7-328f8973ad15",
        "cursor": {
          "ref": "9095f0f7-405e-4c55-ad8b-7006063ba9c3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f51729b0-537d-47ad-8737-aea0b80e0ac7"
        },
        "item": {
          "id": "67a79b2c-0fb1-4fd5-b7e7-328f8973ad15",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d19e76bd-3ab4-42dd-bd4f-287a3b2a582d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81fe3f2-0423-4138-aeb8-91852cfad767",
        "cursor": {
          "ref": "36b90143-6a30-4fa6-b906-d5f6ab09e911",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "03272f37-2394-42ff-aff1-54470e9f3729"
        },
        "item": {
          "id": "c81fe3f2-0423-4138-aeb8-91852cfad767",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5368243a-de21-4c35-ac58-aabc8e4d411b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da51460d-cbe8-45bd-921c-330761440535",
        "cursor": {
          "ref": "cd9108d8-1ca5-4c06-a6c0-a9c6dc0ec841",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "456aa154-cbee-4b03-8fc1-78d0bff97316"
        },
        "item": {
          "id": "da51460d-cbe8-45bd-921c-330761440535",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f66ee3ae-6002-49ef-8764-1fc138bafae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542d9ca8-a655-484e-8d95-243cc70c9fce",
        "cursor": {
          "ref": "cd747e93-ae68-45ed-987c-64d94d030f03",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "83beba94-9b8a-4c6f-86e2-0949ee0a932d"
        },
        "item": {
          "id": "542d9ca8-a655-484e-8d95-243cc70c9fce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "18c568ca-e0ac-4eda-bf79-7b5c72f0942b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b66bb96-470d-44a8-81fc-87bc9ce78a42",
        "cursor": {
          "ref": "ab3ff4f1-5b8b-4ad3-9a80-a2a0fa101a5f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1c0eb35c-325b-4775-bf30-46d32d10b0e2"
        },
        "item": {
          "id": "2b66bb96-470d-44a8-81fc-87bc9ce78a42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f7f51969-038f-40a9-b8b1-25818f926e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f96770-462b-4adf-97b5-f287d279add5",
        "cursor": {
          "ref": "0eed5f01-2f65-44aa-b366-5f9340356eeb",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "85eb286d-ef89-45c4-9373-c861838e679a"
        },
        "item": {
          "id": "f1f96770-462b-4adf-97b5-f287d279add5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "aa40eeeb-8e6a-4657-a413-4a4855fb2b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6e5a2a-9b35-4ffb-8032-2d86140d3369",
        "cursor": {
          "ref": "82ce466f-99b8-4a4c-aae5-4b3e793ee0c1",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2f65c35c-81d9-4402-8293-fdea5e63003e"
        },
        "item": {
          "id": "ef6e5a2a-9b35-4ffb-8032-2d86140d3369",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "10ef3b41-b6a1-4e65-b7d0-13bcd0f738d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47cd006-efe7-4e20-aec7-610b0fac1b50",
        "cursor": {
          "ref": "a5ed3694-ebe4-4b41-ad16-2ba7532079ae",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "671e70cd-e4c2-4165-b16b-74a9b42fc900"
        },
        "item": {
          "id": "c47cd006-efe7-4e20-aec7-610b0fac1b50",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c447d27c-0398-4b8c-a5a8-ece845ab1526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71737bb3-09f2-475c-9281-f197a03e2cb5",
        "cursor": {
          "ref": "a9ad72e1-6db0-4bd3-8be7-585428a35f19",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "75e04ca5-0362-42dc-81fe-8c9171c6356c"
        },
        "item": {
          "id": "71737bb3-09f2-475c-9281-f197a03e2cb5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a8391b10-acbd-467b-a279-5667b758f03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a7946d-cbb6-4411-9968-c9061a8914b2",
        "cursor": {
          "ref": "fd8d4b12-a9b4-4738-8904-d14c5c4d3258",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1a949115-9dc8-499c-beb1-77c6d0b32739"
        },
        "item": {
          "id": "62a7946d-cbb6-4411-9968-c9061a8914b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d1dfcbfb-1c0f-466b-95e3-5e01101be0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebfb8cf-d796-42c6-8f4f-33793c449df5",
        "cursor": {
          "ref": "03f84ee9-91d6-4a7f-a746-9ff5e0459940",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "23d2c7f3-3ba2-41d7-a16c-ab3abd112e3c"
        },
        "item": {
          "id": "2ebfb8cf-d796-42c6-8f4f-33793c449df5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f55fb181-5e0e-43fc-871c-348c02cbef82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b67f58-b601-42f1-a269-55e573d06688",
        "cursor": {
          "ref": "9411ea36-c490-45cf-b448-9bdb4f179bf0",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "33be3c55-02d5-4d4f-8497-61734aa503e2"
        },
        "item": {
          "id": "a1b67f58-b601-42f1-a269-55e573d06688",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "55fbd345-aedb-493d-9c04-dc24b8fea7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddd8825-9e87-4913-aca5-7ccc939f1f0c",
        "cursor": {
          "ref": "c5b8bc32-028f-4ddd-a7ca-8b339270fc23",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5d943430-7757-4d20-a08d-6b2e84f1ed4c"
        },
        "item": {
          "id": "eddd8825-9e87-4913-aca5-7ccc939f1f0c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "56da7ed2-d1aa-42e8-81b4-b64e894364d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e450ee0-7e85-4257-9455-813bdedaf7cd",
        "cursor": {
          "ref": "baa647c1-1d9e-4b51-b89e-a962d77bdd8a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b6ca45bf-5b9b-4146-832b-c52e04f0e972"
        },
        "item": {
          "id": "9e450ee0-7e85-4257-9455-813bdedaf7cd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "00b80b34-9185-4de8-9dd1-dd9bd26da8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70318be-3204-40a3-bb30-e3a3bbbc7fb3",
        "cursor": {
          "ref": "5af7566e-92fc-4dd0-a7f5-b925b89a7f1b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ed8ebb8c-db80-4196-a3a2-296eae7cd397"
        },
        "item": {
          "id": "f70318be-3204-40a3-bb30-e3a3bbbc7fb3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4c83b196-70e4-47f6-a439-0801ce9a1254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0900867-e1a0-446f-8495-f9044f32cfae",
        "cursor": {
          "ref": "d62ad32d-7cf9-4cd7-b0bb-7fb34a9d1d68",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "32bfaf28-0a21-43bb-ae61-3cff1b8d2028"
        },
        "item": {
          "id": "a0900867-e1a0-446f-8495-f9044f32cfae",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "747311f7-ca74-4ad9-ba0f-346e70c8913d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cbe8a5-56d8-4bef-9b77-290a1d2ad472",
        "cursor": {
          "ref": "da833482-5f1f-4d2b-973b-c4f359666b73",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a6491875-7f20-4556-89f9-72c28130d088"
        },
        "item": {
          "id": "b5cbe8a5-56d8-4bef-9b77-290a1d2ad472",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0d7f6daf-27ba-4808-b405-a633701ea614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a070ed5b-d665-40a9-bc82-881e507d4e11",
        "cursor": {
          "ref": "a2d38dcf-d1b0-44d4-9707-f8aed52f4931",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dbf3c6ef-e56e-4eac-8229-5bf16bd9f26d"
        },
        "item": {
          "id": "a070ed5b-d665-40a9-bc82-881e507d4e11",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c87e0a9b-e23e-494d-9509-98bfdc6a5c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2f0396-f240-4166-844a-ed1e61f319ef",
        "cursor": {
          "ref": "d4210be5-d878-4dcd-970d-8450c9c4a8e6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e72d5f0d-5d93-42cc-add7-1f96acc63e3c"
        },
        "item": {
          "id": "dc2f0396-f240-4166-844a-ed1e61f319ef",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4ea37d8d-73c0-499d-a3d1-1485a9ecaa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d311d1-84da-4335-bf3f-abdb606f5c32",
        "cursor": {
          "ref": "e4a1923e-386f-42be-b639-65af79112ebb",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "af170ad3-a466-4a04-9e7b-35935de3b8ac"
        },
        "item": {
          "id": "01d311d1-84da-4335-bf3f-abdb606f5c32",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b3298a99-41ee-4661-8365-ddc3ba2d31a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8c74b5-776d-41f5-8924-c1cb23bfa845",
        "cursor": {
          "ref": "93f8e98c-22aa-4f00-bef0-96eabeb39841",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "623b3647-f512-4aaf-9b47-84f916d87a3e"
        },
        "item": {
          "id": "0c8c74b5-776d-41f5-8924-c1cb23bfa845",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fb425027-2b15-49ab-aea4-9cf7dbf305f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac57b469-5d60-4c8a-90eb-9ecde12fb9a4",
        "cursor": {
          "ref": "2ed6e0f4-db4c-4a26-a0e7-a37cc38cfab1",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "25aa7388-d8ad-4cbf-b226-f77e97d827b3"
        },
        "item": {
          "id": "ac57b469-5d60-4c8a-90eb-9ecde12fb9a4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "09a8207c-6021-4448-9889-e62c3b2b36a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6af8fd-dbf8-4dec-887a-06720b1d069e",
        "cursor": {
          "ref": "b59d9f70-323a-4deb-9621-a253c5122f5a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5e967647-922d-4bd5-a904-1f30e8c9ffb2"
        },
        "item": {
          "id": "aa6af8fd-dbf8-4dec-887a-06720b1d069e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "92ed9bf8-9a0b-40b1-984e-329d981208cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee086b82-7615-45e8-b394-1d54353da82a",
        "cursor": {
          "ref": "979994b7-8ac7-47d3-99ff-a61027a8484f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "64629bb2-beb5-4c27-bc63-65afb731ff1e"
        },
        "item": {
          "id": "ee086b82-7615-45e8-b394-1d54353da82a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5e9e77c8-c845-4797-b457-906eaf840a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6afe0d-dfc0-4f86-91c7-93f5cde710b2",
        "cursor": {
          "ref": "12ba71bb-f9e7-4161-903f-3b527e06660f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2423456a-d731-4705-9332-9eebb3154b40"
        },
        "item": {
          "id": "ce6afe0d-dfc0-4f86-91c7-93f5cde710b2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ec03e71f-f0f3-4b31-a118-a619a517306a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85164d23-05e5-4ff6-9412-fbb1f2eedc42",
        "cursor": {
          "ref": "3dd36dfe-e12f-4632-a313-a8376a6fa2bf",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8c64fe0e-a141-4d97-a540-d8519550152c"
        },
        "item": {
          "id": "85164d23-05e5-4ff6-9412-fbb1f2eedc42",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0b182d61-46d3-4f58-a6a3-9a15f0852f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd19fb53-2679-42a5-8717-9a5395b3f2fc",
        "cursor": {
          "ref": "65841b1b-fff5-40cb-89e3-bbceecdc2be7",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "835050d7-5da2-45ab-ba14-b28073c155a6"
        },
        "item": {
          "id": "dd19fb53-2679-42a5-8717-9a5395b3f2fc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "02a4a7d2-d8f4-4276-9892-23bf9cecfcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3ca5ee-8284-4385-8f59-69dca58e226f",
        "cursor": {
          "ref": "830df175-ed17-4201-b152-25b055cec538",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "73834a89-ad53-49c3-835f-fcffa4f67b38"
        },
        "item": {
          "id": "ea3ca5ee-8284-4385-8f59-69dca58e226f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c20a96d5-009c-4a1b-8632-ca9bec8f2468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1868305-b5d4-412e-af93-541211632a1e",
        "cursor": {
          "ref": "f2cfd9d2-ae8c-4f9e-aea2-7110d0d99d7f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bb06f26e-51ea-4486-bbf2-2337fc234d58"
        },
        "item": {
          "id": "c1868305-b5d4-412e-af93-541211632a1e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f2864f95-a8c5-47b6-9c3d-2600c9b8ad76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726d8934-9054-44d7-89fc-99f858d1ef0c",
        "cursor": {
          "ref": "191d67f2-0388-4309-90da-1cd266695dbf",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "64689ac0-dd3b-44cd-83f2-0077507a0bfc"
        },
        "item": {
          "id": "726d8934-9054-44d7-89fc-99f858d1ef0c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a018aad6-bfe1-4f7e-a3e8-a6fc2ce7dee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451a99f9-f6bd-4433-925b-72cc235c89f9",
        "cursor": {
          "ref": "1608680b-972d-4f01-a6b9-cd210dc06b6f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0822daed-97eb-4e17-b7c8-6090a0b1a713"
        },
        "item": {
          "id": "451a99f9-f6bd-4433-925b-72cc235c89f9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ee87808d-6091-446f-96a1-7ddd34e809bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bb7b45-4f38-4ade-ac1e-4c8108d3a4a4",
        "cursor": {
          "ref": "39a44c3e-d40e-454e-9d6f-dabbffaf01b1",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a2fbce00-d63b-43ab-b3e0-f29a03a6cb50"
        },
        "item": {
          "id": "e4bb7b45-4f38-4ade-ac1e-4c8108d3a4a4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0c5fe405-9f06-496d-932e-fa284d104115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3896d90-7430-4736-a19f-204becc5c5bb",
        "cursor": {
          "ref": "8c42e371-3481-4b64-bc44-cf4c65a58dd8",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ad57671b-5b8d-40aa-91d2-54083daf5945"
        },
        "item": {
          "id": "a3896d90-7430-4736-a19f-204becc5c5bb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "acbafa48-a893-4fe8-a69c-46550194e833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b5ae23-13e8-4be7-a32f-6581a1153ed7",
        "cursor": {
          "ref": "f2661240-e8a2-42b2-a62b-4e4f5bba1593",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7dc3d848-3559-4f3f-a23e-3050e629ab4e"
        },
        "item": {
          "id": "95b5ae23-13e8-4be7-a32f-6581a1153ed7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "04334d16-3b9a-4ef9-91a1-c9dba919d79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cd95d4-7d18-443b-bac2-27009c9ef32f",
        "cursor": {
          "ref": "f0d9e58d-d353-4ddb-b0fe-ac76b263d20e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "87740d1a-c22b-4f15-8b76-cf2318545a2a"
        },
        "item": {
          "id": "e4cd95d4-7d18-443b-bac2-27009c9ef32f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4bde891f-5f82-4c03-a11d-c4d0fed730b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76105015-d2fe-4a23-b327-5ff85d84ae77",
        "cursor": {
          "ref": "0e22fd64-fe48-43e6-8da8-b00862a24ea7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8ea57bd2-92ad-49d9-ad8f-2389a7239994"
        },
        "item": {
          "id": "76105015-d2fe-4a23-b327-5ff85d84ae77",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "07747805-ba5d-4bb0-a740-b0e080044653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e4c8aa-f638-46ed-9a15-30424c2dd621",
        "cursor": {
          "ref": "4d66878e-6114-4955-be77-5b04fea4b812",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2b6f6b61-3000-4a1a-8af0-2d2e6a72a3b8"
        },
        "item": {
          "id": "b9e4c8aa-f638-46ed-9a15-30424c2dd621",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "45106bd1-a4dd-458b-8def-ad2fdd2c556d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cf81ec-23c8-4fc8-80b2-8e1c12406cb2",
        "cursor": {
          "ref": "9d867d94-ed9e-4358-9887-7cade494fdc4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "50a07c04-7552-4763-8be0-e8208a682af2"
        },
        "item": {
          "id": "c1cf81ec-23c8-4fc8-80b2-8e1c12406cb2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c647c46c-d566-42e3-96bf-f7b635105306",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9511c443-6f37-4cb1-adc2-3fa324411bea",
        "cursor": {
          "ref": "0f3f39eb-0072-498c-948f-d3c756294b83",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "20cb27dc-0a7b-4fd8-80b3-cd18d5f30811"
        },
        "item": {
          "id": "9511c443-6f37-4cb1-adc2-3fa324411bea",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f336cc35-0ab0-4508-9a21-397a90862356",
          "status": "Created",
          "code": 201,
          "responseTime": 44,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97765319-fb34-4a7a-805c-5b2b8a3a9bc0",
        "cursor": {
          "ref": "113f11b2-41eb-452b-918d-1b64d3bdf7ba",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1f127bee-c45b-494a-a4e2-a715c1672918"
        },
        "item": {
          "id": "97765319-fb34-4a7a-805c-5b2b8a3a9bc0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "adde66dd-2bcd-441f-9765-f741ed22b74e",
          "status": "Created",
          "code": 201,
          "responseTime": 245,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "445dd72e-f5d1-4b2f-99e3-2d0c5c6d8d38",
        "cursor": {
          "ref": "7aa069f0-8d01-4faa-af68-10328e2c9bea",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "468d3f24-214e-4c1b-9246-bf76c13449a7"
        },
        "item": {
          "id": "445dd72e-f5d1-4b2f-99e3-2d0c5c6d8d38",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0e8023d1-7321-4124-9006-ead6d1c71d6b",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0c3732-ca32-4ed5-b86c-ba3a5467fc0c",
        "cursor": {
          "ref": "4a8bcbd8-395e-48a0-abf7-b3d09f2263ff",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c6152be4-f669-4ee2-a0fb-9787456d1587"
        },
        "item": {
          "id": "8f0c3732-ca32-4ed5-b86c-ba3a5467fc0c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "94bb23f1-fc2f-4aa6-84d8-d68332cb88c4",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c715c111-ef93-4560-9b1d-baf1886c55dd",
        "cursor": {
          "ref": "ab42de6d-91bd-4c25-af4e-2035055b1037",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "88afdcfd-c68b-4921-96ad-eebb33286c40"
        },
        "item": {
          "id": "c715c111-ef93-4560-9b1d-baf1886c55dd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f5029039-8f03-4e22-9823-8e53337be25b",
          "status": "Created",
          "code": 201,
          "responseTime": 43,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adaceff-f55a-41e0-8edf-d5ead40dec42",
        "cursor": {
          "ref": "5bd9f9e6-01fd-4a19-8186-476fa082d2fd",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a495ff5f-e4a4-4dcb-9d0e-00199a14bb97"
        },
        "item": {
          "id": "3adaceff-f55a-41e0-8edf-d5ead40dec42",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ed73eb96-08e9-4f0c-8ba2-770b0b775a22",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "789d4af8-fa82-4a27-8491-824f32c0fb0a",
        "cursor": {
          "ref": "0faa2557-3eb6-4551-ae66-c823a6709d29",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f3707f1a-c2c2-4e0d-bef1-e492140eafd8"
        },
        "item": {
          "id": "789d4af8-fa82-4a27-8491-824f32c0fb0a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "08e54074-b975-4c81-b4d5-816298e1b740",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6c5b00-0884-4d61-b881-89f7690846e7",
        "cursor": {
          "ref": "9818ec58-b2b5-415d-b682-05f66b155fb3",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "21660e70-be4f-4338-820e-a052a65ed150"
        },
        "item": {
          "id": "ac6c5b00-0884-4d61-b881-89f7690846e7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e3d408a-6940-4164-99a4-5565bb43d032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e8a6af-26c4-4aa4-836a-03c00af2a436",
        "cursor": {
          "ref": "2aef93fe-5948-410a-8bb6-c4593a88a21d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0a26efc0-c3b6-46f9-a099-5d0abf00131a"
        },
        "item": {
          "id": "25e8a6af-26c4-4aa4-836a-03c00af2a436",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c27c8822-3312-4850-8ebd-a38893c7ca6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a4e451-0f99-4cfe-bd81-1d4cf3a86d83",
        "cursor": {
          "ref": "a48c4797-7fb1-4714-ab14-7a454a38eaef",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "884bea82-a880-4dcd-a299-194a4e1d4d5f"
        },
        "item": {
          "id": "f5a4e451-0f99-4cfe-bd81-1d4cf3a86d83",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "89716d56-bb0e-4ee1-ba39-f22cfc537771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c66cf2e-f913-4d59-bd34-12e01fe5ea85",
        "cursor": {
          "ref": "16ab6d87-10bb-4083-8172-abab867f9e2e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "10ce7574-18ac-4f42-a9c2-ff2f9ce3d973"
        },
        "item": {
          "id": "1c66cf2e-f913-4d59-bd34-12e01fe5ea85",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5db3133c-af2b-4b2e-86e1-c3e8675d4e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b7cf29-0fff-4997-a89b-542d26fcbf24",
        "cursor": {
          "ref": "a2f1d0e4-144d-4292-8ed4-dc6af81f3314",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a8846bff-595f-4617-abd8-66578f188cf3"
        },
        "item": {
          "id": "c7b7cf29-0fff-4997-a89b-542d26fcbf24",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68367e1e-2a4e-48c1-aafa-d00592446cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7564f6c-736f-4898-adae-b5977acce519",
        "cursor": {
          "ref": "9ca9aead-f127-4501-8b9d-86ea2c9f1f5b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c3a78315-befc-48b4-bb67-2ad152559065"
        },
        "item": {
          "id": "b7564f6c-736f-4898-adae-b5977acce519",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4c9b769d-8d11-4448-8295-58f5041e29de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef88bb5-824b-428d-83ad-8acf67a3ca60",
        "cursor": {
          "ref": "037e554f-f59b-4cf3-949e-152539862fc5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8565362f-e215-4792-8fc8-5ecdcb96899f"
        },
        "item": {
          "id": "eef88bb5-824b-428d-83ad-8acf67a3ca60",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "78d21626-7377-46df-9c78-1643d3f01dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b24cfb-f0b3-488d-95bd-60c2b0d672f0",
        "cursor": {
          "ref": "e31e39c1-e38a-464b-aa10-cb99e5a6ac80",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a4c469de-6193-40a7-9f56-c540bdf7e7b4"
        },
        "item": {
          "id": "12b24cfb-f0b3-488d-95bd-60c2b0d672f0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cf46cb30-f2b0-487b-b192-15c5e5037973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443fcddd-d66b-4d17-879f-56cde2749e61",
        "cursor": {
          "ref": "ab57bdba-5310-43ce-8ffa-aa8cb4262143",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "88d93bb9-c82c-4f41-b982-9f579e4505c2"
        },
        "item": {
          "id": "443fcddd-d66b-4d17-879f-56cde2749e61",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0e0b28ba-825f-43b6-8cec-3e4c3bcbc920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73b4771-2616-4cb0-9577-9cde2173f47b",
        "cursor": {
          "ref": "5d912b05-76bb-4846-aa7f-a0d02e7d60b4",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "49b987c0-c2fa-4f1b-bfd6-82f373febfb0"
        },
        "item": {
          "id": "d73b4771-2616-4cb0-9577-9cde2173f47b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "810dafe0-9af7-4cbd-8d8f-7d038bbe777a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d26e6a-159c-43bc-acad-442d96aae640",
        "cursor": {
          "ref": "cab992c9-193a-4f62-84fa-30b6af182db6",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d4519267-35dd-4809-a5c1-2686515c9a9e"
        },
        "item": {
          "id": "f7d26e6a-159c-43bc-acad-442d96aae640",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "052121e7-0e70-4209-8f3e-77f44f130fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffd914b-98d4-4eb8-b2da-910564bb9cf7",
        "cursor": {
          "ref": "049d54a9-bdb6-420b-8d44-be564ea8da04",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1055eeca-0f66-42f3-b3e6-7caa405398f8"
        },
        "item": {
          "id": "fffd914b-98d4-4eb8-b2da-910564bb9cf7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e440a040-8b12-48dc-8dcb-67eb675d2b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123e0d99-95f2-4a70-a694-2ae25da5c390",
        "cursor": {
          "ref": "1c081ca9-b691-4902-908a-ac1e52da6667",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "67234101-b431-48e9-82ec-1e0bb4ade461"
        },
        "item": {
          "id": "123e0d99-95f2-4a70-a694-2ae25da5c390",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5c907098-603d-4f10-885d-82d15bc4769e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff10f87d-9783-4787-85af-e7622a9288c9",
        "cursor": {
          "ref": "66fda4c6-e43e-41da-b65c-84732254403a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f1ae3728-9a29-4e35-91e5-d27933b0a3d9"
        },
        "item": {
          "id": "ff10f87d-9783-4787-85af-e7622a9288c9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d7d0d14b-c8a1-4a14-b8a2-9a090d33e4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f134305c-fb01-4105-b6bf-224503cba939",
        "cursor": {
          "ref": "79f4aaca-1abf-4bb4-a29a-46511c04733c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "31e7882e-b451-4b09-b8a2-659ab4ee12ff"
        },
        "item": {
          "id": "f134305c-fb01-4105-b6bf-224503cba939",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6c3f96fb-dab4-4ea1-9f4b-56a1b5948241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508839d2-6d84-4b29-b4ea-9f7854cb721a",
        "cursor": {
          "ref": "94cf5b56-a2ac-4366-b761-da8b86481b7e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b7242d0c-1d05-4aaf-a8b7-d39532a2d746"
        },
        "item": {
          "id": "508839d2-6d84-4b29-b4ea-9f7854cb721a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e7da64b1-e3dc-412a-a96c-186b516bf15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7c984c-3993-4900-8935-30c6a2554a05",
        "cursor": {
          "ref": "a4503d39-b67d-4a8e-8b67-95f33fda9f6d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5ca1c598-98bb-4103-88a5-5ba185f94485"
        },
        "item": {
          "id": "8a7c984c-3993-4900-8935-30c6a2554a05",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a9037261-c69f-4dac-9a9d-58213c91e722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e565ba-cef8-4973-b0dd-11eed7b302a1",
        "cursor": {
          "ref": "9357b459-b0c6-451e-b1b5-52534dd742c3",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "be9fbff6-df66-4650-96df-c7ffd2a47f96"
        },
        "item": {
          "id": "17e565ba-cef8-4973-b0dd-11eed7b302a1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4ccf5915-408a-457d-8731-d5bb27c9351a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd955602-3e3a-4c25-8e6a-390a45d03aaa",
        "cursor": {
          "ref": "f69a24eb-ee00-4f91-98f8-665ab4bdfb51",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "351e3ef9-56ed-4cd1-b6ce-e30bfe772c81"
        },
        "item": {
          "id": "fd955602-3e3a-4c25-8e6a-390a45d03aaa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f234d190-e69b-4819-aa2b-0138365f4869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d53167f-edb9-471e-a5b9-bc99ef847154",
        "cursor": {
          "ref": "b803f34b-d6be-4caa-97d6-5671b81526b1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "12c350d3-230f-4e38-a584-dd212f3a6ae9"
        },
        "item": {
          "id": "8d53167f-edb9-471e-a5b9-bc99ef847154",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d2536774-1411-4ce1-b865-6a9c05d2f375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db897d16-2546-48e6-809c-bbd4374fabea",
        "cursor": {
          "ref": "fd9269f3-59b2-4e8a-a780-4f8ed7a98fa4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8e6dfb22-1c86-4396-a9b5-55843b8a85fc"
        },
        "item": {
          "id": "db897d16-2546-48e6-809c-bbd4374fabea",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bd905856-f7af-4780-806c-6bed0659bde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f42064-a6f3-4640-96ef-c8e4a6494476",
        "cursor": {
          "ref": "c565839a-731e-48ba-ac5d-9d5be5ed2b55",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "adbfeb16-7cec-4029-b47c-fcf9c7b4839d"
        },
        "item": {
          "id": "34f42064-a6f3-4640-96ef-c8e4a6494476",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a6c956f7-391d-462d-92f2-f8d32c6dd11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f4335f-e950-4ec5-bc44-08ee9e2a1bd8",
        "cursor": {
          "ref": "fa32359a-bc36-4528-90f1-ccda106d56c1",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "43a58256-ebc9-402e-8dc9-765c5dab5792"
        },
        "item": {
          "id": "47f4335f-e950-4ec5-bc44-08ee9e2a1bd8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c33c6696-fbd0-46f8-afcb-c75f48a82394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a550ef-ec84-42ee-a8b2-af66a90cc805",
        "cursor": {
          "ref": "08457197-9a00-426f-9ff5-861765b2f2e9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ade88ef3-13f6-407f-bb1d-cd621c1ee236"
        },
        "item": {
          "id": "97a550ef-ec84-42ee-a8b2-af66a90cc805",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "30421299-3012-446b-ad70-91d19db06fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521de601-9d99-49c6-b4d1-dd22b9a5e2b3",
        "cursor": {
          "ref": "1316be00-2299-487c-ae91-61ca91b45a82",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "74132f48-9bef-4f5b-8fba-35594c3e6196"
        },
        "item": {
          "id": "521de601-9d99-49c6-b4d1-dd22b9a5e2b3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e40237fc-7b34-4c9f-b85f-e8f6d13d7d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e30e398-2c97-44ae-948d-cdbf20f8199b",
        "cursor": {
          "ref": "f03b81f0-7690-4f43-bf88-ce4bb4db1248",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7a1c0425-918f-4ab5-a2ce-4c764ae22e85"
        },
        "item": {
          "id": "2e30e398-2c97-44ae-948d-cdbf20f8199b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4b4000ff-cec5-4213-9846-74f0f29e3bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593a0bfc-b144-404f-8c6e-2b9b118056da",
        "cursor": {
          "ref": "00c230c4-0ee1-4a86-9ce9-64c3460c5d7b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "19a72961-9354-47f6-a2b7-afb6da494554"
        },
        "item": {
          "id": "593a0bfc-b144-404f-8c6e-2b9b118056da",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "42f68980-951d-4d48-a57a-c8125113d15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2e4787-f356-4755-9be4-a25d4be69d0a",
        "cursor": {
          "ref": "0c13a14e-99a8-46c3-a37d-a4b53d9d2b45",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0ab08192-5872-4705-866b-133f8b04e373"
        },
        "item": {
          "id": "2e2e4787-f356-4755-9be4-a25d4be69d0a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "42469f37-375c-44af-b5c7-3d7208e24269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c044e0ad-9437-457d-ae39-998a5144bede",
        "cursor": {
          "ref": "52abfcd8-34fb-48b0-802d-b57aa4acee52",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3bc0da7a-9ec4-4e9e-925d-785486fc900b"
        },
        "item": {
          "id": "c044e0ad-9437-457d-ae39-998a5144bede",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d335fb5e-c0d5-4991-90ce-bbee1fc694f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7195244-6659-4a5f-ab84-3d7086656b17",
        "cursor": {
          "ref": "bd6c5456-6cd9-43ea-a010-0a010f31b10f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1a363dca-16b3-481f-b215-89097c35bb51"
        },
        "item": {
          "id": "e7195244-6659-4a5f-ab84-3d7086656b17",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "529238bf-2aad-4e49-98f6-dfd26349bfb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3e6726-ed6d-46b4-b57a-693f96f48bac",
        "cursor": {
          "ref": "7222f11c-f78a-422a-bad1-4df05242eee6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "18909614-90c0-45bd-87bc-af0fe61f06fd"
        },
        "item": {
          "id": "8e3e6726-ed6d-46b4-b57a-693f96f48bac",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4f5e6595-5069-4d6e-802f-765172d6b07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7696c2d5-99fd-4fa5-aa7e-f323c29394a2",
        "cursor": {
          "ref": "81263df8-84af-4792-bf40-324f9ad2351c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f8888899-949f-4cb7-9385-a79c5e32b8fa"
        },
        "item": {
          "id": "7696c2d5-99fd-4fa5-aa7e-f323c29394a2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2ceaa2f5-9a2c-4695-b8eb-b862c14df93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70932cc9-cf54-427c-8f2f-074f31562064",
        "cursor": {
          "ref": "271802b6-3f65-453c-9458-769c46dfaf8e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bd9219c5-d527-4261-ba2c-c6ba5c6bfde1"
        },
        "item": {
          "id": "70932cc9-cf54-427c-8f2f-074f31562064",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b37b8e44-2248-48ae-bd5f-4fd07547698a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865aeb39-a1e4-4a90-a759-987e2a46e196",
        "cursor": {
          "ref": "7c7f0bc3-65f0-4833-b5a4-affd55b08fad",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "782c0843-b966-4451-9e1f-b5cd963d8568"
        },
        "item": {
          "id": "865aeb39-a1e4-4a90-a759-987e2a46e196",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5987808d-099b-4a9e-b9eb-2f497201a9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f81c29b-5f31-48ec-843f-2700fb9464e0",
        "cursor": {
          "ref": "48ef3abb-773d-4762-91ff-076f77f73c44",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3094b6e7-7fda-48c6-8109-3a2630b5bfbe"
        },
        "item": {
          "id": "3f81c29b-5f31-48ec-843f-2700fb9464e0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f527237c-5fb9-43cd-9631-0f3d580beb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff75fc2-fb72-4311-aa7c-d6393e6f3d9c",
        "cursor": {
          "ref": "e4e6976d-d12d-483e-9512-051a36d9a2b2",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e15fcdae-d57f-460a-a994-1808e3bbe28b"
        },
        "item": {
          "id": "0ff75fc2-fb72-4311-aa7c-d6393e6f3d9c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "943b8067-d6ca-4ea0-832f-aba4c9abc4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9e886a-f088-4220-8918-a46be88a604c",
        "cursor": {
          "ref": "d0e003d3-1dc7-4335-9164-dfcd5309f8a6",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e540af23-15a9-480e-b3d1-83b6a4569515"
        },
        "item": {
          "id": "3d9e886a-f088-4220-8918-a46be88a604c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0dad10f2-5c24-46ba-b3b5-810ca762cbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba64bef9-449f-4854-92da-cc697e299481",
        "cursor": {
          "ref": "e4bf0a19-5bef-4b72-aca0-5c892ed18e94",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5956b114-1d4c-4a8a-93a7-322f25deca58"
        },
        "item": {
          "id": "ba64bef9-449f-4854-92da-cc697e299481",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fa021496-7a25-4dbc-9627-8b0b14ce6624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7642c8-c136-4d3a-a18b-2e2ef85b49bd",
        "cursor": {
          "ref": "2e1574fd-0d33-4f18-9d90-e72da74cee81",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "196c32a4-5be1-4d8e-8008-3050f2bc2c0c"
        },
        "item": {
          "id": "aa7642c8-c136-4d3a-a18b-2e2ef85b49bd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9d4f7558-6517-4327-b391-1befed14acb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6652cb01-49fd-4778-9810-cdd407ed1b7e",
        "cursor": {
          "ref": "f1bc3ac0-3476-486b-ab1a-3930db6e40ca",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3c353a3f-7718-4954-8529-acbad982eb26"
        },
        "item": {
          "id": "6652cb01-49fd-4778-9810-cdd407ed1b7e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "83fc6f34-b047-4fa4-91fe-7c87a3736436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972dfaae-785a-46a2-bddd-85865cd91715",
        "cursor": {
          "ref": "6e3d7c4b-1bdd-4859-9ab3-c3c91953d16a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cd912158-32ab-415e-904e-ae9b510a3c80"
        },
        "item": {
          "id": "972dfaae-785a-46a2-bddd-85865cd91715",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "822705fe-8549-4742-b7fb-d05c4595615b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4c35e0-eb25-467a-88e9-36f155f2ee15",
        "cursor": {
          "ref": "b80d466b-32e2-4d49-9f45-34c4f65f622e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d9333662-75aa-4cd7-b29e-5a210ea4255f"
        },
        "item": {
          "id": "cd4c35e0-eb25-467a-88e9-36f155f2ee15",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "994f4a1d-7c49-407e-96ae-b9aa4d406385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3454728f-7b5b-4370-b564-f2bb7211351f",
        "cursor": {
          "ref": "f62ac2fc-6bc8-429b-a332-9209cef22280",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0049640a-4b83-4655-a5db-487502310c5f"
        },
        "item": {
          "id": "3454728f-7b5b-4370-b564-f2bb7211351f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "659c6616-b467-4d26-ba30-7734bdb90545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c368471-fae3-424f-a951-bd59e1d9f1a6",
        "cursor": {
          "ref": "c9594f17-642b-4439-9f96-22265b87ddbc",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e7584122-f0a6-4aa4-bb5c-86b59ea5cba5"
        },
        "item": {
          "id": "6c368471-fae3-424f-a951-bd59e1d9f1a6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "44dfec80-85c9-4fbc-80c4-d95d0ac349b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d040a93d-7bbf-4a7d-843d-7bdb89b0609b",
        "cursor": {
          "ref": "ac04eebb-00b4-4e93-aea6-bdd151ad5311",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cf82cab6-615d-4f32-94c8-e39f6ad13899"
        },
        "item": {
          "id": "d040a93d-7bbf-4a7d-843d-7bdb89b0609b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "83cdbb6e-90cf-4d76-a6b0-5b3cc251ee75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29795d83-c86d-44a9-b910-9b2a10158688",
        "cursor": {
          "ref": "308e0093-e31e-4e00-b923-b8f0a61eb1cd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "00e7a7a3-e17b-4b97-a981-e68dc75f3f26"
        },
        "item": {
          "id": "29795d83-c86d-44a9-b910-9b2a10158688",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b5eaf9e5-a1ba-4be2-95fd-dded586a1543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2097f2c4-f0be-4281-9ee2-4ae4d30dafcb",
        "cursor": {
          "ref": "6075f7fb-801b-45c3-b58e-6100569da9f9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8a28ff8d-5a5c-4ed8-8783-1305ec6c32ad"
        },
        "item": {
          "id": "2097f2c4-f0be-4281-9ee2-4ae4d30dafcb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "77262fa7-1377-4433-9ac8-1bf715549851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1264beb5-60a1-4e63-b4c4-76a580352cc8",
        "cursor": {
          "ref": "a509845b-3666-4bae-86d9-2a761887e790",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5c2b1fcf-735f-473e-90b1-1947630d1f98"
        },
        "item": {
          "id": "1264beb5-60a1-4e63-b4c4-76a580352cc8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "54aa2725-b3d0-4a70-9fb6-292577ad3cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df33166f-9df6-4856-8a04-e8e053f282b9",
        "cursor": {
          "ref": "18544843-2dbd-4e9d-896f-0f9d39bb3331",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "65fbf5ae-d200-4336-bfbc-4de938830123"
        },
        "item": {
          "id": "df33166f-9df6-4856-8a04-e8e053f282b9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c69fbee2-c0bb-485f-85f4-b09ba42dcdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3b7653-fc3a-4f3d-8f4e-5ef3df19b855",
        "cursor": {
          "ref": "acbe0c81-0085-47a3-aefa-b3c8447c7aad",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "478a8e08-5f09-4b3c-9c73-419f10aa09c5"
        },
        "item": {
          "id": "3c3b7653-fc3a-4f3d-8f4e-5ef3df19b855",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b3b4502e-ba60-4a7b-bf39-5711e4b1318e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dff579-f90e-443d-9571-f4c39e225f8c",
        "cursor": {
          "ref": "7c8ca14b-7d82-4f49-b6fe-82d55652d6c1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a2d700ba-36f3-4656-8348-d867eb4c3ebc"
        },
        "item": {
          "id": "59dff579-f90e-443d-9571-f4c39e225f8c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bfb44b7a-f048-467e-b816-6e380c4cb165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c041fc0b-22eb-4510-8e41-2a5429889ffd",
        "cursor": {
          "ref": "5d168028-15a8-4d97-85bd-1634f0c195d1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ae64dae3-6363-41e4-8525-e8388c311f0a"
        },
        "item": {
          "id": "c041fc0b-22eb-4510-8e41-2a5429889ffd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "636dc143-b708-4cb4-85f1-3cd9f511d60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2269594b-f4dc-445e-980e-814e853a78e9",
        "cursor": {
          "ref": "0971da46-7ac6-4512-879b-074de534c54f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2228ff9c-cf87-415f-a640-dd9112ae1965"
        },
        "item": {
          "id": "2269594b-f4dc-445e-980e-814e853a78e9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e8606b27-b45f-4945-b8ab-49fa10b839cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92efb802-32ef-498d-9f1e-7865162d568a",
        "cursor": {
          "ref": "f5012a25-037b-426f-b198-641207a31842",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f49b605b-bd81-4448-9d3f-a373c6c68e53"
        },
        "item": {
          "id": "92efb802-32ef-498d-9f1e-7865162d568a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "23d5dbb7-f885-42cd-85e5-2695955388f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120b35bb-0cfc-4ff7-b458-bdb8f0a65bb5",
        "cursor": {
          "ref": "39d6080e-85b7-49c6-9384-a8fc43b9d6db",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a8943d83-5319-448a-9f60-4f251d0505ae"
        },
        "item": {
          "id": "120b35bb-0cfc-4ff7-b458-bdb8f0a65bb5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a69cfc50-a0dc-41b0-a7d4-7e728d327a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8a6b48-1d1e-4cd2-a447-0e8ac7b294fa",
        "cursor": {
          "ref": "fa871900-fd41-4af9-b61e-acb94acf37ab",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3540faec-e850-4c8b-b50a-0554378d4441"
        },
        "item": {
          "id": "ba8a6b48-1d1e-4cd2-a447-0e8ac7b294fa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "02fb1393-e84c-49ee-bd0b-596718abab87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699f0c24-3de9-435c-9257-4a1558853628",
        "cursor": {
          "ref": "2d72bdfd-0f2d-4dae-8b20-2694555a1adb",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6d8faf9f-f4fc-4528-9ede-8e1b4cd0e669"
        },
        "item": {
          "id": "699f0c24-3de9-435c-9257-4a1558853628",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1e027d5f-56ff-43f9-9435-ae4a946a29c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0245f7-b8fd-4f80-8b34-0d648b54b073",
        "cursor": {
          "ref": "ccfc9097-1dc7-418e-99b1-615f995e08bf",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4966ae29-ee8a-4b8b-9470-44e8f329fc0a"
        },
        "item": {
          "id": "7f0245f7-b8fd-4f80-8b34-0d648b54b073",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6dbec8ad-0183-48bd-9f88-6cb6cb68d25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500a20bc-3524-4416-9c1f-d12d01fcccd6",
        "cursor": {
          "ref": "f4d1288b-94a8-40ea-8633-52f63e88114b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7c4ce873-3dcb-4a73-bdd0-ec57ad47664b"
        },
        "item": {
          "id": "500a20bc-3524-4416-9c1f-d12d01fcccd6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "395605b3-2dc3-4ca8-a9eb-96cfda784380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1985348-4f3e-4d2f-9eaf-10789267cce6",
        "cursor": {
          "ref": "2659b2ae-20ed-494d-b217-0c0e76b0649c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "774a68a6-3902-435c-a847-2c0aad1fbaaf"
        },
        "item": {
          "id": "a1985348-4f3e-4d2f-9eaf-10789267cce6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8e8ee627-9367-4f2a-a434-32986023d7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4703f0b-fa9b-442b-8cad-b86071666640",
        "cursor": {
          "ref": "fe9a0295-40d6-4053-a6ef-9ab209c72b6d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ccec052f-d001-4d9c-a41d-1319df364213"
        },
        "item": {
          "id": "f4703f0b-fa9b-442b-8cad-b86071666640",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eb7345fc-36f7-4cd9-8fc5-20fd8f3db19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb70c0a-9e42-4cb9-a913-6b37d1950dc4",
        "cursor": {
          "ref": "4c662cb2-b9c5-40b3-b344-3bda8971775b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f8557838-e495-4fcb-8eb3-1f243c4fb591"
        },
        "item": {
          "id": "dfb70c0a-9e42-4cb9-a913-6b37d1950dc4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d4c26ec0-6e19-4105-b4ee-3700450ee3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d6debb-141c-47d2-8ba5-5d7a972d76ca",
        "cursor": {
          "ref": "d09c9bce-5665-4dd9-aeca-600e8fbd48f3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3b07a577-d88a-4b5d-aea9-2ea18ffe1427"
        },
        "item": {
          "id": "64d6debb-141c-47d2-8ba5-5d7a972d76ca",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b8afa7fa-41b8-4442-b17c-d56564d2d72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe23986-7bd8-4a3e-8acc-7d0275f95b4c",
        "cursor": {
          "ref": "cc2b992f-b8c9-4620-94ab-56317e122be9",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "57f60ee0-20e6-4b84-96e6-c8b43310dcf1"
        },
        "item": {
          "id": "dfe23986-7bd8-4a3e-8acc-7d0275f95b4c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "499bba5d-9d9a-4517-9966-7f19e8f8ce62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b61aab-a135-4e08-92fe-4184fd83324d",
        "cursor": {
          "ref": "e09ff2ea-d498-45ec-be9f-cd85db8443f8",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2efb4167-029f-435b-827e-828cfdf410d7"
        },
        "item": {
          "id": "98b61aab-a135-4e08-92fe-4184fd83324d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f59e32e4-3295-4ce4-a8ae-5c944676608b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd28a343-bb88-427f-9dfe-11cc5ebfb132",
        "cursor": {
          "ref": "237f9c0d-4166-40d1-9280-f5bfc4698f1a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "994c0e72-b25f-43a5-9417-43d0e09b6e48"
        },
        "item": {
          "id": "dd28a343-bb88-427f-9dfe-11cc5ebfb132",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a0cb5d38-b001-4d18-8fce-95a181008d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3245a4-0649-4297-80a3-fed465a9ec40",
        "cursor": {
          "ref": "1fc3241d-fc78-40d3-aa70-9c33df34a9f1",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "69059624-f383-4d90-b6f4-33536b418cfa"
        },
        "item": {
          "id": "dd3245a4-0649-4297-80a3-fed465a9ec40",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "297dbb62-72bb-46ac-bb88-70336da07448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ee4730-1ba4-49f7-bd4d-9ff62ae2db26",
        "cursor": {
          "ref": "cbd7b2d9-a493-400e-a720-4d7b538daf16",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "96c8720d-a4bd-42d5-a55a-9468bbd2313e"
        },
        "item": {
          "id": "84ee4730-1ba4-49f7-bd4d-9ff62ae2db26",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9346523d-6183-4066-9a6d-12c7d126e307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133bd9f4-5e4a-48a0-8b53-c9eb87299c00",
        "cursor": {
          "ref": "0e797fbc-51ec-4f18-9836-ba243a2c23d2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c8302e8b-ee45-4872-815a-f1692a2081ec"
        },
        "item": {
          "id": "133bd9f4-5e4a-48a0-8b53-c9eb87299c00",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3b631e6e-5e5f-4f6b-bd3d-3b505b501898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284de981-1d8c-4dbf-828f-610645287c85",
        "cursor": {
          "ref": "9d825189-f410-4109-8613-6c3eba0803d3",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7ff3cb28-95f1-4e18-bceb-3d678b95039d"
        },
        "item": {
          "id": "284de981-1d8c-4dbf-828f-610645287c85",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "db5bb5f6-ae3b-4213-a0d1-2151beebf424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a21428-b029-4908-9b9c-e74b92e45cf9",
        "cursor": {
          "ref": "94126c50-e0b5-46e3-b01d-a7e51f7c8901",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d1f665bd-8932-4fa1-b512-619a4eb41911"
        },
        "item": {
          "id": "17a21428-b029-4908-9b9c-e74b92e45cf9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d5403dfc-f6d3-4a0a-85f4-a2c3c77b1fb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89706d7d-f9f2-4f0c-94cd-8b0720e63fce",
        "cursor": {
          "ref": "f6589091-9155-4109-855f-5229d76aa724",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b42466c2-27f8-48cb-a98a-72c8ea3433f3"
        },
        "item": {
          "id": "89706d7d-f9f2-4f0c-94cd-8b0720e63fce",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a4b9a622-75fd-49d9-b2f0-327c7ab14f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa2d331-a64c-459c-93f4-bb9cd1fbc503",
        "cursor": {
          "ref": "48f658e3-9938-4034-8ab5-896690eba49c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "16c4e52f-a6b3-4c04-a212-647724f2f301"
        },
        "item": {
          "id": "dfa2d331-a64c-459c-93f4-bb9cd1fbc503",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9e8b3b79-6923-4fd6-a523-fa4e097f133b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791dfd00-4807-4733-b55e-c0c6bc6b8104",
        "cursor": {
          "ref": "2960bb2d-f218-47a1-9146-3f5f2df04a18",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "11f4dd65-018a-4f82-b168-4394c32d821f"
        },
        "item": {
          "id": "791dfd00-4807-4733-b55e-c0c6bc6b8104",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "924d307e-da55-40bd-9c44-6f25d9800b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b9f5a4-d46b-402f-a702-294d17fd696a",
        "cursor": {
          "ref": "b42034c4-2146-4ad2-99ac-593bf555b92e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "eb01ab18-a4be-483b-9829-19ce171c4bb3"
        },
        "item": {
          "id": "76b9f5a4-d46b-402f-a702-294d17fd696a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7995a355-e8cb-4b15-a9f1-c06e34260e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c91006-7db2-4fb8-ac16-70837f0bbf28",
        "cursor": {
          "ref": "bb442f61-e79a-4a3d-a69a-83886af96b96",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "878bc1e8-2c58-434a-bc4a-dd2bac86dc15"
        },
        "item": {
          "id": "c2c91006-7db2-4fb8-ac16-70837f0bbf28",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2251aa26-c2be-4b84-badc-ed56ba24a65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede959b6-7df2-42c3-9a76-7166e2238894",
        "cursor": {
          "ref": "278f265c-ee2b-4d91-b0ec-6b1476798a3d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ef57248e-f3f6-490e-b68e-56df6ddf9e1e"
        },
        "item": {
          "id": "ede959b6-7df2-42c3-9a76-7166e2238894",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "59099d02-b588-49b3-999c-3f139f03e3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b989afd-ea95-484f-86b8-d315332c797a",
        "cursor": {
          "ref": "c18c1770-3c84-4dfc-858c-a6243a00923d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "039937d4-f2b5-4018-acce-9230e4eaa254"
        },
        "item": {
          "id": "1b989afd-ea95-484f-86b8-d315332c797a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "655b81b9-c9bc-48eb-aa3f-95f1f4a46782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70205022-74d0-4943-a077-a49253827ab6",
        "cursor": {
          "ref": "0607dd46-301e-4876-a409-290f30649673",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "58e89e82-cea6-4563-bbcd-500a6c5b248f"
        },
        "item": {
          "id": "70205022-74d0-4943-a077-a49253827ab6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3ad568db-bd5d-48ec-89fc-4a0efab5295a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030e5ce4-2aa2-4f42-a7d4-b51e1e202ef5",
        "cursor": {
          "ref": "67cf7d08-2594-491e-858a-93608ee38657",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "730fcdcd-9a36-48be-a2d1-9624391d91df"
        },
        "item": {
          "id": "030e5ce4-2aa2-4f42-a7d4-b51e1e202ef5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "49a8cad2-ff5e-4932-873c-73309251a902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698efa5c-1127-4cac-b376-9d5fe593f03c",
        "cursor": {
          "ref": "1d2ce2d7-7c42-4484-9e9d-d106224bcfe4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4a692c51-c547-4a9c-84ed-b173e6cda135"
        },
        "item": {
          "id": "698efa5c-1127-4cac-b376-9d5fe593f03c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b60acc18-e2ad-4452-b161-924548755054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2e2fbf-8e20-4ae6-9edf-901f33198824",
        "cursor": {
          "ref": "0348217d-9be4-4c09-b1e8-b5228e170a2b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6230ceff-612e-45f0-afee-5557a58ef5d2"
        },
        "item": {
          "id": "9e2e2fbf-8e20-4ae6-9edf-901f33198824",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2e9c6d88-4c82-4728-ad98-16b7bdb29a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c4282f-45cd-48f0-86ef-252228dcdb9b",
        "cursor": {
          "ref": "8c8997a4-bd2b-41e8-bdee-5a1e6008ed19",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "74aaf5f1-4bef-4c95-a138-339643ae5042"
        },
        "item": {
          "id": "22c4282f-45cd-48f0-86ef-252228dcdb9b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d95fa817-90d7-4e03-9462-c2260c041c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd02bae4-f062-4e15-94f7-1829e82b8812",
        "cursor": {
          "ref": "9c28f0dd-936c-43f4-b247-8909f7262733",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3b4d632d-3b9d-49ad-b430-87a36958bc78"
        },
        "item": {
          "id": "dd02bae4-f062-4e15-94f7-1829e82b8812",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "67a69d0b-145e-4891-95a7-6a7464abc6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2239c3bd-8b53-49e7-b4ff-1d587533b838",
        "cursor": {
          "ref": "014c424d-943d-446e-865e-3daa3a8bb109",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f4590527-6989-47ec-990d-f4542b67b718"
        },
        "item": {
          "id": "2239c3bd-8b53-49e7-b4ff-1d587533b838",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eedb62c0-983a-4d58-bcec-44a874a309e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7179ce8b-c2ee-424e-b65a-37946146e707",
        "cursor": {
          "ref": "80215294-fbb1-44c6-bfad-f17862288f5e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0e55b924-574f-4723-8d86-6ea2b77e899a"
        },
        "item": {
          "id": "7179ce8b-c2ee-424e-b65a-37946146e707",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "af2e0529-9574-44e8-885c-27cfd05d7380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c2eb31-7221-4857-aca1-3cb7c555bc71",
        "cursor": {
          "ref": "608a0ba7-7d29-47fc-8b7e-6cec556a9a3a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bfeb11ef-a496-43f4-b7dc-dd36cba01e05"
        },
        "item": {
          "id": "18c2eb31-7221-4857-aca1-3cb7c555bc71",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "10964a55-3a98-4239-ab9d-753d41b38133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dc0771-d63d-4aa8-bef2-82497ae54c29",
        "cursor": {
          "ref": "acb34a5d-0f67-4f2c-acdc-c3ced38deb6c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "53de9cbd-b011-4ef8-a2a3-4377a829dce9"
        },
        "item": {
          "id": "a8dc0771-d63d-4aa8-bef2-82497ae54c29",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1f276d97-9c06-4ef2-83ca-6192834e2ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc07283-5917-49a7-8faa-b5a4eeebe946",
        "cursor": {
          "ref": "d0816a50-33b9-48b9-b9e0-72b258681b82",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fd7ece23-3aca-4ec2-87b1-0fd1251e04e4"
        },
        "item": {
          "id": "ffc07283-5917-49a7-8faa-b5a4eeebe946",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b0cb54b8-1a81-4f8f-9af4-532bd1d25e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a540cc-fb0d-4cce-95eb-404a9853343b",
        "cursor": {
          "ref": "246d8481-885f-4a0f-ad6a-9d87bbe62380",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "edb5ab7a-a115-4995-8df1-0e80cbf78acc"
        },
        "item": {
          "id": "46a540cc-fb0d-4cce-95eb-404a9853343b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0aa3a18d-9307-49da-8a20-2c41f09810fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b4a360-8dde-46fa-bbc8-b15ef3470786",
        "cursor": {
          "ref": "4640afa3-e0cc-41f4-9fae-53012af09d50",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3f730563-b6f4-4afb-be11-bd509225c5a4"
        },
        "item": {
          "id": "86b4a360-8dde-46fa-bbc8-b15ef3470786",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "51d27335-5444-43d9-a0d0-751fdcf6d6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f56aef-2d2b-4ce3-9e3f-493ddf671008",
        "cursor": {
          "ref": "3359ba5f-c5b5-4265-b7ec-0130da1bc757",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5a5251db-a746-4054-b7b6-db1c37037622"
        },
        "item": {
          "id": "98f56aef-2d2b-4ce3-9e3f-493ddf671008",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e130b63c-0f14-4ca8-806b-5fd9e5b81ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82833841-65c6-46ae-89fd-d8e0a3f56be8",
        "cursor": {
          "ref": "8403e0c4-0056-408f-9a0c-39c11acca78d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8b6fc91e-19d3-4e2e-ac2e-820736e10005"
        },
        "item": {
          "id": "82833841-65c6-46ae-89fd-d8e0a3f56be8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "93878386-194d-4134-a415-542d0506afd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b47a36-1e50-4638-975a-77219829e639",
        "cursor": {
          "ref": "ac6fe6c8-13a4-48f4-9e89-2e7d13b1f3e1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "73828592-6282-4d9d-917b-ea42ec384cfe"
        },
        "item": {
          "id": "10b47a36-1e50-4638-975a-77219829e639",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8d674705-7e2a-4246-a8c2-ca01cbca8bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb63071-9e05-4ddf-815f-5088494b2371",
        "cursor": {
          "ref": "796bb58b-4c55-4600-bbe3-9a4681ae6b5a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7aac579f-df49-4c52-bb68-03a4ed3b98fd"
        },
        "item": {
          "id": "5fb63071-9e05-4ddf-815f-5088494b2371",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ba42f6c2-5a2a-45c3-b705-712302f0bd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7949afa8-9f68-4de0-8066-1f0e50d26804",
        "cursor": {
          "ref": "a806c103-a179-4794-9711-79152ce564a8",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b0072b5c-e6f5-49e3-a911-0584081e68a6"
        },
        "item": {
          "id": "7949afa8-9f68-4de0-8066-1f0e50d26804",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "91680420-323a-41c5-8d73-af0802f2e4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1aea03-ba9c-4910-a25e-7c084530e4b0",
        "cursor": {
          "ref": "59c2c29c-00ce-4066-a3df-0bf4c1375294",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a4f9683d-6c55-420c-b0be-206548416815"
        },
        "item": {
          "id": "ed1aea03-ba9c-4910-a25e-7c084530e4b0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f7a9309b-500d-4d07-a546-2efad9f9eea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f97e406-cca0-4973-861f-a77294728275",
        "cursor": {
          "ref": "e6471861-9724-46ea-825d-a99238fc251d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9dbbcca7-bc63-498b-9320-1c38e85691e6"
        },
        "item": {
          "id": "9f97e406-cca0-4973-861f-a77294728275",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d47065c-35a5-42aa-aeeb-d36d6bf4a17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8dbc76-c60f-4b4f-a7d2-21e016133d52",
        "cursor": {
          "ref": "e62985cc-5fca-41a3-8f3c-03d5c1151f93",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "00ec87fc-7f18-4bfd-83fa-117083e19060"
        },
        "item": {
          "id": "7b8dbc76-c60f-4b4f-a7d2-21e016133d52",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "885e5176-f835-46cc-9e5a-3a6a6f4ed7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b530de-6b63-4529-9b9e-5d980984882d",
        "cursor": {
          "ref": "f70c77af-c944-4cff-a6af-8a8582680dd0",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cf4b028f-7846-4fa7-b64e-73b03bc460a0"
        },
        "item": {
          "id": "49b530de-6b63-4529-9b9e-5d980984882d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "57c82742-6127-44de-9353-2133e563c5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed94eaf-51fc-470f-a3f2-9a11f80b4c29",
        "cursor": {
          "ref": "0cf7e84f-85f0-42d3-8db5-dbf73269ebf7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "60234b49-ab87-47a4-86e2-5a8199263903"
        },
        "item": {
          "id": "8ed94eaf-51fc-470f-a3f2-9a11f80b4c29",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a04800c9-0ac5-4f18-b3b9-61afc83c46ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf58015b-c157-4cb3-a826-1c095db3a28e",
        "cursor": {
          "ref": "fcd362a9-9937-47df-b6fd-5d8002789748",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6fa49a50-9d41-4b73-a154-e443c7c5cd2b"
        },
        "item": {
          "id": "cf58015b-c157-4cb3-a826-1c095db3a28e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a9e997a6-4478-4aa4-8236-8785a56ca44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e533ec4c-b5b5-4c9c-aab8-160e4d0f3f9b",
        "cursor": {
          "ref": "fd2b60ba-43af-4689-9acf-e34e104363bc",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a98a91b8-85e8-49c4-8bd0-c947ae28d7b7"
        },
        "item": {
          "id": "e533ec4c-b5b5-4c9c-aab8-160e4d0f3f9b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "22d76abc-f977-4f20-a55b-95570d6d4158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2757b10d-0541-4e3f-bfd2-d651eb8565ce",
        "cursor": {
          "ref": "dc2ae22d-430d-431b-96ce-e942c142cdc9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "35cf991f-5e6e-42d8-9392-83af1355432d"
        },
        "item": {
          "id": "2757b10d-0541-4e3f-bfd2-d651eb8565ce",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dac43985-8d0d-40ce-9a70-068ccf567b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e57d0fc-641a-4cca-8e9f-b9458a94e76a",
        "cursor": {
          "ref": "4837587f-6b92-49bd-b76d-5c80e12a0efd",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "279ea7e3-52e2-4a52-b900-0774e1da7ad3"
        },
        "item": {
          "id": "3e57d0fc-641a-4cca-8e9f-b9458a94e76a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0f155606-c623-4797-ba32-6f9dea0e2114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5291403d-0cfb-497d-b4e1-dea346278e6d",
        "cursor": {
          "ref": "5bc9f900-2704-4c73-8e27-0e39e5dd72db",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "abddd2d7-99a2-4115-a1e0-847f4394b433"
        },
        "item": {
          "id": "5291403d-0cfb-497d-b4e1-dea346278e6d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "afa4cecc-5196-475f-8f87-633e87bf6005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aabfbf0-bb1d-4ef5-b897-b795793592fd",
        "cursor": {
          "ref": "6fe4dff4-6097-4427-a15e-1220c71e0d77",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3bde3071-4e63-4f64-a9eb-b7e24909544b"
        },
        "item": {
          "id": "3aabfbf0-bb1d-4ef5-b897-b795793592fd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c4353ef4-cd4f-40b7-b1ba-f8dcf6711f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d796db-f5cf-4e99-a4ab-369defcbf1c6",
        "cursor": {
          "ref": "17b5a4ff-e4d5-433d-ac45-84c0a5b13c10",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6100139f-d7a6-41e2-b1e8-92b9860aa185"
        },
        "item": {
          "id": "b4d796db-f5cf-4e99-a4ab-369defcbf1c6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "032ca218-9e1c-4fe5-9f3c-c656ac724933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98bffa6-3fc9-4ada-acd3-702f651dd898",
        "cursor": {
          "ref": "0b4af4b6-4043-4c85-85a5-46e211117b9f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7d47196f-85bd-4f2f-b35b-f732c8950920"
        },
        "item": {
          "id": "d98bffa6-3fc9-4ada-acd3-702f651dd898",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e39513d4-8038-4ced-bd1f-32dda2296f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768de190-568a-4bdc-82e2-a2c35cb6283b",
        "cursor": {
          "ref": "d2576e49-4bb3-40f7-ae76-d85468bb77ee",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ae9709dd-6751-49c6-8492-f764df8e6bd0"
        },
        "item": {
          "id": "768de190-568a-4bdc-82e2-a2c35cb6283b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d5fc89a7-fb3d-4c9a-972a-a7f5affc3374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec02e432-caec-402c-b167-9974b091662c",
        "cursor": {
          "ref": "0c262b22-b8c1-4292-9b8d-d9bd95fad4d9",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6141f182-d3d7-459b-a9b2-6777268362ef"
        },
        "item": {
          "id": "ec02e432-caec-402c-b167-9974b091662c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a039ca68-df82-452b-9c93-bfc6d21bc2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1369385-12e9-4680-b038-feb2c0afb0c3",
        "cursor": {
          "ref": "e3ef8272-d37b-4763-bd72-3c29b41ddc8a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0cf01ea3-6f3f-410d-a361-63d504187a6a"
        },
        "item": {
          "id": "f1369385-12e9-4680-b038-feb2c0afb0c3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4e4bf5dd-169b-4302-bfd3-963f35e117f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf72b82-875a-481a-8cfa-ef16eff24fd2",
        "cursor": {
          "ref": "b449fd57-5f68-4ba9-b7f3-fa25f92f0bfc",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bded9656-30f7-4036-85f2-3bd411e943bf"
        },
        "item": {
          "id": "ebf72b82-875a-481a-8cfa-ef16eff24fd2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "44621cb7-5054-471c-a9bc-0bb4409c77eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb2602b-22ed-49b8-94c7-eafda8790363",
        "cursor": {
          "ref": "df237281-4b47-4834-a813-d931e68652d6",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a88e0e63-e0e7-464e-ab15-ae4917e19be6"
        },
        "item": {
          "id": "7bb2602b-22ed-49b8-94c7-eafda8790363",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "887aa958-ecb6-4b52-8825-6e9b5c46dc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71c445c-f53a-47e0-bdf7-638125989a33",
        "cursor": {
          "ref": "3a949653-de81-451e-a0fe-911c6b7ccc8f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "70ac9372-05eb-4cf4-a09f-068d75d989b9"
        },
        "item": {
          "id": "d71c445c-f53a-47e0-bdf7-638125989a33",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b1260592-7eed-4d01-bc5c-271cefc2cc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd820f5-48d4-4056-a329-77f801bc86ac",
        "cursor": {
          "ref": "e535cb65-1a66-4d4d-9b06-78f6eb588a49",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f74be48c-a5bb-4070-8a5e-e17b1fd341df"
        },
        "item": {
          "id": "ffd820f5-48d4-4056-a329-77f801bc86ac",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6a4e219a-bb58-4fb6-b1bf-8eb8782eb595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e950b4-f706-484a-a61c-920e804839bd",
        "cursor": {
          "ref": "0811a518-7afa-4330-9c74-87973309d84b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "44b2e7e8-3380-4598-ba84-e8d9217ba03d"
        },
        "item": {
          "id": "a9e950b4-f706-484a-a61c-920e804839bd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d5b78f33-e017-4a0e-b20c-d29fdb495bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae3bf05-f58a-4a20-a193-ff094d5829d6",
        "cursor": {
          "ref": "810e9324-5755-4870-adf1-87a61d7dcf8d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6eecdd4a-f52b-4553-b30a-3e05ac2f4e08"
        },
        "item": {
          "id": "6ae3bf05-f58a-4a20-a193-ff094d5829d6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "00c5bf8a-73a5-4cca-8fc6-ca3f1b2f4213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff67f1e-a990-40f0-9b6a-6f7a49ada18f",
        "cursor": {
          "ref": "fe0df213-665f-499a-9e72-74e055c5ce04",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "38f94e4b-9698-4a98-b04b-71af35edb228"
        },
        "item": {
          "id": "fff67f1e-a990-40f0-9b6a-6f7a49ada18f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7c7dfced-015c-48be-a233-b16ae27d37b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866806f2-1dfc-4ad2-825f-9d7d8aafc49c",
        "cursor": {
          "ref": "ca6b4be6-2d27-4eaf-b683-db4491758faf",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2ac5abf5-67a4-41ef-a5f8-c638be43696b"
        },
        "item": {
          "id": "866806f2-1dfc-4ad2-825f-9d7d8aafc49c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d581c8cf-6a86-4e0f-bcce-9c171e15d52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e0a620-c193-46ab-97de-6da42ddf634f",
        "cursor": {
          "ref": "83e4f58f-42b5-40ca-b25b-b4577044c962",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0d58855a-5c29-4339-a061-ad7c76014cdf"
        },
        "item": {
          "id": "c8e0a620-c193-46ab-97de-6da42ddf634f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "53d478a7-ed14-42aa-b712-6e824bf0c4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d689b052-03e0-4327-bfee-f96ff3924c70",
        "cursor": {
          "ref": "52b9d825-1c0a-4dfd-bd3d-6461124911ba",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "20f142df-8c2f-48e6-bbb0-4436f765b538"
        },
        "item": {
          "id": "d689b052-03e0-4327-bfee-f96ff3924c70",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3eec5fc5-0282-46f7-ac8e-7234a33fb3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e67f93-68b6-45f9-8a44-a5535225f00d",
        "cursor": {
          "ref": "013b182f-1e18-43b1-85c2-7e036ad2333e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9c87a53c-c537-4b40-b6e4-0eeab1be2329"
        },
        "item": {
          "id": "64e67f93-68b6-45f9-8a44-a5535225f00d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a207994e-57a5-4fb6-9f96-754c7b0d496d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589c19dd-ef62-4ef7-92e3-c74f827ac4e2",
        "cursor": {
          "ref": "fa5f7ff9-f063-42f2-a5c4-f2b39ca9e89b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "34318c0c-53e7-44c6-bce6-c22bbd236bb6"
        },
        "item": {
          "id": "589c19dd-ef62-4ef7-92e3-c74f827ac4e2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "20658c6a-893e-4250-b231-227c8d7cde5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa28002d-9560-491b-9166-16331311286f",
        "cursor": {
          "ref": "3c07a692-7bfd-4d0c-b910-c9beff2bdd27",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "df65c4f7-6487-4126-b4e2-3423a7dfdc6c"
        },
        "item": {
          "id": "fa28002d-9560-491b-9166-16331311286f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d674f471-41ad-4e79-a959-443226f6a886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01c2fd6-9b28-4a60-8ca8-8adf1458dc00",
        "cursor": {
          "ref": "2bdc21b1-71c0-41e8-b023-9925dade13ee",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0d643e4a-193c-4506-a0a3-3db5794f551e"
        },
        "item": {
          "id": "c01c2fd6-9b28-4a60-8ca8-8adf1458dc00",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "10e07028-235b-48e6-ba6f-f08afc152637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b7c133-3221-404d-9abb-2fc8d3a4baa8",
        "cursor": {
          "ref": "5da0e476-5112-41ed-bef6-539f6dd592ef",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6fb797c4-6930-4dc3-bc9b-cdc260cb2da7"
        },
        "item": {
          "id": "b2b7c133-3221-404d-9abb-2fc8d3a4baa8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "480de25d-8a09-45e4-82ea-dad8101881db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaef0799-a098-4020-83b9-51e5d23e6b7a",
        "cursor": {
          "ref": "cad0c15d-8828-4462-aa3b-880787e1e20f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0cca181e-0054-4bbf-8e34-bf75061cea48"
        },
        "item": {
          "id": "eaef0799-a098-4020-83b9-51e5d23e6b7a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "620d0743-87b3-4f9b-aade-d8f37c3d84a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e108a21-02ab-4f67-9bd8-60fc6c6a9e16",
        "cursor": {
          "ref": "be337904-c75d-44ab-b79c-90361414b7fb",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cfe212e0-5bd0-43b2-9b0a-2b8fa411c31e"
        },
        "item": {
          "id": "8e108a21-02ab-4f67-9bd8-60fc6c6a9e16",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4d34862d-596d-4456-9a8a-3c90e581b647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce025681-8c58-4fba-8860-a5b6c813b779",
        "cursor": {
          "ref": "0ffaa79b-7b92-4c8d-a205-e0c1223d0ba4",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "88fa851e-0523-4a5c-9aa0-3d8c1734e96f"
        },
        "item": {
          "id": "ce025681-8c58-4fba-8860-a5b6c813b779",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "28f17807-8cde-4439-b54d-11b29c941171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ffc681-2940-4b9d-803d-9267ca67c609",
        "cursor": {
          "ref": "92a84d37-e697-47c4-8236-99ac3ced2734",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e2285e42-0c25-4eba-b733-8fdef7f18eb4"
        },
        "item": {
          "id": "c2ffc681-2940-4b9d-803d-9267ca67c609",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5e20ba16-0326-4c22-b118-85d1e888870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe93f942-ae14-494a-afa7-85b41148063f",
        "cursor": {
          "ref": "bbe83cac-5862-45a5-a64d-316e0d377806",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f19715f3-0f1f-4e4b-9d7f-608346f96403"
        },
        "item": {
          "id": "fe93f942-ae14-494a-afa7-85b41148063f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b6851804-7b8b-4ab5-a413-014f69df2562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a09cf3-831f-45c7-b0e1-b8e813767bff",
        "cursor": {
          "ref": "9ffa4531-60c6-4f9c-89ad-2feacad59d62",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e2c6b385-f5a0-43a6-8163-6c01fa56496f"
        },
        "item": {
          "id": "83a09cf3-831f-45c7-b0e1-b8e813767bff",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ce2c79d6-74d2-4bcf-8afa-3fde8c1dfd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeabc4c-5228-4838-ac50-8bb35989c5a1",
        "cursor": {
          "ref": "96374920-39c3-4e5e-a9b4-81935338a9bd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ff894ec5-ab50-42aa-bc23-4d45d07237d4"
        },
        "item": {
          "id": "ceeabc4c-5228-4838-ac50-8bb35989c5a1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7e45626b-a2f7-4b16-a4c0-e1f6da59a46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645b7b93-dbf6-4b44-9351-55287bd7230c",
        "cursor": {
          "ref": "bd861082-60be-491f-84ad-908fe02c687c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cdbd887a-74e9-481e-8f9a-9a900882f762"
        },
        "item": {
          "id": "645b7b93-dbf6-4b44-9351-55287bd7230c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6f45b9fd-15d1-4c09-b712-04582e0372a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc122501-55fb-4987-b763-9febbd3efde3",
        "cursor": {
          "ref": "64769bbf-7a64-4ade-9a41-669b1e1d0a7e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1bdb41fe-e3c3-4072-a554-ae5bb9e0fc96"
        },
        "item": {
          "id": "fc122501-55fb-4987-b763-9febbd3efde3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "40c5ae60-a923-4ae1-a785-8b7d83d1a875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4169cd1d-aea0-444e-a647-16ff1dde7aab",
        "cursor": {
          "ref": "d824ddf8-0726-41b2-ae6d-b3653a25f7a3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7dccca6e-aab0-4da1-a83d-e09d02adb99d"
        },
        "item": {
          "id": "4169cd1d-aea0-444e-a647-16ff1dde7aab",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f02ff71d-eedc-4296-8168-e505d0229978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0583d18-40c2-4d3d-b0f3-f662cc5ff7e3",
        "cursor": {
          "ref": "a3be4417-56e5-4559-ab7c-441f1f80ecaa",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b657a891-5fed-4a88-8f59-77c00496f7d8"
        },
        "item": {
          "id": "a0583d18-40c2-4d3d-b0f3-f662cc5ff7e3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f696c401-2b2d-45e9-a635-6b1fcbbab80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1a0c18-58e0-49de-95cf-365c1a236a87",
        "cursor": {
          "ref": "37b142b0-d52a-4886-98a1-201a59bea96c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "456ecc57-dfd2-4eaf-b9d4-b1a0b50390e9"
        },
        "item": {
          "id": "fc1a0c18-58e0-49de-95cf-365c1a236a87",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fc189c02-0583-4ff5-88d4-3f46fafca12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b823a32-2f09-4f5d-a0b5-2f6588d62503",
        "cursor": {
          "ref": "a6fc2753-efe7-4bd2-aab4-81706ce51043",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3f68f8df-c136-4d91-926d-62e74ea41dd2"
        },
        "item": {
          "id": "9b823a32-2f09-4f5d-a0b5-2f6588d62503",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "92944598-7c5f-48a8-abe5-1881d489e216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb39837b-885c-4772-9135-3468bee6be7b",
        "cursor": {
          "ref": "847ab251-28a2-4c6b-b20d-e5bbfeac71bc",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6dc9afde-ae0f-486b-bd2e-126121dd3396"
        },
        "item": {
          "id": "cb39837b-885c-4772-9135-3468bee6be7b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3678ee3f-0a65-48d0-8c1a-540fb9b6f0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7b8b50-ce63-4275-a60b-8713a5c46aa5",
        "cursor": {
          "ref": "acd34e3a-5326-4fc1-8993-36a26f335e6a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "da589401-04c1-46d2-9470-cf3d47f48a4c"
        },
        "item": {
          "id": "8b7b8b50-ce63-4275-a60b-8713a5c46aa5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d873c909-aa86-47bb-a2d9-c38b4c3fca2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0a0a49-b15a-41c9-9008-9e8e6b842ab5",
        "cursor": {
          "ref": "434f1dfd-6f45-401b-b2f0-62882181545d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "59bc1d83-3fc1-4848-b074-6097861322d2"
        },
        "item": {
          "id": "2d0a0a49-b15a-41c9-9008-9e8e6b842ab5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "74591bc1-6fee-412e-91ae-ff2a06d723fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ee6849-b95a-4f48-919a-75d9865219f8",
        "cursor": {
          "ref": "4c34b979-14d2-4056-8e30-89b30b673063",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "53450975-03f4-485f-a614-aa68f894b9fa"
        },
        "item": {
          "id": "20ee6849-b95a-4f48-919a-75d9865219f8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e1e70333-cbd6-4ad7-b863-83381312db24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a86e8fe-7db4-4ebf-8947-79c3ca30557e",
        "cursor": {
          "ref": "e4e0ef9a-cef8-4e0d-bb3d-4c4aa027195b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e58dd6c6-f414-4afe-8274-e1d0aa42e4e0"
        },
        "item": {
          "id": "4a86e8fe-7db4-4ebf-8947-79c3ca30557e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d660930e-3e70-44e7-b5b4-e513bacc6629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4502299-6cb5-4522-8b15-3875c6af3ecd",
        "cursor": {
          "ref": "55ad3a9d-75c8-4e9e-9b50-6ed4eee4150f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "497443b4-2aa7-4c6b-be8d-41f81e67f1e1"
        },
        "item": {
          "id": "f4502299-6cb5-4522-8b15-3875c6af3ecd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0af997fb-c42e-432b-96ac-340f0faf593b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7567e1-68d3-422a-ab85-58ee4229424f",
        "cursor": {
          "ref": "50cf518a-8c49-42b7-9f58-10709b9fe81d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0886b6f9-e545-494c-821b-9eda11bd603b"
        },
        "item": {
          "id": "7f7567e1-68d3-422a-ab85-58ee4229424f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "618dff1c-f37a-4172-88e6-78719b58aa9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc90c8c2-90ce-42ff-a394-175778c269ae",
        "cursor": {
          "ref": "a324feb9-d423-45b8-9d24-c732d5b8258d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ac4cf4c9-4c70-4d1d-af59-2d686516acfd"
        },
        "item": {
          "id": "bc90c8c2-90ce-42ff-a394-175778c269ae",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "435dd0f8-a7a9-47be-ba42-06e316445b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6713be-974a-492d-9c5e-7ad6f1b1fca5",
        "cursor": {
          "ref": "5d0f2466-6483-4e5c-9a6b-cb2f8b6b72f1",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1a22ac9c-f709-4dda-bd30-745a5148a821"
        },
        "item": {
          "id": "cc6713be-974a-492d-9c5e-7ad6f1b1fca5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7d28e3a4-72cb-4986-9d20-df6d71a8812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8768361-c66a-4c8e-9bcc-8054a397595b",
        "cursor": {
          "ref": "fd045643-f49e-4422-b8c7-fdffc3deff81",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e715988f-a4f5-4409-ab5d-daf50e34e71c"
        },
        "item": {
          "id": "f8768361-c66a-4c8e-9bcc-8054a397595b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "88099437-5fb5-4c71-bcae-dd5b17648ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434f3b90-45d7-495f-b57d-3e39c78f8dcb",
        "cursor": {
          "ref": "0eceda52-41d9-4aea-9168-f0de53da732a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e383a406-2078-4067-9c2b-bf93047a8e3a"
        },
        "item": {
          "id": "434f3b90-45d7-495f-b57d-3e39c78f8dcb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e9d5249a-84c1-4ad3-a3ca-95fec1ed0271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e289e445-c0a0-425e-b953-16ca9f18cedc",
        "cursor": {
          "ref": "8ef377a8-cb64-45da-be09-fa123b15e3b1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "501eda70-275a-46b8-ad2e-ee1638188bfd"
        },
        "item": {
          "id": "e289e445-c0a0-425e-b953-16ca9f18cedc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "62b76539-a1af-4376-ad6d-71a8a0cc94f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc50972-3f71-4dff-85e5-1043fe503b45",
        "cursor": {
          "ref": "8d43841f-d2d7-47d1-b653-650e24cbd0de",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d518413c-7f2e-4883-9b10-4fc4c1aa8a23"
        },
        "item": {
          "id": "fbc50972-3f71-4dff-85e5-1043fe503b45",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "159a48a7-82c1-4e83-834d-99ff539fe0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d417708-e73d-411c-b667-815f36cac1b3",
        "cursor": {
          "ref": "07ddde7a-c772-4511-9408-750781853bdf",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "401ff1cb-512a-4f0a-a2a5-b48dd5b73eed"
        },
        "item": {
          "id": "8d417708-e73d-411c-b667-815f36cac1b3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "26fdd343-5b69-4b67-9259-1316823efc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bad011e-06e3-46f4-8448-ba911cc1f755",
        "cursor": {
          "ref": "bc406641-e86c-474f-8205-335e836d37d4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3a140e74-3b64-4bb3-be6b-d47c8d80362c"
        },
        "item": {
          "id": "7bad011e-06e3-46f4-8448-ba911cc1f755",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9e9ddee2-889e-495a-9020-b711f304bb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d25e0e-4c39-473b-b96f-901a863cb124",
        "cursor": {
          "ref": "943b12c2-1258-4c18-9272-0ba77190dd50",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cd91bd9a-37d0-41c2-a89b-c68616ce4df8"
        },
        "item": {
          "id": "d8d25e0e-4c39-473b-b96f-901a863cb124",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fee049a3-01fe-49aa-a385-ab5c87f61776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ff7856-bcc9-4e60-a753-180e353a32d7",
        "cursor": {
          "ref": "dbd1b67e-d9c7-4d1c-8885-f9f0257d63e1",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6fbf9e85-a195-4e8d-9b78-dec45f6489da"
        },
        "item": {
          "id": "86ff7856-bcc9-4e60-a753-180e353a32d7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cd47d0e2-f633-4a33-a625-b4e576250cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b4801d-bb59-4769-8def-95be8dbfb37c",
        "cursor": {
          "ref": "67a03101-6227-4deb-963a-d23ce5c99412",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6aa7e5ad-82a5-4803-8ad7-cdb0ed8bb3c6"
        },
        "item": {
          "id": "f7b4801d-bb59-4769-8def-95be8dbfb37c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "afac0638-95e4-4af3-94da-120cd405927a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8346b913-ddee-4c40-b428-8a4645b9c1ad",
        "cursor": {
          "ref": "6e5694da-74b8-4a33-b49e-e0b2f5c8e6d5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "21bf538e-83f4-45e7-b29d-38e4078a5b65"
        },
        "item": {
          "id": "8346b913-ddee-4c40-b428-8a4645b9c1ad",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b7c37bd6-2e0c-4352-9c45-188aea4659b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bacae09-0dc3-4d7e-942c-33b0594ad704",
        "cursor": {
          "ref": "5f1cc23e-76c0-4f01-9174-39d788dbb022",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "aa82145c-06e5-4f3f-a4dc-a1674aaa8a26"
        },
        "item": {
          "id": "8bacae09-0dc3-4d7e-942c-33b0594ad704",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f0b82327-a79e-4c49-8f91-c2703f6cdf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3e08b7-b755-47b7-9ce0-17b7820dfc78",
        "cursor": {
          "ref": "3ec5dbf5-e229-42fa-ba21-8b80d37b94fe",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e728e843-18ab-4174-86ed-0214805b9fd0"
        },
        "item": {
          "id": "0e3e08b7-b755-47b7-9ce0-17b7820dfc78",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "aaa63499-41ae-4c58-8e15-333a836805ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0d0d50-b61e-4f6f-a956-39337cb75e9e",
        "cursor": {
          "ref": "9596c14c-e564-4faa-bd31-05f6ac4a05e9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5d617831-8723-4c7c-b67a-f5db41e3c8ee"
        },
        "item": {
          "id": "ab0d0d50-b61e-4f6f-a956-39337cb75e9e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e840e3bc-175a-4cf1-925a-c3d010184cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c17c358-91bf-4578-bf9a-0f3f388ec424",
        "cursor": {
          "ref": "6e2a5179-1d8f-4770-a8c2-35510d6fde4f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6820916f-d64a-4aae-a41e-f8a33800eae8"
        },
        "item": {
          "id": "8c17c358-91bf-4578-bf9a-0f3f388ec424",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "83f0478c-536d-4ce7-a64d-67e4577fe0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437ee7f5-6e66-4753-a4c7-544b5f7f337b",
        "cursor": {
          "ref": "d6b16f02-f32d-4cdc-b50c-d853a31b6dd8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7557e00c-96c5-4b39-a8ad-36b13c5584d8"
        },
        "item": {
          "id": "437ee7f5-6e66-4753-a4c7-544b5f7f337b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "540cb201-e8be-4cc2-89d5-fc8855da99bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210ac386-5eb1-4840-9ec4-1b84022a2167",
        "cursor": {
          "ref": "96e64e9d-b800-48ff-8bb1-ee527528d001",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d505bd84-7649-4bc3-8cc3-303f011e613a"
        },
        "item": {
          "id": "210ac386-5eb1-4840-9ec4-1b84022a2167",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ebda0e87-292b-46b3-9a05-e3d7a2f980d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956522ba-da6f-4bd5-a9c3-e4ad0f9207a8",
        "cursor": {
          "ref": "b5bcc7fe-1f33-4460-9047-ad0d0b70ac65",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ae22e440-3ab5-4863-8052-77cde119c78b"
        },
        "item": {
          "id": "956522ba-da6f-4bd5-a9c3-e4ad0f9207a8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a5a5ed4f-741e-410c-985e-4e994380591e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc551a1-279a-4c8d-83c3-a85dd97a7549",
        "cursor": {
          "ref": "dffec0b3-6daf-4fdf-a281-641e1f77fd3e",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5e402c63-2930-48f4-9104-69ceaccedc77"
        },
        "item": {
          "id": "2fc551a1-279a-4c8d-83c3-a85dd97a7549",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "29e6ac7d-2c0b-4aff-94b5-09d7450e9353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10380198-66e6-4c83-a062-4044461ad6f4",
        "cursor": {
          "ref": "2d4fec14-9b12-4fd6-aaaa-2602304851fe",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a83a0b60-a6c7-4276-9d54-9435b1da559e"
        },
        "item": {
          "id": "10380198-66e6-4c83-a062-4044461ad6f4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b80e00e5-b1d1-4023-a176-df02505ac996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6990d7-8b10-4d07-9327-ac87c3bdb569",
        "cursor": {
          "ref": "c13bc6df-d8fc-4ccf-b8c7-151322139d16",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b4c9661b-a990-4bf8-adbf-af929ad71d83"
        },
        "item": {
          "id": "3a6990d7-8b10-4d07-9327-ac87c3bdb569",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ff87145b-d6ca-40c9-acae-9fdcfc32e7c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec685c5-7b0e-402d-871f-c72f99f4d03f",
        "cursor": {
          "ref": "7b049b06-dc9d-41b4-bb71-418a558891fb",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "900647a7-3a5e-4dfb-8832-16830499f9b3"
        },
        "item": {
          "id": "3ec685c5-7b0e-402d-871f-c72f99f4d03f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fab1bb70-5093-451c-bae8-7adc44703f7d",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31a866b-4e3b-41f0-bd9b-13030451fa9c",
        "cursor": {
          "ref": "689c65e2-e4e1-423f-acd9-c492eb6b71bf",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6c53e930-d9bb-4d56-9502-b90be12252bd"
        },
        "item": {
          "id": "a31a866b-4e3b-41f0-bd9b-13030451fa9c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "495bffc2-28fe-4639-90b6-2cc0db64a04e",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "22770b84-93fe-4614-adf4-d054d7fd1d09",
        "cursor": {
          "ref": "deda3964-96b7-470d-aa06-d6ad3223f494",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b1c70143-13a0-4340-b026-89c338ade4a2"
        },
        "item": {
          "id": "22770b84-93fe-4614-adf4-d054d7fd1d09",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d2dd6507-e531-46cf-aaf0-6feb216284df",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aaab05-02c6-428d-8878-70f8e945f20f",
        "cursor": {
          "ref": "cbafa619-7cde-4698-acad-600cd06a22d2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "16857571-3bba-4467-b846-cbb395762a3e"
        },
        "item": {
          "id": "f6aaab05-02c6-428d-8878-70f8e945f20f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb078c83-41d8-4876-9880-9307eae136f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aaab05-02c6-428d-8878-70f8e945f20f",
        "cursor": {
          "ref": "cbafa619-7cde-4698-acad-600cd06a22d2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "16857571-3bba-4467-b846-cbb395762a3e"
        },
        "item": {
          "id": "f6aaab05-02c6-428d-8878-70f8e945f20f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb078c83-41d8-4876-9880-9307eae136f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3215c62-2696-4d59-84e1-90ea892b7a9a",
        "cursor": {
          "ref": "702b96d5-438a-4d1d-ba77-b100b9b0b5f9",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b7ba412c-9a7a-44dd-9140-524ed27ab8ea"
        },
        "item": {
          "id": "c3215c62-2696-4d59-84e1-90ea892b7a9a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cfcfc444-8f82-4708-b134-7969db0b9f9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0108ff0-a09e-4796-bc00-ca8429c126bb",
        "cursor": {
          "ref": "8431bf44-d102-4916-8497-4b402f3c026a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "12273735-b154-4e71-8714-5a6e1b4aeb3d"
        },
        "item": {
          "id": "b0108ff0-a09e-4796-bc00-ca8429c126bb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c6ad7fa9-3710-433c-bdc9-4c145877b35a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}