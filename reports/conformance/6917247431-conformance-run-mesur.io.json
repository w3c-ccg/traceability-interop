{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6d01b6d8-40df-4914-8663-090d1f162ec0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e582218b-829e-4950-97cf-2188d2ba5f1e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a209206d-6d47-48bb-bc0d-dfc256b3a132",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1d961d47-b855-435f-a02b-6c803c28a7ab"
                }
              }
            ]
          },
          {
            "id": "4a2b5789-8a2c-439a-bb37-8f334e72795e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64c66030-71df-40bc-a72b-39b293da4930",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b3392f96-b6bc-4c3c-9d4b-3f3069d3d7e3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0aef3cb9-34d7-4eb9-bfb9-14f42813694b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ce2f4a9e-380d-40e1-9244-8af2e1a8f646",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c36a091f-fa08-41f5-9bb2-daf157866c5b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bd1878a-7dc7-494a-bafc-293dc71bdb73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b224f25-cc92-4a11-9ded-14c112444770"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc05f1c1-c444-4742-b527-3ccaf6ac6772",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "feaacb9c-73dc-4cdb-b880-5fd3bd4b7254"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fcd54ce8-2ec2-4507-8329-1b352ea07ff5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13ea39f7-99f6-4c66-8a21-57e230623636"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d60ab030-d439-4c5f-b045-53bcf0e6c454",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dfde81cf-8d14-4128-ae2c-b45bf59b6391"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c904c6f5-4b9a-4188-ae81-190081950017",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12104b82-79ce-4c79-90bf-d142e73c79e5"
            }
          }
        ]
      },
      {
        "id": "96e73e6b-0216-4cbe-bdb6-92f6fe692a06",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dabbe4d2-e4d5-4434-9b8b-84ad33bec128",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8851ff0f-2544-495c-85e0-ab41a0993664",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a0882fcf-a736-41c8-9bdd-671f32936e39",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2fef7b-86d8-46e9-973f-5ec612a56f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2bacd6d-2254-42c1-849e-5b06471b576b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9362111e-c291-4ba4-af11-cfde79103b39",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da572de-582c-4e62-9211-e61a74890d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65859c26-3e33-4be2-a64c-ff95924b80dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabef54e-4b8b-4d4f-baee-29a9872f9c6f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13696d5d-a9e4-4ee9-9c03-f7781b0a971a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c3e4827-922a-43a8-aa20-e2d851fc3364"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4bbf9e8-85b7-4c09-bf6c-5a5d3bb1d442",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98c2172d-a79a-4811-9a9c-079c573edfe2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f36ec1-4eb0-466b-997f-e40664317c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddfac210-abbf-4027-86a8-d48c0a216827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387300da-4394-463e-a198-f98b5205edb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9371c33-b20e-452f-b593-20c46eb59e83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7f7f39a5-4232-4ce2-9447-993b2c1ff429",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f671ac4-bb82-4e6b-8323-6df66dff156c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3a0299f-7cdd-437a-b0ec-0c1af7f450b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ada3b4bb-f276-4ab8-b4d2-e6fb60744dcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98251f50-9e57-43b5-b947-0187a3b83f74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e82ee78f-9f5a-48b1-a41f-396b03f66228"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4aef51d-6f5c-4bf5-bf10-6b08b4ff4264",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "661834d3-80f1-47b7-b238-8e4ce2c33eaa"
            }
          }
        ]
      },
      {
        "id": "0e5b2577-888b-475c-a00e-f6da96800fcf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cd4341e3-e284-4364-9684-e7c42d69e8e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17007bdd-7168-4fb7-87c3-ddb123d08ce2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4d9cc5dd-2ed1-4de9-b3b3-9db704a9001c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed3dcba-5c53-4157-9abb-67c5675870f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddede7f-c457-4c7d-9b3c-5db20f5906c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c9d4ae-d385-45b2-807c-cbdef5868892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc413892-8461-45ba-b593-9da844eb8b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3309eb57-2329-4d43-948c-60e6d11af7c7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3ec1c6-54a5-47dc-be82-537ab8d943bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6076509c-3aaf-467e-b4b6-8eecd8341ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb93ea3-ac5c-4eae-bb25-b9f3f3208140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fc7af0a-a45d-4918-b32f-24c3a219b92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fce0df1-9b58-42ea-839f-651a866af2cb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25780ce9-33c5-49b8-b91d-f476b9b8223a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c5173b-2146-4fe1-b17b-c60ed58c2cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d059220c-0660-484e-a6c4-0c89123025bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f77ba8a-c525-411e-b3f9-1d0c423aa064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5073ccc2-ba21-4211-8521-0e6e799aa38c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d718d62-3da2-4494-a318-3c97ef216092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85aa33e-d70b-422c-b025-5e1b6116411d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2343c9-1049-4ef8-8f7a-3ae8327c7066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2492c666-571a-4275-8c4b-f310786a78b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4749c5-ebce-4081-a792-41ae5302353b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed42bdea-7691-468f-8276-02b05b8c627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac77d94-2050-4cd6-bafa-9943bd4b1d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb405bdf-5df5-483b-8567-b067784c61ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad1e7ef4-d4ea-4be5-a4e4-d6d809c2a7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f784ad-5f16-460e-8ac0-403e28e0ae40",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5633a3d-b756-48cd-8072-c0f86cc42351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4459e801-5ad4-4e58-b9bc-d4a073a19c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114b828b-dc25-470c-a21a-05ec05aef86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3caa9dd0-9fcd-49e1-ba76-045f133c7105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a93239-f3c2-4328-aa82-c21b27aebc53",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf0cf9b-e02d-4f89-86d3-efcdf3339b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f310e8-a1b7-4c6a-ba7c-0ea8eb4acc6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b85af9-f34a-4caa-b601-0ac1f5a34100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f36deaf-0cec-453d-b83f-99ee610d10fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6e666f-40c2-4f92-9333-8ae1de8c7815",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70617e6-49f5-4f88-a73e-5874cfc2f361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcead1c0-55af-401f-9c99-d81abee5d347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f67ecd-5c9f-49fe-b5b4-a23fe6b95a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adf71301-b861-469d-af24-18b6baaf4b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325e82e0-3666-40ce-bf2f-2b13f8eeb8d3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbf8854-15e5-42e3-a234-7c554ab908fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3123e37-40f1-4622-bcc2-d82d309c1b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07c8a81-e317-4ac9-bf3b-8f362898264b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2cd74cb-2dd3-43b4-b561-e7d34cd7ff8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7d8021-eccd-4234-8dd8-7e47863b3293",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11916d6c-dfd7-4d69-a00d-d1ed23fa977d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4115cf95-ea23-486f-88fa-0fac91461f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394a2340-da8c-417a-b6e9-b60380b00e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be6c48dd-9649-4ea3-824f-672207e85f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c1d5a6-e603-45c5-b408-64e60076afce",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6a5853-8f87-4f14-aa9d-247db14196bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c2fc38-bd3e-411d-a0c8-4c7c4e76353c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d54c5b4-8ab9-4c40-a63f-aed4c5935742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33b7c7c9-7ea1-4efb-b8c9-3fd036ba89be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f7c94d-aa2b-41de-bb29-ca8e3e0d5173",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de571568-3996-4401-bdee-3b4916fec47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218f14a2-b208-4c0b-98f2-32bdcf863c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8bd8bb-5175-4306-ad43-8fc26e4c0901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2934ca4-8622-4ec3-a500-4dcdba314234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bd7a6a-5926-4a7c-87b2-cd88f37e92e8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a55db5-cde8-4b60-a6b9-4c1857975595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3730cfc-f7fe-40f3-a291-403722a439b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9e2f28-6bd8-4a8c-9534-d4a3351db81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "862b2e42-ec59-49bd-b44c-33a8c1aeca12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e58f2c-e97a-45a8-96b7-99fab8623855",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8652db2-2c85-482d-943b-8ed3d768acb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715c192e-fe17-458d-840e-7eea90bc6586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34704cfe-87dc-46da-8f4b-7532fb2f25aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e88c655b-5e9e-4a2d-b6b5-8b628481cd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6752bd91-4caf-404e-a815-7b2f5223a94b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef0ac28-7656-491b-8f6a-38829c5177b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6626f3e1-9c4b-456c-be60-8b52eaae4980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a054e942-64f7-4d24-a018-26424cc2557f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5212c65-aaef-4994-b881-d3e7007fb875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc8ca67-12a7-40a3-ae44-7f52398a9e7d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fff1a96-3390-4135-9ed4-79d74cbe1569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81211968-6d47-4c5c-a821-6b7a2f47455e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96986328-a717-4445-987c-c480c2c06d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74fcf1dc-a124-44a9-8234-a659c3e0dd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746e23d4-346b-483c-b35c-7b8aefd019e1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35969ec0-a00d-4837-b210-70d1eba58d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521fb634-7518-4112-b2a6-dbd93da8b288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b90729e-09b7-4ae4-99d6-a426d715e308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "860dafde-d9c9-417c-92f0-c7ea38fa535c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf48d43-91b3-47be-a74d-42bce2efc3fe",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911935bd-0aa2-40b7-b6de-b22d3668b069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dbfe23-d281-4b34-a6a9-111ff43cc845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4481b87a-39da-4f90-b6e6-9538dfad1d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac188aa2-2c23-46fc-9083-c7201945363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d6ee9a-5bc3-4c47-ad74-c1d268a33e3a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c8ee7d-8839-4942-8f3a-ee396e718c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb256fb6-4fe4-46c9-8278-7b8f74ec9a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c256146-adb7-42c9-b67e-c0ed7362dac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbb3460-120b-46a9-a6a6-998e5a1adca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d541f83-e15c-4ab8-a540-76437a785299",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea72c41f-1a50-4de3-b74c-aa2f62ece154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74750632-627e-457e-a160-6ac213f46249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5c1318-6a23-4bcf-aa2b-7f454ffd7015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aba9785-d94b-4da6-9148-4c83695cfed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ce73b6-53eb-476f-8f80-972406cfead4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1480e7-0d0e-4433-bc46-2f486dec2d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a36c2c4-d7c0-410b-b19c-b7ccedc51b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f1fc0f-6552-4db8-8e09-6242529110e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93151c95-a123-48d9-8bfd-2f7a0d5bc1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e10c01a-d34d-4962-938b-65225e58b467",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d7ee5f-59e2-42f2-9c91-3f2552904a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d805db1-af2d-4b7c-9e1c-e026dfd14580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ccb8b5-b7f2-49c0-b725-12d9bce0e47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c84b3986-236b-47e1-8e86-2a54731a462b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da175bf-c5e3-493e-a8b4-040a3b4de764",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fa0b02-9b2a-4371-9eb3-c0313bfbdcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e675fa-126d-4fd6-a267-ae81e580bd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5a3da8-948a-47ba-bc6f-3888ec0d04ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea79081-b14b-4534-a0ef-4ca96f5c4582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5787ff-63fe-45ef-8ba5-7215c7b96357",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15efdf1d-aa45-4ff4-b35b-3fb8bc56fb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbcf800-0da6-4e06-9e21-539f9f8fe5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f1899e-c17b-44e3-ac4d-ff44b21faae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1129c8b9-85f2-463a-b799-8f30dc171be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a8cce1-f4c9-4e25-b6b0-918f637b9e6d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e5d86c-aba0-42a1-8453-c28251ebd776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebc6ce2-b065-426a-a438-de705b2c0885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6275e066-7860-4d92-a630-0c2531171b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "860b918a-08ee-45f2-a2e1-41fb642fcb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f53d20b-027a-4899-8331-e7a331ad5017",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bf70e8-3fa4-416a-bb9b-83387185ab43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4d8738-2cf4-4660-833e-1f09fb9a9ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60172da1-11c4-4aa5-8a2d-b22039ab0d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3948ddcb-766e-4f61-8dbe-d46bcbf91b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1418211-25ae-4116-9eb7-3dd805bea9c4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65daf224-50f0-40ed-a503-b3d084e0e905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90252181-601c-4ca4-9cbc-66dbcc70d12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f295c97-0f20-4a7e-8afe-d44bb7f89f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20230a8f-b0f8-4efa-ba04-2f886b9fbf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cb5b79-06dd-40a2-bbc2-d0abaef629c2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f35557a-53f0-4c88-812d-8183afc719f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde4cf90-8658-4976-a70e-a2c5fd49addd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16530b5-79ee-423c-b15e-70dd5b5cc53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b58f2085-7e85-4d8b-9ccf-3c92e52ad58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcd4f45-55a2-4e9a-ae7a-582d29aac44a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d722b6a3-e925-47a6-bfca-0ec47cc5f311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb2a024-16e1-44d5-b0bd-e359005723f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04480c16-4c81-4ec4-92df-02f08141c02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50b16a8-1e80-4dcc-adf8-64b0b1015f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2694b732-e7ac-43de-abce-90334e44f736",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb8f8ad-e85b-494f-87e9-acd73df0a182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbdb563-ab75-456b-b7ff-23e194908386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a31afdb-4d0e-4d86-95ed-10a17a2aaa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc77b4cb-4960-48e3-a37f-390b766607de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cba733-1b4e-4e5f-b728-4cff909a1cbe",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dc7182-4cd6-44aa-b623-6d771182d1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24438407-20f3-4e80-bd1d-5474c3bf8aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721f514f-8f8d-4575-a203-44ffe153d796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6851a5a6-a957-4f9d-816c-d838214ba364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8645b5d-46fd-40a2-af92-ff4b94f1c758",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37f5f32-ee02-47f8-8f1b-600b25f5e503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc546ad-5f82-442d-850e-26a13b787c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d7bfe7-259f-42ed-b334-60dc50023cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1231860-4904-4d68-aa70-41ec15a2bf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20ddbab-b4f2-4ffc-9ec1-3dd59bc5ebc6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cde6ed8-346b-45a0-834d-947c4d38ae46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf5016f-916f-4190-a261-f10d8ef46d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec471b2-62a2-4867-8706-2f8b64d75667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2f38a7-e701-4014-8d89-022f964c883c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb620f9-717c-4e44-9ccf-81b57c1aadb2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897226b0-3ed7-4914-b983-7475914bda76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154fdaaf-4ff8-4306-b77e-796a19ef7e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217cd75e-6469-4d2a-ba65-9651cd99e45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c581bce-82cd-4eab-841f-fd33ff023513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465c3235-b03a-4188-b862-d0d3c53b225f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f61cfb7-9f45-4037-8ac7-014832545d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d11e54b-69fe-4b69-853b-8890e837b383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67a24f0-1854-42cb-b177-7ebc15166f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "35e1714e-6e46-40e5-9bde-fd592bbc128f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78958272-5cb4-4d77-8535-2adb1363e29d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee0e3b5-0366-4da9-861b-e2d85630a756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75aad7b0-8356-4267-af24-c33087574058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b77272e-b38c-497b-bb32-fa00278a770e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f607136d-b85e-4c2b-94a5-d1002406a391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f732088d-4e6a-46b3-9ef2-de35b40d1f99",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5843bb6c-79a8-451c-ba26-c74c31841bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db34e3e5-227d-4a3e-9b58-8113eeadd3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ad4faa-ff68-4190-a1c7-d8fca39c43f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00be8b5e-15a5-4a71-9f32-4d017be61da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585cf1ae-d207-4df9-b43b-8890d287def4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aebc235-6f27-4ccc-b09b-b3ce58e9cad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1219a68-d259-424d-8809-1d0cf0347318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbda5b3f-e4d8-4b78-9b34-a3bd86a3de66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bce3452-2e6d-442d-a66a-a76d2d44a3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbb5531-ccce-450d-9354-e7a26f07baa6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc28289e-a569-4739-900c-75016f8b7481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dec008d-6460-499d-9a86-05414b90001e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da98d7f-5ebb-414e-96e5-068216ac38bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1c4edc-22d1-44f1-be61-8bae5aa8c914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa6c7f1-73e7-45c9-9a87-14f811c496d3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1756938f-6453-4d75-886d-d6c6a3c59c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91829d9-5421-4130-8e3c-0d1d6569f238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26f2e34-70a7-4985-a295-91b8ee0ecee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e1c79f-4ff1-456c-a7d7-f42dc0cee596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1149797b-3774-48ac-b880-6f3a98afed9b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18deb4ec-aab4-4c6b-8a03-69cbf36d1150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfe9384-021e-4d6a-92c5-21da87e8aaae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8c2f92-9e10-46d1-9a2f-b0c6a114328b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d457201c-0345-4a42-872f-d6249bffd3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b2e254-e8a2-4947-9d4f-632862efa1f3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d29285-381e-4689-a9be-87980d39498c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7371c3-1088-4ec2-8eb3-4bcd3db5637e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15878d61-2f52-4967-84b4-f095635f8f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "36b1f1d2-9584-4d52-8994-6333bdea4d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e8ed3e-b329-4a8f-8b7d-e2895914a5ba",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708c4033-5457-499e-ab83-25e6a8e5facb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ff5747-5f8e-4bf8-bd52-e8469280c8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7250bee-ed6f-482d-8847-4e9957b04675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c802b819-1403-4645-b460-59a9d2fc69b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184b93f4-c9f7-41d8-af61-df54e8dc2217",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc97448-0906-40be-94d2-1a37a1e13642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c273c3a-fed1-420d-9f54-1a97b96fdfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dcdcd8-70bb-4ccd-b975-6457b9147c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c17a7040-5b90-4bc2-b4c7-d9881c7a4cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aa37fa-fd5e-45e3-8972-60151326faa0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3428012-f1e3-4b82-9a40-4a5930e413de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29c733b-ca2c-4739-af8a-ae71056b11ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f309553a-8af5-4ab3-b17d-2c51e8a8c9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14d6dab-b306-4f3f-91eb-0120d8c52f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5adf45-efaf-4eca-912f-ca4a51204145",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee96c8c-c286-4b54-8820-140c01acff0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544c62ff-b799-4d4b-9008-7bb4c07059a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31deb5d9-7851-4acb-bd56-ac97b55110fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e60a6bf3-cfa1-405e-bf03-3a8278b69fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119b73d8-07fe-4008-a22c-313cf1729036",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2737ff6c-6904-4929-babf-4a10e10ce329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e0bd3b-41ac-4a97-994b-be2fb0c626cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3b47d3-4087-4aee-8171-6c60261d3fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83268815-b542-4959-8860-ebb6b86466aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442b3100-04a2-4068-81a5-cd6500b3edd8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a8f8c0-b662-4731-8fa4-964262df5a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961e0b2a-6056-4701-aae6-4f7d48e69622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40cd99d-1799-47dc-a313-673bf33e361d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6946922a-0a41-4e6d-9d16-a01d5b8a7970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7527f165-6cbf-4032-8c0d-f06b2124a823",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47ee84f-e2b2-40df-95b3-437fac10e09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca71a8e5-4453-4e67-b92d-8f0e1475b183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912194ff-bb3a-42a9-91cf-080ff783ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3efbcf-9d0d-4183-98b2-05efa492fbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc7ee98-54c6-4d31-aeea-2169a5568a6b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fad908-dbe9-4563-a8cf-e50e19f7bd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777bd788-174c-4d7a-afe3-bfe61bf3f1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221bc759-4fee-4b8e-88ac-76d1af521886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a009d39-c29c-48c0-8cb1-e25f2ec80117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61fd599-9d8f-43d5-abfc-34c3d5f4116e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8b8fcc-7e36-4e4b-b4b0-adb71c73a141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29913d08-bd46-4161-a5c3-a09f8effcfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd34843-5eb3-4502-8725-6ac7636679a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "257b61b2-fa3f-455b-8ba3-ec9baa903eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6553c99-6ef6-4365-a6fb-8567d0620652",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c99398a-d09a-4dc7-b3af-06165529e329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc9688c-159e-4f60-923e-e4b9d44f15bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc714167-082c-4ce7-99f4-8f97413c9572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd5c21e-3972-4f10-b03f-c2b02879a7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76fb2b3-574c-4175-ba59-4cc23e291b85",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85adf60b-0a85-418f-a50c-4340b92d1394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a96691-2059-4f80-9950-590346856325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1adcae-fb97-4cb4-b4df-59bb3f9c7064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "438b191d-a766-497f-be73-be6ea08b32f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7af5e7-e2f3-4b65-b317-cf65b9491370",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6905a3-8bb7-4d1e-925b-e58c260c1dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f9b0d5-c195-41b7-ba41-c6a0fbe4d05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393c3c06-eabc-4b8d-9ca0-65fab4fcd065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22a608d-96df-47b1-bffa-f052974eb3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c56090d-5961-460c-a5a8-aebea84c3534",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22988f88-bcd3-4ca3-b964-950cfb473132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696dc066-c894-43f3-aa57-e23ef5d2e588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f7509c-4d90-4394-ad28-b6a281164f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "834b0be0-289d-4c2f-825e-63f662b56449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a0b0b7-6f13-4b5b-9585-cb1e6de4c486",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692c63ff-5fc3-40f0-a908-483379ce28d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61fd963-9795-47bc-abf3-ff54ea5cf50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075bc54e-4718-4761-a72f-6c8059d1ff8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "215256b9-82cf-42f2-b258-cec0ba0565a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2b8bac-874f-4f81-9dd2-bac69219931b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5d63d6-1ecf-4907-8230-7922ef7dbfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56be640d-c0e6-402d-ac14-2f44b548b63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e23bfc6-f4b2-47f7-bc38-d792e3fb220c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7759daa2-4252-4e27-a968-cafb3081b624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744fee32-f2ba-4e03-b5c2-c946ec2bd1b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386d7e12-836f-4e64-ba3d-b08c346684de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c45888-5707-4e6e-8e9b-68a870564e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7eadf0-cb92-4a44-8cf3-9c22e37ca309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2add3e7b-9cfe-438b-aa15-b7fe16f76013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e3dc91-8d77-4648-8c4d-f522f7b2a3cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c049abb-7c84-4454-ade3-c6935a22d3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b00b7bb-bff5-4573-ad4b-06e31c6d99f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740681dd-fafa-4835-8724-1c00966f18ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "049ee6e5-6f12-4b2b-8662-249bc02360ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414d89da-19e4-4810-a9db-efec559aa405",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59ec40c-1d5e-45e1-a275-5227cd79ee9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5809e0d3-6679-41e4-a36a-f6e9c6896084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4dd75e-2edf-4985-869a-079925825fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d38040e4-9b61-4625-9d3a-82734f989988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654aa5be-4287-4322-b44f-1729b3309530",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b6e1e4-a56e-485a-b86c-7f8a9ce630c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976768db-16c9-47e0-bcb3-674c3406ddae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63366c7-726e-4ca4-aa49-bc0bc60cec31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4bb628-1355-4ee8-8087-9fbc23b80f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18afd553-4473-4bc0-bda9-70459bffc256",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b75fc2-7844-4e26-8295-c1c193ce9fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcdf564-e620-4929-a226-40ae2d79f3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166a9fd5-d3dc-4fdc-94b3-e89d15372d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "498b266d-4121-46bd-96f8-1a952f924462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98265971-6bd1-4f3f-9ed7-80f8458e7473",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aa4caa-b871-47d1-b6e1-6986f317a152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120727c7-784f-41ed-8e46-f2375eeb0a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64da0b0-164f-480a-ad21-08d17f3c1e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d95b8c-62e0-43d7-8478-d0a5297211c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9364c0e0-2505-4894-a8a9-f8df863ce0a8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dd6329-1e0c-409b-a3d1-c9aafc577f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d26616-f5c1-4908-8e4e-6af525ad690f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275f3c71-ef7b-42d9-92fa-c4cbfe62a01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53435634-03b4-48c2-b23e-2bcc78f93964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e460758-fc66-4e9c-bcd5-35cb6f7696e6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ebcb92-20c8-4f71-b7e3-37066c255e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8b09cd-b0ec-4a2e-b21f-15ebce04dc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aa1090-1a3a-49a1-9f3c-2b6a74dc1d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d843e2d-11d4-41cd-9246-d1f9ac81fd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e98bd6d-0030-4066-9e24-895f0ccfbce9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cb1d7d-2986-4704-887d-e68a9ae5785f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f7a681-6813-46c4-85cd-ca7679e2df31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab92f310-a5f7-49c4-b77c-7068880aad41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fd9dd4-5681-4a25-baff-f9fcc4576991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7515e21-e83e-4080-b157-08aa67f4a179",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c2f850-3b5f-4713-950f-ea2ad75045c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850d06e2-e61d-430b-aa22-5505216ae9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da66b53-c045-4118-abe2-45d12fb88b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcb7dc8-79be-46ac-b9e8-819e666971dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147b15a3-b10b-45e6-9652-c76d1e9b9584",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7a0f27-1d9d-46fc-83ab-b88ce639039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ab6d64-48f6-40d4-9458-12a5644a6b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d814a08-1588-4ca4-b97f-f0edba640a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "20c420f9-2886-4f85-a2c0-4ef4356fec9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6ef0e9-5ede-4651-b49e-ff0a6dc84848",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004d2a00-f9fa-490e-936a-5248747fc545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f05f65-e183-4982-9e54-b9cdec5efd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb891b71-1836-49d6-9871-af26455fc9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67f432af-00f9-4163-a52f-09edf6e06ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0a3048-81e7-42b2-9e58-0c68f8f24d5d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080da1c9-ab77-48bd-a045-79063078a937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37fe1d6-3180-4584-acdb-2ed93a78a92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4856f5-7896-461d-9e61-e3ea6a1bff3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2de47d49-3d83-42af-a91a-f5fee8578d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c161a3b-9379-4f5b-b094-b808b45996bd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e506bb0-08f4-4252-bcd5-f97c087f8334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315f8302-fc53-41c4-a879-a0bca95e9922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9814ecbb-3ed9-4e94-9f72-66f5d705c27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e222f3-895b-46aa-ad03-d8ba98aafdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a14636-61af-41f5-aca7-10a869f01fe9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddf4d7d-ef9d-4399-a711-163f9acf08e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fee934-5974-441e-8000-0e3c8271b281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefdc9da-652e-46d2-b2eb-4afdc39b439a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f333c886-233a-48db-9453-c5a04f35177c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9567e3c7-015e-41d7-b23f-31da1e948db4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591f1fbe-8e4b-408a-aa17-15d65878ca0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd51c41-0fe5-4115-859b-fc760cd03451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c90d39-196b-48a6-a609-d4924d18fefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84d74310-d2a7-49b7-ad35-f333688af3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5e0b9f-9382-460e-80b4-831727a0b85e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7186c9-ba83-4306-82a0-04db2b37fcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9396a11a-8005-4921-860a-53415a12de59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaacc69-47a2-4b61-956a-019b66b980e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d9c120-2be5-4893-a288-0064ec071c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c7a172-10a0-449e-adad-a5d8f5e38b6c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebe86a7-08c6-40fc-a02c-0240f4c9a5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359bd437-d1a0-4247-a7ef-7af5ae4df7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f3d605-608d-45d7-9ba3-a1b78f891e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f029fed4-72f3-4ef7-aa34-f9e82254c202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2c50b6-a7b9-4190-81e3-7696235ca5e8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d7eca5-ecdf-4c64-a9e8-a00d09e0ce2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4533907c-779f-4b27-9b6d-222dc541ffe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc9b3fd-90de-482f-95ed-47e88663e368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5552f246-e242-455b-af54-db5b0f8a64f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3033d354-074d-4ff0-8b96-e1a84222c293",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f532a9-9a1c-497c-aeb2-56b424644221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110f0cbd-aa05-46b7-852d-09f773e329b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edd0554-6fc1-4489-a659-848231808540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9406ad-3dcd-4edb-bf5b-196c0ce89d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2069fe0-bb23-4142-b7a8-27159a8623a0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b149e8-7382-433a-90a2-5d577fc6edfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876a730e-698c-4e28-9a24-9645069a4f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a7987b-eb41-4f78-adec-d217632d7703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f69a227-7c1b-4b33-a00b-61114e111cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9e786d-1c17-4281-9665-95c816a7caf5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c351b7-f7e8-4a54-b8bc-21b92bc0d736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60511d5-dcbc-4439-a61c-e772c710f72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179c0158-67bf-4377-8dd1-7c2b9273fd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b21b34b9-fcc1-45f2-bbf1-2f32730989c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b507bc04-cc6e-48c4-bb62-e0f3fe4407bd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62592b67-062c-49e6-b305-35d2a609b48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c8ec01-5af8-42ae-8c51-a3ffc7ebd63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9d74ce-f878-4531-bf60-67a29d6a4db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e500a41a-1199-4f87-bd2d-13e5ef20e480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbda4bac-1951-44ac-9f2b-f11148b6bd94",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378cbf57-3d36-4195-b2a0-bc0445c01fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080d71cd-36f9-45cf-b21b-968e536ea1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51f8825-2279-4a45-9270-6340dba8fb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d0898b-b7e2-40ae-b9a0-3e0ccdec1a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fca1a65-b194-417f-b222-e6a155499cc2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bb3fd3-104a-4444-abff-233612499c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0018f0dd-fa2e-41cd-8a34-1b54dbe33be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808a7f5f-6069-4f8b-9756-56058dccbe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbe3264-0c9c-476b-bfbe-49963333a95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49c25be-eaab-44e5-aa39-95e8611d6622",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7538e2e3-519a-4425-872b-0a731f745aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2622de-d253-4fc8-b809-a102d917ada5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704e0098-a13d-439c-a1d0-78c73aac539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6826bd7-854a-4524-9c5d-ccaf9986fcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2ccd0b-5272-4bbb-93d6-78840140834a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6150db5e-aa44-489e-a1dd-f68af566014a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0b0243-964f-48c7-ae54-a9c54045fc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3679de63-8ed0-4244-8bae-b7eb0a7fd4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70fd3caa-b492-4f19-81fe-f42057770741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54322067-f6ef-4772-bfec-6bc3885b7aa3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc40eacb-91e7-4fdd-a570-262024676481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba10ac5-a372-42ef-b4be-0dbea39c982c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e608ff-556f-4e3c-9006-0d288dbb45a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bacd30-96ba-4a1b-b5ba-e038d908c917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae75e995-032f-4afa-9bbe-3c490bbf884a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d19d879-aad8-4f67-a13c-7f2a19c9a970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31026f8e-b106-4661-976d-182da7eaadf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516c7e7d-2db9-4309-9903-923e7a9a194c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6071e1f4-f744-4ef3-b241-36d9a4db999e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c65305-a036-4786-965b-abe98a791719",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35037853-56bf-4979-a715-1a85e26c619d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6072f365-f825-4c74-959d-9754ca37b191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717bcc3e-6cbb-4d28-add0-53adecffa759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd30fa54-3373-4b3c-b1b5-49cbf4731e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f202578-98a9-45e8-8064-55eadd999ea2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa038068-9896-4ab5-bc98-78d412656d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8e6af2-c3f1-445d-9c7d-969f69d39ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b72157-0398-4a11-bfe0-42b986bd264f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "223e6477-575a-4daa-aba5-23081420dbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f8b8d7-360d-488f-9973-a476fd9a73a9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cd38b3-f4d2-4620-b48f-e7e26ed3015e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33061c3b-c85c-4cf6-a355-f1e494657329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91589ce-95ba-49af-a4ce-10a396b37ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "da54605a-a28c-4bd8-90ab-d3e9fc500157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f55e468-9c90-4aa5-86de-77a62f33a90a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb25729-1b74-40be-87b2-4d31ed4af259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c2d685-4879-4783-84a4-80fb97546cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdad306-38d1-43c0-8648-50121537d801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa50a1fd-f7af-427f-a8b2-2b48785884dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef368d8-5178-442b-b595-c0b66913f1b2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee72e0c9-2521-4cd0-82fb-ac2bb9f5eda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d903c4c6-dc01-4ac6-82cb-a4df5cb92f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b278f2f9-a377-4d65-a6b9-bbe75ed913e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "00cbb63f-6344-447a-8bb2-978f7dc082da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a03667-ee0e-4cac-bd36-b63819eec2e9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b56698-fd92-401e-b150-d797901704aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "22f52e00-2015-4309-82bf-f039a653d420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebc3b5f-75ec-465c-a973-5966070ba5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "518bfac7-fb44-47fb-a646-362d865de8f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "565b3097-d8a1-4e4c-ba1f-f21928ecb6fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f59db30b-9571-463d-9102-c5418c943a2a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0858b4b4-f53f-464a-9f4d-c99d674aadcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71078a52-0766-4235-a956-9691252a76c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b109008-56ac-4bc4-ab81-6ddaa29568ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bff21aab-4d94-4100-9589-33167378cd95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f4be980-23fa-4f2b-8edf-cf89e8e12715",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a8aa297-ae29-498f-b2f7-9cca9c541051"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e6b4a8e-ef8a-44d3-a248-b9ff6b6872a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75a72e8e-0bc5-4c83-8a53-d34f0871bdb5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8476d8aa-bc45-4199-8f78-c499d65720aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9216f20-d152-48c2-93fa-e8f56c274421"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ada7b731-147d-45d3-aac2-f33d040c9ff5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53d94cbd-6d79-4444-a2d0-246525afa648"
                }
              }
            ]
          },
          {
            "id": "09d28ff3-3691-436e-9440-3b38d2807837",
            "name": "Positive Testing",
            "item": [
              {
                "id": "09a714c7-13b8-461f-b1f2-dda47cfc44ab",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4090a8b5-8f20-4af4-89f8-abd1fbf19321",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3b14cd-de70-42db-97b7-a7a63b4a7b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f09d5a27-a7cd-43bf-9cf6-2260e6f2e57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131139ee-1b25-4479-884d-26c154821ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12724e9f-bd64-4999-963c-fec5766af2f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c8ae47f-f95a-4a66-bb44-40016a4b421d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16421210-344d-457c-b80f-5251c71db7ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7eff8f34-97a4-455b-b628-9542a72440b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b2749cd-7ab8-4abf-bedd-b1e1c2452a9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa5e5f05-5529-4448-8385-c56c8b090272"
                    }
                  }
                ]
              },
              {
                "id": "29aedae7-3bc4-4396-ac51-39258da96955",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad13b1b9-ba50-4238-a9e3-152f9cc02291",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbb221d2-070d-42b4-8b1f-92d42a0f023a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ec49425-6d47-4513-b31a-68e2676c8279",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "892eeadb-0b49-4d29-836c-9f91421f8c0e"
                    }
                  }
                ]
              },
              {
                "id": "1bbac15b-d89d-4805-a8dc-cb8d0f692c28",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa73eb8a-77cb-479e-aade-b17f166f353b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f35518c2-73b7-41e9-bd5d-026c3616038f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3192964b-c472-43da-a336-20bd110c9f6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf5f86f4-9da7-4bf8-b11e-51fff8252017"
                    }
                  }
                ]
              },
              {
                "id": "099b2c5e-80d0-4768-b19d-813f99121363",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1bd2b03-2598-472e-8bdf-7f48a1f37e58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6bafd4d-dbd0-4c41-a8f8-ede5985b8352"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cb460d1-314c-46b3-9006-df3fabf969c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fa409970-1137-4dec-91c9-7c33df019b39"
                    }
                  }
                ]
              },
              {
                "id": "eef355de-43d8-4dc6-aa75-8594de561cfa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1509b320-53f2-4ed1-ab54-fb4e0d669660",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6b14d5e-a77c-48b4-b9ae-eda66f98ca87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "351edc30-e9fc-40e8-a0c2-7cfb447f6871",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "62709047-21ce-4bed-a378-acfd644b8f07"
                    }
                  }
                ]
              },
              {
                "id": "647d86f6-71ba-4e53-b417-93bd5cc54d8d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e7c8779-4913-4cbd-a280-b72521e280ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "915cb800-4415-4b4a-b338-e44cf8c0a4d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f599d9f2-65ef-43f7-999b-5097cc464e62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "388d7552-edef-48c4-b193-526552549c83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2a00474-ecdd-410a-bab3-2e6989dae765",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "105feaa6-b91d-47ac-a19f-dcebbdf47654"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81205db2-a04f-4251-934f-ff6b83717ee6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38b73750-afb5-425b-b155-801fcf77f468"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9faa1a72-b7a4-4d45-bb10-7c9921de1dc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c01e7faa-f43d-4a8c-b2b8-90babaa4abac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e4274d7-151a-4402-9790-3b3aa1897571",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16e20bd1-31ee-4ea7-8e3f-15e050947f07"
            }
          }
        ]
      },
      {
        "id": "b3333742-e121-4675-8857-fbad73948a0b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bec34a7a-6674-4f59-b7fc-15825faebc6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39ad88a8-1201-4743-96a9-397dba61e857",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9e7ab17b-9b0f-47c5-8017-65b9771ffb6a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c37c9e2-145f-4a6f-bad2-ad2c34c9197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c68a43-28a6-46ca-8ad8-183977941bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b1a4fd-16de-42bf-bcef-d0bf5688ca7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2208e0-94d7-44b4-b23d-c72989aac71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc8e969-6eda-4866-8c73-7044e353ae3b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f03148b-427c-4c0d-aae9-3df3c31a3242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6193b2f-9e86-4141-9077-78d8d1d07450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5cb61b-bfaf-4ad2-b6d4-c959680a21e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde5dd12-0428-485c-8c38-1d37e5828d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a630f7a-01f8-47a0-81a8-dea5946b2207",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2341de2-a38a-42e7-9562-4724c40b825c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b740c70-60b9-47f1-a653-c98d332f7ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00710c57-2773-4a18-9d98-a426fd6b2677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48fab425-8bac-4c78-b898-0b9aa8771828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9c1687-5dca-4e8a-8b03-37cbbb13498a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c973d3e8-89cb-4034-90db-aab272aec2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a95371-ef73-4eb1-824f-4eda16307bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e335341-105b-418a-b842-3e81901e01b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58cfe93b-5592-4e22-a632-5d4a72864d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa159c5e-f01e-480e-8021-add4025499f6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0489551b-86f1-437e-a077-85da99c2b949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65b1e34-5e53-43eb-9036-9afd01793583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f015a7-8d17-4ec7-aeaf-ce48dcb10478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cadfddb-345f-48a6-b8b0-90f6bb99ee61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985813df-f8da-4232-ae29-5312b3539583",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12122f39-efbe-402c-888a-397faa54eeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea7a56a-8779-4b95-bb76-f7eea353dd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937a2a3e-eb59-401a-95b4-67df53315981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49702470-7e8b-4946-b418-93063cc6ee1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d905f5a0-1259-4a0e-a16c-cee38dd9bf7a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14f15e2-733f-4a9e-b629-1ebe59bb862c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913bf6be-1e75-4d8e-ac93-19572810574f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a777a4cb-db0c-46fe-95cd-957f829d0108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "172cdfa9-8582-4517-be85-cd12e9c01005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a23dd6b-40d4-40e3-976c-c859984fd382",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a20174-ae2e-445c-8dbd-17aeedf18054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe182be0-e88b-48dc-8045-d6bf450b6607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d92a2fe-12d1-4d0c-88c6-e84dccc0727e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3c407f-dc9c-4f8c-89b3-275f6946991e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e43b12-40c6-4874-9a41-dce98520a6ad",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccd9c97-eec2-4049-b2bf-48444a44be41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7d511a-16ed-4d57-9e63-1543a10dc460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4b1441-6e50-405e-aa92-ee74d1108e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96b99230-6fa2-4933-87a9-852ea73de50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5a533e-6956-4a75-9bc8-ad1449e5390b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d2a0b1-fa28-4e81-9038-d6a1a06c079a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ff3930-3f1d-4aac-a2b5-0954f9153ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3ab912-6b70-4b19-a68f-a1539f100057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "750156ab-e8ea-4e55-b68f-945c5c577a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb8a579-c61f-42b8-b902-177191107725",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a0fed5-f1e9-4b75-b431-bb57201935ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e381456-df39-4c6e-8751-d3a769aa660e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0936046-4575-462c-92f7-b927c9e53942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e5c026-5c40-4bb7-bf97-c8a59642e8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35570a95-d12c-4f0a-8bc4-e85ce3e47087",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ae09e9-78ad-48bb-9c0d-7671c382bd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e632f3-5acc-4ed4-b24c-58a6dbd7ac52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efdbeb2-a80d-4758-819c-e2242c567ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc840bb-75b7-4e28-9796-5fb1d26aa998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dec8c3e-95ca-4024-8054-1972e285142d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0e814f-0d87-4c17-be1f-dcee74a5d3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dea439a-72ac-44c6-a778-af25934b3a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0c40bc-01b6-410b-b8ae-d97fff09888a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "357009ed-1a6f-41fe-a9e7-e5ab0e03b332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cf84a6-2abb-4134-8b3c-7317d39a6e2c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de013eba-460a-4125-8b2a-05e11783c2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dace2726-4518-4f19-b668-915d80a0b036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed74a247-9937-4ae4-a9ad-54ee81390f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2449157-de43-4d32-9039-be8fbb1c929d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40c3ed0-8aca-48de-b94a-902634236203",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b369391-e9e3-483e-9b4d-902932b5f3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108847a8-72b0-4e01-a039-d514257929fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f0a676-8943-4f6d-8a8e-8d0a66d2981d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "309b0ffc-0876-4302-9185-b4b854b6b9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d22ed1-3c5d-4960-8558-071e2d5146dc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842f57ae-dd9e-4fe7-9126-70d880fa6a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b593caf-0f45-498d-8e68-c6de2bf43fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2b9553-3a68-4ea5-b1a2-ff0202268df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f06832c-3f31-486e-8eb0-4107cd333c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c412c33c-9c62-43f9-8c83-0ed3cbfe89a4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8aef4f-d5ff-49e6-9352-cd5ccaa6f042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5ec110-e45d-4f54-8e7e-dd51a013cac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa131b63-c82c-43c7-8bdc-8aede733a5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e2f7cf-4faf-4fed-8eb5-ecd4dcb6e7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5aa516-68d7-4618-867d-9d19336b0510",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd65aab2-6cdc-412c-8de7-8a0309c901b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d85b199-8d4f-4ddd-bcc5-2be7bf4ab237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570a278d-42d1-485c-9910-554926be05a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "33420d10-d2db-4427-b92d-d6feb01de60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8879250-3e7d-474d-8bba-ca5babdaf615",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cef3a0-f757-412f-add4-d55c75230fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e24bae-5540-4bd2-8660-ad7f195d9d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679eb908-6b44-46b7-b9f6-783ab7c0aaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3dd0f0-ed6d-4054-be72-3f13013cfb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80111548-08bf-43f6-883b-3749903ba6e9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b70843e-02e1-4997-b184-c257cd96334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c7621f-dce8-48de-bbe9-6609b726c743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ff3ca5-f066-4585-ac67-2533bac5fcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "704aacaf-3b90-4c17-9cbf-ec107bde4dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7e243a-a81d-4441-b116-a2f730ba154d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7115910c-594c-422e-9f9d-da89c9ef3472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48a3ca6-2782-44af-ad09-18f9c3bd251b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d9f97e-d368-4d32-9f3c-2cffc3de89a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a770736e-2e48-4c27-b780-6b5d37b92dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634ad05a-ea29-47ee-8c0c-913aa192b199",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831c405b-4456-4bb1-9910-9c0a0898d918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbe3136-10b0-4c6e-aee7-885f5aa73309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cf7358-d7c6-4cf1-bd55-a8c9eddb6e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0a6da8-29eb-445b-bdb8-916ec808df45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2954f9ae-e4e1-4614-8748-c22ff6b3f4d0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d1c8c5-051c-4cd3-8981-d2f9e3c8c572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0c4768-9770-40d3-a495-3ca369ac5e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fe5f73-d391-480d-a256-ac7582a0c7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d76e09ee-ff4b-46b0-a381-9c731f83785b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dccd27-0c1c-40d0-a9f8-a2613b51161d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39ecc8f-4cf6-45b5-993c-76a9907047fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902bbe73-b196-4d7e-9c99-e788d6b0666a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0966d96d-2986-4bc6-ae1a-ed3cd2992ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7959d9ce-5d67-4a66-bc42-a936c0a28288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a08e54-9ecd-44c0-8324-c437d97b76c7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc3e957-b5d8-4232-9a80-2c8704a820ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1754902-43ac-4dad-9541-d94f5e2ab30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34e212e-0a21-4ef7-baf0-e0bbb63ceb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ca588d-e094-40c5-9e2e-1e19747c2431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910e9f04-33b4-483e-aa6d-7a4c2732a603",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178c6ad9-3095-4bb9-a47a-ffde26cafc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5821daa4-d283-4262-9e0c-df4619eb17ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15403454-c734-4b90-be0a-b098d6955bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d22b82b-af35-4875-af34-cf82db3a4209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6acafab-18c2-4991-9971-a455a7e4917b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d8b2d5-c277-44c5-849a-702b88612e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d14f76d-e86d-47de-878a-befcddd5deed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fa56c2-8710-4c0b-9927-93d3911a8900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7989b25-a5ea-4de0-a28c-8eecb0bcdaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9527514d-0620-4aea-8865-cd0757708d09",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11de63f1-99ae-4703-9213-a24ea13c20e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c362cf47-d73d-452e-bdb2-4c6bc3e6d656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b973884-288a-4f88-b985-e8b29b50aa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bff2c9-3bbb-4bac-8f13-8920fd84f834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc09321-36d2-41d5-b464-a6994537c2ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87934bdc-2927-4fe9-a259-0ecfb5fbc016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc22c96-48bf-461d-8893-367dcbfc241c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6d29c8-4ecb-4e2e-a096-35dab7af6a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "587ecdb0-0d58-4970-a996-c17a219a8add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429d9b9c-efc3-4ca7-a712-902d287b7d13",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f731fa9-887d-4466-8989-629a725a9036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217dea97-3949-4577-b61d-2c3c79ac4f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a35e4d0-7172-482c-9a7d-5b9496911b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e34635-3c27-46e6-b0b6-698330c51a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9b9037-ed92-4c65-99cd-d1cfb1e3e76f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8373875-11d9-4496-bd73-3bc8b0d6eeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc6830a-f83e-45ca-bb26-c92178d054e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3eba116-83f5-44b9-bdea-5e9e0566270f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0519005e-dc04-4002-9d3f-65e2eef3c2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ec366c-a0fe-4fc2-aa83-4e2c774a5e03",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3009bd59-1f00-4b70-9c05-8eacfa63f029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209f80b2-23db-44c0-a243-8457d40a81e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98e6164-ea27-4cb8-b917-82b674fa738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "914adb80-7b7e-4d05-909d-bc3177bcc567"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "27e42694-289f-42d7-8664-16659adbb204",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30c3b0d7-926a-4da8-a48e-843dcde03af7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8302e8-7fbf-4c85-95f4-0590cfb40d36",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "40465ab8-33a5-4496-bac5-aca70aadebdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5b809e-5b9e-444c-a188-15f982901d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55d1beaf-aad5-4cc1-92b5-5d9c48709682"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "616451ac-4088-4eb8-ae45-a3aee17abceb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb70cec3-bbbc-461c-82b6-1200f3fdd0db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "845e4d66-9be3-4dc7-b482-dfbefcb850bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db3d7815-39b3-4bc2-ba59-658c47bb8fce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4afbd7b-5620-42dd-a0e4-d0763a311f61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b23afec5-0159-4eda-9fb7-83ec67b4604b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "411cae42-d633-4cdb-8fab-eb819e7e2b4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dccc51af-a999-415c-ad29-980ae7896b70"
            }
          }
        ]
      },
      {
        "id": "5b0f9887-15bc-42a4-81f3-30b9db302821",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3bcf3aec-bc44-49b3-9a63-1e117756fe08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0218dd68-caff-46e4-9437-b7f7a814413c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d9cd6bc-b4f2-437f-8751-8a921eb4a2ec",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e31998-aafd-42f2-aa35-19e37f656f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c02404e-f7ee-4452-a8db-6c6548b1cc8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5383c6-d607-43dd-a843-dc2dcd91f00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3174322d-56c1-4f9d-b167-79a3fb1e464a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f3508e-b4f6-4e96-a919-88f8bb9f97f2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb8accc-2aff-4993-9408-4ba0d5246f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47bdf95-b273-4f30-9cf1-3b121a9ab41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a2c108-d3ad-4169-9913-0d88ee1444ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38be94b0-67a9-4233-aec0-ae0bccc27a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8bb3b9-5e23-4543-b351-1fca76289414",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95c5e58-0d19-4192-9c9d-645a6541b4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b419b1a-e964-45bd-92a7-33973fe9c62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4804a514-6ca0-4de6-b653-b7d576921a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db28a5a0-8a5f-4dc2-9311-98066f7d63c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57d80c1-a06e-4e8f-9fad-8f3920d3c77f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080f2e32-60e4-4bfd-aa18-d5a12cdd6e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24171b2-83df-41ba-ad01-4ed8b5638019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f888447b-b3cc-49ec-929e-38ac79ae4073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b87c313-d371-4658-b67d-2026dd94b08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9121e2-8808-4344-befa-da596e30a951",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3198e8-3f95-403c-bcdb-629193501f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a858345-17f6-479c-9c57-684f6fbe0e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eab02df-2a15-48dd-b205-e20ad871ea56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79dc739b-6a0a-4fac-869e-4ffe32986bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1d25cc-7fe4-49e9-90b1-3496cd19ba79",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4245c665-8013-46f6-89d4-626183e1a7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d687ad28-28ce-4e1a-b4eb-7a97912245a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55904a09-2eb8-45df-ba9c-7ae8583b0960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae0a5d1-6ef7-4756-8ddb-22b76a5a129d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dd92fa-7905-46cd-b291-1001d9426d1c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd84406-76c8-4099-b617-7857b7173d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12accc56-c837-4275-aacd-7b23c8f42ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596cd00e-4a21-45dd-912d-7521c5b87aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ee38d5-3357-40a3-a3a2-14205b4b966a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d6f3fa-6efa-4829-a001-3bde27c91909",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8029390a-7e99-4318-bddc-6e851d2558e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f37c74d-791b-4f21-afdc-e3fbf5997ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dae0633-8656-4f2f-8b55-11ee56a0254f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddda2c76-1027-4266-8e26-ca071e565456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9d46bd-fdf0-43ca-9413-db9843878756",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14181b05-f53d-4738-909e-86d869faa5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b5adcf-4c5e-4a6d-a696-ef03b627ad27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c0694e-5968-4236-8ab3-10a9aab891f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86e9083d-04cd-425c-ac1d-4d6aa4b2ec0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30b33f8-d491-4b79-85bf-967dcf366dcc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d29cb8-7df7-4ca5-8c4b-c9ec389da971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be394a5-730b-477e-b284-b5d0cbe64748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154065e1-0bbd-4786-99fd-56a21c5138b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ed6c9b-e957-410f-88c3-6e175eb49204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769494cf-6959-4176-b548-57289dd47c68",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adda6a3-b1a3-4c0a-b297-9dca4cbe3f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440ca454-e793-487e-8cd4-b7e7c68bf7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713b8dab-1a0c-4d97-9469-209f0c4e91d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "16eef6b1-9b05-4802-bf24-03c24f0b4133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c67312-6733-4dd3-ab91-570d991de947",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c09ef98-fb85-4596-a16b-fe06b52f39c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8f16bb-291a-4b8d-85bb-141e8f42c1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab74db5-28cc-4127-8f62-3c28c75c4fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1a451c-fdae-49a3-b2df-e8507cfc4a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1233d0e6-412d-46cf-b268-3c204ecdbe05",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb76daf1-2a73-40d7-8e57-a00092ecc639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf678611-f531-4115-a071-b5808b49fbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cbf4b7-08fe-4f0a-b325-9edd3dac2fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08d27da-71ba-43e0-a4ac-efdd56e56e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a515975-c360-4d28-9e85-d662ca7174f2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0438fdb-81e4-467e-888c-fbb2e4aedade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3928c1-df97-42c5-8943-5ad82fe3bd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d39ee86-c754-4855-9325-2b6d48c28d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "83556b88-f539-4f65-8742-5853bc7083ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f364ca-45ca-44f3-8133-f2c6d15a1681",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf95b2c-8b01-475f-b6b3-01be2f6a3bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5616d5b2-35bf-4732-99c5-750177d82202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ad4b72-bf8f-4b3e-81d4-485ec457a075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbacaf87-88d1-4023-bf8f-b34046686512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1ee396-4a92-4235-961d-559e24c98960",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750f77aa-596c-4689-b713-bee9dd6afa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c733cc-9d65-4b6a-84d4-99ed1cbe9ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb05226a-cccb-40ca-b484-68f3b67acd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "babce03b-a6d3-4579-ae00-c1d21d390bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765af4b4-0935-4643-adfc-872d77c8c2a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cec6c77-9fb1-4602-88c3-8d01749a370e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a426028-8802-448b-9620-a82aa8b9f3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ba3f8f-84aa-4f80-b092-48d33289651e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "749ecad5-8dfc-4f7d-b1f9-1c30b1612630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc7aa0c-2e40-4523-9d74-9c441d8c832f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca1fdca-a180-4f90-9e2b-26f36fe38dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c186423-1dea-47c6-bc4b-9b02b26634b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e702db-b5f7-4800-810c-4a8292dba665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6958e1ab-f0f1-4bb1-83b2-c65a0d39c4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4866ea-a740-4e33-a0d0-89bded7cb326",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808264cf-7b55-4bca-a2f0-8605b2759644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c0cae6-a6a5-47ff-a505-991ff1570b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49038e11-b067-415b-b7d9-7155d043f0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce71d5fa-7952-431c-a449-faf87dbfc9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675767a8-48c4-402d-b463-3e37dc9029ab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413d4214-35bb-4fb5-abd7-bd03f198f9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc29b73b-6ddf-48f3-a4eb-987a903b8f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4514c9dc-a2ed-40da-9a65-0a46bd55b4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69b795d6-a147-4869-a857-9b661d272c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ba263b-d5ef-4ed2-9039-c8090900603a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d9029d-1180-4b74-9785-66d8af42e99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a439300f-6ef8-43cf-9e05-0989c82e1e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ecfb69-4cf5-453d-b542-89c90e48c6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c4f6ec-ee05-432b-80df-ce7e6f1131d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc782a52-c479-4098-b8a9-6d00516ba3a2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90beddf-e056-4099-8630-aa1a39a73735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3c0afc-28a7-46f7-abe2-2d6c1067d05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d1ccf1-b381-4790-80f3-4065cd61b95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e9f169-ff4f-4c6f-b298-05cfdd2cbaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a1d490-12ab-404e-b4ac-7bc855abacbc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7654d566-9ac0-4504-ad01-22947fed2eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dffc80-e690-4a9b-b33b-056d4670f96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76d5530-b8b5-425a-8526-247a64b9bc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffe3893-cdb6-4a77-854b-f14397ad4f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0cad9b-c66d-42a2-9535-6260abb9b9b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717fd81e-8ce4-4dfc-865d-c7635beb1277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8ed681-475e-40a9-bf65-50cc24d68399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18879f08-246f-436a-ab73-4ae62efde00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91c99ab3-a01d-447e-b438-5a6d01d725ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfddfc6-cb0e-49be-aea8-f1045f5e99e7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d432e44-94fc-4038-a917-b1218c2a2e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6d8998-cfb7-4444-9efe-085672442c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcd6576-4374-4576-9283-454e1302e7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e418bbf9-02f8-479a-a853-4c1572555d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e827c84-da18-47ad-9d80-bb604a4be145",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df2b3aa-8b8a-4eae-b9fd-2c78445fbc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb4abde-589d-47f8-a073-89f462492621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb61f1a-9d83-4e31-bf1d-7d9459bf9c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9c827d-490a-48ec-9f78-98ad228ab0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d760d2-5f84-402b-bdab-ebbfc06949d9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89fd11a-a2d9-4a84-9a91-ef8cf26f5e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb9c9a7-5304-43f0-9671-1628f71dfa80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71ed577-83c7-437f-b50e-ff89947a1d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c67d5b1-5a62-40e4-beaa-d726f1207217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aef48e1-521b-499b-9b80-8e25bd588546",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f683a4df-b2ad-4655-a86e-20bee2f292ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558de763-9254-4d49-af89-fa027899ace4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34e0f96-08f0-4643-b2c8-da86dfa3d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbce5e2b-4db9-42e4-b585-6347c49c1ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bf26af-3039-4bf4-aa12-3a1c7f48e3a3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c6458d-2220-417e-802d-10c20c953eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4fcbbc-1b96-4e5a-b0f4-f240c78de6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5f5072-0513-4244-8c1b-c873a0b91f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca93a37-5619-4358-b30b-82078eb5744b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493ae091-d597-4f83-a698-936370d48662",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6576231-80e6-4b79-bd9d-2c051514b447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b6023a-4801-4887-b3d3-4814931bbb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4850d856-db6e-4054-85d2-f7019cd77199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60b951a0-67af-47a4-abf2-bc1bc4958bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eec4934-2e55-4195-b6e5-ee6c77bc4b58",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cdf7f8-d52a-435e-b0d7-3d82cd4df72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41ba485-b5e8-4d86-a929-97636ee91000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733a2d09-0d72-40a3-b7e4-3f6702c00fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e911c5-1c7a-45d5-ba9b-fc8a07c25053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa0f6f9-973b-4872-b0a8-87422f8bd723",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023d3c9a-efe6-49b7-a213-aa7fcc10b79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211ebab8-295c-4d10-979c-63567ee8c794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4904520a-7110-4f9f-87f8-6f46ab4d8f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a921651-e600-4dbd-9dd1-161cc132d226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f03e4f7-939a-484a-8398-7c94e4669ccb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56c3f0a-72c8-4a30-9e63-148a6ef79c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7308c7a8-843c-4ea0-abe6-b5bbd349c24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5c5c4b-bb6d-4d7f-ab99-30b8c7ae954b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6099eac1-1a26-4f42-9b04-380f1a115e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b414ed31-6aa1-4468-aabd-8ad7ea797543",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f49264-eec6-42cc-8588-e877484dfae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdc3474-c29e-4eeb-8e7f-2bddcbbc6955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1731ed0-2996-4472-af4f-9b8c319016a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd69953-2845-4c27-8a9d-b2fe6d9389fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7146b9c7-494c-4837-aabc-ab5077174d70",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2776ef-bf1e-4bf0-b8b6-e189cbacddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fba3ca0-463d-43d7-bfe2-daea553930a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe8d2d1-83b6-47ed-b857-8c9ea98cacce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "519cffbb-23ae-429f-8377-9391834d8e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991d85bc-f70c-49c8-aabb-8a10a170b805",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5deab61-9ee7-4b2f-8edd-d761f65f0d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9f60e3-f774-410a-8a74-1f92df16f597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd8fbee-b813-4404-9494-a1b335b970e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38079298-3e2d-46a7-8969-305c9d2e0966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccce5a6-b03a-4d2c-b163-b30c7b2fd068",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fe3d12-5d76-425c-8ca7-b270e54ce0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b68e7a7-1890-4125-beb1-1de141a4914d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a3dc3f-db11-450d-860c-35e13fd00a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0bf86d-a4b9-4d33-a3ea-6e0e2b0e99cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d3da9e0-b359-4674-8130-e394a8b87fad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9bfa384-28d8-4eb8-981f-ca2f1a30821d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4402e05-4dcc-4f36-896f-7d2f730ef27c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5f46fec3-792d-4c04-97b3-320ab4b4b8fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7da146-bbb8-42b9-a704-baf74c968201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "547eb1d9-fb14-45cd-8c51-75392d2f6933"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e58b091-2a2b-462f-8783-adac8547a843",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8acc4571-1d0e-4e71-a662-20715c1f42ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9394c50-f451-468c-ae4f-1cbc8d345987",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0cf1ac1-0496-45e8-9443-2e04adbcac4b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d55d8b61-8cd6-47d4-a1a5-e79ec209938d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb09fbd9-1862-41cc-a634-6a2cd42d3e12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af861a6e-bd29-40ba-bba0-7988a2b7be1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87de8c4a-0176-46f9-9563-258935e5d4b7"
            }
          }
        ]
      },
      {
        "id": "d4474f79-b33b-4c08-bd25-2153614e53b7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "04c983e2-6ba5-4bc6-86ab-a71eb7273b3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1dd4bb47-ae3b-4543-9896-09663840ada4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf6a9d6f-8c5f-4afd-b2b2-e995c7a195ea",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a29702-315d-4fef-bfab-5ab17e6e47ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3563085-b7ae-462f-ab4d-b0b821417eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db36af42-953e-4c19-8f93-2cd2da11c4f4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a206c121-67db-416e-9e07-4cca40d3cc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb8ff07-dfa9-423b-90a8-b4cfcecd8a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3accc600-7820-4d65-b37d-8164fa9b3bfd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac6409b-fa53-4964-86c8-2fe592c3d3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db76f68-2266-4d01-9980-3b46d670a9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb08c5c-9dd5-481a-8032-13a0f5c56deb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ee7de5-b163-4d19-9ffe-b2e54ca10d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93ca2e5-1207-49db-a683-d0863ab87fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d3f9f8-fe35-4a48-ac4e-147bb910fd54",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff998ac-5fb1-4687-82dd-c61820603a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079e5b95-fc5d-430a-b0d7-a8e02993499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555a5f35-320d-40c9-bfc7-ff4db0e6f690",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6283f1-9a8b-4d22-9325-ff37310e8bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fac9f7-5320-4643-b238-738f0ce41724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131d4415-1587-45af-b280-c0aa455ce246",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7655e62-6c39-49a0-aed7-28386a995434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efca2496-e275-4ee5-9b77-f0661e824c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da41248-ad3b-48b3-9269-faf5ca621624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0d6d7e-e12c-4df1-a546-200f12d8e1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dcb2d4-4164-46ca-8438-694e68c1e83f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d260d9e-739b-48f0-9507-e100fe42d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6563b9-9515-4a6c-8157-8e14ea64f60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9acb8b5-3e2d-4af6-9397-700b77395257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acb8d87-e6c3-4d11-bfae-b0d23aed9aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52709bbd-996c-4ef8-8104-9f9437f4727f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceedac4-cc6c-4d69-aeef-bff34a925d2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "156b693d-f8fa-456d-b102-09d1718fa9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69d67a0-1ce7-4454-bb8e-6e5d84029130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaafa4c4-bc12-4b8b-b375-da5a9c39e431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e8a78c-0af6-4034-8000-2be425c9949b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57751171-62a4-4b0d-8bda-60456d72a8f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a554fb56-5342-4e1c-bafd-e57ca1f8c71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1ebaec-ea0f-434c-a2b5-24ac07584443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c99ae7-b20f-486e-891b-d311b09da390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bb5199-c733-41d8-b959-f36ae4d99d90",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c75b2b-4839-422f-a6bb-9ab32f1254f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0434c793-ed54-4372-a762-19192ed51bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3354ffc3-eb59-4238-9312-6f17c76f336f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b150c7-34a4-4f8a-857e-ff80319d9d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50168538-a433-4412-9f63-7b30085c0484",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3867be4d-a28b-476e-8a32-4eb215f237ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a82904-d68e-4c24-a4fa-1d934932be9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4fb2a9-31e0-479e-ada0-fa8c6280105d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5f5073-38fe-4e32-89b6-7158468d15bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67251f45-98c3-4beb-abf4-21660c532d2b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8f86d1-3c4a-48c5-abeb-7c148afc5a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c29d96d4-8832-471c-954b-491dbff5add4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f3d1cf-b50b-445a-adb9-b8da0b4c334d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf7fbc6-4b63-430a-9e37-4ec45dcfb669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1e4185-c764-48cf-bd49-f2eed20d0317",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe53cde4-a41b-49d7-80ed-cd2da9dc6247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298f3c03-ec47-48e9-b89a-74f64ba41ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccf41fd-e530-4228-a9f6-d69933986df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bc7fdd-f674-4348-bbe0-2bd1803acea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a63bb7-95b2-4523-83aa-a780a0158013",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00db9cc-29a3-4516-9197-a087d5d97fb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "686b2ad8-e4a3-4966-ac32-17c6e2895499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af86966-358f-42b1-9581-c585063daa5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342c60f5-3500-4e87-921e-7c265723be12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bb84b3-158b-4ec7-a0ae-cfca68b40caf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a682ca7-68d7-479d-920b-3bde545be1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f642852-cadd-46fd-afd5-e3e55927f08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a307343-eca8-4b2b-8b68-3fa0272c36a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f9d8ea-b0ef-48dd-8a3d-018b10c4dc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc219d57-4cf8-431f-9dd1-d3ecc42e5f0e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9283c0-9238-4c9d-a9f4-715ad3829ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318881cd-97bf-4719-b165-49425f856f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f0ce8a-84a6-4bba-b0d0-1c4b0a59c847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ada3f9-7146-4a99-bfd0-6979b3ac25bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67b5e97-1a3b-4018-b3ba-8d3e8b83e4ff",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6cfbdf-153e-4ec4-b2ce-ad2c1506f125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d91263c-5edb-4dda-8f78-f1a8bdea7e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d479268-e512-48f0-aba0-d37b8ce2d5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd1e691-a30b-4e74-b171-d886ac88c1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d3320e-0fd8-4f46-9501-9fef84e34bf6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0a8aa7-faba-4f45-b409-0226950bf72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be45d6e9-cb9d-433e-8e7c-d2ab5a0f9d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903293a8-fde7-4c7b-ad4a-48a18f921ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a473d7ab-6b12-428a-83e2-2db93e114dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bb8d2d-6f2c-479f-bbaf-50e8e6791f38",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1b0161-308c-4619-b887-00c4680e67da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ceeb68-b995-4596-91a1-a7a43fd0c6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396aab3a-ed54-4f01-8f98-9a00e0cb6e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66eec0af-24e0-4d5d-88d6-68929f5deb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae64a22-e500-4a35-9c18-9bfdaaf4a46c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6b21b1-cb0f-45ce-ad34-83762ba71b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2992df3e-e5df-4ef6-8cdb-8c4ce1dd68d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b4e05f-fc41-4198-84ff-4caf2f66b483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f6ac21-b831-4bdc-aa0a-e6056cc6f0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b47222-9ec2-4025-8d18-d37e08dd629b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eb9a96-17f3-41a9-b7bb-c4bda86c65bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0c7cd2-7a7d-4437-95bc-786e45dfb0ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df92f385-7160-44df-a01b-dead9cd1cf17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb208c8-93d2-4b8b-8290-bd423ad32c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21259d1-fb01-4c8b-86fa-f930eabc50a1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d496ebe0-2c7b-40a5-bbda-fa1bffeecfad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e3395b-dd05-4d08-a58d-78975230fd81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc67684-fe9c-4fdc-b059-e986be59094e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954afe57-f5ef-45c5-a99d-bdd044a24bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb38042-8e48-4102-ac65-d75964466438",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b3b7ae-51fe-4dd7-9a0f-418cc050fec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a42c11dc-a892-42ca-8fdf-e8633a65c381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3698e458-3607-40f4-89a4-30e91e96c4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c0986d-df42-411c-b273-492ec5855a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58ce5b4-5c6f-47f4-8253-beeda03cd8fb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0777803d-0eb4-4393-af90-b47b0923eca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19220bc9-c29b-4000-9558-49a014177b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec136c84-df8d-4e3c-9687-b699835ae115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff3c466-34c8-47a1-8a76-921588239597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0db308-d9f5-41d8-bfcf-425b4b7f8a6d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f8db52-7505-410c-9e60-f9f292d5b9e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563d4080-665b-43e0-945f-f45e736ad2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ca58df-b953-44e7-9f5d-9b8f3f3dad9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7c06e6-d1fe-4ea8-b7de-859113b07db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29229a8-43f7-4deb-aa68-e9cbb8512837",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d565999c-bfc2-4106-9be1-725811c81fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a4e96d-87a1-4516-9921-0c9c57294954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e410edd1-65ef-4ec6-924b-e7da553fbd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58de7687-879e-4c35-8365-3aa9fb763a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cece81cf-cd00-42b8-b4f1-b95102ada530",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd27a18-340f-4301-a6f3-9df38206bd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ff54fc-38cd-48fa-a8ca-3a8ab18110b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf59f26-7349-4a77-b751-6051b6282030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593377a5-3a2e-40db-9175-5bcda5d80283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c86e82e-21b7-4b98-a4d9-9df9db48c446",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c641d22c-7cfa-45a4-bdee-b2d1ece8c407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984d7890-50aa-4b87-8182-0cc1cbdf6975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f6e6dd-d895-4272-92a7-1c2f387c0165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845c89e6-8243-4fa7-8e64-cc7bb1029995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c68f97-2c6c-4240-916f-70d60147715d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e5f74e-e58c-424d-80b0-26db4c3f1a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19e661ef-ae7d-461c-9771-25ee0ceb1a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a54c2f-1e68-407b-b24c-80ba12ef7888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372687d0-51ae-4852-8bb1-c588fd02caf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fb7ec6-86b1-48bc-90c6-79e58fe03c0b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77f798c-f3c0-41a1-a707-443398bf598b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c63e65f-84e4-4ac5-a097-52badd338b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e62fc6-239a-489e-aeea-9e12481a621c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c44ba9-3673-4838-9081-6a5270e1a728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500f0237-ee8b-47e8-8016-c9d360a6a8d9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb43a0e-945b-46ef-8bc5-cd15c08f3d1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19649160-d5b2-4e00-89ce-3536681d89a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc14d0ed-58ed-4c0c-9ab4-0616958ed7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c16ef35-12b5-408a-a234-3dd8783ddf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcb4224-b5c3-418d-8509-ee6f5959e8d8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e990661-6013-4e98-b965-06105b921bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "675325ab-02d4-48fe-89d0-0d858e4573ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07b8455-be9c-4de5-9add-28c4eca05330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5eb22a-17c4-4d3d-b097-8a8706eb812e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4764d8cd-5ee5-4d02-b3a6-cbf4c9b79b2f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a863e29d-1362-4e85-821a-ca4af689ecaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6c4bea8-f486-4c69-9144-2a46c9f79142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9e475c-d2cf-4762-8cf4-3627cb7bf760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5505240d-f07d-418f-a332-801f48a0f4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e018fb-92dc-4353-a4e0-c6fd8e0bbe63",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4de593-3ab1-43bf-be5d-efb3e0590771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26510ac-f261-48c5-bf20-7e72800e9714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d83507-22d0-42c5-8d3b-2787314ce4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16dac4f-5348-439e-8870-b9316906eb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7172b5-3b44-4def-b95b-b12d5c3b65ba",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669f183c-4a0a-4c1a-8e3f-1178f9b486b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8316d65-a520-4e48-bbb1-e6186e83d963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca6c192-4554-4555-88bb-a0e74a5470ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8169f306-7bb8-4ba6-82ae-dd053fde4eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8c860a-c360-48c5-8e2d-4e3cc9065856",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95129fc0-05c2-49d8-99e4-07b7f22d3cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f698f97c-2ee4-4464-8e88-b19da71ab5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32b4d67-0a94-4b39-9172-ae75f91c693f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ca7813-ae57-4a83-9bbf-5f02357642d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f7dbe3-22c3-4576-af7f-1a6d2ebfbb07",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6abcb82-5858-4d11-a336-3143677eb965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70075799-ccc7-4ea2-94ed-2b829cf08125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9e0358-3465-461f-b5a3-82fff93294af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ca3680-adac-4612-84d5-665dcec48c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8dfa06-49fc-425c-887b-88cab127a25f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81515849-671c-497b-a216-c9a0d922d043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7a55ee-40f1-4d22-8f79-663635290844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f462d2-2c68-40ed-922f-68b345d94461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03826794-16de-41b7-8abc-1f8fb5c3da10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab99dd2-c047-4d5e-8f4f-8285d36a8bd1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0b923c-8038-4701-b52f-f7cebf3fce36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632a2238-5ba6-4901-a89a-1d4d120ff352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89457d7b-c139-484e-95ab-7d00b343380a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7c3224-7d3b-4f06-a481-f300afba0302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421d711d-362b-4665-9efb-939ef23a5654",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d890b3-6184-4531-b5cc-8a3619271fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75399010-0159-4c2a-b718-9ae2cae2c6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9a8c76-423b-40f7-a63c-03616f62f84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c460e7-60e2-48b2-9a0f-71d9c5d51fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dfa86b-b1cd-4b4d-b89c-419483e09689",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5287ee03-91d0-48c1-a5db-c21767da34b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e357b4-1e7e-420c-8169-1cd0cd7d1632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47082bb9-ea89-48db-9a71-1a0c36ab994c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6440726-219c-4856-92b2-4acf705ac3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c82cea-4636-4ae7-9f93-fcb8ba5f5499",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b5a33f-56f8-44c2-9291-69dd2080e927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d578a5-be36-4853-857c-4a43f43027dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d389f1-2cf6-499b-a001-679529939652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15672dc-de58-4c0d-869f-0d16621a569d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3ee126-b203-4378-bf58-9f54a6861214",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a5eb5c-b6bb-4767-89e3-60d189730073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b0b106-cdf6-4cbf-bd57-863638f91864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0fc5d3-ec4a-47f3-b0cf-b27d13bc056a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c46c72b-2b65-4926-bf76-81228b85bbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81be393f-0980-4dfa-90c1-de0fbd31b516",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25daf6c0-49e8-4b53-ac07-731a8fd287f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e79cfa-40f6-4679-a690-515cdf717bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f839a9e-fc38-4751-a187-01dba49673b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cd5784-f090-4c3a-91b5-6837850c9233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeecaf8c-925e-4c1f-9d21-fe9064010d07",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059face2-7376-4612-8bad-db3c6800101d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb51229-8893-4ce8-bed6-115dd924abcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aac34da-2a83-4c01-9a17-8e5527caf873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7977118e-4be3-4ec4-b8a1-637cd0f66e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f0e73f-d62c-4cb4-ad10-ae3b580d49ba",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9bad09-5e54-4e96-8a9b-47aa7bccc8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a424aca2-43f1-4cde-b5fc-8a31e4ae3201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f12180-0479-4b96-a91d-015dc48d996f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f468a5-3600-40db-9838-8be97121f5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7267a55-2e38-4238-9150-9c227ae93bdf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a76bf7-a9ad-4bd3-a35a-1a5fd6d2803c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93be4cd1-fb5c-44c6-9ab1-73e154407462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffee2c8-a43d-483c-bae3-f175a5755d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6abca74-b096-4d9a-8e5f-00f38896d171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b44083-686c-4eaf-834d-e969b855f1ff",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346f6caa-e73a-4a67-afba-1941fdae4728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5aa2ae-4a7d-496b-b8af-c60f964f4e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184ce1f9-d062-4cd2-9fd3-c6e110a95786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08851203-148a-4960-9f32-604dc6547570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28eb3da-5fcf-4619-a8dd-6283d76ef3f1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9bae0c-e73c-4acb-bfef-5430b023b121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b04c7bd-867c-47d1-90e5-0f6a14961d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9016d9b-5172-44dd-854d-4079871fb024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a531e311-2bda-400c-934d-588210f4f2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb0a3c4-426b-4e5d-b4f5-2e23696f46b7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db621588-affd-47be-9095-56dac5d46e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb280233-d187-40e8-bb46-0dbe0478bd94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2b03ae-28c8-493d-92eb-468e5cca9806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf801c4d-6dd0-48b3-8cb8-894b41425fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5073c10e-2a09-46d3-a777-f17d5cc128be",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea2877b-1945-4c0a-9bc0-32c075deab59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5eebc3-a782-4d3c-89ad-89e6bbc75ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffa4fd1-7784-466d-811a-00bbe3049bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4407c184-2803-4a01-9352-4958a9b5314b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e95e69-27e9-4285-aa66-f881078ec900",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455dfba9-c5cf-4d45-af61-11708f3af930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575d4075-f5b4-46af-a65f-b8263e8b03e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5136ebd7-6566-4b37-9556-9a17794d6509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b90df2-1bd1-4c31-b3ca-af9b75503c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd81186a-39cf-4239-ac28-f686e34dd392",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7199d7-82f2-45d4-940e-cdb2c0e5cdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f196c8e-70e6-4724-878e-cea05dff196c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca63477-7e2a-4ace-93de-7931eb1fe899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9891d71-5fa3-4a2d-b263-e606036b4dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2941aed1-65b1-4446-bb81-d1c742212fc0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4896e3d3-c2b0-4cd4-be20-0fdf97886437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f427987-c7e5-4fe0-967c-6631c1573d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3519d818-c763-4ecf-9546-d93de9ed9ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c501ec-125f-42ed-8281-ad7bbe31ea5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f73950-4b14-447c-b011-090df2cabafc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1b13e5-755a-43b6-90b0-1b46b0d3bcab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65291e7f-79a9-4cd1-8027-b77b15d9589a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b41b8b9-41ce-40aa-9657-868e77e969f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd9177a-9bea-4702-82a2-4cda8932866d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df37aa8-2b6a-4cf7-960a-007c76a0a819",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b721e-7d9e-45f3-ace3-6491110b6788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df1d81c-fec5-43a6-b3a0-3df522aa62ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744669e2-ccc1-466e-8b4f-47252b3dc9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e127ab5d-4683-4316-887a-3e0f0431ce8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0033d27b-7220-42de-8bf8-3788689b35c7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba8fc25-7c95-43d0-b85a-c54ec613c457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe1c030-60a6-44c8-bdfc-8b7a2120ec97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f74344-6f20-4d95-9233-aa75be620e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f02fb7d-419f-41a5-a38d-659937ca252e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cc673b-05a6-455a-818b-7974920b05cd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fba2d08-2c8b-458b-b451-aee002d878bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f803d89-4662-4559-ab92-f6f4af97d55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc4ccaa-c295-45e9-aa35-fd06c0fea6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a535ee-a73f-4896-988f-6799bbdcaab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae49ac5-9d06-4430-b9b6-8573096932ec",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaefb870-9aa5-488c-a653-328f3370a2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3fd9e1-dde6-4db0-a55e-80dc3e8fd35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff4686a-ec34-4143-b60c-5f277c16c9a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d59702-79f9-48d5-bbd4-f88e3a62614d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e521b6-0d6c-4064-a18b-59359a3c6e97",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d89b33-e3ba-46a9-b807-42ffa5d73341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc58e9cc-902d-42ca-9de4-6d65289dc9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8348715a-1b9d-4781-9904-14bd079b0775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d28a753-ad9f-4a97-8fbe-e8fc7b9da972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9b7d3f-2055-4ec9-a318-9bbf497e0e6c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faa6496-78d0-4fb6-b68b-a65ac674fb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53544080-1de5-49a5-b253-71b866f1b269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a092124d-1c4e-4ef6-9959-dab6c7408e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72541fff-6c4c-4e39-9d39-e416d49a43c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2494425f-a91c-4b32-b7ed-f1e7b1e672eb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9219a36e-dcd6-4c5d-9a12-85ebaf7fcf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc9c3d5-7c2f-4466-a15f-9fe125b398a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75050422-8060-4313-a4a4-3451ed9cb038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1663e2-3f69-4473-b733-6eae619918d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469def93-77cf-4fe8-98a9-719bd4094f46",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a1a5d5-ba72-4db8-89e6-75dfc64e5d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "912b7d28-e3e1-4f67-bb83-72555d4ff3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f16732a-e6ae-4a7d-a825-a62a3956f875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1c251f-f3f5-47b7-a3ff-c61807fb3255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff07a61c-72c8-49e8-88ff-a907d090e450",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a8196c-72ae-4b83-8977-ae96ac796f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95df5210-a7f8-4529-b788-cebe8e50cb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3c1255-a40b-4559-acfb-70351b468d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f714b2c0-7102-42ab-b219-6d5c2815f3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fbc43e-f486-4e7d-84ec-51902b28c168",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163dbb67-e214-42e8-b62e-4d5513f603f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c7d838-7e4f-4169-b734-e88525a6b058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4536374-5d03-4466-a4bf-b7481cf3e13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09cbbd0-397a-4745-a34e-ff19cfe49e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba449d2a-9581-4432-b0ba-a1b65add6595",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f280bf-037a-4867-afe0-a6081243f57a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6c90d7-dec3-43c3-a6bf-daa6ee6b0b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960ed506-5981-4361-bfe2-61808ae5419f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e55f3c-25bd-45a8-a691-60da20718c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a05e022-7ab1-4f9b-bb81-b4d85b8f7916",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e88cdd-31cb-4a55-b04e-2eca5dcd91c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31e34630-5072-4f4f-843e-d55211243e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f54b406-63f4-4885-8181-9322aa2b5caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc0351f-9bbe-4888-9f66-afa56c88a2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb25ea8e-6f75-42ec-92ed-51c6255eb093",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6d7960-7004-4322-aaea-e69f0239fe57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adba2a65-fe25-4586-9bf1-e375e9ef68d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29620bf5-6936-4f26-b2d7-9d3249bb2d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7971b8bb-519d-4bca-ba51-4970bbbefd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6df7d4-1410-4723-91d8-2678aafe07b6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c371fb0-000c-46ac-b3c5-085bd7f56c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "051677ae-d8ee-49f5-b718-4c019aea4081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff170f2-2965-4c73-a848-1f93733596eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4f726b-1291-4508-8b65-83bf37dc41ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc35a62-1581-49ad-a8e5-6533756d29b3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7913d5-9f22-457d-bc92-a79c59c933a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b19cb969-35c7-4c90-97db-4c4e38778fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55473a9e-c2e6-49d1-8149-eb21117f2329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f8307e-b9be-47f0-85e6-dd8cf4408f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5d68f5-797d-462e-bc53-df1b1892e6bd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c09ca6-2c0d-49b3-b8ce-4abe075b51e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2afad35-75af-4847-848c-9e50035ea5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c52aed-152d-4a35-8739-0009f556a247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6b0dc4-f1eb-4cb7-b8ea-7ff4767a1f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c149b78-c240-4339-8002-e9f0509857e6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f00c32f-7d15-4408-909a-5f6e391a99af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e676a614-c2b5-49f2-9205-665cea96f49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7398915-1d4d-4293-95a2-522cffed06d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed11778d-0ac8-44c7-9f15-58bc9417f63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f26af8a-b073-4ca4-9cde-002e4cca78ec",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6144727-b505-4adb-a439-9c0668fa0158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3978784f-11c5-4686-83e0-7d041985ead4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8760cdd2-36ed-4001-9add-a3e8c2f5eb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fb7257-70c4-4241-b6ad-fe907c2f24e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bba461-748c-4784-831e-3755bb804956",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25202d2e-a5bc-4b03-b849-132c80bc6757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff79985e-ab0f-4f9c-a625-de72e05b442e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1717d2c0-0a3e-4812-bb32-669e9e541fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797bb64f-c244-4d4e-9930-f3bcc1000e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5b7add-a8cd-4a36-ad1e-1452922f0acc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d441ba7-5e84-4195-9174-b37196a57e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6faf097d-133a-4b64-ad1f-f81c104974a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10992c40-0488-4619-9fca-864b31a0239a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaead78-95b8-491a-bbff-2860670167dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69a9a7e-8b1c-4ade-8ccf-a4189997d3eb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1daf36-2eee-4d4d-b588-a047d8c67e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3dda01-f4b2-4565-8f67-ea855828d028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9f9087-958e-45bf-8cf5-5b8dca1d1d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0fcd64-cadb-45a0-a392-0d1cdf4e0252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a110f58-011e-4b40-a05e-cd79bec52766",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaab8f8-f57c-441d-9915-228e7c3f5e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc2b37f-fc44-4c89-92f1-71b5c1c1b109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fedd81-9a01-4e4f-a3f3-cf0ca52bcf29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8b94e7-1c06-4d65-8822-f4d11d69f666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d38ef21-365c-47dc-a19c-6b37ef520082",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db9716a-f856-411a-89d3-fe3db2aabeb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf32ce1-5977-4b74-941a-0fb876ff6ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91bbb33-30d9-42ba-aec9-939483fe7818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c7f7b6-79b2-443c-94e8-55b916236e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4d12c0-6435-4d3c-a357-9089e86809ec",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b877cf1-040d-4622-bcfd-97ee3c0df34e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5013168-5e4c-411f-a50e-b17a7ecc552f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa0a2b3-e162-4538-9f9e-99e07443026a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71908cf-fad3-4fb5-864e-e74ceaed52fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ffbfff-66b6-4b72-a6c3-ed41f164a7f0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303a79e0-1f67-4717-9f03-9f532fbd7e1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b755a8-75fc-4b2a-9c1c-e040b073f22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc74acf0-9d59-4aff-80c9-cc1acb694db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1e2cd3-9c66-4b88-96b8-1d47d7d7ecfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6a111a-a485-467b-b72f-8f057946ec3d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320d6ee5-797e-4130-80d3-081810452279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00635c29-9987-4484-bdfc-6a84a520da1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a59f6d-d84f-4824-bb8e-a8e383375705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542fab65-f1d0-4535-8a09-8ed4187d2a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413fab38-5e27-4621-8d87-78e31fa55ed0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d068237-7cc8-4225-8325-edf1ae38969f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea66f677-0f02-49d2-bc2c-6d873dfd55b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22ee5d2-6eac-4c62-b183-5e94c0bf7497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bec339-f8f4-49f0-8ef6-f80fcaf1c585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570d4ac8-ff55-45d3-961f-db0566e199bb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e82c738-fe88-4a10-89a8-5efff12af5fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c27d890-ff36-4242-ad6e-f5cb4f65309e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768081c6-6c32-458e-bcda-8b13580714c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4f58c7-2d09-4e82-9826-c295b5f74370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ab0706-ae43-4258-a3cd-7eb1372397f2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9a2a49-472c-47c0-a14d-2d80f39b8672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97593bf2-ad88-40f9-9af7-e59f1140c166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80725b6-97c0-47a5-af21-da72300b7fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8405115-b155-45d4-b871-e5ea0cb7f169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a17978-f65d-4dc9-9ada-32d58841a022",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa47ee1-1226-4454-b44c-1a90ae6bd53a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00511625-cbf8-4fbb-90ae-37aa9f7187f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84cfd6a-5d3a-454b-b37c-81563a9249f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c31fe5-54cf-4bd4-8e76-30f3b4329e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8f236a-ec95-4960-969b-45e30ad7dec0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0023c8b1-b655-4558-8226-fdf7cd2916fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde00ca6-0122-4ecd-8f6e-659100c3442d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2351b5-5914-4adc-b5f1-ee98dd7e1e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b789a754-cd4d-4ed3-96aa-252ca49f5948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1676dee6-45f8-4391-8381-3185aca34a67",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b408d5ac-a22c-410a-b630-2e8bf34b0b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e6fc80-19de-4a72-ae3c-ecc0b3bd70fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1143b627-63eb-41f4-ab63-33a30d08f96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2aefdd-e0c3-419d-908c-e4f60d6170f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a24f307-2a4d-4272-b78d-07730b807768",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a830c799-cb6a-458c-aeab-4fc48f7150e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70246188-7959-4b83-9d24-85b80c324db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9f0413-ee19-482d-b528-7d72070a474d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8a314c-efc6-468d-ab2c-8fdfa2cc9490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01a0fa5-c7a5-4a71-8ba8-1fc74670dab0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44016cbb-cd41-445d-9368-ef163ec4a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec09d842-3ee4-4412-89ea-53efaeb00f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f930877-0f00-4d48-839e-89e3d3f96e36",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8eb2d1-ae10-49c7-8755-bb6aab858c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf4b462-998c-4d07-99b6-5d09723ad868",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f884e1-2fbe-4ed5-a9d1-288787db41eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe3d80c0-c98c-4191-acd9-05c2ce07d644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db597b1-40fc-4a81-b4c3-0b6bffa908c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13cf754-b7dc-41be-84d5-7dcadc979527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d031d685-0064-4a8f-bd97-a0cf2f54a6a4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ea2791-30a8-4a93-bf7d-076e63554717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8f1640f-1312-4804-9e29-26b6c4fd5e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2eb33f-b613-4c8c-99df-d4bb17619d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaed4511-45b8-4ac3-ace3-064021096154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439400c5-c022-4fe2-bce4-a3954baa2f0f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d89b2ed-cf7e-480f-b8cf-c2158ec79136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ae5ce4c-2b05-41f6-9988-5ce622507c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b099ac-a950-4e7c-88c5-a89fb52f63b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a538fa5e-b013-4c92-8cb8-22196da0df60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef26325-85c7-4b6a-914b-4430f02243dd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33152df-27aa-4013-bd41-566876593651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d162627-cb1b-453b-b3ed-b83f788c42ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d21153-ec9e-468c-b67f-ea7d75705f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db3e2b9-aba8-4924-b98b-3cb68ca0bedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9453c2b-3003-4b16-8d31-dc21c5ede043",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62336b16-4c31-4c6f-b900-6c970c3e9bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d7d0d6-1e04-4fdf-8adf-dc1170d258ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6033bea-dd31-4335-8c31-dbab97bbb37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b7a741-1415-4c12-af09-facf597cdb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22329e7c-1c52-415a-b42f-8acc11d243b5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64050b73-540c-4fa1-b39d-2c11444d3fec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afafa23b-a567-4b98-a74a-8387734d3546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876a782b-5399-489f-a03c-50b7a82970c3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf635b40-edd9-4f5b-bca5-fa1513d8d33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88c2ca8-9f6c-4074-be88-c6b8eac0e599",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca67b68-dcf1-49df-b233-d6fe0cb7bcfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e41b60-92a6-46ad-8fda-54bd6c85935f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90473724-b0c9-45bd-bffa-76108e2d49c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec795b5-a478-4e82-b60d-0102b03c1e67"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb77fc00-e860-4c92-8742-afd9d3271ec1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae7b8ff7-984a-4c35-bb72-88f15fd250c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0561f54-1cc5-460d-bbb2-f881aef21827",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f13d169-ee42-4d43-ac30-fd08310a27d9"
                    }
                  }
                ]
              },
              {
                "id": "97e187e3-cddd-4ee3-a3b2-117f1eab3dff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5973652-d1d5-43c9-94b0-c849cefe1daa",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac45375-a0cd-4c9e-b58b-2190ffe1f222",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ae2d7c52-ab03-4f70-9e6d-6556b960cf98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebe11aa-912e-48ab-ab65-1c23dc25bef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27de8a87-0cb0-47b6-b858-168497e862e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ee35218-f030-4210-8975-fc747414b3a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61da492f-ae39-4add-af19-319c8aea2395"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b5f020c-6f3d-4663-8c48-0a58a71bf485",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a152e2fa-2702-4f41-ac06-e905d3ba49c3"
                    }
                  }
                ]
              },
              {
                "id": "4938e6a3-94bc-4cf5-a628-de0ce1dadfe1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a21ef671-b9ae-47e7-8803-40d55c8804fb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a011789c-8b20-4fe6-8d15-30c1482d3b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fd121bc3-e999-4df4-9480-126b6c4a2811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb1bee3-6fc0-40b8-a6b8-6290f12ef652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8bb8af-e042-494f-9c4f-8fbebaaab81a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "46145a2f-cf4c-41c3-b570-5fdd1f0603cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "238c1c29-73ce-4062-abc2-e1ebc3028b60",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10c86838-a67c-4421-9311-d39194462cda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "69e08473-236e-4b63-b8ab-73995c9e825e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e4c0528-d37f-489c-9022-9c0c7396ea45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a03e33fc-de12-45bd-8ebb-69e2f960db38"
                    }
                  }
                ]
              },
              {
                "id": "28bbda0f-a7b2-4ad1-bd37-78c1494db597",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df9e2fb0-c617-4f08-be03-bd60c2557834",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e1fba3d7-b5cc-4caf-9770-902644efd6ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ed700af-857e-4496-95c0-50854dd6ee33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65efe66c-7c4a-4d30-9940-ee3a15492974"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c85679af-1ad4-4aef-9790-1fdca669d060",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a04dca85-c061-46a1-aab7-cbf2ac2a7441"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b69da9c7-6729-452b-a3dc-8ccdb06fc2dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1cd0a27-81e5-4acb-aa14-7b58e1648b66"
            }
          }
        ]
      },
      {
        "id": "9f10e94a-d232-4d5b-bc31-2531ad2f8b54",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4af252d2-d087-4a58-b3df-f18aa1cda842",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebdd237a-5a6a-4506-90ea-2899fef0034d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41d7ce13-819d-4d85-8bdb-28458e2596a0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cb927e-4e2d-45ce-b8c8-6926b6a2aa9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c79180a1-554e-46dc-98f2-f4f90479265a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e2d2b9-7349-4fb8-bffc-35212de4d882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e7f4e78-5a5d-4162-bfa1-03d068363d07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c38207e-2d5a-46b8-a887-f0b06f25852c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c288093-caa7-4915-ace5-23d458d1b545"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "711d6bb7-f8cb-43b1-a0a9-de873b914000",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "730c29c7-cfaa-4807-8857-08eb44d286ef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa0a58c9-60b9-42b0-9edd-2cdacb6ee465",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0a666a66-b540-45cd-985f-fb0cc6449f4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e70630fd-a9bc-4f3b-8904-9847554a603e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bb3156a-962c-4d03-b417-bdda8a6411b6"
            }
          }
        ]
      },
      {
        "id": "7720135c-c7d2-4141-bd6b-320af0ebd461",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "49f8d988-de58-4abd-a6ee-2e9fd058f4be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0f72a94-6b22-4e8e-973a-24d1ebc69c61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76680f24-6246-48bf-b3c2-ec4101cdeb45",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e93c477-0d40-4cfd-b81b-497f445dca4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75e0fe04-b691-4063-afe3-d547538494e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959a41a1-405b-477f-9d97-6f309a123e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b9a539b-6a49-42d7-8aeb-610441a2ed77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce8ffbd9-007e-4887-9f84-c61ca2cfd57e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3663a631-4e24-49ea-af18-593261118633"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f070bdd0-71b6-45d0-a735-c09b76752bca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ba237b3-720b-4596-bd88-aa135e7c0a1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e7b0915-d475-4f45-af9a-5e2029d3d160",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e7801c9-95c2-4bfe-872f-b4a5aa966929"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27d817c9-fc24-4029-8974-32c02ed7b991",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbc5a6f8-7c79-4ce4-8fc2-1aa9fb6ebcc1"
            }
          }
        ]
      },
      {
        "id": "d01ec80e-6c4a-4dae-ae2a-be85e632b891",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "212a820c-2376-4f9b-aa79-92abb3aa4057",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38a7546a-ca55-45ca-8d72-eaa4e09cebce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2ef2c9b-bb22-40cc-b359-f47f4e68f952",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a0bdfd-5543-4581-8eee-e05575fc1501",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16d1f8cd-1e96-4546-934e-c63620b5a99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e59aac-9b91-4923-995c-cd3ba74425b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c825e47-ffdd-4b5a-a702-5147dc7749a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81dff979-4187-44fb-8c43-1b42e31de928",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "def4fa70-2ddc-456c-9652-5517eff2d244"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4584cb5c-d60c-4df6-ad78-2962d8d277f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6f79a2e-62cb-4dde-b267-3e7998292c80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17cbb37a-e6c7-4031-b7d8-493443cbf28c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e75d553-bf52-410b-baf8-b4cffc296b86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daa12291-234e-43fd-9d28-0c6b1799779b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c37394e9-8bf3-44d7-bbc0-b4addee8024d"
            }
          }
        ]
      },
      {
        "id": "8cfb6ce1-6c82-4fa9-a749-8c75be7281aa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa45a162-785b-4a01-bf12-34371a555a14",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbd596e2-9c27-4dc3-91fc-b5b92323c822",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "60dd0e75-6f0d-427c-a387-9dc78d5efd4b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c4c91c7-894a-477c-9787-073f4e96cc14",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "366184d7-4d49-45ca-9f59-9916602802c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.224561403508775,
      "responseMin": 2,
      "responseMax": 267,
      "responseSd": 22.368651942392805,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700354301847,
      "completed": 1700354312687
    },
    "executions": [
      {
        "id": "e582218b-829e-4950-97cf-2188d2ba5f1e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3040a5ef-2d75-4b5a-8ab0-0ee573e009ec",
          "httpRequestId": "c910b1d1-8bc7-4317-8ee0-0abd783699ea"
        },
        "item": {
          "id": "e582218b-829e-4950-97cf-2188d2ba5f1e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ffc6bb22-24d2-46cf-ab99-0ddd5c9f5750",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "4a2b5789-8a2c-439a-bb37-8f334e72795e",
        "cursor": {
          "ref": "581c1245-8a24-4422-bc5c-89a0cfa06aba",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cd144fa4-4337-43a8-a1c8-ea12e4825528"
        },
        "item": {
          "id": "4a2b5789-8a2c-439a-bb37-8f334e72795e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "738018ef-2181-40f4-ab19-45cd431cdcdf",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "c36a091f-fa08-41f5-9bb2-daf157866c5b",
        "cursor": {
          "ref": "f4df2c99-46e3-4d9f-8342-a1344fba95b5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7a4715f4-d3f6-4461-bc3f-d2bf2eb4a437"
        },
        "item": {
          "id": "c36a091f-fa08-41f5-9bb2-daf157866c5b",
          "name": "did_json"
        },
        "response": {
          "id": "ff727214-dfd7-454d-a328-ff907657860a",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0882fcf-a736-41c8-9bdd-671f32936e39",
        "cursor": {
          "ref": "59639132-15bd-4131-ab4c-ef70a5e8953a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3c4b4d9a-251a-406f-9719-a3dfb75d95ff"
        },
        "item": {
          "id": "a0882fcf-a736-41c8-9bdd-671f32936e39",
          "name": "did:invalid"
        },
        "response": {
          "id": "2fb63626-4530-451e-b1d2-98099425b7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0882fcf-a736-41c8-9bdd-671f32936e39",
        "cursor": {
          "ref": "59639132-15bd-4131-ab4c-ef70a5e8953a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3c4b4d9a-251a-406f-9719-a3dfb75d95ff"
        },
        "item": {
          "id": "a0882fcf-a736-41c8-9bdd-671f32936e39",
          "name": "did:invalid"
        },
        "response": {
          "id": "2fb63626-4530-451e-b1d2-98099425b7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9362111e-c291-4ba4-af11-cfde79103b39",
        "cursor": {
          "ref": "0d1a476c-1373-4457-8395-13f75766422b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "277c174b-21d5-4986-aa61-01d32e6c11d8"
        },
        "item": {
          "id": "9362111e-c291-4ba4-af11-cfde79103b39",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "82f52eca-82a2-4ba9-9c05-afd7402f3c08",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabef54e-4b8b-4d4f-baee-29a9872f9c6f",
        "cursor": {
          "ref": "0f316562-ac34-4dae-ba6b-53cc47542bc2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dabc96e0-4b4e-450c-9c76-5dee2bb81b2e"
        },
        "item": {
          "id": "cabef54e-4b8b-4d4f-baee-29a9872f9c6f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0b869f2a-d6ea-473f-860c-9dfdb2c70b20",
          "status": "Not Found",
          "code": 404,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c2172d-a79a-4811-9a9c-079c573edfe2",
        "cursor": {
          "ref": "a9def25c-4da3-430e-9aa4-c02e8f0fdf9d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f66798b9-f25d-429f-9d3f-b0f38af76786"
        },
        "item": {
          "id": "98c2172d-a79a-4811-9a9c-079c573edfe2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fd91f492-43ca-4b72-88b9-af627a57784c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f671ac4-bb82-4e6b-8323-6df66dff156c",
        "cursor": {
          "ref": "1bcef7ba-4079-4f34-951e-9f92bf456528",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a15477f6-6632-4e34-b4ad-d42817478efd"
        },
        "item": {
          "id": "8f671ac4-bb82-4e6b-8323-6df66dff156c",
          "name": "identifiers"
        },
        "response": {
          "id": "a4dea603-78ef-4fea-9a63-12efa17ff20b",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9cc5dd-2ed1-4de9-b3b3-9db704a9001c",
        "cursor": {
          "ref": "18a631cd-c12a-4bcf-9cfd-7ff3ae605478",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aa8a0fd6-d590-4a93-a522-0ca551fec684"
        },
        "item": {
          "id": "4d9cc5dd-2ed1-4de9-b3b3-9db704a9001c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d11cb63b-3fc7-4347-a7d0-998a8a46b99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3309eb57-2329-4d43-948c-60e6d11af7c7",
        "cursor": {
          "ref": "d4c84223-3eb0-4566-a335-243ac9079fe3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0d05328e-36cc-4fb9-ade2-df53e7f901ff"
        },
        "item": {
          "id": "3309eb57-2329-4d43-948c-60e6d11af7c7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8f22e811-1b31-4f7d-a8c3-dc57167e06a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fce0df1-9b58-42ea-839f-651a866af2cb",
        "cursor": {
          "ref": "a5536fd1-f5ea-473f-b557-6da52c5c4dad",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "156b0bd2-0708-42e3-ac00-818aa4df9fff"
        },
        "item": {
          "id": "3fce0df1-9b58-42ea-839f-651a866af2cb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e26ebfce-ae6d-41e9-9677-af04edc194fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5073ccc2-ba21-4211-8521-0e6e799aa38c",
        "cursor": {
          "ref": "b0d94fc6-dce5-45d5-8eb5-6a20d0970fc9",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1484afac-2bcc-4d35-8092-68b31ba6b13d"
        },
        "item": {
          "id": "5073ccc2-ba21-4211-8521-0e6e799aa38c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "62ed49d8-758a-4e2a-803c-b95443089ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4749c5-ebce-4081-a792-41ae5302353b",
        "cursor": {
          "ref": "dc755c7c-16ea-4f69-9f78-0716c7889805",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "55dd4b5f-9c40-4ac2-9608-7a2c839402b3"
        },
        "item": {
          "id": "ee4749c5-ebce-4081-a792-41ae5302353b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9ee66463-8a1f-452a-8b4b-f4aeaf94a1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f784ad-5f16-460e-8ac0-403e28e0ae40",
        "cursor": {
          "ref": "73e0e836-9bd2-4624-8e1f-26d70bc70dac",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f2759b70-9f8b-45e2-9aa9-328a99b6b630"
        },
        "item": {
          "id": "92f784ad-5f16-460e-8ac0-403e28e0ae40",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4d520636-66fb-4635-84f5-09f1f363f0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a93239-f3c2-4328-aa82-c21b27aebc53",
        "cursor": {
          "ref": "b9299495-a42a-4d17-a057-3c491d5d7ff8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "49c34db0-69ad-4b3f-ba78-cb0fa2cd069d"
        },
        "item": {
          "id": "11a93239-f3c2-4328-aa82-c21b27aebc53",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "802fe188-02a9-4dfa-bb0a-95e0b9091a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6e666f-40c2-4f92-9333-8ae1de8c7815",
        "cursor": {
          "ref": "c103fd50-9fbd-430d-b4de-7fd794a560e2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d0b8f6c7-efef-47d1-952a-8be0e6c6904f"
        },
        "item": {
          "id": "9a6e666f-40c2-4f92-9333-8ae1de8c7815",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1b5e6f2e-7a17-4d48-b6a2-37d5595bb44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325e82e0-3666-40ce-bf2f-2b13f8eeb8d3",
        "cursor": {
          "ref": "350e72b3-12a5-46b3-81b3-a0d1997ee36a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "feabc4b6-dd5c-4d3b-acab-d31d8e314387"
        },
        "item": {
          "id": "325e82e0-3666-40ce-bf2f-2b13f8eeb8d3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "34f37384-e496-44f8-9fdc-817d69113445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7d8021-eccd-4234-8dd8-7e47863b3293",
        "cursor": {
          "ref": "3f86995e-efa8-4b97-9f14-e35bdc4fe3d0",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "87a0dcd7-e554-4181-a268-2532c9837e7f"
        },
        "item": {
          "id": "ad7d8021-eccd-4234-8dd8-7e47863b3293",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a0b338e7-7dd5-4e40-8af7-267cbd53a83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c1d5a6-e603-45c5-b408-64e60076afce",
        "cursor": {
          "ref": "92784dfc-5203-444b-811d-7f7f1238cdd3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7bc075ef-cf71-4c7a-b547-8775b6ee2017"
        },
        "item": {
          "id": "41c1d5a6-e603-45c5-b408-64e60076afce",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "680c0d4e-8495-4efe-89aa-7c7fb7480a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f7c94d-aa2b-41de-bb29-ca8e3e0d5173",
        "cursor": {
          "ref": "7a8e5d80-6d62-4bc6-8692-0c9d67fe7005",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5b3c9aaf-22f3-4356-a6d1-43ca4ce63e21"
        },
        "item": {
          "id": "39f7c94d-aa2b-41de-bb29-ca8e3e0d5173",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d33aa7c3-5d56-4f9d-8c17-8a36726af6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bd7a6a-5926-4a7c-87b2-cd88f37e92e8",
        "cursor": {
          "ref": "d1704d6d-be07-4481-8658-ce45fa117fc7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e9effae8-5c87-4fd7-bedf-04cd884927f9"
        },
        "item": {
          "id": "f1bd7a6a-5926-4a7c-87b2-cd88f37e92e8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2dfbcfc0-c941-4af6-847c-59004f0a030b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e58f2c-e97a-45a8-96b7-99fab8623855",
        "cursor": {
          "ref": "8f83a787-9532-4408-acb5-33efa01311b9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e3796c9e-2c77-4416-9981-6a633605638b"
        },
        "item": {
          "id": "05e58f2c-e97a-45a8-96b7-99fab8623855",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3bd7bb49-8cc6-41f3-ae49-85646bab9360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6752bd91-4caf-404e-a815-7b2f5223a94b",
        "cursor": {
          "ref": "82a60db2-674c-44da-ab2d-71e21809b6e4",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "488a6ee1-0e3f-404b-95b9-543ea1fe1911"
        },
        "item": {
          "id": "6752bd91-4caf-404e-a815-7b2f5223a94b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8205f595-cc7e-401f-8349-37f129fcf036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc8ca67-12a7-40a3-ae44-7f52398a9e7d",
        "cursor": {
          "ref": "f47d0cc3-2860-4229-8e5e-ddc30f00e6de",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d68530f2-eb0d-4623-9727-f8f65ffa2d44"
        },
        "item": {
          "id": "bdc8ca67-12a7-40a3-ae44-7f52398a9e7d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "401fec75-e13e-4198-9f33-1c608db11b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746e23d4-346b-483c-b35c-7b8aefd019e1",
        "cursor": {
          "ref": "7ce4a7ce-3e45-4927-bf25-8aa3aae12def",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7454c240-55ad-41e7-95a6-0cbdbd376aa7"
        },
        "item": {
          "id": "746e23d4-346b-483c-b35c-7b8aefd019e1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8fefac70-9964-4d23-a9c7-167281c6b19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf48d43-91b3-47be-a74d-42bce2efc3fe",
        "cursor": {
          "ref": "9cd7b434-6d08-490e-8965-a19c84ff419a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3eead893-36e3-4c98-a3ba-dd0bc103882d"
        },
        "item": {
          "id": "fcf48d43-91b3-47be-a74d-42bce2efc3fe",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c5d8036f-0db9-4430-8ebb-9423ad0d4e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d6ee9a-5bc3-4c47-ad74-c1d268a33e3a",
        "cursor": {
          "ref": "78f4e3fb-f634-4af0-bd28-172be13adec7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a405651a-5aa4-44f0-9e19-5551528f706c"
        },
        "item": {
          "id": "d7d6ee9a-5bc3-4c47-ad74-c1d268a33e3a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5be085e5-5d53-4770-88da-1e11aff552e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d541f83-e15c-4ab8-a540-76437a785299",
        "cursor": {
          "ref": "ab97095c-79ad-4ee3-9302-04d15524fc19",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e4d661cd-d77b-4343-9a7b-8428a2888eb9"
        },
        "item": {
          "id": "8d541f83-e15c-4ab8-a540-76437a785299",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ab145bfd-c49f-45fb-960b-98395951a614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ce73b6-53eb-476f-8f80-972406cfead4",
        "cursor": {
          "ref": "bde27482-519f-43a7-9b12-08aa5c91ae10",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "93779e6e-b37b-4005-8b91-1f9aec96e8b4"
        },
        "item": {
          "id": "81ce73b6-53eb-476f-8f80-972406cfead4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0c0386c4-4ccf-4be8-a65d-9db184a1a2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e10c01a-d34d-4962-938b-65225e58b467",
        "cursor": {
          "ref": "1c1a8fc0-097b-4d79-bcc0-b77fc07fa9cb",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "919a8305-a763-4ed4-9cca-dd287ff67417"
        },
        "item": {
          "id": "1e10c01a-d34d-4962-938b-65225e58b467",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fc6e85a6-c207-4394-a89c-d492620d12db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da175bf-c5e3-493e-a8b4-040a3b4de764",
        "cursor": {
          "ref": "61887feb-c8a0-4c0a-85eb-be66ae99e2dd",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f75e21e1-acbc-487c-82c5-23e0c44ca4f5"
        },
        "item": {
          "id": "3da175bf-c5e3-493e-a8b4-040a3b4de764",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "eb5ef2d6-14e6-43b3-97fd-c5b9e07e0377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5787ff-63fe-45ef-8ba5-7215c7b96357",
        "cursor": {
          "ref": "d0a70100-3e76-43ab-8852-acf441d05d4a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "213532bd-82b1-440c-837e-7697f80a3b45"
        },
        "item": {
          "id": "eb5787ff-63fe-45ef-8ba5-7215c7b96357",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "94a11215-e1a7-4827-a206-d505c65ffb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a8cce1-f4c9-4e25-b6b0-918f637b9e6d",
        "cursor": {
          "ref": "09cfc83f-c76a-42c2-9466-998b2892d7df",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "06c5165b-69a3-4fcc-ba8a-24173180e6cd"
        },
        "item": {
          "id": "f2a8cce1-f4c9-4e25-b6b0-918f637b9e6d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7042575f-2f3e-4737-aeac-4156f9c14890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f53d20b-027a-4899-8331-e7a331ad5017",
        "cursor": {
          "ref": "630017d3-98a5-4b5e-aef3-5f010b22d31c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7439d948-f844-44b6-88d9-5bd5aec44d9e"
        },
        "item": {
          "id": "9f53d20b-027a-4899-8331-e7a331ad5017",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0bf7bcd1-214a-4ccc-9238-2173dda2870a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1418211-25ae-4116-9eb7-3dd805bea9c4",
        "cursor": {
          "ref": "4a653b77-9834-411b-8c4e-200ac599b37f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4def0d5f-acc8-4fc4-9468-88d3c65ce357"
        },
        "item": {
          "id": "f1418211-25ae-4116-9eb7-3dd805bea9c4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4e315093-0ba1-4699-ad21-cfa40c1bc0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cb5b79-06dd-40a2-bbc2-d0abaef629c2",
        "cursor": {
          "ref": "f9a75b5d-de8c-46a5-9f4c-6f0fe696402f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9fdfd5c6-052a-4bbe-aeda-10269c962ce2"
        },
        "item": {
          "id": "06cb5b79-06dd-40a2-bbc2-d0abaef629c2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9506270a-ec15-4244-8ea6-e2532b34b474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcd4f45-55a2-4e9a-ae7a-582d29aac44a",
        "cursor": {
          "ref": "4977e8d0-4c66-407f-9c8d-c1c9b61a5522",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ff9373bb-807f-49e1-af6b-bb08f39178a4"
        },
        "item": {
          "id": "cbcd4f45-55a2-4e9a-ae7a-582d29aac44a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7be54cf0-da07-4681-92b5-5630485928f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2694b732-e7ac-43de-abce-90334e44f736",
        "cursor": {
          "ref": "6afbf5d8-f6f3-48c3-bfa6-dd877a976c41",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "846804fc-239d-40de-b326-e31d960abed0"
        },
        "item": {
          "id": "2694b732-e7ac-43de-abce-90334e44f736",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fad7d0e8-300e-4a5e-9a73-6d14e6b72a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cba733-1b4e-4e5f-b728-4cff909a1cbe",
        "cursor": {
          "ref": "3907f042-da6b-46fa-ab41-3a6282a42ea0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e1a5b33c-b53c-4567-b233-025b8a4454d1"
        },
        "item": {
          "id": "f6cba733-1b4e-4e5f-b728-4cff909a1cbe",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dce7ff40-9871-44ef-a5f2-41c7621c7755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8645b5d-46fd-40a2-af92-ff4b94f1c758",
        "cursor": {
          "ref": "ae8a0f80-34a6-4512-8c64-6a62f779f9bd",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bf7c27b5-5101-4a8e-897b-211faf811337"
        },
        "item": {
          "id": "d8645b5d-46fd-40a2-af92-ff4b94f1c758",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2c9969cd-b595-4137-9658-1dd9e1fddb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20ddbab-b4f2-4ffc-9ec1-3dd59bc5ebc6",
        "cursor": {
          "ref": "ab690600-59db-459b-b084-09041b00a152",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "07bada90-a5b1-400a-b0bc-ba043ddd469e"
        },
        "item": {
          "id": "c20ddbab-b4f2-4ffc-9ec1-3dd59bc5ebc6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e51a9de9-2d0f-433c-8e9e-1b9e89553b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb620f9-717c-4e44-9ccf-81b57c1aadb2",
        "cursor": {
          "ref": "10d58868-f4b1-416b-969a-ba800709006a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0705b28d-feff-4c5f-99aa-277d9fe5d163"
        },
        "item": {
          "id": "9fb620f9-717c-4e44-9ccf-81b57c1aadb2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "eed31388-9301-4b56-903e-e132465312ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465c3235-b03a-4188-b862-d0d3c53b225f",
        "cursor": {
          "ref": "fd60e8c8-3689-498f-81a1-a69d36ad4f12",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dcc97997-d8bc-465a-a335-4374acf9206c"
        },
        "item": {
          "id": "465c3235-b03a-4188-b862-d0d3c53b225f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b272c1df-fd43-40ff-bd5e-5e6e54df6785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78958272-5cb4-4d77-8535-2adb1363e29d",
        "cursor": {
          "ref": "3f24d7bb-73db-483c-a0a8-6323535fcd12",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4b16b6d9-3c88-4ec3-9c00-75ea1a77a4c5"
        },
        "item": {
          "id": "78958272-5cb4-4d77-8535-2adb1363e29d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5c13e78f-349c-4ffa-9bf5-a92f4a040b40",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f732088d-4e6a-46b3-9ef2-de35b40d1f99",
        "cursor": {
          "ref": "e253693f-6fbe-467a-a8f7-67b62aa57027",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "62457780-ae5d-4a99-bfe6-9d2c56315a68"
        },
        "item": {
          "id": "f732088d-4e6a-46b3-9ef2-de35b40d1f99",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c1ecbc72-1125-4116-8aab-b0ed0cb30737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585cf1ae-d207-4df9-b43b-8890d287def4",
        "cursor": {
          "ref": "1cfb7d09-2f16-4084-aaef-e3028800e637",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8eb68f74-6774-44e7-a28d-dcc47943d8b1"
        },
        "item": {
          "id": "585cf1ae-d207-4df9-b43b-8890d287def4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dd317fe8-ad41-4165-b522-ea489fd2b2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbb5531-ccce-450d-9354-e7a26f07baa6",
        "cursor": {
          "ref": "7e364952-6221-4e02-a8bc-41c8a3cabf63",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8a47354a-5251-4e86-9cf3-1b80314a6a65"
        },
        "item": {
          "id": "0fbb5531-ccce-450d-9354-e7a26f07baa6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2fa74ad9-c994-412a-8561-9b3d51ea7a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa6c7f1-73e7-45c9-9a87-14f811c496d3",
        "cursor": {
          "ref": "62e98edb-165a-467e-a6e5-3cb938101348",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8f84c654-1e71-4337-8340-f5df4e8265cf"
        },
        "item": {
          "id": "ffa6c7f1-73e7-45c9-9a87-14f811c496d3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b77b1245-92e9-4431-8f4c-2ec88c88218c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1149797b-3774-48ac-b880-6f3a98afed9b",
        "cursor": {
          "ref": "863b9b3d-ef0e-40a6-aa17-67936d426313",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a1182878-ef8f-480d-82f8-cc4a481f92eb"
        },
        "item": {
          "id": "1149797b-3774-48ac-b880-6f3a98afed9b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5492ee1b-b666-46ba-b33b-9a836385efee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b2e254-e8a2-4947-9d4f-632862efa1f3",
        "cursor": {
          "ref": "420c3268-eb82-4e63-98de-38a2351adbe5",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "11e35c52-b2ca-4e76-b046-7cfa0678e728"
        },
        "item": {
          "id": "32b2e254-e8a2-4947-9d4f-632862efa1f3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f46d532e-d2c3-4ba0-97bc-9f7c89b970d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e8ed3e-b329-4a8f-8b7d-e2895914a5ba",
        "cursor": {
          "ref": "54009cc1-4cb3-4171-8de2-004c9a345397",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "aa95cdae-4b46-472a-8230-0ebb435cd05c"
        },
        "item": {
          "id": "57e8ed3e-b329-4a8f-8b7d-e2895914a5ba",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "197ba6be-ef40-429a-9bdd-28b70a3fd557",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184b93f4-c9f7-41d8-af61-df54e8dc2217",
        "cursor": {
          "ref": "13a50310-e4bc-4365-89bc-7fd3c899f422",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9234f034-07e8-4e99-b297-2f17d22b4e0d"
        },
        "item": {
          "id": "184b93f4-c9f7-41d8-af61-df54e8dc2217",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c94baa2d-7c00-4e4e-825c-30e25afaa193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aa37fa-fd5e-45e3-8972-60151326faa0",
        "cursor": {
          "ref": "5f404a58-5591-4d6a-a529-16299c6878c0",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "75f32bb3-f1a6-40c3-99ac-c4e1c6c8fe95"
        },
        "item": {
          "id": "f2aa37fa-fd5e-45e3-8972-60151326faa0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "95810a69-86c5-41bc-857d-c00ad0e7a325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5adf45-efaf-4eca-912f-ca4a51204145",
        "cursor": {
          "ref": "4f72091a-695e-4081-aa36-6205d97ab2c1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f52f7344-3019-4248-a617-2f69abe56a94"
        },
        "item": {
          "id": "5b5adf45-efaf-4eca-912f-ca4a51204145",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "33484ebe-bff4-42af-ada6-bcd5af4baba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119b73d8-07fe-4008-a22c-313cf1729036",
        "cursor": {
          "ref": "8dbdba35-1b72-4d03-a2c4-92b7942f17c2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8e0a09cc-f6ed-4d38-b0be-946f72362ee7"
        },
        "item": {
          "id": "119b73d8-07fe-4008-a22c-313cf1729036",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6a94f550-55b1-4551-8e04-3fbfdb2494ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442b3100-04a2-4068-81a5-cd6500b3edd8",
        "cursor": {
          "ref": "db9eed16-1a9f-474b-b459-24c09de8f1fd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e3d15277-5047-4ace-a5d5-5abee81b94c4"
        },
        "item": {
          "id": "442b3100-04a2-4068-81a5-cd6500b3edd8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3970e875-ba0d-4a93-8a94-06bbe1906997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7527f165-6cbf-4032-8c0d-f06b2124a823",
        "cursor": {
          "ref": "01bc1734-124e-4726-9b89-d2ccb66316fd",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d39be810-a53e-4a83-ad76-a3fbf53f9301"
        },
        "item": {
          "id": "7527f165-6cbf-4032-8c0d-f06b2124a823",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "69f54937-a320-42bc-97a1-b1234ca7883c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc7ee98-54c6-4d31-aeea-2169a5568a6b",
        "cursor": {
          "ref": "4244b0d7-0cc6-48cd-8fb6-7a9e6f19d7dc",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "348bac40-0780-4e95-a1ac-5352f5b16816"
        },
        "item": {
          "id": "bfc7ee98-54c6-4d31-aeea-2169a5568a6b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c597d564-cdc1-4f14-a05f-82976357d2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61fd599-9d8f-43d5-abfc-34c3d5f4116e",
        "cursor": {
          "ref": "869196a6-9d9c-4702-ac19-7a557645733f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "803efc82-fa37-45a7-b238-a8855c349f60"
        },
        "item": {
          "id": "d61fd599-9d8f-43d5-abfc-34c3d5f4116e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "19c72d31-888e-4c0e-b98f-567cb2b8e7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6553c99-6ef6-4365-a6fb-8567d0620652",
        "cursor": {
          "ref": "51f18bd5-c822-4d72-8692-49ae97e2af30",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3f99a9be-6a40-4f31-aca2-d4d2f9eed9c3"
        },
        "item": {
          "id": "d6553c99-6ef6-4365-a6fb-8567d0620652",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3b625379-cb90-4931-ae01-39d59dc1b415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76fb2b3-574c-4175-ba59-4cc23e291b85",
        "cursor": {
          "ref": "abf06b34-b11a-4fd6-8c82-d85bf471611e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "78f6829b-20f2-40f5-bf46-e6e42c419762"
        },
        "item": {
          "id": "d76fb2b3-574c-4175-ba59-4cc23e291b85",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "81ed9c42-e17c-4a2e-b7ca-fd3d0992f06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7af5e7-e2f3-4b65-b317-cf65b9491370",
        "cursor": {
          "ref": "3d853983-72f0-4fbc-8d87-f5b5fdeae654",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "60d7556e-8b32-4030-939a-99e65960d251"
        },
        "item": {
          "id": "aa7af5e7-e2f3-4b65-b317-cf65b9491370",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "39038876-a612-42b2-b361-6ed0a6917cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c56090d-5961-460c-a5a8-aebea84c3534",
        "cursor": {
          "ref": "aed2d7f1-08fc-405a-9943-0aef13bf1858",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fccf053a-f15d-4b31-a659-e3102cd63de7"
        },
        "item": {
          "id": "5c56090d-5961-460c-a5a8-aebea84c3534",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c70e0a32-5127-4494-bf28-1a4c3cd1f3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a0b0b7-6f13-4b5b-9585-cb1e6de4c486",
        "cursor": {
          "ref": "6e6eb0ea-0a7b-44f3-abd5-c58b80a9b45f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "938d07f7-b855-458f-b058-5b1f2671b692"
        },
        "item": {
          "id": "46a0b0b7-6f13-4b5b-9585-cb1e6de4c486",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dc20659d-6113-44f0-84e1-9a12bf235e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2b8bac-874f-4f81-9dd2-bac69219931b",
        "cursor": {
          "ref": "ed950c33-3db7-46d6-b37b-e2fb896e5397",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "132e8f62-9a4a-4f47-bc30-3d633bc26212"
        },
        "item": {
          "id": "8a2b8bac-874f-4f81-9dd2-bac69219931b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7c173faa-ef69-448b-9234-4c2e70bd0102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744fee32-f2ba-4e03-b5c2-c946ec2bd1b1",
        "cursor": {
          "ref": "3d13c5f8-7c77-483d-92e9-b89b8dc90daf",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "51a05515-cbbb-438c-b544-8c1fdc9f1854"
        },
        "item": {
          "id": "744fee32-f2ba-4e03-b5c2-c946ec2bd1b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "81724857-2160-47b0-9c6c-b47048ac1308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e3dc91-8d77-4648-8c4d-f522f7b2a3cf",
        "cursor": {
          "ref": "accae93e-c1f9-4949-96d0-eb7d9860af64",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cea3a169-f1db-4d8d-81cc-d739b817683f"
        },
        "item": {
          "id": "26e3dc91-8d77-4648-8c4d-f522f7b2a3cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c61cc1a5-5412-494f-87a7-79889af90c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414d89da-19e4-4810-a9db-efec559aa405",
        "cursor": {
          "ref": "8dc69698-48a1-457f-a272-641639267eb8",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "10d9e646-ec80-44b8-ba56-12d1435e0251"
        },
        "item": {
          "id": "414d89da-19e4-4810-a9db-efec559aa405",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f5606ac1-d9a5-4951-bc82-c301905e2fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654aa5be-4287-4322-b44f-1729b3309530",
        "cursor": {
          "ref": "1417e045-0929-45da-b843-b4d127407195",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "148ecfe5-a9a2-44e9-8204-404e82f505bf"
        },
        "item": {
          "id": "654aa5be-4287-4322-b44f-1729b3309530",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "58cd675a-9ac1-4185-8ee1-a67c428972ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18afd553-4473-4bc0-bda9-70459bffc256",
        "cursor": {
          "ref": "b32470be-3897-4c0e-8b4a-650393e3ae87",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4db182a3-f508-4c6e-9563-c15b21049efb"
        },
        "item": {
          "id": "18afd553-4473-4bc0-bda9-70459bffc256",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b646eac9-06ad-4177-84d2-ad0067020ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98265971-6bd1-4f3f-9ed7-80f8458e7473",
        "cursor": {
          "ref": "9ddc2644-fed6-40d7-8a62-6e7110db2fd5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f00ebb2e-1cd6-4acc-b18e-e4ee1443b85f"
        },
        "item": {
          "id": "98265971-6bd1-4f3f-9ed7-80f8458e7473",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5bf115f8-8814-4494-a143-8767ef5473f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9364c0e0-2505-4894-a8a9-f8df863ce0a8",
        "cursor": {
          "ref": "aaa35e12-45d7-41ca-983f-3ed586932f60",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6814ae47-2bee-41f8-b01f-c7aa85fb8069"
        },
        "item": {
          "id": "9364c0e0-2505-4894-a8a9-f8df863ce0a8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "da484dc0-b5c2-40c2-9edf-23d94636ca9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e460758-fc66-4e9c-bcd5-35cb6f7696e6",
        "cursor": {
          "ref": "0194f8c5-e3eb-47e8-94d4-e965a5fc28a8",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "40eca4b4-fabe-4924-b120-6c866613c5c4"
        },
        "item": {
          "id": "5e460758-fc66-4e9c-bcd5-35cb6f7696e6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fc61e3c8-767d-43ea-8b41-d19ced9f5f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e98bd6d-0030-4066-9e24-895f0ccfbce9",
        "cursor": {
          "ref": "4a609a49-90a9-49e2-9093-ddcb360a69ea",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "52ef131c-d9c5-4bdd-a023-6c494a3de877"
        },
        "item": {
          "id": "2e98bd6d-0030-4066-9e24-895f0ccfbce9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e58eac54-e67e-4f13-8fc4-96d1414b1ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7515e21-e83e-4080-b157-08aa67f4a179",
        "cursor": {
          "ref": "976a51e0-c6ed-46f1-8883-cf8c094fa9dd",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1f5fe370-9518-4eaf-9592-fcc24a71f4aa"
        },
        "item": {
          "id": "b7515e21-e83e-4080-b157-08aa67f4a179",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7c57e09b-c9ae-48ec-a657-0dd213942ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147b15a3-b10b-45e6-9652-c76d1e9b9584",
        "cursor": {
          "ref": "105f56e3-d8f7-4b80-b3fd-c77b3d2fbd1a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0e094afd-80d2-4e3f-9905-5f19e03d2e2e"
        },
        "item": {
          "id": "147b15a3-b10b-45e6-9652-c76d1e9b9584",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "71f68a0f-9ff7-4f10-8eb6-d99876372538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6ef0e9-5ede-4651-b49e-ff0a6dc84848",
        "cursor": {
          "ref": "c7430a5c-2591-45d2-9627-24a443ed7bb0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ff8c7d13-d5e4-461a-a143-2049001d67fe"
        },
        "item": {
          "id": "0e6ef0e9-5ede-4651-b49e-ff0a6dc84848",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "df7e54ff-4831-4504-b9e4-e4c69f9dbf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0a3048-81e7-42b2-9e58-0c68f8f24d5d",
        "cursor": {
          "ref": "dbc28681-5f60-4387-b689-9ae9fa86ccf5",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8bc8ae88-7fd3-4e27-86d1-3083ec3d616d"
        },
        "item": {
          "id": "fa0a3048-81e7-42b2-9e58-0c68f8f24d5d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d31066f3-07a8-4d8e-b56e-f57e5e6fddc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c161a3b-9379-4f5b-b094-b808b45996bd",
        "cursor": {
          "ref": "4fbc1388-a0a3-4637-83b9-28d06f773488",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5c2c42e0-a30f-4688-9ae1-3740d55d4a50"
        },
        "item": {
          "id": "3c161a3b-9379-4f5b-b094-b808b45996bd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cdbf72f8-8756-4ec3-9d6a-d7b3d340ae6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a14636-61af-41f5-aca7-10a869f01fe9",
        "cursor": {
          "ref": "23f656e9-f623-4e2c-9f90-93010f23bd4f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9d845b32-42a3-4ada-8587-9fb99963cf26"
        },
        "item": {
          "id": "64a14636-61af-41f5-aca7-10a869f01fe9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "97c422c6-c9c1-4aeb-8d83-443a22572b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9567e3c7-015e-41d7-b23f-31da1e948db4",
        "cursor": {
          "ref": "618800cb-1f79-4aa1-b4ae-935dcbc2f69a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a0a662c0-3b43-4526-bc1a-11885c5f3844"
        },
        "item": {
          "id": "9567e3c7-015e-41d7-b23f-31da1e948db4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "89bbbc5f-d888-476a-a542-55a3f9d910d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5e0b9f-9382-460e-80b4-831727a0b85e",
        "cursor": {
          "ref": "c0e5ea48-7ea2-463e-87d9-8030904959c6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f505aad4-c1e2-4962-aad3-772165267881"
        },
        "item": {
          "id": "ab5e0b9f-9382-460e-80b4-831727a0b85e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "71781ebe-2175-4e1d-8cac-d69980496a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c7a172-10a0-449e-adad-a5d8f5e38b6c",
        "cursor": {
          "ref": "6480166f-1c72-4710-8b01-54b36decccb1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0c68cd12-6e4d-4542-b316-69f4b8f5f658"
        },
        "item": {
          "id": "17c7a172-10a0-449e-adad-a5d8f5e38b6c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "87cd4fc8-652c-423b-b240-02570605a42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2c50b6-a7b9-4190-81e3-7696235ca5e8",
        "cursor": {
          "ref": "8a0eebac-61b8-4bf8-b6ea-afaa311f0313",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "711ecb13-cdd1-48ce-a91d-737c8e918047"
        },
        "item": {
          "id": "ef2c50b6-a7b9-4190-81e3-7696235ca5e8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "57dc9793-35e6-444e-af21-cc7a748bc39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3033d354-074d-4ff0-8b96-e1a84222c293",
        "cursor": {
          "ref": "d5158649-2d51-4250-b5af-0d8b847b0aea",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "56770c92-de77-4bfa-b3a3-f459b785b5c5"
        },
        "item": {
          "id": "3033d354-074d-4ff0-8b96-e1a84222c293",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d78d0d26-f2f8-4136-b135-09318b14e5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2069fe0-bb23-4142-b7a8-27159a8623a0",
        "cursor": {
          "ref": "55ae1183-f7b6-4cec-a9bf-8a31832b2695",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "27cf08e9-23b8-4752-ad75-48897d78f5ec"
        },
        "item": {
          "id": "a2069fe0-bb23-4142-b7a8-27159a8623a0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "46008140-b74b-43f2-bb01-5be92156b8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9e786d-1c17-4281-9665-95c816a7caf5",
        "cursor": {
          "ref": "28f8ee55-51cb-40f4-b2bc-110cf0cad532",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e41f963e-06a1-4599-beea-b1283f34c982"
        },
        "item": {
          "id": "7f9e786d-1c17-4281-9665-95c816a7caf5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "25285a1d-c0d9-4fad-a16f-1dbfab33a9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b507bc04-cc6e-48c4-bb62-e0f3fe4407bd",
        "cursor": {
          "ref": "8b716482-d4d8-4ce2-aca5-0e2c239f0042",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0ac4ce25-f220-48df-aa43-c78f07c5e2e2"
        },
        "item": {
          "id": "b507bc04-cc6e-48c4-bb62-e0f3fe4407bd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "65a3a1a5-2e08-49b6-9f53-faf2285a1352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbda4bac-1951-44ac-9f2b-f11148b6bd94",
        "cursor": {
          "ref": "17a08bb3-dd30-4527-8afd-843e77269d96",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0ac6e33a-49d0-4678-a0c0-482e4fd57e4f"
        },
        "item": {
          "id": "cbda4bac-1951-44ac-9f2b-f11148b6bd94",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ec8eb74f-3054-4b23-82ed-5688fc0046e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fca1a65-b194-417f-b222-e6a155499cc2",
        "cursor": {
          "ref": "25d72902-4385-4616-9718-0869b74c2282",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b942688b-09b3-4494-8ce1-8a8177fc2d97"
        },
        "item": {
          "id": "6fca1a65-b194-417f-b222-e6a155499cc2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1c4635c0-5f0d-4a48-a7d8-15b7aaf9bf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49c25be-eaab-44e5-aa39-95e8611d6622",
        "cursor": {
          "ref": "ae8db707-3299-4b7f-bb62-9dfec4763f20",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "31f8b451-47bb-448d-9ebd-4f1555f53e2c"
        },
        "item": {
          "id": "b49c25be-eaab-44e5-aa39-95e8611d6622",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b84b45ad-766c-4229-9ae0-e758d5584d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2ccd0b-5272-4bbb-93d6-78840140834a",
        "cursor": {
          "ref": "171d0a12-d386-412f-81bb-b051dde4de98",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "72838f96-c8b7-4e0a-af36-396ba8531c6a"
        },
        "item": {
          "id": "de2ccd0b-5272-4bbb-93d6-78840140834a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4d85d4bc-9aeb-4ac3-8316-17834f45354f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54322067-f6ef-4772-bfec-6bc3885b7aa3",
        "cursor": {
          "ref": "0747e68d-a8a4-4047-b70a-4ba59403ddb9",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ac1d2703-cc84-4445-af5f-1a3fb4743aa6"
        },
        "item": {
          "id": "54322067-f6ef-4772-bfec-6bc3885b7aa3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b1738946-53f2-43e4-975e-e3fe605ef8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae75e995-032f-4afa-9bbe-3c490bbf884a",
        "cursor": {
          "ref": "bcdae510-3c2b-41ba-ab3f-be1fd4d20d87",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4372d42e-7914-4fb8-9f65-5a8317fb711e"
        },
        "item": {
          "id": "ae75e995-032f-4afa-9bbe-3c490bbf884a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9e65fd2d-9a8c-4c44-902a-da712e53eeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c65305-a036-4786-965b-abe98a791719",
        "cursor": {
          "ref": "aa786c02-5e0b-4ced-8320-ca1f3217918c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c9312e55-0bb8-483a-8235-0da187c6edca"
        },
        "item": {
          "id": "f3c65305-a036-4786-965b-abe98a791719",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "30acad64-f7ee-4219-816b-40729c4a84b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f202578-98a9-45e8-8064-55eadd999ea2",
        "cursor": {
          "ref": "4f06f318-bc60-4f68-855e-130ab79040dd",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e6f63422-cbca-4e2b-be2a-89e69708e1d6"
        },
        "item": {
          "id": "2f202578-98a9-45e8-8064-55eadd999ea2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "46a79566-c0ee-45c9-ae9a-4eadad019c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f8b8d7-360d-488f-9973-a476fd9a73a9",
        "cursor": {
          "ref": "51972f15-c0e3-43fe-829e-ccc5f418e119",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6fee6be3-5129-464f-b668-0bf4495dce16"
        },
        "item": {
          "id": "b5f8b8d7-360d-488f-9973-a476fd9a73a9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b8bf1dd7-fe75-4750-ac3f-44d75c5d0b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f55e468-9c90-4aa5-86de-77a62f33a90a",
        "cursor": {
          "ref": "6030964b-2537-4abd-a50c-6cdc81746e87",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a817ac33-a3d9-490c-81eb-7d35acd5c4d1"
        },
        "item": {
          "id": "6f55e468-9c90-4aa5-86de-77a62f33a90a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2ef3319f-8882-4e31-81ce-daa69ea8eb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef368d8-5178-442b-b595-c0b66913f1b2",
        "cursor": {
          "ref": "10db4811-035a-4014-8e85-59296012b12b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c4957bff-d36d-4d15-a0bc-4b1373dd42c5"
        },
        "item": {
          "id": "1ef368d8-5178-442b-b595-c0b66913f1b2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1221ceb0-adbf-4147-bb75-ab500c9411d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a03667-ee0e-4cac-bd36-b63819eec2e9",
        "cursor": {
          "ref": "7754cabf-ce7f-4472-93be-1c738fa5ef8e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f537010c-2318-4f15-9316-312b12406050"
        },
        "item": {
          "id": "67a03667-ee0e-4cac-bd36-b63819eec2e9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fe6a096f-028e-4ee9-8029-17454f62296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59db30b-9571-463d-9102-c5418c943a2a",
        "cursor": {
          "ref": "1bbadf47-599e-4b45-9e21-f0cbc57d7726",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1d107c09-347a-4d99-b78b-909f212baa40"
        },
        "item": {
          "id": "f59db30b-9571-463d-9102-c5418c943a2a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6b613ea8-8e79-4373-80de-540ddf57113e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4090a8b5-8f20-4af4-89f8-abd1fbf19321",
        "cursor": {
          "ref": "d91b639e-d427-4204-9a27-a015c2f0e6b3",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d66765bd-9aed-4d86-826d-c82eebecce3f"
        },
        "item": {
          "id": "4090a8b5-8f20-4af4-89f8-abd1fbf19321",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a5ee9192-fb4f-454d-9e5f-59a97b5c70a5",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8ae47f-f95a-4a66-bb44-40016a4b421d",
        "cursor": {
          "ref": "b76aaeed-28c3-4310-8558-d209ac7c0e8a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "33ffd96e-ca5c-498c-9c61-84421e0ccf13"
        },
        "item": {
          "id": "4c8ae47f-f95a-4a66-bb44-40016a4b421d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3de933ac-3ab7-4ae0-9a6a-0a16940796d3",
          "status": "Created",
          "code": 201,
          "responseTime": 267,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "29aedae7-3bc4-4396-ac51-39258da96955",
        "cursor": {
          "ref": "754ca191-8cf3-4d44-b56c-2e90df2bdc79",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "88313353-5122-427b-8eb3-47d08ae32e96"
        },
        "item": {
          "id": "29aedae7-3bc4-4396-ac51-39258da96955",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3e9838a0-146d-4b16-ba77-9e5fb949e116",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbac15b-d89d-4805-a8dc-cb8d0f692c28",
        "cursor": {
          "ref": "a214099d-0ae3-4596-9da7-7bfa0c21696a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "87ccd9ff-1f0e-47a4-957d-d25346ef03b7"
        },
        "item": {
          "id": "1bbac15b-d89d-4805-a8dc-cb8d0f692c28",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "619c82f3-a470-4352-9f33-662e570337ba",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "099b2c5e-80d0-4768-b19d-813f99121363",
        "cursor": {
          "ref": "a56da0ec-d417-4bd3-a6ae-2facb2fd7698",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1d48eee5-25c6-4549-b249-2cc8bd2cf783"
        },
        "item": {
          "id": "099b2c5e-80d0-4768-b19d-813f99121363",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "96517996-5881-441d-83c5-02cdf1407116",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef355de-43d8-4dc6-aa75-8594de561cfa",
        "cursor": {
          "ref": "845b33f1-d64d-4bde-967b-cb9ab3035745",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b8b049da-5d65-459f-aeb2-959a74ee7e04"
        },
        "item": {
          "id": "eef355de-43d8-4dc6-aa75-8594de561cfa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fa7264c2-9fd0-4f52-8828-dda821bfe2ca",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "647d86f6-71ba-4e53-b417-93bd5cc54d8d",
        "cursor": {
          "ref": "23f2f638-e4d2-4e54-b903-d4118360f55d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "74c9e4f4-de19-4410-9645-540e47e75638"
        },
        "item": {
          "id": "647d86f6-71ba-4e53-b417-93bd5cc54d8d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b49f3f44-e8c2-466f-b9df-75dbe32ab242",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7ab17b-9b0f-47c5-8017-65b9771ffb6a",
        "cursor": {
          "ref": "9eb0fdc9-20d7-423c-8303-4a4a3b2b87de",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "08152653-de3f-49f9-ab1e-dedb05fa9a19"
        },
        "item": {
          "id": "9e7ab17b-9b0f-47c5-8017-65b9771ffb6a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3afaa3d7-3646-4149-8391-46a6bd4e041c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc8e969-6eda-4866-8c73-7044e353ae3b",
        "cursor": {
          "ref": "39bf599d-7182-4f21-91b6-cdbbaca63592",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dc04d05d-b98b-4d9d-a637-896abd8f8c43"
        },
        "item": {
          "id": "5dc8e969-6eda-4866-8c73-7044e353ae3b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f6f4c631-ff0c-43ba-8fcd-40bc696c3065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a630f7a-01f8-47a0-81a8-dea5946b2207",
        "cursor": {
          "ref": "b083567a-4666-4495-b368-e75d271f270d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "817cb1ab-d18b-4091-9976-54abde86233b"
        },
        "item": {
          "id": "9a630f7a-01f8-47a0-81a8-dea5946b2207",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bcb10f56-1241-4f8e-8ce2-86f70efd6938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9c1687-5dca-4e8a-8b03-37cbbb13498a",
        "cursor": {
          "ref": "fd86954a-b092-43a9-b36d-60acc2b264e1",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "100c2430-e920-4d96-bdb2-16bf87784dc0"
        },
        "item": {
          "id": "1b9c1687-5dca-4e8a-8b03-37cbbb13498a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d9a52ac5-2ce1-48e1-9ca6-a11525574c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa159c5e-f01e-480e-8021-add4025499f6",
        "cursor": {
          "ref": "ca98c5eb-708a-43b4-9770-3e83addc7a79",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "60ad68f2-dc22-4c71-b172-c7ff01d93255"
        },
        "item": {
          "id": "aa159c5e-f01e-480e-8021-add4025499f6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "08bc50c7-0b45-495b-ac92-9f4f47a19c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985813df-f8da-4232-ae29-5312b3539583",
        "cursor": {
          "ref": "6a80a930-d224-4b78-8034-a0dff123212b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c9e46aaa-88ab-4f02-8589-a420b7cc3fd2"
        },
        "item": {
          "id": "985813df-f8da-4232-ae29-5312b3539583",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a598c9c4-bb1c-4fc1-a7e9-8966067f5631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d905f5a0-1259-4a0e-a16c-cee38dd9bf7a",
        "cursor": {
          "ref": "3c14eea2-ea89-41ec-a089-9f76bd610c6a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6384bdea-d5ca-4773-aa2d-c6a7438eede8"
        },
        "item": {
          "id": "d905f5a0-1259-4a0e-a16c-cee38dd9bf7a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3bfb8039-373c-4e37-96ff-85a0c4becba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a23dd6b-40d4-40e3-976c-c859984fd382",
        "cursor": {
          "ref": "4a457304-5dea-4ac1-bcad-a1c731748919",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "53a336c1-3a9d-486e-a35e-d88a68d00ab3"
        },
        "item": {
          "id": "3a23dd6b-40d4-40e3-976c-c859984fd382",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "308df9ee-b890-48b9-993e-569cfc83f88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e43b12-40c6-4874-9a41-dce98520a6ad",
        "cursor": {
          "ref": "a64ba0f7-39b4-4d65-ba99-65f9b0cc8d55",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e10c9dae-a4a0-4255-ab18-d85f3f39dce1"
        },
        "item": {
          "id": "a5e43b12-40c6-4874-9a41-dce98520a6ad",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5a534e53-e87a-4f83-b282-379a5a754b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5a533e-6956-4a75-9bc8-ad1449e5390b",
        "cursor": {
          "ref": "eeac9f2d-bd34-4bab-a07d-3949f8a4a63b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "20ac30e4-44c9-4abb-ad0b-65488d92aaf8"
        },
        "item": {
          "id": "cf5a533e-6956-4a75-9bc8-ad1449e5390b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "be237786-3d5f-4c00-a1b6-d6564f98532d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb8a579-c61f-42b8-b902-177191107725",
        "cursor": {
          "ref": "e0202441-3463-40da-8d4a-46963d822116",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6fe02df5-9f80-4f39-a6d5-4d38bb45c19d"
        },
        "item": {
          "id": "bbb8a579-c61f-42b8-b902-177191107725",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3210984b-9003-49a8-96d6-23af76f20a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35570a95-d12c-4f0a-8bc4-e85ce3e47087",
        "cursor": {
          "ref": "b144796f-923d-467d-942b-00716e1ccc75",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0c9890ad-4ed2-4b81-b3e1-f109723e2b55"
        },
        "item": {
          "id": "35570a95-d12c-4f0a-8bc4-e85ce3e47087",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ea75a265-d2c2-455e-ba61-e552de375323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dec8c3e-95ca-4024-8054-1972e285142d",
        "cursor": {
          "ref": "2073c6ca-7fa1-4282-ab0d-de0da9089a76",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8687c594-33cc-4483-a538-837b8b0f9ea5"
        },
        "item": {
          "id": "2dec8c3e-95ca-4024-8054-1972e285142d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "78ea4d30-d936-448c-8eb4-ff6fbde80da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cf84a6-2abb-4134-8b3c-7317d39a6e2c",
        "cursor": {
          "ref": "102334e9-3826-428c-b7e0-062a102dca09",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "38eb0b33-f479-43cc-9933-4c0e0a380640"
        },
        "item": {
          "id": "d0cf84a6-2abb-4134-8b3c-7317d39a6e2c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "54a85d17-dc89-4fc6-a45e-3ad04ab67924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40c3ed0-8aca-48de-b94a-902634236203",
        "cursor": {
          "ref": "249f360d-4624-45b3-b74f-5735821659d6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "91b66759-8482-40d8-ab9d-a53994af6c57"
        },
        "item": {
          "id": "e40c3ed0-8aca-48de-b94a-902634236203",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fda5032e-025d-4a92-98e9-89d45e75f0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d22ed1-3c5d-4960-8558-071e2d5146dc",
        "cursor": {
          "ref": "b1c84821-10cb-43c5-82d6-c95372a91cb3",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d194fd79-821d-46e2-ae4a-2cc77a08d788"
        },
        "item": {
          "id": "b6d22ed1-3c5d-4960-8558-071e2d5146dc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a62defee-1916-449f-b458-f725969b4f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c412c33c-9c62-43f9-8c83-0ed3cbfe89a4",
        "cursor": {
          "ref": "71255132-bd66-4883-b977-16ddaaab2349",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8f8e6607-5e4e-44b6-a90d-8e2f2d1aef41"
        },
        "item": {
          "id": "c412c33c-9c62-43f9-8c83-0ed3cbfe89a4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f7970a42-0674-46cc-a9b9-6eb8840e2151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5aa516-68d7-4618-867d-9d19336b0510",
        "cursor": {
          "ref": "83556457-337e-42a0-b2ba-2235d35bfcbb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "191e5b5e-73e3-4033-8f1b-80e38951ba6a"
        },
        "item": {
          "id": "3e5aa516-68d7-4618-867d-9d19336b0510",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c6d3cded-9232-4efc-8525-82a7289ba505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8879250-3e7d-474d-8bba-ca5babdaf615",
        "cursor": {
          "ref": "502add0d-3042-4d4a-b034-878941c8446d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "846a332c-d3c0-4d67-8a91-def9594552cd"
        },
        "item": {
          "id": "b8879250-3e7d-474d-8bba-ca5babdaf615",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6de880a0-182d-40f2-b1d4-17aa4b6cd73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80111548-08bf-43f6-883b-3749903ba6e9",
        "cursor": {
          "ref": "251b08d0-78ec-48b4-a87a-ef9766126a30",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "42ca0fb6-af22-4f53-9a90-a7a2f795858e"
        },
        "item": {
          "id": "80111548-08bf-43f6-883b-3749903ba6e9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "07db8842-ab27-456a-9abd-7bc063f9c319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7e243a-a81d-4441-b116-a2f730ba154d",
        "cursor": {
          "ref": "283a6f2b-68e4-4e6c-bc10-93241fc861af",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "63c646ff-f47f-4014-976f-a30e64203c46"
        },
        "item": {
          "id": "1b7e243a-a81d-4441-b116-a2f730ba154d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b3c75643-81c3-4e54-8302-6b37d28fe852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634ad05a-ea29-47ee-8c0c-913aa192b199",
        "cursor": {
          "ref": "8158d45f-0b07-43f0-93ee-5a6893f1a1ed",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9e4fcfbd-3977-4f21-968d-b3653aee659e"
        },
        "item": {
          "id": "634ad05a-ea29-47ee-8c0c-913aa192b199",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2ff43b19-9f91-4204-95f5-dd6ec844be84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2954f9ae-e4e1-4614-8748-c22ff6b3f4d0",
        "cursor": {
          "ref": "019bfaad-be7b-4333-954a-366349fd5c07",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "64afc822-9268-4d1b-87a3-d4e4f04cf88f"
        },
        "item": {
          "id": "2954f9ae-e4e1-4614-8748-c22ff6b3f4d0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ac202638-02f8-4db3-996e-bf50a8673dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dccd27-0c1c-40d0-a9f8-a2613b51161d",
        "cursor": {
          "ref": "7d258141-9ddd-473a-b2d0-5669c1cd5580",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "806a4712-c10a-4d2c-9d7d-11dba4a7cedc"
        },
        "item": {
          "id": "15dccd27-0c1c-40d0-a9f8-a2613b51161d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "627d257c-d0dc-4448-8f70-5a2925e3fb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a08e54-9ecd-44c0-8324-c437d97b76c7",
        "cursor": {
          "ref": "da589dfb-db28-4dfe-998e-3d61ff910f23",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "97cc84d6-cbdd-4ece-96c4-99b19031d971"
        },
        "item": {
          "id": "40a08e54-9ecd-44c0-8324-c437d97b76c7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "463edf7b-9c8e-45ce-b370-c6696d343ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910e9f04-33b4-483e-aa6d-7a4c2732a603",
        "cursor": {
          "ref": "4ddb4b75-9429-4fbc-83ae-abcf126162a5",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "874e21cb-52ec-4605-955d-19c95303d957"
        },
        "item": {
          "id": "910e9f04-33b4-483e-aa6d-7a4c2732a603",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "624c9dce-6253-44ce-b08a-8dff60c2915b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6acafab-18c2-4991-9971-a455a7e4917b",
        "cursor": {
          "ref": "0df7d041-9320-4e24-9337-cc0109ac28a6",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5afcf0c1-9166-4f19-99a9-0494b31a1a47"
        },
        "item": {
          "id": "b6acafab-18c2-4991-9971-a455a7e4917b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "22614e2c-84ee-4ce2-b0ac-8a991d6e2191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9527514d-0620-4aea-8865-cd0757708d09",
        "cursor": {
          "ref": "dde33572-8a51-4694-99f4-61791d9ce8c2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b737989f-38c7-4758-ae32-b66513e0768e"
        },
        "item": {
          "id": "9527514d-0620-4aea-8865-cd0757708d09",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "48307ad4-2d59-43ec-89b1-7a9d5705c3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc09321-36d2-41d5-b464-a6994537c2ca",
        "cursor": {
          "ref": "0f98e781-5c3a-4f6e-a939-228010a4d161",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1ef283a9-d7b4-4d77-81d9-d235d2dfaed5"
        },
        "item": {
          "id": "8bc09321-36d2-41d5-b464-a6994537c2ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1b215bb9-c975-4d9f-9cbe-e15723456212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429d9b9c-efc3-4ca7-a712-902d287b7d13",
        "cursor": {
          "ref": "b649e028-315c-49c1-bc2a-18c26c576a27",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f5c5411c-d991-4602-adad-5a7567e983bd"
        },
        "item": {
          "id": "429d9b9c-efc3-4ca7-a712-902d287b7d13",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c6a6dc25-e2f1-43d6-96f6-287790fdacb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9b9037-ed92-4c65-99cd-d1cfb1e3e76f",
        "cursor": {
          "ref": "4c63c45d-8921-42d2-add0-2ecab53ad4b3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ced8ac49-7dce-423b-a5d3-1471ffc783a3"
        },
        "item": {
          "id": "2f9b9037-ed92-4c65-99cd-d1cfb1e3e76f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8ce5558b-303d-4159-8169-f3d21600be5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ec366c-a0fe-4fc2-aa83-4e2c774a5e03",
        "cursor": {
          "ref": "20c10b5e-2411-496a-ace4-66636ac18fa4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2b267555-60e4-4f42-b116-349a97b3621e"
        },
        "item": {
          "id": "d2ec366c-a0fe-4fc2-aa83-4e2c774a5e03",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "80aaa260-0db3-4aaf-8270-3dded8787214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c3b0d7-926a-4da8-a48e-843dcde03af7",
        "cursor": {
          "ref": "15056f72-4f3c-4d44-9ef9-239dbff900ef",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5c18a15d-8bb5-4437-b6f5-cf1d0e6833bd"
        },
        "item": {
          "id": "30c3b0d7-926a-4da8-a48e-843dcde03af7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8072554a-7970-45fb-acc8-f099ac81d73d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9cd6bc-b4f2-437f-8751-8a921eb4a2ec",
        "cursor": {
          "ref": "831f4784-05c4-4c41-b7e3-3cc6c764933c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f647a848-0dae-40ae-ab24-64d6e1ed7d65"
        },
        "item": {
          "id": "4d9cd6bc-b4f2-437f-8751-8a921eb4a2ec",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "053ba775-8c86-49ca-8162-529280bf9ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f3508e-b4f6-4e96-a919-88f8bb9f97f2",
        "cursor": {
          "ref": "cb921fe2-0db6-4250-bcc8-78ea5d77b890",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "53e9ed8c-4609-4f7a-a1c6-109065cfdbd2"
        },
        "item": {
          "id": "15f3508e-b4f6-4e96-a919-88f8bb9f97f2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "66f564f5-529e-4786-b2c0-2d9af980dc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8bb3b9-5e23-4543-b351-1fca76289414",
        "cursor": {
          "ref": "3370c24f-b346-4753-af55-b10215dbd2d7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dc11fe93-bae2-46dd-8a92-ff952d7c4f67"
        },
        "item": {
          "id": "8e8bb3b9-5e23-4543-b351-1fca76289414",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8f72f7be-efb9-44ea-a406-d417c5cc14a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57d80c1-a06e-4e8f-9fad-8f3920d3c77f",
        "cursor": {
          "ref": "542f82bd-4de4-4a01-84d9-b38f60e931fd",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2918e528-5698-4995-bbef-9aebe54bc13a"
        },
        "item": {
          "id": "d57d80c1-a06e-4e8f-9fad-8f3920d3c77f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0ac92320-145c-482b-aa8d-be8fabbb5e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9121e2-8808-4344-befa-da596e30a951",
        "cursor": {
          "ref": "ac2551fe-5fb0-43ca-bfa8-4c94b98c4347",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6dc0a02e-e851-4c8b-ab1b-d6c44c12c2bb"
        },
        "item": {
          "id": "4c9121e2-8808-4344-befa-da596e30a951",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c7437f96-5ca7-47f8-80bb-ab943e3317a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1d25cc-7fe4-49e9-90b1-3496cd19ba79",
        "cursor": {
          "ref": "14b567c7-2cb9-4963-80f0-18c32b0e0594",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8a52b785-704a-4f02-b467-d682b278135b"
        },
        "item": {
          "id": "9d1d25cc-7fe4-49e9-90b1-3496cd19ba79",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c5df4d42-5e70-4159-85cd-dd5e1d1c08f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dd92fa-7905-46cd-b291-1001d9426d1c",
        "cursor": {
          "ref": "2eeb5e87-06d4-4311-93a5-445d3c36ce66",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4ad2498b-7779-4e0c-bec7-18be08dd73e2"
        },
        "item": {
          "id": "d2dd92fa-7905-46cd-b291-1001d9426d1c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2bef6895-c18f-49de-acda-c492aa78d872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d6f3fa-6efa-4829-a001-3bde27c91909",
        "cursor": {
          "ref": "cef4d3db-2dca-4e02-8b45-06a645555a7b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1a4f54ee-9b65-454c-b8e5-d6e696b08551"
        },
        "item": {
          "id": "a9d6f3fa-6efa-4829-a001-3bde27c91909",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be5641f0-0db0-4394-8bdd-6b4947c073c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9d46bd-fdf0-43ca-9413-db9843878756",
        "cursor": {
          "ref": "4b11340a-c0ae-4b08-82ca-f901a9518e94",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ff142a42-3056-4f11-aa32-a90041f1062d"
        },
        "item": {
          "id": "aa9d46bd-fdf0-43ca-9413-db9843878756",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d7de95d7-8e5b-4a41-904e-af9fa56cdca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30b33f8-d491-4b79-85bf-967dcf366dcc",
        "cursor": {
          "ref": "a4881b02-9ee7-46c9-a51a-ee1cec290927",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e2240be1-174c-4a1d-b337-e46c05924d2b"
        },
        "item": {
          "id": "d30b33f8-d491-4b79-85bf-967dcf366dcc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "972a303a-b3d0-4526-a8e8-d0339b48c906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769494cf-6959-4176-b548-57289dd47c68",
        "cursor": {
          "ref": "aeb0bc02-dd3e-403d-9a7c-0c09ecb827ec",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "47c6ae0e-6e6a-415f-b305-3b3848b9145d"
        },
        "item": {
          "id": "769494cf-6959-4176-b548-57289dd47c68",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8d30c299-6187-44de-a01a-dabc1187a745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c67312-6733-4dd3-ab91-570d991de947",
        "cursor": {
          "ref": "71ea334a-ec0a-4845-9e5a-1ea826ff771a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5c5e6991-0d52-4e42-b7fb-75e8c8bfb8bc"
        },
        "item": {
          "id": "b0c67312-6733-4dd3-ab91-570d991de947",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "105c5363-c7b7-450b-989a-e58406de7517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1233d0e6-412d-46cf-b268-3c204ecdbe05",
        "cursor": {
          "ref": "b1fb5604-673f-439f-a7df-bc9de842063e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "221e5c5f-5af8-4d80-8821-5f63aac56c0a"
        },
        "item": {
          "id": "1233d0e6-412d-46cf-b268-3c204ecdbe05",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e0fd1596-f2c0-43bb-88a7-939d9ff984b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a515975-c360-4d28-9e85-d662ca7174f2",
        "cursor": {
          "ref": "26b37bfc-b7f8-440d-a59b-12d2f88c63df",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "db6a10ef-a5fe-4afe-902b-c097245bf35a"
        },
        "item": {
          "id": "4a515975-c360-4d28-9e85-d662ca7174f2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ae9902ca-f453-408b-b0c3-50a20ab34107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f364ca-45ca-44f3-8133-f2c6d15a1681",
        "cursor": {
          "ref": "0db9a086-c4e3-4e39-854e-7070867bc0fc",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "60e552bf-1a2e-4731-bfea-e6aac2c5e8ae"
        },
        "item": {
          "id": "c1f364ca-45ca-44f3-8133-f2c6d15a1681",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4f520d39-ee49-4d53-98af-94f7e4f3106c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1ee396-4a92-4235-961d-559e24c98960",
        "cursor": {
          "ref": "b3b032d8-130d-4b9a-96a3-5c2f00d09414",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "602b31b6-53c9-459a-83a1-e69de20fd1bf"
        },
        "item": {
          "id": "dc1ee396-4a92-4235-961d-559e24c98960",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c34e271d-6f7e-4d5f-ae72-718e8fd12d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765af4b4-0935-4643-adfc-872d77c8c2a7",
        "cursor": {
          "ref": "d815ba35-a844-4ce6-8785-b691a714771f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e00c2f94-e931-4851-b082-43d9085d8511"
        },
        "item": {
          "id": "765af4b4-0935-4643-adfc-872d77c8c2a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2646e282-2333-4739-b691-b462a4e1fe86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc7aa0c-2e40-4523-9d74-9c441d8c832f",
        "cursor": {
          "ref": "c3b58bc5-d215-44fe-96c2-1a076598f0a9",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9ebc11e4-2046-4450-8b5d-140778336e28"
        },
        "item": {
          "id": "cfc7aa0c-2e40-4523-9d74-9c441d8c832f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2fc0f450-201e-4261-957c-0d923c63b798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4866ea-a740-4e33-a0d0-89bded7cb326",
        "cursor": {
          "ref": "8039982a-cafb-42ee-a56a-732a93f8225a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "08a37807-8609-447a-b765-85484ea60bf6"
        },
        "item": {
          "id": "9f4866ea-a740-4e33-a0d0-89bded7cb326",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "453ec289-4576-4c6c-9a89-7a4cd4b1a569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675767a8-48c4-402d-b463-3e37dc9029ab",
        "cursor": {
          "ref": "52c516d4-4dbe-4802-a3a3-c5d17f4cd142",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "69633108-4090-4903-ac44-63736afce89d"
        },
        "item": {
          "id": "675767a8-48c4-402d-b463-3e37dc9029ab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a03ff1e7-8042-44f0-8ec0-bf848ba4277e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ba263b-d5ef-4ed2-9039-c8090900603a",
        "cursor": {
          "ref": "5d5ee20b-2d5d-4302-85e2-e5d2fc347899",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fd00e586-6a1d-44a8-9765-516ea168ecde"
        },
        "item": {
          "id": "c0ba263b-d5ef-4ed2-9039-c8090900603a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ff5b9c79-ef1a-4e55-b6b3-71605440add0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc782a52-c479-4098-b8a9-6d00516ba3a2",
        "cursor": {
          "ref": "91f2f594-9f74-466c-9eeb-d8bcc3e575c1",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "87830ef9-e168-49e7-9df1-50c7015fe12e"
        },
        "item": {
          "id": "bc782a52-c479-4098-b8a9-6d00516ba3a2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "21d60c03-1c97-45da-ad81-b0d9fd797b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a1d490-12ab-404e-b4ac-7bc855abacbc",
        "cursor": {
          "ref": "92358352-bd83-4e86-8005-c99be4b6ce4d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b6112949-5e1e-456e-8d75-3b875ae4cc00"
        },
        "item": {
          "id": "d6a1d490-12ab-404e-b4ac-7bc855abacbc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d65f64a6-b961-436e-82f4-a9643145cdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0cad9b-c66d-42a2-9535-6260abb9b9b1",
        "cursor": {
          "ref": "26f9a4c3-3a73-4350-95c0-2da34ffd9f46",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4ef34a2d-4bff-42b9-9dfa-dc89aa81ce39"
        },
        "item": {
          "id": "ba0cad9b-c66d-42a2-9535-6260abb9b9b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8bc0142c-33c4-48ff-be5c-471fca7dbecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfddfc6-cb0e-49be-aea8-f1045f5e99e7",
        "cursor": {
          "ref": "266e464f-7e55-403d-8067-683bd96a1911",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cfbc4d56-0468-4b90-aab1-f1a2abc9d181"
        },
        "item": {
          "id": "ccfddfc6-cb0e-49be-aea8-f1045f5e99e7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bab8a3b1-54ff-4030-acc2-5d06b61db938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e827c84-da18-47ad-9d80-bb604a4be145",
        "cursor": {
          "ref": "fcdeb0bd-5537-4f47-8911-da506c5736fc",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5f363d4e-78e4-4a2d-8f14-bb498457c720"
        },
        "item": {
          "id": "5e827c84-da18-47ad-9d80-bb604a4be145",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cc3781e7-d964-43f2-bb69-6440ccdd70a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d760d2-5f84-402b-bdab-ebbfc06949d9",
        "cursor": {
          "ref": "ad89d61d-908e-4340-b18e-a67fc932b5b8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7d2202e9-dd9a-4216-b0ce-fbf6aa9fcfe0"
        },
        "item": {
          "id": "f0d760d2-5f84-402b-bdab-ebbfc06949d9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0bac5d1e-568b-4c70-ab8f-f913a7cfbb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aef48e1-521b-499b-9b80-8e25bd588546",
        "cursor": {
          "ref": "6f9e4e08-c206-4329-bc5c-2b9be13c34c1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ebb72173-c970-40ab-b295-691914731198"
        },
        "item": {
          "id": "1aef48e1-521b-499b-9b80-8e25bd588546",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c33ad2bf-0a5d-4e7d-9eb7-c61147f7c18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bf26af-3039-4bf4-aa12-3a1c7f48e3a3",
        "cursor": {
          "ref": "9601d1d6-7459-49c5-9e8f-b6a85773f537",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3d7a5a6c-0ea4-4a3e-97b9-991711e56f04"
        },
        "item": {
          "id": "82bf26af-3039-4bf4-aa12-3a1c7f48e3a3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1575a035-4079-41bb-a576-ebb7326afca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493ae091-d597-4f83-a698-936370d48662",
        "cursor": {
          "ref": "48dec983-d39b-447b-b310-98966e0e4385",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "348b8752-8d54-4080-bd1f-467c62cebe48"
        },
        "item": {
          "id": "493ae091-d597-4f83-a698-936370d48662",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "caa41f8f-0c8e-4d16-b034-1c1b369e9d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eec4934-2e55-4195-b6e5-ee6c77bc4b58",
        "cursor": {
          "ref": "7e78cbe7-61aa-4963-9423-b38715ce33aa",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2faa96ab-902f-48a2-8f3e-9d4488d2f94b"
        },
        "item": {
          "id": "4eec4934-2e55-4195-b6e5-ee6c77bc4b58",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7a687f57-1f0b-46fe-8fff-d4992e064857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa0f6f9-973b-4872-b0a8-87422f8bd723",
        "cursor": {
          "ref": "f45ef65f-1f9f-48da-8eef-ef53ec626128",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b3c9d056-7785-46c3-bc73-f75486d939d3"
        },
        "item": {
          "id": "4aa0f6f9-973b-4872-b0a8-87422f8bd723",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "58e58158-f40b-4da1-92f0-9b9aaecadfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f03e4f7-939a-484a-8398-7c94e4669ccb",
        "cursor": {
          "ref": "68f4ac79-409f-431b-9ec8-f56fb3e24aa3",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6364dc57-3fb9-4b6b-8e84-117087376548"
        },
        "item": {
          "id": "3f03e4f7-939a-484a-8398-7c94e4669ccb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6158c04f-883d-4c7a-bc77-11024c25c1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b414ed31-6aa1-4468-aabd-8ad7ea797543",
        "cursor": {
          "ref": "62b1126f-2e84-4832-a8b8-21b789b98a33",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "12f536bd-f644-4736-946b-fa411ab4d728"
        },
        "item": {
          "id": "b414ed31-6aa1-4468-aabd-8ad7ea797543",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "aa0ae6cf-8a04-4574-a0af-3d15f9df1f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7146b9c7-494c-4837-aabc-ab5077174d70",
        "cursor": {
          "ref": "2e93f3da-b128-4d04-b5de-f07b641f57bb",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1bc4da0b-6b10-4a11-841e-4e41306a5dad"
        },
        "item": {
          "id": "7146b9c7-494c-4837-aabc-ab5077174d70",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4a68682d-198d-436f-a657-ebd50a8cd2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991d85bc-f70c-49c8-aabb-8a10a170b805",
        "cursor": {
          "ref": "fcb4a2b7-bf6c-4786-b921-eaa716ee7480",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "85a2f044-62ab-49ca-8cb1-8222a77f4675"
        },
        "item": {
          "id": "991d85bc-f70c-49c8-aabb-8a10a170b805",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "00336dfb-93e3-4417-93ce-4a9ce1763668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccce5a6-b03a-4d2c-b163-b30c7b2fd068",
        "cursor": {
          "ref": "0b38ec88-9038-479d-81a8-b14c727463ca",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1b18dcfd-28ec-4a74-8570-35f2f5da5ab5"
        },
        "item": {
          "id": "5ccce5a6-b03a-4d2c-b163-b30c7b2fd068",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "96ef9283-c47f-4a5d-a72b-2a5987f0bce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bfa384-28d8-4eb8-981f-ca2f1a30821d",
        "cursor": {
          "ref": "db859179-05e0-43a2-9637-2b2f5eab103f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "62a3b8b6-56c5-4a68-8ab6-dbda72c3665c"
        },
        "item": {
          "id": "c9bfa384-28d8-4eb8-981f-ca2f1a30821d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f65f80dc-be9d-483e-a6e9-c138edf0dc8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6a9d6f-8c5f-4afd-b2b2-e995c7a195ea",
        "cursor": {
          "ref": "c7e8d625-0218-4764-bd71-6e3957fffae6",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1f95bf7d-23be-4767-aac7-8bb9aec86b7e"
        },
        "item": {
          "id": "bf6a9d6f-8c5f-4afd-b2b2-e995c7a195ea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "43c9c206-d294-405f-bac7-e05a7c3f23e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db36af42-953e-4c19-8f93-2cd2da11c4f4",
        "cursor": {
          "ref": "615aff86-5daa-4050-be61-95838b308909",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bf400aac-ef8d-4541-90e3-de5069e1aa55"
        },
        "item": {
          "id": "db36af42-953e-4c19-8f93-2cd2da11c4f4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a95116f1-4174-4ef6-903c-afc4cef4fa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3accc600-7820-4d65-b37d-8164fa9b3bfd",
        "cursor": {
          "ref": "59318505-6a98-4eca-ac6d-fe4db547ab4b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "44ba88f4-41c1-417a-b885-6fd92f728d6b"
        },
        "item": {
          "id": "3accc600-7820-4d65-b37d-8164fa9b3bfd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "39c6645f-b5a7-4014-91b0-3d520cec632b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb08c5c-9dd5-481a-8032-13a0f5c56deb",
        "cursor": {
          "ref": "4f1f2579-b07b-47c8-8ba2-dd1b7bddaee1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8f150252-7004-4d88-a831-6f859828e031"
        },
        "item": {
          "id": "ccb08c5c-9dd5-481a-8032-13a0f5c56deb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4b703f85-ceda-42c1-9bb1-637980c6e016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d3f9f8-fe35-4a48-ac4e-147bb910fd54",
        "cursor": {
          "ref": "ce4a3b86-45a1-41fb-963f-d9a4b9a79589",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7b3cf239-36dc-41ff-b071-368a26b75a29"
        },
        "item": {
          "id": "91d3f9f8-fe35-4a48-ac4e-147bb910fd54",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "863e87df-0926-441f-b25a-6a2f3e6133d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555a5f35-320d-40c9-bfc7-ff4db0e6f690",
        "cursor": {
          "ref": "96c0ee69-51d0-47a9-834d-bf3f49ea076f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2555a991-e257-4c2d-a474-d188a1bd5631"
        },
        "item": {
          "id": "555a5f35-320d-40c9-bfc7-ff4db0e6f690",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "15297b29-f6ec-4c79-9fe9-5b8aec2634b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131d4415-1587-45af-b280-c0aa455ce246",
        "cursor": {
          "ref": "d5013a92-7ddf-450a-a2cb-8617ce719ae7",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2087b615-7328-4cd0-9122-c156d3ad7f1e"
        },
        "item": {
          "id": "131d4415-1587-45af-b280-c0aa455ce246",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e3225af8-cfa1-40d2-8575-c8d90f3bbbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dcb2d4-4164-46ca-8438-694e68c1e83f",
        "cursor": {
          "ref": "9046e09b-2d4b-424c-a05d-e9c71adefbb2",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "640f7420-a673-49a4-bdb0-f2b7bcdc8dcb"
        },
        "item": {
          "id": "e9dcb2d4-4164-46ca-8438-694e68c1e83f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3b3e4d1b-3078-4fa6-8f1f-bfa5ea242242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52709bbd-996c-4ef8-8104-9f9437f4727f",
        "cursor": {
          "ref": "233f850e-5eae-4610-a240-527b86d3986a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "11cbed04-61f7-4e38-8890-9c45d3266039"
        },
        "item": {
          "id": "52709bbd-996c-4ef8-8104-9f9437f4727f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0a2148db-2dfc-43f8-ba5f-b441fe4bce8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e8a78c-0af6-4034-8000-2be425c9949b",
        "cursor": {
          "ref": "5cfcabe3-1391-42f2-bf57-8619e386fa59",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "52cbe3b3-1c04-45d3-b163-2d8d54be9c3b"
        },
        "item": {
          "id": "60e8a78c-0af6-4034-8000-2be425c9949b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "78a14a79-65c1-4251-a088-4c70ffc782d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bb5199-c733-41d8-b959-f36ae4d99d90",
        "cursor": {
          "ref": "fffca595-dc94-499f-a98f-f115c4608192",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0370d885-68e4-4bb8-adac-2a56093da345"
        },
        "item": {
          "id": "e3bb5199-c733-41d8-b959-f36ae4d99d90",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4b1512f0-c954-4cd5-a26c-8a29ae0f23b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50168538-a433-4412-9f63-7b30085c0484",
        "cursor": {
          "ref": "46b4fd85-46aa-4b34-bbe2-4bb8753717f0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fc440f41-f2d4-4547-be3a-ffc54a6ce3cb"
        },
        "item": {
          "id": "50168538-a433-4412-9f63-7b30085c0484",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1298d480-f1cf-40f4-879d-79cc0d3120db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67251f45-98c3-4beb-abf4-21660c532d2b",
        "cursor": {
          "ref": "2e9c5c6f-2de7-4fa2-ad19-fc448ec485a1",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5fd886c6-9caf-4b07-b7e3-380b10dce861"
        },
        "item": {
          "id": "67251f45-98c3-4beb-abf4-21660c532d2b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "92375592-f6cb-4957-9b3c-a1689521d358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1e4185-c764-48cf-bd49-f2eed20d0317",
        "cursor": {
          "ref": "e3778bc0-62cf-469e-ae26-556f99946829",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9c4c42f1-2ae7-43bd-94d7-b4c73c16e324"
        },
        "item": {
          "id": "5b1e4185-c764-48cf-bd49-f2eed20d0317",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f854d9b4-55bb-4a5e-aae6-c9f43e189d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a63bb7-95b2-4523-83aa-a780a0158013",
        "cursor": {
          "ref": "d6905a6f-8848-47ba-8ad7-5cd87d0e8924",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d9f53e3e-5b80-4bb3-a381-abaa48e0f1d9"
        },
        "item": {
          "id": "93a63bb7-95b2-4523-83aa-a780a0158013",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ba174a2d-d549-41a8-b364-27344145a0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bb84b3-158b-4ec7-a0ae-cfca68b40caf",
        "cursor": {
          "ref": "aee5aa7f-8e57-45d3-9b6b-c514ac393c12",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8b2a4863-2ffd-4f73-baa5-c805e3db3723"
        },
        "item": {
          "id": "f2bb84b3-158b-4ec7-a0ae-cfca68b40caf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "79f6d7c0-4ac5-4ff6-83c7-b8b93d4bb9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc219d57-4cf8-431f-9dd1-d3ecc42e5f0e",
        "cursor": {
          "ref": "f8070d60-7c23-41f7-a524-ea0491d1778d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "38b3b603-3ac6-4ab6-b286-b23b0229c66c"
        },
        "item": {
          "id": "cc219d57-4cf8-431f-9dd1-d3ecc42e5f0e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "80f4189e-8a11-48dd-8e78-0fc26b223797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67b5e97-1a3b-4018-b3ba-8d3e8b83e4ff",
        "cursor": {
          "ref": "6760ac66-71c6-4ed2-acd7-396c2908dc78",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7e268356-fb69-446b-ac97-c3fea4227fb9"
        },
        "item": {
          "id": "c67b5e97-1a3b-4018-b3ba-8d3e8b83e4ff",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7a11142b-651f-4f89-b1c9-050831dbcd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d3320e-0fd8-4f46-9501-9fef84e34bf6",
        "cursor": {
          "ref": "388e8dcd-3601-4f38-b918-1090272d93a0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ee6c27ee-6764-47c6-aff3-2df2445e48e2"
        },
        "item": {
          "id": "d6d3320e-0fd8-4f46-9501-9fef84e34bf6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7d514a0e-7d22-4fa4-818f-f8d0a9bc4565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bb8d2d-6f2c-479f-bbaf-50e8e6791f38",
        "cursor": {
          "ref": "e029316f-b1f9-42de-859d-26200e8b740c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2e4b8db7-42a4-4b3f-be24-90779ea237df"
        },
        "item": {
          "id": "63bb8d2d-6f2c-479f-bbaf-50e8e6791f38",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "614bd667-bdbe-4ee1-b859-de31dba1ba31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae64a22-e500-4a35-9c18-9bfdaaf4a46c",
        "cursor": {
          "ref": "b96947cd-30e6-42d9-8716-009f39ebb228",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3ae85790-a264-42a2-bcc8-43d64c2159be"
        },
        "item": {
          "id": "7ae64a22-e500-4a35-9c18-9bfdaaf4a46c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cc5d5557-b2e1-47bb-957b-520dc1d6637a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b47222-9ec2-4025-8d18-d37e08dd629b",
        "cursor": {
          "ref": "2ebe7c75-1ef3-4fda-b697-bb947e9a475d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6e8c1d4c-b997-4990-aee7-45d7c8dfbd93"
        },
        "item": {
          "id": "06b47222-9ec2-4025-8d18-d37e08dd629b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "189d9b85-372f-4494-92ad-d902cec9af99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21259d1-fb01-4c8b-86fa-f930eabc50a1",
        "cursor": {
          "ref": "d8be4fcd-ff30-4838-9af5-4fb05ca949b1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "253ba889-2294-4193-94ef-a6f70e2c4e15"
        },
        "item": {
          "id": "e21259d1-fb01-4c8b-86fa-f930eabc50a1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6e0c99f4-899a-4bbe-9c63-9df8acadf41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb38042-8e48-4102-ac65-d75964466438",
        "cursor": {
          "ref": "e967c993-0332-41b4-a5f5-3906dddcaceb",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "76357e66-2186-4a9a-bfd0-b60360d78570"
        },
        "item": {
          "id": "ceb38042-8e48-4102-ac65-d75964466438",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c3ca2648-f111-4bbf-88b7-1c97e53bb7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58ce5b4-5c6f-47f4-8253-beeda03cd8fb",
        "cursor": {
          "ref": "767eda48-02fe-4aba-a617-de05d59f8bf3",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d4cd3ddb-91aa-4fc6-85a9-41f2a47734c9"
        },
        "item": {
          "id": "e58ce5b4-5c6f-47f4-8253-beeda03cd8fb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "50b574de-5a5f-4190-a59d-0cbb4238717b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0db308-d9f5-41d8-bfcf-425b4b7f8a6d",
        "cursor": {
          "ref": "625bef18-8ebd-4c9d-8598-7ce5969ba794",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "40036dae-d33e-4072-b2ef-02bb353cad96"
        },
        "item": {
          "id": "db0db308-d9f5-41d8-bfcf-425b4b7f8a6d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c43f5a79-4833-4d56-bb88-e82e7dfa135c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29229a8-43f7-4deb-aa68-e9cbb8512837",
        "cursor": {
          "ref": "9b7bb199-378d-4076-9fdd-65c2a0f405e8",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d1b7d553-de34-4eeb-9f2f-d9556b3d5f8f"
        },
        "item": {
          "id": "f29229a8-43f7-4deb-aa68-e9cbb8512837",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ea6bc1ea-881b-4aaa-9ac8-0851d9453443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cece81cf-cd00-42b8-b4f1-b95102ada530",
        "cursor": {
          "ref": "b21bda1e-d0fb-457d-9d47-8e1d2456f19a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ad0b4d7d-0b3b-4f03-872d-5ea071f3dd73"
        },
        "item": {
          "id": "cece81cf-cd00-42b8-b4f1-b95102ada530",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9370747c-34ed-47bb-a4dd-41dd0363f61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c86e82e-21b7-4b98-a4d9-9df9db48c446",
        "cursor": {
          "ref": "7f1c456b-7bb1-4293-9a8c-e514a2364405",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "61724df1-6f16-45a9-b1ed-73effab67203"
        },
        "item": {
          "id": "2c86e82e-21b7-4b98-a4d9-9df9db48c446",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "df7e188f-ce32-41dc-80c8-1147f6cd323a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c68f97-2c6c-4240-916f-70d60147715d",
        "cursor": {
          "ref": "89ccc00e-8d3a-4e8e-ba02-b68b968a68f9",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fb49e4c7-8026-46b8-ae60-0ab9f226da44"
        },
        "item": {
          "id": "80c68f97-2c6c-4240-916f-70d60147715d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c6c0467f-eeca-491b-8ee5-31c2b80c83db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fb7ec6-86b1-48bc-90c6-79e58fe03c0b",
        "cursor": {
          "ref": "c869d5f0-3f1c-4f52-b0cb-fc20d6379f4c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7efe8889-045b-4da4-bd00-d04575bfc2c8"
        },
        "item": {
          "id": "37fb7ec6-86b1-48bc-90c6-79e58fe03c0b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5ab34367-a4c0-43b6-a082-b5df6b5c5a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500f0237-ee8b-47e8-8016-c9d360a6a8d9",
        "cursor": {
          "ref": "6a3aa520-80de-4bf8-b27a-553909570922",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "929bde89-b08d-43df-98c0-a077290e0b98"
        },
        "item": {
          "id": "500f0237-ee8b-47e8-8016-c9d360a6a8d9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "03818e00-699c-449c-b28f-7bad6d2649c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcb4224-b5c3-418d-8509-ee6f5959e8d8",
        "cursor": {
          "ref": "fa322cd8-e48c-4d3e-9991-4286ed832e8b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "31ed7731-4da2-4c59-acd0-1002c2f9d6c5"
        },
        "item": {
          "id": "fdcb4224-b5c3-418d-8509-ee6f5959e8d8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8913d106-0c07-437d-ae8e-51468f183422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4764d8cd-5ee5-4d02-b3a6-cbf4c9b79b2f",
        "cursor": {
          "ref": "fb03a7f3-4c0e-4e9d-a69d-81c68d6a1e7d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d2a187b9-afc4-48e1-a020-16c971bdcebc"
        },
        "item": {
          "id": "4764d8cd-5ee5-4d02-b3a6-cbf4c9b79b2f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "20874608-4840-4ced-a389-1553ccf8d21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e018fb-92dc-4353-a4e0-c6fd8e0bbe63",
        "cursor": {
          "ref": "227b8b52-3de2-4ee4-b3a0-c08a40bea808",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "99197511-d74b-478e-a53a-9d234b114a7a"
        },
        "item": {
          "id": "99e018fb-92dc-4353-a4e0-c6fd8e0bbe63",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7a92632e-a68d-4f9c-950f-9966b4c5d8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7172b5-3b44-4def-b95b-b12d5c3b65ba",
        "cursor": {
          "ref": "0c6256a8-5a81-462c-a0e9-8db118007d2e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b91e9044-85f2-45d0-b3a3-d972c6b91208"
        },
        "item": {
          "id": "8a7172b5-3b44-4def-b95b-b12d5c3b65ba",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "54d48bb7-cc1e-445d-91ef-aa8bc4717eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8c860a-c360-48c5-8e2d-4e3cc9065856",
        "cursor": {
          "ref": "08ff0bd7-8321-4d96-a9c8-d55d5b3b549b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5cd796f7-974e-43fd-9cd7-714f155aefb4"
        },
        "item": {
          "id": "8d8c860a-c360-48c5-8e2d-4e3cc9065856",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "546b3199-cbaa-43cb-8270-29acf2bab6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f7dbe3-22c3-4576-af7f-1a6d2ebfbb07",
        "cursor": {
          "ref": "83dd9e3d-e8ce-4971-ac42-a0257d461645",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3ede28b9-114e-433f-8302-b9be55778a3e"
        },
        "item": {
          "id": "29f7dbe3-22c3-4576-af7f-1a6d2ebfbb07",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f9a589d6-768b-4abd-b069-b2869a8b606e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8dfa06-49fc-425c-887b-88cab127a25f",
        "cursor": {
          "ref": "8be0b7e3-cd58-432e-b6bc-daea327a1ba3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4fbedea6-ccfe-4de0-a1b2-11d4d8fce724"
        },
        "item": {
          "id": "0e8dfa06-49fc-425c-887b-88cab127a25f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "454b3a86-0054-4fcf-91e7-471e6918a8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab99dd2-c047-4d5e-8f4f-8285d36a8bd1",
        "cursor": {
          "ref": "fd8854ae-8443-483a-b685-f6569ab16714",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "668ed139-70b3-4a5c-b2db-4a778a23977f"
        },
        "item": {
          "id": "4ab99dd2-c047-4d5e-8f4f-8285d36a8bd1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "76d0d295-d1e7-403e-8df9-1328d1c644a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421d711d-362b-4665-9efb-939ef23a5654",
        "cursor": {
          "ref": "963e3a55-b290-4a75-a160-ca1aff5048a9",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3c89a595-2519-4540-b19e-4c3753cc300a"
        },
        "item": {
          "id": "421d711d-362b-4665-9efb-939ef23a5654",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ec15f554-8be8-4a15-a660-7e9eb008069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dfa86b-b1cd-4b4d-b89c-419483e09689",
        "cursor": {
          "ref": "bcf5f34f-8066-4d3b-bad4-08e654b947dd",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c26c97e2-ca36-4cc6-81c7-a1a99c69c9b3"
        },
        "item": {
          "id": "64dfa86b-b1cd-4b4d-b89c-419483e09689",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d1693685-bd36-4cc4-b879-9dccf82d48c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c82cea-4636-4ae7-9f93-fcb8ba5f5499",
        "cursor": {
          "ref": "9937197d-7799-4c6e-82c2-2812fdefb391",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "672b461f-b5ad-4008-89c6-c3abbe07bc6a"
        },
        "item": {
          "id": "f7c82cea-4636-4ae7-9f93-fcb8ba5f5499",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e52d9bdd-0ba8-49ec-8ce2-398bbe26b2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3ee126-b203-4378-bf58-9f54a6861214",
        "cursor": {
          "ref": "c8f41fa3-356c-4f9c-897d-823cc945a00e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "36e09bcb-ba13-44fd-9b98-3c0d3fc61b15"
        },
        "item": {
          "id": "7e3ee126-b203-4378-bf58-9f54a6861214",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "af8081bb-616c-4da9-8730-32acfcede8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81be393f-0980-4dfa-90c1-de0fbd31b516",
        "cursor": {
          "ref": "3aa292ce-6a45-4a22-82f1-b8cd3cfcee3f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a8624264-8f36-4b5d-ac38-f87245946717"
        },
        "item": {
          "id": "81be393f-0980-4dfa-90c1-de0fbd31b516",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "81c55753-b61f-4a90-b09c-59165925c047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeecaf8c-925e-4c1f-9d21-fe9064010d07",
        "cursor": {
          "ref": "2407be1f-7ae4-4c8a-ba4d-6dbe9b7ee8e7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d60d079c-153e-4af5-9e98-9cc2115a88db"
        },
        "item": {
          "id": "eeecaf8c-925e-4c1f-9d21-fe9064010d07",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f05ccbb6-bed2-4e54-b75f-35f02af1669f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f0e73f-d62c-4cb4-ad10-ae3b580d49ba",
        "cursor": {
          "ref": "59f52786-0fc9-4bff-a90c-4a327ffd39af",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9cb645e2-b89b-40a5-b856-c99655aa5bdc"
        },
        "item": {
          "id": "43f0e73f-d62c-4cb4-ad10-ae3b580d49ba",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "eb9dd2a0-6798-4e95-b33a-56a6d6277491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7267a55-2e38-4238-9150-9c227ae93bdf",
        "cursor": {
          "ref": "f79330af-9f0c-430f-aae6-18121df4a24d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a3e09191-ec52-4c00-a829-cb68701bb420"
        },
        "item": {
          "id": "f7267a55-2e38-4238-9150-9c227ae93bdf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ae084ead-3de1-4193-baff-5e2fe137f7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b44083-686c-4eaf-834d-e969b855f1ff",
        "cursor": {
          "ref": "877b351a-a190-41b5-9de5-69199e147d25",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eb23d247-ca25-4f47-a309-0541b24ae7c3"
        },
        "item": {
          "id": "06b44083-686c-4eaf-834d-e969b855f1ff",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6908106d-52c7-4518-a87c-3c19791ddc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28eb3da-5fcf-4619-a8dd-6283d76ef3f1",
        "cursor": {
          "ref": "d634e6ec-e4db-4629-9c60-a89ba3a0cef3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ea578041-8935-442c-a339-da850c5146a3"
        },
        "item": {
          "id": "f28eb3da-5fcf-4619-a8dd-6283d76ef3f1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3df664ef-f4f7-4bbf-a00d-67122a9a4aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb0a3c4-426b-4e5d-b4f5-2e23696f46b7",
        "cursor": {
          "ref": "bc4bce64-f343-4e85-9ebd-c901fedfb450",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7b004792-004b-4fa5-86da-870b4fe82c9e"
        },
        "item": {
          "id": "0eb0a3c4-426b-4e5d-b4f5-2e23696f46b7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a56ad602-67f1-4097-b915-b1650e5e0055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5073c10e-2a09-46d3-a777-f17d5cc128be",
        "cursor": {
          "ref": "6638f31f-d858-4038-b938-2dec0139761b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "04a37042-7e15-4510-9b86-539c533aa536"
        },
        "item": {
          "id": "5073c10e-2a09-46d3-a777-f17d5cc128be",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fab72da4-0049-482f-aa48-7af4606d6b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e95e69-27e9-4285-aa66-f881078ec900",
        "cursor": {
          "ref": "61f6d714-85c3-4859-a803-0a52c0ba8b81",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "151feced-c3a0-4a0a-841e-df4d5be1ab37"
        },
        "item": {
          "id": "89e95e69-27e9-4285-aa66-f881078ec900",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8d144840-af4d-43b8-9061-7a258dc5309e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd81186a-39cf-4239-ac28-f686e34dd392",
        "cursor": {
          "ref": "b2bc0877-bfda-4998-bc44-1b6123373b32",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "78566365-c882-4f1e-aef9-6e1fed58e86d"
        },
        "item": {
          "id": "dd81186a-39cf-4239-ac28-f686e34dd392",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "92934c7a-1834-4c70-a426-5165e1944c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2941aed1-65b1-4446-bb81-d1c742212fc0",
        "cursor": {
          "ref": "6059a17a-a450-4dd8-8fba-c297586cee43",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d8e83e5e-8da9-4bb4-a049-a6c724e0ea22"
        },
        "item": {
          "id": "2941aed1-65b1-4446-bb81-d1c742212fc0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f573b90f-21fa-4ee0-91c6-09a6a60e6599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f73950-4b14-447c-b011-090df2cabafc",
        "cursor": {
          "ref": "8beaae33-04a6-4964-beea-15c352acdbf0",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f2865983-06bd-401e-87da-7348f8e9b7db"
        },
        "item": {
          "id": "a6f73950-4b14-447c-b011-090df2cabafc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0a405dca-cd63-4a5a-a131-1b159b7d9725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df37aa8-2b6a-4cf7-960a-007c76a0a819",
        "cursor": {
          "ref": "71e35133-d9e7-4e7f-b914-c7130cf943c0",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6d7b4168-6a6d-40de-bbb6-c73166da4b3a"
        },
        "item": {
          "id": "5df37aa8-2b6a-4cf7-960a-007c76a0a819",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bfb46fb4-523d-4030-a436-9a04081f8059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0033d27b-7220-42de-8bf8-3788689b35c7",
        "cursor": {
          "ref": "2c3bfcb6-8780-4a9a-bb41-0ad874682b4d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b61545ab-cf65-4de8-a17f-c51555bae83f"
        },
        "item": {
          "id": "0033d27b-7220-42de-8bf8-3788689b35c7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "da8137d8-cd6e-4ad9-a0ed-c376988d4959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cc673b-05a6-455a-818b-7974920b05cd",
        "cursor": {
          "ref": "3a1161ce-3aef-4aae-a6ef-3561eb5312a3",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "077a42af-da81-4504-97f2-fc7b0408fc61"
        },
        "item": {
          "id": "10cc673b-05a6-455a-818b-7974920b05cd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1fefa07a-67ed-40d9-a4fe-2f13733ee468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae49ac5-9d06-4430-b9b6-8573096932ec",
        "cursor": {
          "ref": "4252f94c-fc40-44f9-9b62-b263da78c389",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2302a908-937d-4276-874e-cddc5da38f6c"
        },
        "item": {
          "id": "fae49ac5-9d06-4430-b9b6-8573096932ec",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2154fb75-b934-4c27-aea7-8c19214c8b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e521b6-0d6c-4064-a18b-59359a3c6e97",
        "cursor": {
          "ref": "290d29dd-1f85-46e1-ace0-487153817a0e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c5e1c920-5a67-44b8-91d6-926065f9c5b8"
        },
        "item": {
          "id": "22e521b6-0d6c-4064-a18b-59359a3c6e97",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "759bc46b-4860-4850-8c78-795345810d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9b7d3f-2055-4ec9-a318-9bbf497e0e6c",
        "cursor": {
          "ref": "2c233606-2b38-45e6-bab4-29cf254f0c50",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3ee5a85c-f57e-4c9d-a254-e95156af73e7"
        },
        "item": {
          "id": "cb9b7d3f-2055-4ec9-a318-9bbf497e0e6c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "aa1f2401-4221-4355-bce5-4c495ea877f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2494425f-a91c-4b32-b7ed-f1e7b1e672eb",
        "cursor": {
          "ref": "e1bd1694-5690-4cac-9433-b2d61a2ed054",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c3747cb9-63c4-4613-8c03-bf20bfa0080d"
        },
        "item": {
          "id": "2494425f-a91c-4b32-b7ed-f1e7b1e672eb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "76289381-22b1-45d7-8dd2-8b772113e7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469def93-77cf-4fe8-98a9-719bd4094f46",
        "cursor": {
          "ref": "c1ca59b2-7284-4e24-9634-760a947e1057",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8ed5685f-f659-4561-ad9d-f554bfdcb6b8"
        },
        "item": {
          "id": "469def93-77cf-4fe8-98a9-719bd4094f46",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "83a44059-f0ed-4505-85b1-8c8ead62ec7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff07a61c-72c8-49e8-88ff-a907d090e450",
        "cursor": {
          "ref": "a668ebed-4de5-4d29-b5eb-ff6c5d8211f6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "64f7ea49-60a4-4a56-a4a8-02f74a77e237"
        },
        "item": {
          "id": "ff07a61c-72c8-49e8-88ff-a907d090e450",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f7cf1f3e-873b-43fb-91eb-91b540468264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fbc43e-f486-4e7d-84ec-51902b28c168",
        "cursor": {
          "ref": "d6900388-7a8d-45a6-a586-428d5914c314",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bec5ce25-868a-40cf-a70e-7d7b4a6aa480"
        },
        "item": {
          "id": "a4fbc43e-f486-4e7d-84ec-51902b28c168",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a6a6a4dd-97d0-42ec-ae19-f8348fe91bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba449d2a-9581-4432-b0ba-a1b65add6595",
        "cursor": {
          "ref": "c1697171-593c-46fe-bda1-9fda66c2449b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b325eae3-39ba-40c0-9d0d-172d08f425ec"
        },
        "item": {
          "id": "ba449d2a-9581-4432-b0ba-a1b65add6595",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ef0e3912-001f-4ac5-9cc7-2791286159bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a05e022-7ab1-4f9b-bb81-b4d85b8f7916",
        "cursor": {
          "ref": "cee31a1a-2042-4fcd-a683-1adb294299b8",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "497e631c-accf-4097-ad16-60c00c5c4eed"
        },
        "item": {
          "id": "4a05e022-7ab1-4f9b-bb81-b4d85b8f7916",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8292907b-2a8d-4f2c-9ec5-b18fa5e7efd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb25ea8e-6f75-42ec-92ed-51c6255eb093",
        "cursor": {
          "ref": "38af64da-29b9-4c4d-851d-8d20abfb65f0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8d982efb-9151-4e2f-8641-ef108cc69c4e"
        },
        "item": {
          "id": "fb25ea8e-6f75-42ec-92ed-51c6255eb093",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "73abf09f-71a5-4170-94d3-a61a67a33805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6df7d4-1410-4723-91d8-2678aafe07b6",
        "cursor": {
          "ref": "5c4ed4c1-490f-4777-90b1-0ba62528fa80",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c95a72d9-7abf-468d-879c-ec283b48e143"
        },
        "item": {
          "id": "4f6df7d4-1410-4723-91d8-2678aafe07b6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0e330ce3-8daf-49f6-a628-14f9a4f6cc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc35a62-1581-49ad-a8e5-6533756d29b3",
        "cursor": {
          "ref": "1591f431-736a-4712-a0c5-1c749457626e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2c4910e0-8b47-4673-8cfc-3988dd53ac1a"
        },
        "item": {
          "id": "7dc35a62-1581-49ad-a8e5-6533756d29b3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e981eb57-ed11-4279-9a24-626a00e3a497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5d68f5-797d-462e-bc53-df1b1892e6bd",
        "cursor": {
          "ref": "6dd91b75-fcef-4e4f-8ba8-9cba9b176701",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f4d9282e-917c-4edb-9a03-e1710f0839ba"
        },
        "item": {
          "id": "9a5d68f5-797d-462e-bc53-df1b1892e6bd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0fa872be-aba3-415e-a565-300bd1b0afc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c149b78-c240-4339-8002-e9f0509857e6",
        "cursor": {
          "ref": "7d83d623-6870-4f39-82ed-a2fdd3db30c5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0e6f9269-344e-48c5-b4d6-2766211e977c"
        },
        "item": {
          "id": "8c149b78-c240-4339-8002-e9f0509857e6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0ede848f-4b32-42f5-9ab0-21858a59aeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f26af8a-b073-4ca4-9cde-002e4cca78ec",
        "cursor": {
          "ref": "e3314a82-1f8a-4c08-aea5-cb5655b4e3cf",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "70e0dbb8-e06a-4c59-bf77-70c999c6f9a7"
        },
        "item": {
          "id": "5f26af8a-b073-4ca4-9cde-002e4cca78ec",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0ec61625-f651-49b6-81d9-e7988edfabf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bba461-748c-4784-831e-3755bb804956",
        "cursor": {
          "ref": "e41de0c3-2f43-4613-b03e-10845f20ca66",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1e8131a4-ecb7-445c-8e40-8dae7705633e"
        },
        "item": {
          "id": "f5bba461-748c-4784-831e-3755bb804956",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1317e470-c69f-4fb5-8ac8-3905ccfc09f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5b7add-a8cd-4a36-ad1e-1452922f0acc",
        "cursor": {
          "ref": "472533a0-ee2c-429c-b833-86e6a5b60d96",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0c839b7a-46d6-46e9-95f2-eea64232448a"
        },
        "item": {
          "id": "9a5b7add-a8cd-4a36-ad1e-1452922f0acc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5b0796ac-9afb-4da8-ad07-802c6d720186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69a9a7e-8b1c-4ade-8ccf-a4189997d3eb",
        "cursor": {
          "ref": "cd2519ee-9728-4eca-880d-17e6b9cc675f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "048d9bbb-b605-4699-b08c-c400f8a680f9"
        },
        "item": {
          "id": "d69a9a7e-8b1c-4ade-8ccf-a4189997d3eb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7e65f8d8-2f49-4006-8332-a323dee79e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a110f58-011e-4b40-a05e-cd79bec52766",
        "cursor": {
          "ref": "91d9c68a-333a-4813-af1a-9fa396e532e4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6fdfed6b-7086-42b6-a6fb-df74cb570c1e"
        },
        "item": {
          "id": "4a110f58-011e-4b40-a05e-cd79bec52766",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c2394bcf-0810-4b84-93b1-7c87496ab489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d38ef21-365c-47dc-a19c-6b37ef520082",
        "cursor": {
          "ref": "1d40e639-58ef-4df8-8665-a617818e99d4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3f982376-e3eb-4476-8084-66914ecc3884"
        },
        "item": {
          "id": "5d38ef21-365c-47dc-a19c-6b37ef520082",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8ab7094d-ce43-474c-9ee1-71e1b2361139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4d12c0-6435-4d3c-a357-9089e86809ec",
        "cursor": {
          "ref": "f439426a-993c-4f1a-a1a3-3c16168f03c7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "af022ac1-f055-4333-8064-bbdb5d4a9966"
        },
        "item": {
          "id": "3c4d12c0-6435-4d3c-a357-9089e86809ec",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a1f98e17-ac68-4cee-8c85-9bed0e1bf7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ffbfff-66b6-4b72-a6c3-ed41f164a7f0",
        "cursor": {
          "ref": "ef902f88-d77a-4aba-85d3-34d74df7e71f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2e1c172d-41b9-4bb7-a39c-049d5183a1c2"
        },
        "item": {
          "id": "57ffbfff-66b6-4b72-a6c3-ed41f164a7f0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0be45ea9-29ce-41ce-bdbc-d72f0fb323c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6a111a-a485-467b-b72f-8f057946ec3d",
        "cursor": {
          "ref": "64c55738-a3f5-4fb4-b3c3-19d8aa905eb2",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e321a977-0258-4cf7-8595-3a83c0ca0251"
        },
        "item": {
          "id": "ec6a111a-a485-467b-b72f-8f057946ec3d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3533259d-8550-4a80-af91-643c74b0ad56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413fab38-5e27-4621-8d87-78e31fa55ed0",
        "cursor": {
          "ref": "2c016a07-7315-4360-ad4b-3e5f8698f803",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d841422d-5f3d-469a-87cc-c9bd32af9c41"
        },
        "item": {
          "id": "413fab38-5e27-4621-8d87-78e31fa55ed0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d44a2c40-020f-4036-9231-40517be8d1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570d4ac8-ff55-45d3-961f-db0566e199bb",
        "cursor": {
          "ref": "303b1c53-e745-4773-87e5-48a8e6567c31",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9e774fff-1265-43d1-bc2c-33b8d9f1c43e"
        },
        "item": {
          "id": "570d4ac8-ff55-45d3-961f-db0566e199bb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "074c7bbb-c8bc-4acf-9c2c-adb6ef072b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ab0706-ae43-4258-a3cd-7eb1372397f2",
        "cursor": {
          "ref": "204242cc-528f-46a8-8f0e-a0819bf82541",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "91b092b5-a195-440a-a66d-7f23967993b5"
        },
        "item": {
          "id": "04ab0706-ae43-4258-a3cd-7eb1372397f2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "de166ae6-70c4-4203-8010-342ebb47b55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a17978-f65d-4dc9-9ada-32d58841a022",
        "cursor": {
          "ref": "284e201a-c33f-4592-b98f-429488897577",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "79029cda-d3b2-4317-b23c-3638c3ffcc53"
        },
        "item": {
          "id": "18a17978-f65d-4dc9-9ada-32d58841a022",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e7bf5fb8-3d7f-477e-be51-e1358d90098b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8f236a-ec95-4960-969b-45e30ad7dec0",
        "cursor": {
          "ref": "9f730d38-b8fc-4f4e-8de3-3b76e00eb3eb",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ac69590f-da4b-42a4-864c-59ac10653f86"
        },
        "item": {
          "id": "1c8f236a-ec95-4960-969b-45e30ad7dec0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "806c48ee-2c7f-4ae4-a78b-caa33c8a80f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1676dee6-45f8-4391-8381-3185aca34a67",
        "cursor": {
          "ref": "fb085edf-b37b-4676-bc70-65e4d8360138",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1634b67e-5b17-41ae-8dd8-1f7e42aa2026"
        },
        "item": {
          "id": "1676dee6-45f8-4391-8381-3185aca34a67",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "041152bf-4ebc-402c-8615-26c1f49bb352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a24f307-2a4d-4272-b78d-07730b807768",
        "cursor": {
          "ref": "aff1a467-d48b-4e38-b637-44948945d9a1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7c66c2f6-5843-448b-8371-8d89121e17bd"
        },
        "item": {
          "id": "3a24f307-2a4d-4272-b78d-07730b807768",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ab06a41d-60ff-4c7d-b6e0-d7e52faf1c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01a0fa5-c7a5-4a71-8ba8-1fc74670dab0",
        "cursor": {
          "ref": "1dc3cc73-ed6f-4c1d-bd49-abe04b81c583",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4196ff39-cd2b-463e-a98f-8ce364f45d33"
        },
        "item": {
          "id": "b01a0fa5-c7a5-4a71-8ba8-1fc74670dab0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9a772718-dceb-468b-8e9e-8459c74045ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf4b462-998c-4d07-99b6-5d09723ad868",
        "cursor": {
          "ref": "5a08270d-1ed5-403d-8659-146bf53f7206",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "02de2029-da2b-4527-8221-645dfffbf60c"
        },
        "item": {
          "id": "bcf4b462-998c-4d07-99b6-5d09723ad868",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9866b959-2174-40e4-a9c9-783a6bb5d4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d031d685-0064-4a8f-bd97-a0cf2f54a6a4",
        "cursor": {
          "ref": "99ab87d5-0eb8-4a9d-b470-6ddd3972ecd1",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1c405bc5-9dba-4741-94e5-0ad9c4a853b7"
        },
        "item": {
          "id": "d031d685-0064-4a8f-bd97-a0cf2f54a6a4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9b6ba6a2-67be-4730-9424-ea8f744a216e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439400c5-c022-4fe2-bce4-a3954baa2f0f",
        "cursor": {
          "ref": "096f0151-f8a6-4e8b-b423-d32165de8c58",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ed01cfe8-b4ae-4e64-8055-597fc642fa99"
        },
        "item": {
          "id": "439400c5-c022-4fe2-bce4-a3954baa2f0f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7901d5ae-a417-4a6d-b1a3-02def5475ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef26325-85c7-4b6a-914b-4430f02243dd",
        "cursor": {
          "ref": "dd21c784-e1f1-4b77-bb4e-160e924344aa",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cbaab8fb-df36-4d07-a2d8-1e970a4de3bd"
        },
        "item": {
          "id": "bef26325-85c7-4b6a-914b-4430f02243dd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8dcc362b-83ac-4731-8c07-21c5fb09c226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9453c2b-3003-4b16-8d31-dc21c5ede043",
        "cursor": {
          "ref": "1cc2e7bd-2be3-4b7e-8af3-1ffad5457ff2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1ff94d66-3ec9-4e8c-8457-464898fbcbe7"
        },
        "item": {
          "id": "a9453c2b-3003-4b16-8d31-dc21c5ede043",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "be25ecbc-c3fb-4f44-842d-e17eca288ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22329e7c-1c52-415a-b42f-8acc11d243b5",
        "cursor": {
          "ref": "873e2908-0c90-4ee2-86de-78546fd3a3fd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "81f809d8-eddd-488c-bd95-865a456ccd34"
        },
        "item": {
          "id": "22329e7c-1c52-415a-b42f-8acc11d243b5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "afc6a1d1-4956-4a21-9c74-bc8371487d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88c2ca8-9f6c-4074-be88-c6b8eac0e599",
        "cursor": {
          "ref": "18e98eaa-6ff5-425f-b137-8844e3cbfb81",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7986ea11-56f4-411e-9c7f-0379fde19327"
        },
        "item": {
          "id": "e88c2ca8-9f6c-4074-be88-c6b8eac0e599",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6c87ca32-70fc-4e0d-b105-f75d17ca89dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5973652-d1d5-43c9-94b0-c849cefe1daa",
        "cursor": {
          "ref": "6ffa1049-84fb-4e65-b17b-91650e75f6f8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7d3ee797-4c05-458d-b1ed-17c59e77aff9"
        },
        "item": {
          "id": "c5973652-d1d5-43c9-94b0-c849cefe1daa",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c6bf2bca-f65b-4467-a7c8-a4d5394278c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21ef671-b9ae-47e7-8803-40d55c8804fb",
        "cursor": {
          "ref": "953b3651-068b-4d6a-91cd-5ddbf0ff8f24",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bbb2f43d-f392-4f17-b2d8-2269e6f4f46f"
        },
        "item": {
          "id": "a21ef671-b9ae-47e7-8803-40d55c8804fb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "635d604d-31f3-400b-9c8f-8a8bb2901038",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "238c1c29-73ce-4062-abc2-e1ebc3028b60",
        "cursor": {
          "ref": "2979061a-2c38-47d7-98f8-109a3612eea6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "dd1d5d1d-0f58-4804-b7ea-3239c9f52777"
        },
        "item": {
          "id": "238c1c29-73ce-4062-abc2-e1ebc3028b60",
          "name": "credentials_verify"
        },
        "response": {
          "id": "08b4f1d4-a368-4104-b2ed-b90aa2532bed",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bbda0f-a7b2-4ad1-bd37-78c1494db597",
        "cursor": {
          "ref": "9c52aec2-66b6-492a-908e-b403ed6458c8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "44209415-232f-414b-ad86-c2523f91b06b"
        },
        "item": {
          "id": "28bbda0f-a7b2-4ad1-bd37-78c1494db597",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "265e7fa0-4967-4a6b-91f4-defd36cdb216",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d7ce13-819d-4d85-8bdb-28458e2596a0",
        "cursor": {
          "ref": "40acd6a7-1973-4e55-986f-093c05f8b849",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "646ebdce-4065-4fbe-8b67-9322f945058b"
        },
        "item": {
          "id": "41d7ce13-819d-4d85-8bdb-28458e2596a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a24fae67-32fc-4b34-b697-da9bc8b9ff38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d7ce13-819d-4d85-8bdb-28458e2596a0",
        "cursor": {
          "ref": "40acd6a7-1973-4e55-986f-093c05f8b849",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "646ebdce-4065-4fbe-8b67-9322f945058b"
        },
        "item": {
          "id": "41d7ce13-819d-4d85-8bdb-28458e2596a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a24fae67-32fc-4b34-b697-da9bc8b9ff38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76680f24-6246-48bf-b3c2-ec4101cdeb45",
        "cursor": {
          "ref": "25deacda-8b1c-47db-986b-e6826c56f6d2",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ff02524f-32e8-4334-81cc-dba1bb041a61"
        },
        "item": {
          "id": "76680f24-6246-48bf-b3c2-ec4101cdeb45",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0072d41b-072f-40e4-8e14-db667d3e5b42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ef2c9b-bb22-40cc-b359-f47f4e68f952",
        "cursor": {
          "ref": "08f6dfeb-9592-4dce-a0dd-46ad83cbcfa9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e8c015cb-c109-4ddd-bd92-00d407cd06c8"
        },
        "item": {
          "id": "a2ef2c9b-bb22-40cc-b359-f47f4e68f952",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7027fc25-9c30-4b5b-9298-bd2de483d03e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}