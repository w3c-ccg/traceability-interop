{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4c46737d-313f-4d14-90d3-056f16f5629e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "935649d7-9636-4a97-a8f5-f7089b8e59e8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bcd8e15-6f6f-4c64-8102-8add7185c202",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "27f268a0-04a3-42df-9eb2-f685ceee8b33"
                }
              }
            ]
          },
          {
            "id": "dc81c130-c659-4d06-a7ce-ccc9a6f76586",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6caafce8-d172-4d17-92b9-a9ca457a6ac3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4a550524-91e7-4538-a5c2-11b63f039992"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f047e047-5e2d-47d9-a166-6253e1576463",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "152395b2-76ac-4535-b651-9e23b2b28238",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f757992-31b3-4609-8fc8-29c6c56be94f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62cbca0d-1d05-4c9d-a1a0-7ad12acd4ec0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01b15ec4-7650-4501-88f1-8a816bfd9d0a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d5e8ff85-0b01-4f72-b42d-6aadd021daa6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0cbe8b50-76cd-448f-960e-fcd259c618ec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "beb11a02-f27b-4f35-89b7-cdf953d4b222",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13abd2b1-19d1-4ef7-a2e4-327a2e13f174"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "173c5a66-71b1-45c5-ab67-2e6189c1c613",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ba26eb21-a5f2-45d7-b021-1d6fcb72b7d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28b14d5a-d58d-4825-9a72-bf8eed872346",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45e313c3-3469-4ca7-86ea-a4435edf2a2b"
            }
          }
        ]
      },
      {
        "id": "76e3f087-c189-4f02-a687-9a6187d4cf89",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "666efd62-6b32-4864-9494-fe9756ecd4e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6cea675-90d2-485c-bcf7-7aa865cbc7b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4e2caa16-fc6e-4a78-8aee-dc0b6dda3cbe",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646c95b0-5284-4839-932a-968b8cfc03a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e07118d2-c962-4165-942d-e36f6ea8ed6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b581a19a-4cf1-47e8-bc2c-3d126f4dcc36",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84da2f1-4892-4094-a98a-732384c1b616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b7fb5de-7c24-4e95-b47e-819fa16dcad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8562fd-c2db-4cc5-9bfa-6c056c53e246",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aeb994b-5efc-4bc2-810d-2c515e3cf037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfb23bf4-0b23-4c5d-8616-7df6fdfb46ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58d4d71a-42dd-4849-98d7-13509f164e14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d90ac5ab-1cea-4719-b472-7b26383c5243",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fc14fb-5070-4a0f-8ce1-ad6f16dc94df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73ed6a64-3b62-422d-af37-39ee33e385ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dff7fdb-1184-4d48-a3f0-cbe5e69036b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c366afc1-555e-4d11-9a05-5337ae07e742"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5207cca1-8137-4370-8919-694bd9b4fe3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b664dd91-6e17-4321-9e8f-3133cbf9d1d1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "639cccd2-544f-492d-bf87-c698a6411050",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9ee23df1-9c87-429e-b9b0-f3a36f43bf37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e84c324a-6e4a-4adb-9a18-be99fa83f9b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5a6c8785-9432-47bd-9cae-04a18e598a83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cb41689-7a87-449c-a71c-b135e8a10ce8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b708c3c2-d217-45ff-8329-932a08619730"
            }
          }
        ]
      },
      {
        "id": "5fa1c11c-3dbb-4058-baaf-43892e79b503",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3a824a5b-9243-4f68-9c72-47e1d0afa3ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24e8ea1c-4e08-47f7-8b5d-5533bb31d332",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a49a5f2c-f2df-4580-8ad9-86ad0a5095d4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68953aa-c787-4bed-8970-859a7f04bc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70aae63b-dede-433e-9137-2d9e378867f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047b7c37-d24e-4dd5-b6f7-9ed3638dcb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a23b0d87-61db-4874-afb4-41f4ff13aa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbda01c0-6310-41df-9649-1a44e69aefaa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3e5467-1b8b-41d2-a862-05f06ba31cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced8ae45-bafc-4bfd-bbac-bf5255f83705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274d41ae-92a3-4db5-98cd-585328aed128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c05c75db-c0c7-4e12-bab4-250fa55422c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91c1183-c33f-4acc-a52b-f41b5446beec",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976b2d12-0f2e-4e80-8bb8-d03b611df013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96957424-b534-4fbc-a72e-9855168a9f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42cdf7c-870a-4a41-b6ae-3a535e594c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c63acec-0ba1-4175-a357-257cb591119d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b668c1-9bf7-4625-bc6f-698daa127bd0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f62a3f9-0a9b-4b60-8216-b8c1bb975b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0146127c-83b1-44bb-8e73-06c7ba89676c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee63a262-8fbb-4fd0-a526-e24fad9b5df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c3d1089-b9e6-4f12-a86a-67b4fc78897b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc1a321-032b-4c88-ab6d-3b0835e64aca",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17379e18-4cc8-4b3a-b396-586b1fa21672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc496ee7-1c2f-45c6-a77e-18a415f98668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65066f0d-04ef-455f-b193-c0f8ec0a5cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19f75e78-a1f6-4f7c-99c1-cf399e591c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44dbe72-6fe0-468e-8612-eab131f97c38",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997a0340-97f2-466d-9d19-ceb1696355c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe70826-569b-40f8-af34-c016963ebf05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bf18e1-8bff-484a-bc11-ca2cfd44b1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ebef1a5-7197-4909-b198-06c956fbe1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64c89ca-d0f6-4f5c-ad22-afd40dd4682a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bb8d3e-760f-4840-9de3-0816e56c0241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857c4cbf-2b5c-41a7-bae4-ddf26c1b3fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73de3f1-b50c-42a7-be11-68f84ec738a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2e54e14-73d3-426e-bb71-7f16ae6794b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43eae07-31e5-4824-a816-fe6a7e821c24",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5baf128-3a8e-49e6-943a-e309873944f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24331e2-c9a1-45a8-9773-dd0ca977e6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a70c7a5-8936-42c6-9218-0cc90e25c733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01b865f5-3fe0-4ee1-8c1c-18c0666c6939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033cd46c-5427-4d75-a4a5-4f6a0f7b0ab8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c777405-aa06-4c11-9546-7ea9ccc8deaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4b0345-d411-4d55-ba01-f5b4b13dabfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a5f2e7-101a-4995-bc5b-41162ef68150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec4e5057-999a-4467-99c7-1f7383a1d7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5805bb67-d22a-47f7-9535-f68706bf013d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b60982-8fae-495c-ad07-16734951ad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7382cce-78a6-45f4-8caf-2b27a6e32690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36891902-1c3f-43e1-befd-9d85102a6904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8cdb114-48c0-4d0d-aeb8-8d12245ad8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fc560f-3264-4304-b6ff-3b6b2ecfad43",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94891a61-2263-4c3a-9e1e-84dbb1aadd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e1721a-de03-402e-ade1-e0c48528218c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fd1839-2401-4cd7-a1d4-85087f17f806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8708c68-8592-4dab-b230-3463fa529900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba134a7-d689-42ca-90b9-9d0df07172e2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93158b96-3eb4-4d72-adf0-e1dc82be0929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152d4a93-b2db-4b6f-b962-e19634c948f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d39fe6-97d7-46be-886b-032c87cd90fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bac983a-9964-42a9-89b0-93dfb3e0e565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885766a7-7ddd-4642-9f70-e88f5a77b6b0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3eb6f3-be4d-415a-bd1c-20a9578a30c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6e06aa-019a-4df0-93a2-fda67eba7d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9e4b9f-1323-4f44-bdea-1262369db7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9dbb23f-6ebc-40d1-a367-f395b69ba428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c033e06-a419-4892-8591-2966ef1f89d1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaa662d-a34a-44db-830c-a29150ae228e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5926f057-978c-487d-b8bc-bdf78299d72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f57e3a9-d2fb-4737-a5e2-2cd15bb01df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00b82ebf-89d9-4e71-9c3a-85509c7f9ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c2efa8-ccab-4151-906d-576f3cb0e673",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d57eaa0-c74e-4eaf-84db-97fb7e548e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af99ec3-9772-4b8d-adf2-5782693ad89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bf5bac-b38a-43c7-b3d9-338265d0685c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7348072-658f-4252-ae30-8d08a38e126e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5494a81d-2406-4694-8bc8-ba54e40feeca",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b339099-9aa4-4c29-b62e-e64ec2f9b387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2754c5-b042-4de5-910e-da39cf5887a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58ee579-bbef-40ff-8ef9-8790b9e60c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "925e2bde-4717-4bdc-bd8d-a0c8266f5422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a0fbb0-974d-428f-bcd3-1855e5a3dc4e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb360a9-c2ca-47de-bb85-defbd056124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576d107c-5e88-4fe2-b377-bad5ed0e58f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6bd348-e84d-48dc-a258-96f4f9c643c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64819270-2b63-42bf-9b38-d19fa3f770f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5de647-60b5-4a04-829c-6d81d573d06e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b30a4d-5790-43a5-89df-ff32f2f28ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5865c7-5e3b-420c-9b4f-1eb014180a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a845438d-dc54-4f71-9de9-1c022c317ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "59fd7455-1f62-4a05-a0f1-59cc2527ab61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1aa88e-a7a1-4e20-a3a3-ac95f566b775",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b1ed33-c64b-4031-aba2-611c276973b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51016f85-d854-4738-adf1-4c0b0517b4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86981d5d-ce9b-420d-85e9-f499bc4db8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9e8d1c-b1c7-4814-9827-75b6884c0ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166b9bd6-d079-4543-b556-72a5bbd40444",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7216dd-367b-4e2f-b4a9-848ee82af5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8302df83-2110-40ce-8ab0-17256a2d41e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcc3f2a-b87e-4782-beca-c1593ac59481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b119a3ba-c761-4e75-8a26-421fecc9e676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34336a72-af18-40c3-8682-f6fd07847a86",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1e6a65-0322-495c-a597-1e16dbba894a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca16335e-0ea8-487a-9cfb-d1f612763712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b715bf25-8745-41a6-8306-8b60bda0c6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4618ccdf-d393-490f-ab6e-86224079df2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbba9bb-8000-43d9-b151-98cf92c54a51",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a4f23e-170f-467a-aef8-09ce17a91bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2a4483-6877-46e6-b516-2c60fac94bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1412418e-69b3-4511-b1fd-a1ab15f38c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31aedd77-5126-4d97-abf0-19635e1615c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e22c123-1d39-476d-8565-6a176a84f3bc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a156d3e-fde4-4345-84ce-e2e5d2b2027f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f9702e-4a10-4055-b3f8-39c3cd4ef41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9ea82c-55d7-4436-adcd-65ff01d6fb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de4d1027-3cb1-4aa7-b196-03b31035b6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b962fab-c7ab-48d7-aa44-b7e82a3b89ac",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a3faa6-ee95-459d-90c2-718d14318491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af9a192-9089-4ebb-97e6-287c19194916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a0c154-478e-4b81-a571-0a74be09ea19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df4f7847-ed5f-45fc-aecb-a5b2cf90ed8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edfddd2-342f-4371-9b85-1d9cd3561853",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d34b05-a8a6-4f08-9012-03a0131e40e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14962188-0e6a-4239-a106-4e5a680451b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e624cff-eda2-4c3e-abe4-5c3de1f0cf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd50ea8-60b2-4edf-956d-dd44ef24914d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93f45c5-1a6c-4201-b889-c02babc3452a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aabbbee-f665-4a10-9fa4-4139c0269fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8400b0c-d306-455b-b404-2ba5825c2fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319557cb-8ee0-4eaf-8c34-2fe13ceb0f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "392f4372-0448-419b-aff8-12d68809422b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0606b309-f3a3-4b8f-ac83-9bcf0ca42ad4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6df0d6-591c-48f5-9ed2-8a9e5aea5177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737bbff5-b01c-4d8b-93f6-33c5cc5933f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b6cc03-46e3-4255-af25-e6d72fe9d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53fcf5f6-286d-459d-95a0-b97a0a8e2482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb2e56d-34e7-4db5-8c40-fa86f02868ae",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e84bfd-cff4-4746-aecd-d752dcb302a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59b6245-6bad-405b-b707-dda0ab286281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073b95c0-ce37-4e35-858b-aab45c6ada98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "846f82f0-50b8-43b9-9dfd-381f4ee94635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664bd304-540b-4bb3-add9-f790f66fc94b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de4707e-f89c-464c-8ab6-d27fe156960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f17e72-731a-4a64-ba07-ad3da904239a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c073587-8e46-414c-9d9d-59ce71678075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "655ac7a2-06b8-4bac-916f-c6643c8a22c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c1f7fb-055b-4152-bdfe-e677149e463c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c041d5-facc-475f-9cd9-d23315a80336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66f3a25-cd09-4e36-b8f3-8f434fa08bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f3396b-246d-49d7-bcf8-43eeff94e292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab0bfb5-2fd0-4701-94fd-d427764c79e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096ad368-5886-42aa-931c-b597bb3d22fd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31f680d-e6c1-4641-84cc-18673af25895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48cb827-77be-47eb-98fb-f519d1c8a6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf751e3b-9249-4e13-ac4c-2454bc4d0775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "928fec56-3431-4e70-9557-01ec589da6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bf32bd-21b8-4e3f-9635-ed70b2703dac",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1ce7d2-1079-4b48-952d-d884e29b78b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07342e41-a8bc-4bb8-bdfe-07bc689f3f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fd5cfb-b0d6-44e4-a897-77e13d8ba639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07dca441-9a6e-40e6-9aee-0d56a6a3f673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba697ed-b701-4c88-95a2-14f27a4cae35",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e758665-afe3-417d-b3bf-8fe815b491c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ad1113-f2ea-472b-98c4-8cc900f9d52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b036a4a-433f-47e3-b6f3-6e0f727447c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9a5610-2bf3-4e85-8595-2bf367b97188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6d1db6-70d2-4283-afa3-5aeba3cf6fad",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b66fb91-175a-4b23-9d60-1a9df05ae1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224006b1-b83f-4305-9c05-406edc935cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fd7510-b9ef-4701-8022-f94383909721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "019d532e-a082-4708-aecb-1ae73e2b6990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5b4b92-3ae9-4322-aadf-9e0a6bdfc642",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608a0ca9-182c-4cc7-bd4c-f187b7e2cbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb215e9f-cdce-40d3-b3db-afb89b6d0e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de792437-021e-4962-8232-9df0d2b177eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4a72e0-31f4-4926-9104-c3d0921b1ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af5ad0e-1543-45c5-bd24-48ecd0c89ca1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c90852-4e5f-4990-b138-1a0da12ebac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01e92ca5-025c-4dba-83e4-d7e3a0bff944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12659ad4-42a3-4d20-9992-b27a1c78c23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b24d254f-0b65-4553-a813-ed5d72233286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905a6e12-c9cc-430d-afb0-95983a66f831",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e2a8d7-9b04-4fe8-858c-9a88123352f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6eb05c2-a5c4-4d5e-94cb-a3d555172ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb0ff44-62a0-4288-8e06-a8f5b770eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a49a25df-4587-4ff8-9e6e-13e3dc2fbf75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfee7c8-9ff1-440e-873a-f53bef8930fd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1ca91e-1ef6-4c8d-8e17-7a041700225c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0afcaf-efe9-4319-a954-911cf2a45223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8507711-b585-474b-8ae6-a831469af291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95dec909-a4ba-4ba2-a451-2c657a68b02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0465a409-973f-4d68-b3f7-eb42ca29db97",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049ecc07-a36a-439c-b905-72a4041a1c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570974ec-9daa-4b7c-a1be-3a2dd22d07fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f244c84f-9154-42a7-b938-dd8fe27558d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d938122-21aa-4c9e-9844-7bb862dc9a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9331ef-51ba-41bc-9c03-d8f7d0bcc19e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914adcdd-cfb6-4b50-852d-ed5454ff8409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14f9e8b-309a-4672-8434-a74f5ee2106d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c2ffa5-a1a9-48a2-8226-cb9a6db77d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c072bb5-ea60-4dc6-9a80-6bf2825ed387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52547f6b-adc7-4184-a1cb-40a61a837f23",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee2a7ed-5546-49aa-95ab-de324beb78aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69148e02-b1f0-4996-8df1-d2094061be8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d336b45-b48e-40f9-9a36-b49778b78027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "808dc4c0-d496-45a9-b1a0-8eec6fb595e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2e5e13-9ca7-48a0-9cbd-d3a12a575883",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f30a92-e31f-41e8-b015-a300d5d4d006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284c1c63-c9eb-42b4-b713-4cdc03c72396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee46923-977b-4e56-85ca-9922681525a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "afdca87b-fdb5-4f07-8f0f-63218ea4aa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2942a07a-5af9-4dc5-9af3-5bb59191520f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1f5aa0-6da1-40ac-9bd5-940407dca276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0239e3-f1d3-4fb3-ba5c-1653f7cd1946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7084c5-e53b-4814-b6ab-2f0ae5f4bc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "51478da3-f4ec-43d7-b3c9-7e2d504ad8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa58537-5e42-4901-8542-dabd3082a3c6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cd6b87-ddea-44d5-844a-262e64f50b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee1fa11-7da6-4565-b106-49958f4ce075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c128b0a-5810-4aa2-812b-e5a00a2f0645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1335fe-99c7-4870-9eaf-1c382dc5a64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c942d174-3318-4cc2-8cd7-10c5076b4dbc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7387c3-90b1-4591-ab21-4edbded1555c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7caa83bd-8c3a-42e9-b7d7-9478b84d5f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fc78fb-2406-43f7-bb5a-6e0e3f44bf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39cf2ff5-61c8-4789-94ca-9a4d51b516cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5dd307-e0e4-4d00-9d55-723fd4047be3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64faab3f-0fce-478f-a7e7-90bacb5e920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adde005-a06d-45a1-9f88-76b35eb47211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c822f7ae-be76-496e-82b4-78a30618848b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23f9c5b8-61f6-47f6-8e3f-ddb35c1b7c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380521e8-0072-43a9-b934-89a7f33bb98f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872342c9-663f-4309-8e71-9a40e02ef030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd9f298-c7b0-45fc-8289-65869cba6288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7ccb0a-825b-4436-ab38-3a78609971bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d52ff45-c989-4dfb-ba31-d456ee1687c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0b82a5-c700-4bb1-9e65-1299b8291c35",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f2735b-1b92-4df7-99d7-ec93d77e535c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fba7c4-f621-4b0e-a75f-b2c8bc2e26e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17283a5b-10a9-437c-97e4-e734bfb8cba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85dd9974-8386-4d14-919e-1ae5d1aacf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e0cea7-039b-4959-98db-38f54df49cc7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66f5688-c108-45de-9b58-0cb8d1ffcd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dee64c1-60d4-44bf-a25e-64afce137cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a74d530-8469-49d6-96b0-b4ab8a8fb66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02c10bdf-d18c-441b-abde-6136dbf56ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2f9336-5dd7-4c25-90bb-d075887bad51",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1be36d6-03ea-4750-b8f4-e0053bb7591b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b4edd3-4ba4-4fc4-87b5-dbb318014045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e21bf4-d460-479c-8b8c-6f935d423e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd586d32-0e66-475f-b004-a27b20c23788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44225c46-e5a7-4865-b8d8-a6a3a163cd6e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26048fc9-b822-4f41-8d8d-c9b701cc0138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83bba11-540e-4daa-a8b7-6985711c0ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38435c79-9458-49ea-976b-e42979dee7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e035d74a-83de-4467-bbae-40dacc13a946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded01f3b-ae90-4a3e-9dc3-3dd1866a9297",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4725aa43-d8a2-4a7f-b50b-569a9c36a610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cf41ae-9c0d-4551-8056-4b3d76e8fa8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38601ec5-3bb5-4d8f-95bc-8fdd45a1324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c365b9a0-b929-42d6-b1a0-0dac141b5795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1614c72-cf40-40b8-8c39-56e1c4caab2b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777e8ac5-4d8c-42bc-9a3e-8a2d21754388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b6765f-293c-47e8-ad1e-5a6066dccdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74e555f-27cf-4ac1-b2ce-2f5cc6b3a401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b90274-835d-4d33-b5fb-dc85aae356fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e0f460-53ba-40e5-97b7-1e676c59e61d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcfbd6e-f0c8-49ff-89f8-779a7dc117fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3e0d8c-56cc-4b80-8909-fb3ba383db56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd2c175-fae1-44c8-bd5d-a59cbb078333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "847309ca-4129-432b-b588-3229082d265e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b7d7f7-ddbd-44d1-a8e4-bf58d4aec18c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480b08ba-8d97-47a3-94fa-d7697586ebc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a482680-e98a-4c18-97b5-71ff8c47af5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fac370-044d-4e28-8165-68fac06bce7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c932b4-11ba-4ae1-b20d-66b1b82b30ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f7a8c9-6813-4476-a462-f5fe75de4c5f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494103a9-90c4-489d-b77b-66a54a4f51f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5312ddb5-365b-440e-9200-21d0c9511c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a198bb-229b-458f-997c-ae4fd46630b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f686f31a-3566-48ef-ba27-44e19ebc50ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2021012-3bc6-4b64-8ee6-42989f7bc7f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b1278d-6484-4db0-8301-7f88ff9068cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a72446d-6803-4290-8954-f9cb1b2b38f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf459fbd-cd86-4ac7-916a-2ef6bd6537f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4c6ed0-bcd8-4b68-8f3e-b06293c804fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cffc9b1-fa9c-46ff-9cbb-98510ecaf3f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8575fe7d-43c4-49d9-a7a2-7f01ba16d76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5512922e-406d-4f4e-a9da-54fe9ad2571d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7c6505-8930-4059-a3e1-1512487e10f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "77e5a960-fc0a-4479-b826-28e68127d93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e22d66-6b8b-45cb-adad-ee2662411af4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005a67c9-d9a0-4974-9137-40a798bd4f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff4b4a7-07c8-4112-ae3c-24352b54b255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa18ec0-a34a-42d3-9761-1c053548096d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4dd5e1-0b8c-4226-837d-51817ffae1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb2666e-1d50-4a98-9570-78a38598f6ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ddeb1d-bc04-45c7-8a8c-5a2a607db346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffed6c65-4a34-4cea-a7ba-b636fb63c789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7a35a3-49ec-4f8b-9101-ceb0c8e0a952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "11d84775-7a2d-49b9-81d1-8d54a8362dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9a0598-e0fc-4561-b955-58f6cd1e4f80",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a18b01c-7611-42f0-bc4d-a2b0c6fd6826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47799ab2-b1f0-410e-a11a-68be3c95e44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15e60ee-3e82-4dc9-9eec-bab3718e816a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "57b5b054-350c-4500-95c0-144e7767f5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464591cc-ccf4-42ae-a1f1-6a9336ccde82",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9c2f7b-5c57-4074-a4dd-31a463ed7d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a40fe9c-9998-4bbe-a022-37f502b12f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ba90a6-00cf-491c-bf82-242683d12729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e55fa52-b4b2-4639-9c86-384e724a7e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f9bd7e-4131-4b03-b440-fa6d2a41309c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eed2901-fa6f-4469-84de-9039b4108639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0fa441-47ce-4a9f-a720-ffae67002496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94def0b0-add8-4ffc-925c-522cc2076f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7647e6-6424-4c2d-9417-2be8bf7c2df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d60ae09-b12a-47c6-ae46-53135325876b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f9fa6b-f93f-4ecc-96f6-74b86c7f39a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9e3c49-b1ac-46f7-8723-c6b23c734f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3b6051-c62c-4c62-9608-69d0e0d93698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e733b9f-b535-44e3-af90-7ca97a1a60d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf74773f-e745-4c49-8355-4b596d366132",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8f66f3-9e15-4edc-990c-dc0fc028b089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a058f0-6d38-4a64-9820-6dec17117f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0580fb3-43e5-4efb-a63f-94f4000f654c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3402edae-dd84-4eda-97b5-ec51bd62b8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52ab414-942c-4e1a-b3e1-e94b6beffdd0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05d1013-211f-4e30-ad81-ed2ff1d7dbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76442a0-21ef-4904-8fa3-c554a5fbca9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14bcac2-f085-4929-aab9-18ad3667e048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6efe3131-9463-4321-ba31-58dc67013fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50b4da2-d3e5-49a1-b6d4-977590d9a798",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24fb0eb-0d6d-4e8d-b157-15db0dc96a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d4ec63-913d-40a0-ba5f-6d0c343683ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac2d1a0-9b2a-42f9-881d-125417aac199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6f2ca3-c1dc-403e-8be0-77ad309436f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db635999-453f-452c-8067-63dbaca95a9a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa84b50-b0a3-43f1-8ba9-4b95127a29ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e8b72b-1652-4df1-a811-d7909e96597b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c737e780-d1be-43c0-b1ff-10fc6910f817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e78b8a5-26d7-46b0-9fd6-7f82b950dbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814ee546-9328-4ee5-8aa4-640281141444",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51ecd9a-5f6f-4bc1-9f7b-8c1dc48b4084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113e43ab-1d22-4dd1-89ed-116ab8928430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f61ac4a-0c23-476e-a939-1852d4b465a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f995d0f0-4c2e-4d25-9acb-cdb3b7363baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3e17bb-4d1c-46cf-b365-439855b45855",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc88e2c8-7f74-408a-93fc-e1df91636019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df11de7-ed20-402e-ae90-65987b921d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fd78be-2a66-42cf-92e5-8588bdb40ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21835737-805d-4165-802d-efb70d8addcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a31de8-6c70-4bb5-b386-23165171002a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bb14b6-9f43-4f5e-8ff4-c1e7539cad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f05c00c-bd96-4769-91ff-239717a9c521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6b3519-7691-4985-b0bc-c37be72f232b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7517e2fe-f07b-45d5-bc5b-680e26e4676b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5193d204-4563-4dfc-9eee-9735f5ede59e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af219ee-c892-43ad-acb4-b804ee3d1e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ae735f-173a-46bf-8131-3348befce0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952695d5-2464-453e-b6cf-3d9527ad3a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df62853-0b58-47e7-9c95-46eb729358ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb49c991-81d1-4263-820e-92f6de2d7c6e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1e6ac5-3782-47cd-80ce-52f4be396500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b61bcc1-dea2-4940-b312-d923fc60337b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9e7e43-12f1-435c-a00a-1ac9cc826c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91c2a1d6-2408-48cb-8c20-3056bc4cbd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8f90c9-9784-4b99-8a34-21ba4af6220e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d215db-dd82-450b-af53-c877f9f9feea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d604eb2-3b8a-43aa-9e0f-a68931a01ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a3fc1b-773e-4837-871c-5077498bdb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7bbb98-690c-4f98-b21b-8b7d4c2f48c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f74dcf2-c78f-4611-ac24-99ac78172ced",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3376d1-b806-4531-9814-507f27052c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16cd4cc-2add-4046-bb5f-f326153d7fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56473088-ea2e-4918-abd6-7859a5cca7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "921282eb-6624-45b7-aef4-b7b2a58b3d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c54ad86-7372-4bd0-878e-9098b76f2504",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57a9a38-0721-48e7-9064-6a7beac5184b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1566ab-9861-4d0c-8c1f-0afdb39e4b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec81e93-7594-488f-8fec-1ca83156e3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd397d47-b8f9-410d-8e99-0208905337bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562f8e71-88b7-4f78-a683-b72c04f54ea9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4b09c2-e893-47bf-841b-ae3f93d6d295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8709edde-8cff-4b61-8755-bac22c4a614b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5c41b2-f54b-4d01-8bea-518fa2a8df16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff25ab8f-ebc1-45e0-a14e-6ca8cc787ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff23515-e0e9-4704-81b2-2fce46da219e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b62455f-0cf8-4575-bc72-314b89d5aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c911f65-df06-48a8-a372-cdb2b45dc961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364a67d7-73c7-4293-869d-8cbe982e6644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9950c07c-c6ca-4f50-bfa5-e8d7f25df8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3d5eea-3205-4964-b6b5-843b58009cc5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0459a2-44ab-4eb7-a372-8ee509c54726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca66ec5b-3a36-4320-ad7f-0a180dfe50ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b53c84-749f-42c5-9915-a7512fee22fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3830b64b-7d2e-43eb-a063-6279b945c8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8796334d-cb2a-447d-bb96-2cf063b2afd3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1232c6a9-37ff-48e7-a66c-f9d84131e398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ef43e4-fa19-4a64-abdc-25ac9ab5d9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4081e674-876d-48b6-90ed-cb67b37820d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3650907-599a-4d75-a92e-3c480091e8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0208da33-7ca5-4a79-80a0-0afa94204238",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29f1c59-3cb0-4bd8-86c3-e6265ec72c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098f9376-87bc-4468-9e1d-37bdb5c5f32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10964dc-1e92-4de3-b03f-5d14cbe713c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbcb42b-d7ab-4a54-a9a6-7dbadcf2701d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c48b344-47be-4898-aeee-64563c4abb2d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b0dc03-9716-4aa9-9167-b4c4c57c874c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db8f4e7-a048-49a8-baba-448f5a1aaad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ac0b15-b307-4bc5-a397-f79b0f0f870f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffc13a3-4b01-4973-b2b1-d78a17842cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bd515c-87c5-498d-8566-c3d247c95c3c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aec1b9-9adc-4547-8655-6e7eddb41828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1989124-0fb6-46a2-bf16-b8c343eb8be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bd139a-4166-477e-96b2-21747dfe63ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d320ead-ed8c-41af-98f3-3d818a396691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d6b1ce-5e81-46b1-b2d7-24f328395883",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eed6d32-6052-4ac0-9005-a1ab016fb4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd1cc0a-d3c0-4a60-95c6-424c5b62a472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02ee07e-c3e8-45f5-80fc-f9c2b4b9674d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b6945a-c8f6-45af-a9b8-4e37366124f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35edf02-5be4-422e-ae44-1a8bac02d2d1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05827cd6-550e-4643-a93d-d0c110bbde1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ad4ca2-eb61-43a7-b9ab-f240346c962e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cf57e5-8991-40d1-b6f1-765e5a7f190c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68173e9f-81e2-4f1b-bdfc-d660dcbc7de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94688ee-29db-48c9-8b14-92a613ebb5fb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d82672-7ba4-4f20-a6d5-e434c4a65163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dced29-6ade-4182-a456-9c56bbf2863e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c481746c-97e5-46e0-b3f9-0407f6d745be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd7e154-c556-4e02-9f59-366f90f1c9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f07f5c-d4e9-49e0-add4-0b8655116a6d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996a9f90-e777-40e5-9ec1-588c62fe1ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cf6647-e6c0-45e7-ad90-ae237c6ac86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18beabfd-c1e3-4efc-b73f-8768b4109868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6dab0b9-66a4-4caa-ab62-fad5b3153b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56468356-6aaa-46bf-a85d-a289e7a3320b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9224532f-92e6-436e-a5dd-7abaedf19a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730c571f-aea0-4ec7-ba9c-eedd3d971850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b38bd6-ea12-44af-b6b2-448404c1366a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdd8c8d-06ff-42aa-9cf0-35fa423a7208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e53876-88c2-4fa8-88d1-6361f99deff3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ec79a0-ffca-46f4-be67-c3e633e8ed85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e48af73-4c4b-4bf9-8d2a-66ff03c966c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5086d9-3a8c-4a8e-be47-71346b57ec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d48af5eb-770b-4873-9c16-d6521aa792ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24995af-09c1-4df4-bee1-d828c1d59aff",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd3d1b9-7508-4f87-88a5-0a34e77bd8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a8e190-42ad-4d7b-b988-21190e249f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfa739d-94c7-4b64-b428-75b5adaa91c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5934b13-713c-4b21-977e-f2445c641a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0cdfc3-8131-4fe3-8ca3-00b4fc1e4032",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe36de0-84ee-4458-918c-68c455f82706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010f56ec-abea-46b9-9041-1b549544f267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7181d80a-d13e-44a7-9bbb-4c5f6aa14e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "95243905-589a-422e-a681-c86b274f2f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99585c2f-316b-48d9-b94e-4ffd7161c496",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac73fd0-7939-4f38-8e21-90c636dc0440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d9f59336-0f60-42aa-a925-3061f2754094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c571ba1-062b-416f-ad3a-c3b4d6fb2fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "147fc8ab-249f-44a1-b56c-846a1b9990ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53486a98-db50-47ef-95f4-eef133db4db8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3795f461-177e-48e3-950c-6ca985b6aa7b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3830fe-0a4d-426e-afff-1c8b7b3c4996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd7c49bd-2132-4d4a-8b1f-e61c822f6b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfabc269-40a3-4cd5-ba3b-1f9da32d0e9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "972c48e5-76b5-4f34-b7fa-77743ea95fdf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0782dbf-d3ef-42d4-a4e9-22c9696d0b52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62e1cc7f-6b0d-4f7f-8ad5-389e83080c50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3346a15c-28ca-4498-b432-9446b9dc7d69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35b48f6b-79fc-4863-b261-2b48fe804af3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f254b3e6-d01f-4bb1-9a28-1565b4860b24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c8cae4f-3e22-40b5-a515-c8fe506fbe29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e699124-7d71-45f6-8644-3065712fec53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cc47dc3-a2ad-454b-bd63-3e8f10d6954b"
                }
              }
            ]
          },
          {
            "id": "7382eaf8-1597-49a3-b446-947e84a4cbc6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f2fc6ce-2bd7-4e27-9e60-f254d75cd76a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dbc4307-30fd-4b87-9dd1-5e2123b895a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66ead57e-cc5d-40b6-b3c9-22cac6fad52d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea590db7-01d7-4a03-903b-4af44ad09ae0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "484ece5b-3985-45e7-98f6-55ae3d1b1a27"
                    }
                  }
                ]
              },
              {
                "id": "9df88851-2c99-4633-a865-930df1604014",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54096289-9b01-4b21-8539-9674a83112a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a97d8967-2b80-477c-befb-086e4ee65c1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f40940cc-be0c-4e79-af0e-cb61158a101a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69e80421-7817-4ad6-a656-75ca05659277"
                    }
                  }
                ]
              },
              {
                "id": "98349ee6-6005-4eac-bb41-ba9709b700d9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d36abcf2-85ca-4785-a056-0d466551b55b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20df7e1f-be63-4daf-910a-7de8e6b6c57c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22debdcc-ffad-4cfd-85f1-76919f2295b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d413b6d-2a0a-46a7-b543-f3615cc8c12a"
                    }
                  }
                ]
              },
              {
                "id": "683fad83-f6d3-41ec-8d40-b488d0699149",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2dfd3f7-a948-4d0c-9c16-34722fd40b92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e635f56-a66d-41f1-95fe-8e28cca45700"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd058c09-5e00-49ea-9241-968ae8399472",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "779121cf-2d38-493d-94ea-00e222dad695"
                    }
                  }
                ]
              },
              {
                "id": "aca7ac72-db65-4026-9219-9d25ce2d7d9d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "143adee7-c088-4c33-8216-0d75cfa436ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "022e66c6-2e4c-471f-ba17-712f89b5566d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b4e08f1-b5a7-4110-9493-43e16a32367c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "10bfbe4e-191f-4687-874a-f034b6c94add"
                    }
                  }
                ]
              },
              {
                "id": "c87bf199-9d04-4422-907d-3205fed6afc3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce266cad-e507-4244-b6dc-5c7bc51dc33b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ed35e2e-a408-4914-8966-cbed7187647b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee0bf954-9fe8-4b57-b90c-6ac5151cc77b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27292c05-f9e4-4177-ab9f-a6d2368c75d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88eee44a-9767-4ab8-a040-8fc599934a3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b4badd8-1930-4e29-8cc2-82c252098e0c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb0d8fd8-fde7-42ca-9846-e7ebe9acff07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "964e0c32-c8d8-4298-b36a-e3b4f869c61d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b996991-1b44-4b6b-a434-ee9fb76b508a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e3b77f04-b213-4c8d-95f3-74ae3fee385c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba125087-4ff9-4237-99ba-5652680cb0ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb8cd72c-d64a-41ba-8243-dc3f1c52e983"
            }
          }
        ]
      },
      {
        "id": "55d76973-7f33-48ec-a9b6-beca6811a65f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "63be7ed8-802a-4fa1-882d-38dc45000a83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28f704c2-fb42-4c92-8343-d8f2db958411",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b82aff2a-6bf6-4921-86a6-bb2883327045",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33a5c28-b3d5-44fa-81fe-752aac0be4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d0dba2-fda0-4b12-a321-ed5c24405f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d973f2-34cb-4607-b6d7-ab0c2c0ba50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ff3f73-a901-4304-83a5-2f9e41f6169b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18633697-c719-4de6-945a-104220dda8f2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50db848d-9cb6-4278-86f5-9feab5d81f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1e7141-5edd-4e37-b6c3-4137c0af4549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fa2e1d-9653-4d80-b01a-68abaebb8013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cde7855-0814-421d-bc6b-d348fc062f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef0cccb-4601-473b-a6aa-bbd5903d16fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec4b0bf-56a1-425c-b0f8-8be393968dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6052bcbb-3cef-4212-b55d-420afaf1e976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c222e58a-e651-4ec2-8f24-c8685df1c0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b4c453-fc9d-4865-92e7-86647df2a8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e95b70-669b-4fb6-a962-0e3dedb14772",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1042fd00-aa2a-4ecf-9042-fc59394647a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c7e8fc-463b-4ded-ad28-429cf95cdb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30c3787-e93a-4013-a7ca-f367d71e4765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb9f978-16a1-4096-b813-0ace2316adfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ddf6ec-6746-4bc2-bc44-453ffb50e893",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62356942-53c0-4338-a9fc-4427f2e5b0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b538d68-75d0-4003-9d0e-72b338955b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2353a842-26e4-418b-a03e-555c3d9a7878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd93bd2c-8644-4e2e-9f3a-0b27db916781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ca9d67-af4b-4728-bf76-55ecd84d72e3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef075d54-4aef-4066-a769-01027e4535f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d09a62a-3c5f-4d2b-ba40-eb413c00917f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debc3138-f0bf-4146-9613-d9c612f7b216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9373c51c-6a42-4ff4-b74c-fe677da360aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36af379-fefb-479e-8933-0a5f3cb5b38c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8e5c94-0ccd-4e58-86f7-6d07e7cb2e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc49309b-8023-4aee-ba9f-041abbe42733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50253e3-e868-4a90-9c26-bb0dd2cff46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "296ea636-4844-419d-bb40-172ffa790f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfd73e1-41e0-42e1-95c9-c69e4922a330",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0ade74-c84b-4e43-a7ba-a7cdcce9ae2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae447286-1053-46b3-9cf1-22c3f7ad533b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc88eb1-fd8e-439f-bd37-d1973af2c684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4deb7c02-c9dd-44ef-be62-cdf7066682b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d992db60-2c48-4215-8465-ca205f52c3a6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5ed0bc-1283-425e-ab70-b293f9ee38a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8260fc85-b26a-45d2-8e24-c51c5a71b9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b9d1c7-3b8b-47de-8f17-a42d228f6d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e053c1ff-fd5c-4410-9aac-2557919e6ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa37b3a-2ad4-4343-beba-9df96ea767a7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b7673e-7c64-420e-82bf-96ac78bb6d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012e9e22-ae8e-43bb-8390-6c2a7e3bef1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60b3f7e-d843-4154-a6cb-21c0c01464e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "362cbdc8-5977-4d22-95a8-745b9d5c829d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b4358f-7291-4483-ae50-748e8a53b86f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477818ac-833d-4b4d-a374-46667a2f07a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1688ff-7c9f-4b71-91f8-5712d5f76ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7797c5-14a2-4043-98bd-8b86099ca516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "76ca78be-9306-4441-8a33-2f721457d7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edc8a90-f337-49af-9318-b7e9255c4227",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42a6386-276b-453a-b1cc-093e1052fd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af447931-41ec-4007-b94f-c307aa4fed18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222ca681-fd1a-449a-899d-d320f33e1dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af428eb6-8266-4172-805c-587276bde76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef26eb3-1519-41ea-9cf7-c50b93bcd418",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a21b33e-216e-4503-876c-5a079dd6f7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb8b2b7-e948-47d1-bcbb-bc83942b44df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037164f3-b0b5-4ebf-8645-b70b6b162365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c30ef5-d0c4-4501-9c6c-c8cf695a0ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519a9b5b-643d-4101-981a-18aa1d59443f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5286109-45e9-4e69-9e3d-9a6f7760d20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18903165-a43e-4f43-aa11-b9e65c813e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f270de-98d8-4905-9fcd-36e40904155e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff51f6c3-06ff-4274-bef7-59679648c50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274dd28c-91a4-4df7-b888-fb56641ad4a2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c43c09d-2bff-4148-926c-9e187911279e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429d7b6e-1dea-4612-8471-4a87f7a58194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8402bc-21be-4976-9c8c-7d4a19947c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a01e1d-727a-485a-bb17-1cacc235d910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6e2906-6f34-4fcd-8ad0-c2530725534e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec47cd3e-d7b7-4027-a234-717413b5866f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3d7d65-dd3d-45d5-bf32-a42c8aed4a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcf024d-d17e-41d7-9fb2-42df52025fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8063d9-30a6-4123-8a22-be8f1e316734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71beb86-da43-41dd-a6a1-c0d505a7ce8c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578fa77f-8f79-47ba-9ceb-6f3b3aedfb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfffba4-bdef-42b1-a115-b207b487b994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0790307e-e120-4d13-803f-1f08df99950b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "856889dd-a351-45cd-96ec-d6c1bebaa717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ce7ca5-05e9-4f82-945d-f34d7e062e19",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978852a6-9d5f-49ac-b3be-8801da79e125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b421403-428c-4a57-ba42-870eb7225844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf346697-49b8-438a-a180-be6677126b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e87d4ed2-c5c7-4df3-bbf6-2954b3114c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53beb903-4c6e-42b1-befa-a0d14258ea72",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef5d20c-fceb-41d1-a01d-7d42a091f250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b485894b-2a07-4d12-b4c9-cee02efc4491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c74bf6-2644-4753-82f4-f6ff557c34c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e44110c0-87f7-4e16-a39c-61e4134c0b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a569d3-3556-4ded-800e-a34b6c5e09c9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d820b7-17f1-4d36-b4da-7ae2add2ef5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b7f4c2-947c-42ff-beac-a6ec25608f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b522a22-6acd-4376-b59a-5e827a0516dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a643ca5-fe23-4dcb-9b9a-f3a3fab69e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17999b92-b676-47bb-aff3-fd18505f94ae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205fef8f-ade8-4251-8ac7-8c5d612a475c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab094bb6-699b-4f95-b542-78040897d926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715fce81-6567-4c9b-9a58-e5bd91e808f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c977cfed-c26d-4bd4-97b5-e8042b19f87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3384eaac-d7da-425d-83d1-a65c08f275eb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa9ffea-cf44-4e25-b82d-c3b9c4b8644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb06794-4080-4e4c-a87a-f29019552d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3341252-2c7f-40fa-b75b-5f0e1d8a5afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be3b068c-09e1-4fdb-be57-f6a02876e2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e1d6ea-c38b-49ae-a0ba-fe092fdcab6a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074ed2df-6ac0-4773-b8e2-08bbb8b41a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea80963-267f-49a2-a3cb-2f4d7bb33b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03e7ec4-ea6f-4c27-a880-c188661b8563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aeaf428-a90e-436f-8f87-c2fbbe2c2911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cb0dfa-89f3-4cb6-a74b-2a616bfe440e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dc0f41-a688-444c-87f9-a2a0db293ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964964bc-0f70-4db5-a902-e1449216c80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2397ce2-d2a9-47b7-8b47-2bd5af78ac01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b037e2c2-7e01-4820-8dcf-833ea81fa8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd34de5-9dc8-4a9b-8b1b-e492a3ef017a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dc63dd-9266-4ea2-89ac-a82e956e00a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d670b37e-ea0e-4585-aff5-8cd7c76591cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84d3b83-5f19-4b1c-983f-f6024e05ea73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f7873b-792b-4cd4-b060-e2d79e89ac6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ff7efe-708c-4028-b797-29f09c70c9be",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd183609-4725-4aa2-9e72-2e15c68d8202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2a7385-ae0f-4a18-97ea-ac0815f66943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eb06db-a89d-4311-bc56-7f594156b246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3ea509-41ef-434a-a5aa-b5f12f4f9f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0cf61b-32ec-421a-95ec-6b78a4e73fdd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb7bfca-76f9-4401-a5a3-725d3d5457b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea16ff4e-d253-4528-9bc7-87efb16a1639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bba465e-1c7e-4902-a4a8-ebe5a5fa8a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a0d498-3923-4468-a87c-09b12aa542d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9212b33-a90c-403f-96ae-7d4d8c7ad442",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069f8743-086d-482f-a7d5-f5b9b536fda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea6ad8c-8bc3-4047-9667-1e6f3350e355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a359ef-6384-4b0c-bc1b-d82669e88ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75061ce2-97f1-4a5f-84cc-3e9aeccd0beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7c487a-3692-403f-8a66-6be35bbaa09d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91c04fc-595a-40ba-9829-5e4805842910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc7d826-ea6c-4edb-9b45-23f647c126f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a5ba2c-6c4d-4ff0-a081-af000a28ce0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66365026-ad81-475a-bf80-6e85cfacf8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e56e71-a23f-47de-bbcd-f87c349e768d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16a5655-f0dc-4303-b4ab-dfed719332ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb8d9e3-fec6-493e-a05c-87340620144e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d3a7b0-96db-43e3-a2bf-e544480833c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc7f056-b3f6-489e-a264-0cea92662d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b5b98c-2543-4d21-bc7e-ad0bbf8b166f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c03b5e2-a387-453b-a002-9dbdf13799f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70d2876-bb53-4eed-9bac-c43316072d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fd7222-a2f8-4e35-8234-2cc1e1e76882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f583119-0dd2-4f90-ba45-f0c075e22a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423e7bde-b7fd-4872-aaef-13239eb81cb9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708ec798-7b69-42a7-a661-a60b04b497dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75abfc3d-99f1-4e3b-98bc-8c098d6e1de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cee55c-5a90-4d53-9634-ff86ba07759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4561e4-dfd5-490b-a657-55618e5822ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa9ee352-5f82-4b9e-abd5-c487753dc0f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8242bbbc-16d9-4cc0-9a02-ce2a9295634d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c1050e-292a-41ed-aa72-ce7417c9abe2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "60595014-e874-4c30-a18a-edbb2fc11a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564a3018-1cd7-49fb-91f6-d74ad1a7960e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63b96dfc-084a-43ec-a660-b5162711a90e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bc8efda-5f10-4275-a0e0-056b48ee9ae0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bd899e8-b363-450d-8093-d8c46d08a4fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "130d1d19-b90e-4e2d-8723-eaad7c7cca23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8220c854-5275-401e-95c9-31ed8e38197c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d6951b3-5803-45cd-ad2e-5463576c324c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f81b9f94-eb96-4025-94e0-e91239147b47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94355b60-95a5-420e-b274-7fc5096bbbf7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3cf3eee7-3aef-4552-ba8d-63a3d538b1f3"
            }
          }
        ]
      },
      {
        "id": "d6fea8b6-42bf-4931-992d-5331f5a0870b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "21e47c5e-a8f1-41a6-a49e-2c3635b8a859",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b965540-b0ce-40c2-808b-7b20b0ce3c41",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "abe6c85b-bc5e-4ba8-8b2e-fa2f60cb8f91",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45906f50-e7e3-4a7c-ba21-3137d159770e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8ce79d-f753-4807-8f0c-1ce8fd8fee47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ffd33e-e88a-47ff-88b2-6f83570e4587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a22c9d-c161-45e4-a030-32f35e528468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953f0a96-60a1-4ce3-9e4b-70fda494aafd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb09e04b-3fc8-4dd1-a34d-8a361e6b9ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52562e8e-aec0-43e0-baf5-8834f0d86752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c0d888-6e0e-48ec-b2be-7d3a1aca0c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdceb1cd-6531-48ae-987a-f0c59a290034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbadbfd-a114-4784-aa68-796cbbe94bbe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e869601-e2ac-4d74-afe8-2d7dd2494ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0441aeb4-aea6-4dd2-a30b-f514cdea9d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6abcf4-03b5-45e1-bdf1-72468d3c4a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36debdee-0efe-4dfc-8d1d-070dd874e3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47c5e15-eb43-46af-8296-129fb7e690d0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2b18a5-a1a2-4fbd-8112-bcd0f70efc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33829c85-ad81-4e19-80d2-b3816d1d78ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5616dea7-9f41-438f-88f6-68b57f0c7074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65fcb095-4f92-4667-a642-a8849169e80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8914cb51-d111-41f5-aa4f-47ff5ba681d5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe96eec-b47a-4acb-83f5-1d566f7b18dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7910372-4979-4220-883c-f50bbfbb78aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29e78bb-1572-4875-b6be-533160d99386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6770b2dc-035b-4e8e-aea6-d6552d5c19ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58be79ab-0a27-46ec-8067-382594b93a33",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e190b01-c5c4-4637-bcf1-10711bfdb40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c976151-af25-4488-a24a-6c1a12095a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cd62a9-6b95-45a7-bd3b-e952048eff01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2058f6-5b77-4f6a-92b4-078c2ce03390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20464cf-2467-428c-a9db-d1274e8b2213",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cd66aa-4afd-4b81-8e06-e8e25f8b8932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461adff4-3f3e-4df1-a42a-dfb0c88cf329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c121f0ad-1376-466d-a233-7979a702696e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7548c1c2-00de-41a5-b8ef-6160d68f829a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8bba33-68ed-4bc1-a467-e237d2e4d146",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9844d8-65ba-4a74-a416-795331fada00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664e40ed-6164-4917-bb48-072013082b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7e7b1a-c055-4712-9111-3a48de075f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e47b8df0-3eec-47aa-8f1a-dcf65c8a4461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef3d975-8bbe-44a0-a71b-eedc1998cbe0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2623af0b-86d3-4d7c-bea1-f2390fec01d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b63484-7e93-4f5d-bde4-fea7aff68316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932b40dd-3a15-4999-9a64-5303fa4550e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff249cdd-c590-4a89-9b82-a9a4b463888f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6d94e3-57ab-4910-893f-b679ae666e66",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a81e677-f099-403e-b116-d34b6b4d31e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ead2342-c0b8-4c42-b599-4eef4b263be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20957ed-4931-4d2d-82de-bdbf00016f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a16da366-736e-4cd3-ac8e-d84919b23de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984dac7b-294c-4c8a-826e-8c1867138598",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c42b78-62e3-4865-8c17-f5f9b3e4f900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e19ba3e-959d-4500-9467-dbe4f2a1559f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c1d2c6-61b6-4842-a4b5-57e2df8760be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "694d9167-5b90-476f-8273-86aa07dd80ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d549960f-dea2-401e-8193-2f09068b0b54",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b7d695-9c62-44ca-9dd6-cc23e893f940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb755dd-0d58-4f5f-9fcb-df480feecbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2f8099-7ce1-4900-8290-9bb2669eb020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2b4e35-5ab3-4776-9f63-c783fc7d2fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e92b8df-702d-4701-b39a-75a45caaa5b1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24ca652-d882-40bf-9ad5-85ed262f030a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdcddd0-7a17-4a20-bd6c-07f70f41fa88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e899bf15-0d86-4842-880c-1a12d79f5ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02d89c89-0d70-49c0-850a-32ebda82f865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccbb1fe-ec0c-4c6c-b513-b1ec864fa5d0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f1c767-2312-49e8-9f58-0402259a96fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ec09c7-0a7f-40e2-a26c-e48a753a9e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6338f021-3464-4af9-8144-8159ecda802c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c59b3a13-08b4-455e-9f69-797edd5a7576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552f6673-6758-4739-905e-ccfc276cedee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9820c3-cdda-4022-a35e-efa5c9b166b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef67139a-b264-43c7-8653-7f095aa03aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc15256a-3acf-4b02-a287-f271949925a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "373ae306-b804-476f-92f1-bc4bd319eccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ca714a-a593-417a-a8de-fa65ac5f69fc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae3d262-3839-49ba-97f0-d6da7da86a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944f2381-7596-46bb-ad88-cb4d1d9017b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3c1dca-6e1e-45d0-b465-fef5af4467c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "acea8e21-5b76-46ef-ae2b-23d8994cf6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77610874-4718-4ea3-af8a-253aabc36aaa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de204642-34c5-4288-8ff6-820e9bf92827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4926fe7a-9aab-4116-8c25-1694c8e188cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e3c5e3-eda5-43e8-83e4-11c0bcfec062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc59bba-84c5-40ee-b94b-1015da277e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b371e69-afbc-4ef4-81ff-cfd35b9109d7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0007949f-6a17-446f-ac06-35906fcdf426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202cd0b4-0a81-443a-8392-f08ff032e539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173753e1-1552-4f52-b333-2d3438631d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e55fa3fb-714a-4df7-b1e9-9da5c1c24ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e05cb85-a86c-4a4d-84b5-545926c4de45",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262cc17b-76f6-454e-aa52-0adc77085e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e00256-6ab0-4f5a-9464-0648fedb1291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2affec-1d7b-4f11-8627-4417851c221f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7967ff-f7a5-430b-a2b8-042fea075d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbde763-c4b3-4988-b9b2-82fe8b33955b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a98ef8-e46e-44a5-9a87-ecfd0792feb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b628ba8-92b5-4a13-a8df-4723fa0c081f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accfa35e-47b0-4394-8e7b-8649b5156940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a81ab2-a23e-4668-9d42-73dae1f726c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51029aa-d051-482e-94d4-3ce37e2c346e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81e0aa0-b955-45d1-9b9e-fbc554cc9e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1f0618-3f9a-43e0-9bea-9336b6506d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb176ba7-9204-4113-951a-8c937703acee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a309360-162c-4d3f-9c45-d1815d828bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994eace1-c351-4ef8-ba42-300b944d89e7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af8f73b-135f-42e2-8966-fc0141350f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b510a96-7d07-463b-ae1b-1273a2badd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e173a1-42d4-4c35-a569-eac19102c009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e1a6f7-f19b-47db-a712-3013f77a5782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e44a201-8067-4c06-b8f1-edc29d79ea99",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91113a95-e370-4df4-974e-7078d12efa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6d6490-29f8-4bd5-aad3-46a95aa858ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec3ce24-796a-45e8-be64-f5e86a2e2520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dccf499-5dd2-45c1-a91b-cc0c02c9fabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5041418-d049-402f-b5fb-815a61339884",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9312f59-5ef9-4385-86de-b4deed56e60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4ddf56-472b-48b4-9994-1b00307115a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420ad934-19b8-4c66-b731-ec3418b7cda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9572c96f-ef93-443f-95d4-758341a440c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e0fac0-3880-4e01-986c-7206531a398c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2804e86c-cef6-47f7-a092-eb2ca55ab9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a55bdcb-7058-45c3-b9ad-6f7356592449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26e87a2-87c2-4c81-a11d-f028cc0ec06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1901312-b5c9-45ba-ab66-16738aa0bd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbbb855-7558-4f2d-a8b4-077d065a0589",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afd2643-f056-49ca-902c-626b08a574f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f36dc02-0b98-4f7f-90b0-84f8cfa65a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f931b2-689e-400d-abfe-008f4a05bbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62baa7b4-bcfa-473e-a596-6b7ff31f29b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7704910-86ec-454a-b5db-f25f04330076",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e485244e-c844-4707-abe4-48e24fc79cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce9d256-116e-4532-9fa3-880dccf05834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c329ac-0384-4c37-96b6-7af5a3f65411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bebb451e-4e8c-4e7a-a27a-1c6ada8765c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f361f7-be28-43ab-8bd3-9647dac1e6e3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f0e802-27ff-4463-b851-605adac80666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa280b6c-ed68-4310-810b-291702266c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9176352e-f4f7-45be-a268-a832e0e14ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92617196-e061-4d60-bff7-ec7ceeea4cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414b4b44-fa61-4c51-a7e9-046c1728efee",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff88120-9660-47cd-a0fd-fac5495433fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f8e350-b204-4ff3-abba-23b451b9beac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2806f92d-aee3-4fe9-a75c-516accb823b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f6e281-f4c2-483e-a20f-a07f946db0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dabdb7-eb2b-42b1-a917-b0d4c3fcb255",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5036a83d-8b06-4533-a5e3-ad151001f8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6242cd-8b4b-4ec2-b18f-f30308754a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e896d7-9f40-4bd1-9e1c-504e182cba8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "764e47bc-6874-4758-9d68-ae128fffb238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865bcf22-b70a-4dce-8b26-da28ec23167e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec01e983-645e-4c9f-a6ad-fc4395a3fb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac6b876-4865-4781-80df-090497cf06e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cf4adc-d356-42b7-ad76-dee5c82660fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ede66046-e05b-4943-826a-4a2b6670d34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2ffff7-1068-42ae-854e-b0d696a617c5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979758d3-661f-4279-8041-cafe9b0164df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb23bd0-89de-432d-9a26-db66d3b06c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a198b586-99eb-422e-9624-60f49f44f916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "461fc8c3-8697-46bb-9393-63317f064386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ce2274-c0c1-421e-9259-a080a43cd655",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba48805-46a8-43de-8b04-3959267f806c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1db2dcf-b4b3-4b0c-a6b1-692305a35c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c39dee3-04fd-4e5a-93eb-f4b708f36c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3cb295-66b8-40ed-ba08-2f70f7df9e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5ca7f9-77b4-4557-a84c-fd62d78b6057",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4065254-a76a-4407-9141-ace2f2db5a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8384382e-352c-4fd1-bd05-0201e5ff1589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39d3f58-4070-4056-b9b7-119a31cba920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3162218f-88e2-422d-a5ce-eb5f4eec12ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061fb377-dbe2-4a9c-be13-02fb281068c8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c1fed3-301a-402b-b1aa-0feea5fece03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059ba1ee-b6b5-4f0e-88e6-e129ceff87cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94299d10-c33d-4207-9f24-8f1109f0cf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fc1155-89d8-43c9-bcf9-7ec275408bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec7041a-2c86-4d8d-a5df-d326e1f010f2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e99ab3-d583-4507-9fa1-b6ae810ab56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec983d9c-9c80-4117-b932-5896aca18419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0afb17-9a3a-4238-8d97-b4e8f4d96570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1d0c9e-52a4-42cd-bbbf-e617b9dcde57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91572cfd-cd74-4891-bd98-d70361423859",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b258bb55-8bc4-4200-ab5a-b6604367e3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a5050e-1b50-45da-8eed-bab8e71b9d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393128be-5d37-4212-975c-dbf3fc0317e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51ca1ee3-68ab-4a3a-b536-074885d2b2f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a3ee53c-db46-45af-a886-186dbea177b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1d66185-09e2-4bcb-a3ce-55aa3d92b7a4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67df1dfb-836a-4f55-bafd-87650ec7a6a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6b723518-8639-4823-af4d-87bf7251053d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d713082-d9e8-4d76-a907-5fb31e77e583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a8a2e95-bb2d-4343-9781-fa6cea6cb0cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf085f77-b346-4c50-b268-01734271ac85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c82efd37-76d1-43dc-bd63-8113cf0120b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16ccb9e5-2cf3-47d7-9385-2ad451769dfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5caccac5-84eb-4f1e-a89a-0089fbb48952"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95346a18-9d20-4067-92ac-0c5f4b98abbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e72feb42-f2a0-433c-9c94-dfab47d87381"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7765f14-b322-4abc-950a-95009d8ffde6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c38ef29-71b7-4bd5-950a-27bab00a2aa0"
            }
          }
        ]
      },
      {
        "id": "7b627fa5-5176-4d62-9758-0745b7c6cb6e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "74166a4d-7d05-4f4c-9f7d-24eedaef7778",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0860c292-45fe-4901-b5ca-5e30278ca2f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08b3ee45-0417-419c-bee3-f4e1a25432fa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba90f35-f8e2-4ccb-bb08-13ad49202a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f27db94-6ff4-4fbc-bdc0-012b17e4641d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b797be-bced-4cd4-8852-a84862f92f19",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9107bac-f9cd-46d7-8b07-95dec876f4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee280a0-eca8-4a50-b1c2-dda9d1892051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3bd8d7-03bf-4dcf-9c96-524e0947367e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e365a93-0b85-408f-8f0e-c2e7e306125e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf30fa1f-3b5f-4aaa-8502-a1b2fbfb0f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c7ea0f-67b2-40ef-9088-bb1e6acc0209",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bae8197-d33d-49a0-9511-5693481b7841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873444b2-1af4-44ea-a60a-b2b96b807632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cfe87d-cf30-4c77-9aed-f710936e5035",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f90780-05bf-4008-8ca5-b95dfdd20564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3c7312-9fd7-4292-855c-23e456d09779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311f6afb-21b1-4b0b-a267-36b03501a31b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b620bc-d2f8-468d-bf2a-4af110a62d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fe8395-3a6a-4683-8036-0f13c16973c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7183f372-3fd8-4bec-b5d3-f0c77e8af4a5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cdfd4a-bca9-46fa-8f6e-3d247209bd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d4679e-9470-47ac-bd03-394d197fa57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea78f4f-6c26-45cd-a518-d858bd3799f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93639f76-3af0-4a1e-a139-845e16e57e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e3b4fd-12d0-4270-947a-9e64622cd6ec",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241c46af-d842-4eaa-bf47-0c17b0a812c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b267d2-d0e8-4106-92c5-fc763492095d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063b7455-c55c-4bd0-a60a-acde57a1240a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346398c1-6b9a-4bca-8044-e729512a04f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e533393-a4d0-42a4-9d5c-a3d7410fe44f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55609583-4550-4de8-aa2e-9d91a17abfa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67b25bdd-6d5c-4062-aa30-5a255f8e1527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c65420-1a48-4253-8f06-99ee78f8be13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1220cd-0dcc-4fe5-907b-34b2edacc776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a92de0-38af-40c9-b2ed-2b5bb160d804",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44e0921-b2df-4d56-8afd-64b0e0c4df15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99acfeee-c7d4-46cc-afe3-311ba2172c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3e1499-2928-4ff4-96dc-0ef258429938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95fbeb6-bf0c-406e-ab31-efba57a9a6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94ea69a-c207-44d8-8e7b-666a2555cb8e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d55359-e32f-4849-84d4-60bf2e241f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a06aefe-c131-464e-8d15-86644ed9c5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4d222b-7a0b-45c8-b35c-ea59bcedbe4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c942aa-7aa4-43b2-8950-59a3a1c4f7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d8d584-aaa4-4715-b29e-c0b1f3e68a7b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3228b9-e2df-4eb8-93da-afade351b907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082d9db9-3b3c-4ddc-8d05-1248e9c228c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b7c931-6e05-4dea-95a2-3004ab0cb757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338f1fce-e1c7-42c9-846c-bddd7dc97f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74af25f-ccba-4da4-a8d0-c1c25d6c5763",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2846ca4b-c7b1-4151-b75d-c84b4633cce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b8333e0-723b-43e0-b19c-8877d1aa58b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9b6e3f-ceec-46f0-8f64-8d735186493f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022b03b7-d4ec-46ab-9016-700ec6d5d464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcfa278-c8ca-4940-9c21-ccf58497a8bd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbbce92-0d32-4ad8-9ff6-ee4bb1fc5d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "837bf95f-4457-4815-9a17-754b79acbab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4eb7e29-6a47-41d2-b83f-0dbb592236d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80fb35f-10bc-4456-8543-6e26f835c78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8668c0df-43f0-4e72-a048-e2a8253b69d7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9c87f9-c3e7-4d55-a255-2e1c5c3fecae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a6b008-c1c0-49d1-beef-2a05bf56effe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327f3ddf-ad44-42a9-bb12-b14aeec28e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb2d001-7f3b-4468-a864-e423ce4998d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd03b2e-cf4d-413f-ad88-43468c822d8d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebab9dc-b9f7-4a91-9789-f693e61b1035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e354e936-bbf8-449e-9b89-86661e1178e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966267c2-2620-49c9-9686-d265fd9e7e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78945ad0-1bea-4e35-a6b3-87fc1d4b4416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae5fe28-774b-4e67-bb61-1463eb91a67e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8191497d-adbd-4814-9fc3-89c65100470a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263cf44b-7b7c-467a-9d3e-da09626cccd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ea066a-f5b6-432d-bb2d-03fc193e4e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5580b252-fbe4-41d2-b434-68f06b244d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ba444b-2313-411c-94fa-954097af6763",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09756a14-400e-4032-b3ec-979c6c2f022e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7ee881-ffde-498f-bb72-b14319c85e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad67651a-07e5-4b93-bda7-6940998df054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4383a3ae-3f7f-4c9d-a88b-740bef1876b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efe8417-35c3-412b-9ca1-8fa10f519638",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c467ac-d5e5-4726-b18e-09d18f361301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53a62aa-f293-4861-b682-0ff061bee78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b228d3-165f-4a89-836b-fcaa498cf8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25f5068-eaff-428b-97fe-4fadc43a3bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07922b61-63c5-4324-9fe4-8001e9581d62",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe0aa66-4e10-4bf5-b862-1710338e10d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56b28b1-609e-406f-b876-312727a06a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20775d35-8883-4e66-bcd3-938ddb9f5f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e706cdc-356e-4023-afab-85f62906a66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba28c050-9d47-4249-b947-0551688f85bb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d416cb-db98-4fb1-9646-7214448d8cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949274c0-af96-4606-96b8-387c404f14da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017e86c0-bae7-4ccc-bbbd-db44a7d1398e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dfa249-9cbd-40f7-9bec-458de7aeb2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bb9ae3-321c-4d10-8d54-822b34556f6e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9df3a06-c8aa-40f0-85a6-e8eb6fb7d29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b84322-7747-4d32-9ae8-0f6419b576a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50546e50-4f31-4b4d-84ad-ddacbb36b991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c96e38c-56ab-4475-83df-c69cf65a5e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3625c2-65cc-42ee-99ce-7c1edb058a12",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e664fdf-2e04-4421-af56-262e4a34a356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8ed66e-294f-4b15-8720-6a627143b290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00acfbd1-c53f-470d-9f1c-7cc40b75b46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11783931-648e-4b66-a68e-863027fa2a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1318b2f-0d00-4f4d-92c9-be2131430aa7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d75250-62a5-4c92-b50f-7d1d6749d1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c99462a9-e44a-4054-bfcd-0adcdaf5564b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adf6f2a-f379-4394-bf6b-aaa397c76626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27586647-75e5-4d48-9c94-5d6fc935077b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914a5602-9dc2-4d5f-b2e6-16f72e60fb76",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf725daa-c990-44ed-bea8-13eac1c3d079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a62459-08ab-4db9-bf26-f277b2b6792f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d03c634-e82c-4c5e-8e73-14662c725ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aceef5a5-0523-4e2e-8a1c-150ee1fb75e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a29a4b2-65eb-4c15-b813-e96956cf6e0e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a6b294-9517-4fd0-8526-ec0914981008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e40cf6cb-09a1-4043-98eb-d979a8ebcbaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2a1a88-f7b7-4e75-b563-02fee42a0423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b3ae97-c9b1-4606-8fb5-289e91dadb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c935e180-311d-40c4-a829-2df646b5a246",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f7b2cf-6f93-4702-ada1-17378e361f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b068085c-0063-45f1-89f9-e4b5684aafa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4262e7f6-ffe0-4e33-97b0-dd56f79f6bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0f054c-5839-402c-9e6c-30e64b43d623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f69d8af-d2cd-45eb-8796-08bd6d1d6eea",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb112e57-8018-4ff2-933b-179723a8e14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6692425-62c8-42e7-9b6e-9b489a746151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eef366-6d1d-40a7-8c44-37add01dc933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751e8c6c-1cdf-43f4-ab15-571d37699d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afd6c69-655a-42fa-91da-87d5cd07516e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f0dd05-eb63-40c8-8559-2bf526146620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e0fa79-3752-44e2-b9d6-6271c1b7b498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75249c8-0543-4ade-855a-cd75aaa15dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7025c1a1-2f09-498d-842c-734122bdabe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ce7aee-bb8c-452c-bc3d-c3c0e87413cf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac693f4-9314-46c3-8eb6-dab9a2c89a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1def1f3a-e4b1-46d9-adb8-a9cf6f6b7aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a895d555-d051-484a-90a6-aed4d4beea22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee9b296-4921-49ca-8164-7643abd5f3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d396cefa-bb97-46da-aa52-64246198e22e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cffc1a7-84a2-48a2-945e-bf767caf835e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6cbf59c-195f-4aa7-b2d1-6483065a2c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5755400-cb69-49a3-a122-606e511bd0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d8da43-6d82-4021-80aa-af282e55ac02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4926ac41-caef-44ac-9485-870138681a57",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b32816-4b70-4f60-b771-c83c4669bb33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6063f996-cc92-476f-8685-dfa37b6d9d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede36223-0d43-49fd-9e4c-e09fe8d4b402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959170ba-653b-44ed-8df9-847f8162a59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae11958d-abe1-4595-a921-97d52d5f4282",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e485b64a-2ae5-40c3-8f73-ee3fb8891a4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f3ee3ca-c61a-4833-bd34-36af8b0c5156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbb9884-39bd-4339-b3aa-83a2208d6d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84b2047-f185-47a9-9e44-44bba8275cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4c06ec-3c69-4568-bf85-b40d3e542973",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f28ec4-e245-4f6c-985c-f9794a5ea7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcd66063-ed8b-46a4-90af-e257ed035f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c40833-4ae2-457e-8d73-2c87dbb8c3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c3a395-78b1-4ebd-a3bc-6406f2421b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d54283-b0f4-4107-a1b1-ba67f9f3d6c6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970db73f-5479-4537-8c36-314616778a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a38bd0f-1e62-4191-92d7-cab50f2590f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f054921-c361-42de-a4ba-f22ad8941d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65dbdab0-99d6-4591-863e-cca25fcec4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16829aab-6da3-4cf1-85d9-69b45e2a3093",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5bc18d-d657-4517-954b-621450a7b38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1565996-2be4-40eb-a427-f733b30f2727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c965d43-4d6b-4993-a4d0-35017efdb85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81c698f-8122-447c-a0d2-8e2f43755a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5a0af9-22f8-43b1-a297-8708f1c9131b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0126514-6340-420d-9295-cd5dfe00fc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f283638-95ed-4c55-bbb5-cc009e4758f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4025b98f-1211-4fc4-a0cd-4cac23399308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6488ecb6-13ba-4b43-a703-5c20a78f36f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cc2d7f-6d65-4395-939e-3a9744e23cd4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5db86c-5b1c-40b3-9aae-c7d8673c0a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813ee452-a9a8-4372-95e6-5d58882fd382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aac30bc-14b2-4e79-89b6-4f06caad3aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7e4732-696c-40bd-b090-125bee478b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b98c270-fc88-4d9a-9092-71d0e8b13a4b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8942e49d-96e9-413a-88fd-4d854da53ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2e1986-0f31-4744-8d29-1cac2c93093e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61996ec-6f06-42c2-ac32-3836ae41c297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2249259c-fb98-4054-90c5-0ccbeb8866ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8946c20c-4a1e-4682-9132-7310220b6fb6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ba9364-6d28-4b74-b19d-50a738e4b088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792a80ad-e1fe-4b13-9f2b-c2b9401867ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24859f7-600c-4c63-8f1c-a814113d3c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87171db-8ef4-4483-b57b-beb39d121a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2adbd4-8b65-4b75-a75c-771a50ce43d3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e551df-6795-480f-a7ad-4a6641026982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b7cee8-f1cb-4ed3-92c3-3ffdd0e6708a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3fd7be-00ad-4557-b38d-67e8c5196055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35971a4-09d0-4769-b538-a02aff32b3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddab346-72fa-4754-b6c8-cee75d9788f6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c186b469-75f5-4a10-b1f5-e9ad413e55c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f2fb37-7ebc-47ce-bfe5-f7154c709954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db26421-bd10-4068-95a1-5c9fb2fc590f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da8b9b3-b18a-48a0-8246-c8cf0ac3c264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cffe4a-3eb2-41ba-92bb-258b9f253f11",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10da53ad-2289-4653-8809-a03386b8f2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff6bcc3-47c4-4d8a-8d72-9c7b81595777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc6f058-6afb-414b-a1ca-ea950a3a0328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5208e90-d982-4169-a4b1-f72c0fcbcbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4168b9-f83a-47da-b280-cd6221ec7cb8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7750aee2-8770-4845-acf5-a355556b8652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b92f939-374b-4df1-b582-d517143bb4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fea19fb-a564-4f50-8a3b-95d09874f694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da1e62c-b110-47e1-a978-a683a0ccd76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6456a4ac-6c65-4f8f-928c-129090977714",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46406fce-5f28-443c-9c42-7f446bed7134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f035fa-1ed6-43ef-af08-5765b61e2ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9121ca26-5cd6-4ddb-9fd3-29a375330d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807ac4e7-e33e-4003-9aa0-e2d04e7a3536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e8f39f-640b-4ee9-8978-5b9544ab9392",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29ed222-25c3-4b38-95f2-2d75eee23009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80628983-8011-482d-89a8-6c61e3f03d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae585fad-2f61-4d1d-a3e8-83a49a3ace59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474cbc5c-e3da-48c5-9a42-aaeb58424a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7752cd12-7924-4b92-b54f-fe00f217ad1b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bc7ca6-60af-4ff4-8580-3928b7e9384d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2142425-040a-4d4d-bd43-a32f9900bff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02757b70-0fe3-4a7c-9abd-68e652dc0d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd04b78-739d-48ee-9cef-c0eb463cdde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ca9168-1f7a-4cb4-a449-519478e235b4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f54ee50-92eb-4768-9f37-a0241ced5b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2698c632-fefb-4a73-aaea-b4dc1d1f5bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee03e850-1705-4aed-a17d-bd5f05b1d99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a25bbce-5e51-4d4c-98d7-080804be61dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aca339d-d37d-4ff4-bd25-f0751cafe048",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda8fc92-d4bb-4df4-a250-f029302b626e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6833da43-a3e9-497e-952a-23ef97e3c587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d8b56f-d3b6-403c-8e4e-34c6fc56bcc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d971a0-867f-44bd-85e2-fc69cfce2a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf21a43-7eb0-4850-bd8e-b3e8a3675ef3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be13849-33e7-4f56-8fa5-849934d0f06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6642e46b-99c9-4cb4-ae09-99a919403109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193ba746-5885-4c57-a2e3-6c5dbbd1be89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55da1f3-34fa-43b4-b8d5-8ff910f6c659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88eba8aa-91a2-423c-a57f-1ac14723b097",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f982c27a-869f-476b-98ab-50551e8c9327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61486ea-a33a-400c-ab74-822e5f5a5c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b023c398-6ad0-44ed-a0de-b7993b95a156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a9e43e-f7a3-4b6f-b973-df3a470b8090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fe5e4b-3252-4c19-84f7-d0e4253b0ef5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdbe482-17ea-4c86-be6e-2846e9980f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5c7ed9-1b58-4593-ac82-4075e401f13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3534d13f-92fa-4457-ab95-56beeefef987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8719bf2e-11d8-45d1-a5c6-b6e67277ee6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb2aff0-e1a8-403a-851f-2768deeeace2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889aa536-4ddf-40fd-8d1e-721bc561326f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1394b331-cf9e-4ada-8dc6-a6731a5da00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44014bba-fdc5-4012-b3ed-2c0832f7e4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da5cead-2614-4986-b80c-7c01cd71ba40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918d37bf-4910-4b34-9298-2985f6fc556f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d5322c-40db-481f-97e8-c5dbdbf75883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f60c229-4e09-4b08-b7f5-9b158a223d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d228ae-d469-443d-b026-25a512a6a115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2dac90-3418-47a6-9bd7-97c814af1012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa06202-7563-4905-b267-180a43d433f4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fa040c-050d-4631-ad16-ae1a36cf9319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ebf3d3-7adf-4968-ad47-a508ac129634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d6938d-186e-4da6-aff7-7accac551d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50eb5db-9646-4f12-b503-1694afb2f97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e230d03-ef9b-468c-8f33-17a68f2ec874",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3703b07e-4e9a-4d27-854e-47e9be0510a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea1c87d-9a48-446a-9560-23031565c5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4d4a3c-cbf9-4b65-8b5f-097a8a4edbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26011ce9-d9aa-41ab-a7bb-4a1be4f33311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a51d85-2711-45f6-8b12-3dae50ea4a48",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91de226e-e908-4117-ad56-27483f1e61e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ab7909-c4c1-4fd4-8b39-26a58b13d568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecea5da-ae38-4865-be3d-9ad2c45691e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbbad82-eee6-4c59-9e38-59f9990b4ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa00db2-1f2c-4ddf-b017-5f85e87e2886",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acf2518-38cd-4e2b-bb96-28746164d81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604879e6-8427-438f-9ba2-78e08c80dc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c9807c-640f-4626-b887-27beb37d56e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820a91d0-c0d4-4bdd-95f8-d239848a7b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a47c15-4b22-4bbf-bd09-81e8a91989d0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab97f138-8246-4114-b6cf-ed2fcf0b9fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c688ef6a-0dfc-46ad-9b57-83c294ce75f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cfb9b6-a3fc-4b4a-a167-8f405e310167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df79a2c-ff9e-4bf4-bcd5-fe44cd27e5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6f76bc-7742-40af-b53b-10f321a5a28d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87467493-ccae-4143-96d6-e3feb9772a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2bf496d-8331-4299-a53f-8a27023b0615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614aed72-c007-4e75-a7b5-be450c60672d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee509eb8-21ab-42dd-bae9-5e76d97a6a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4243b56c-3aaa-46a7-b9a4-6c75545ee159",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4774f449-4e36-48ee-b56c-6a4b518a535e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd32f953-210d-4a7f-a792-ac3b057ed152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2310b58-fbc9-4ba3-a361-44b9722300b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e43f39d-58a7-4ad1-893b-6020f015e959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978530ea-2669-45a5-806e-d8986fd0a301",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddad660-d27b-4266-bbc8-55bf466ee5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98abcbad-7f5d-4307-af42-3faa8b34f751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90104f41-1593-4452-b2d6-9d29411865bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b60a4d-d42f-4cc6-80b8-28c926fcd547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c83c3b3-0b81-4ed9-ab39-ef24ff8dba15",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae0d06d-436f-40f7-a507-2291c07017cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cb25a5-c80b-4274-82b8-5f231020bd13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4013b420-7d73-4a1d-a97a-ed92b90f91b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4165c1a0-e7e1-42ae-a5aa-72ff4af88c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98cb202-b6ea-48dd-a413-ec8d25b12fc0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b109618-42db-403e-8262-3a170542e2f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffaaf4a0-d5b9-4fa0-80f5-d680a62f6121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5709c0-50fe-4aa1-a4d4-6146f7dcbe67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dce7cb-1992-4273-9169-b52166963b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81067993-76cd-4d7f-995f-9faf0edabff9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be53562b-f734-47f9-b491-13a572118e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194d4099-8b72-49cf-9646-905f2c45bea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76fd019-8b12-4faa-bd63-231a4f5f2745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd3e521-a7f2-4231-a175-3ea837712036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a1a3e1-7f98-4eb2-b07a-fe30757b7a89",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f96e84-e0a9-4d79-a576-3927638deffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9e76c9-c167-418c-9f2c-d1870f2e57c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c8aa74-e929-434d-989a-3ca900542867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40835f79-31c4-4d45-b3c9-2f9fd988ab3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab09a93-60dd-459c-bffe-fae0649f6ad4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513e0994-c946-4fe6-aa91-1dcf2418a70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad194b1d-07c8-48a6-a2b2-9792bf6fda67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b818045d-1ede-498a-8127-796cbc0681e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de33ed0f-f87d-446e-a6ad-d21aed4d6b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7721818e-1fec-4a92-98a1-8fca75471aec",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f33f364-22e5-46e7-bf0e-6efdc5c6281a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f491d472-ab12-4790-8cb4-e7045b8c1251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c058aa1e-6f51-4210-b32c-7c64d4e9fea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe576730-d356-4063-9968-1f1cfc1f6269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eba347e-edfa-44fc-b515-82791c666a58",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a060060-40e8-4a1e-9457-9cb2722f43f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de7a1d7-4a82-4fa9-afef-cc89ab2fc989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84f661c-bfa7-424f-acc0-60d36399c2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d2e948-cd39-4d06-bb0d-ed67bd57afa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd98bd8f-3e44-48de-8eb3-f8a77859cc39",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7d892c-3f5f-4051-a0f4-231297a9757b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e8956f-3e1e-4b89-bf9d-eb61f5b6d4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a4ef1c-abd0-4d03-9e40-0cd2de72fa87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8303335-32e5-493b-bafa-a0056b48bec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d56f8c-da41-4fff-ab4e-3b8b1bdc3b14",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d0854b-5414-4d9a-ab41-0bf9248e1f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c1135c-5d27-46ab-b888-5dd1f81fdc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8c4913-ff87-463f-b443-f866fdd92029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782de3f0-10be-4f44-9fb4-c2def5de2178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41702c29-2ed6-482f-b661-46f8ca0a0be7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18f4332-639b-4ac1-adf6-d0e3fec105f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5173f9ba-4bbf-44dd-8066-dbb420fa6512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf2e838-3b76-4a94-896b-411e6dcce633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befc61b3-348e-4057-9f28-80328f259f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60839197-0aa1-422e-8440-8c3a9bf96c95",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec47e67-e97c-41e3-9ef0-92f7fb5b8dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e074c664-7521-4e36-90fb-e8740a43c047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb827011-acc2-49ca-826c-9021c60ec8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61016275-c281-453d-a996-dff8f58eb83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec859f68-b3b6-420a-b390-55f1f8d42a0c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b034f9-41ba-4586-a8b6-dfaf81b4db33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff8f15c-f88c-477d-a898-0b9bcf72c8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f8fb51-bf6d-4f8f-ae1b-723b9bef6b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684c0793-ea10-4e06-bd67-30be6d8214ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab757187-b260-400f-9c71-9ff7882b9643",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3054ec99-5c69-4c93-93f9-bd5ec646388f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6de0e0a8-809a-4ec5-b6e2-c3f07b721cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd183613-00b8-441a-ac57-f75f1a32825a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5282bf55-6115-48ce-be17-ef6b306efc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87f02cb-b7e2-4bde-b720-d49bf16b666a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46361e5-08f0-4507-bc40-f321c8155125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f7a0732-dd11-477d-9b57-32e118e1d58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17a66a2-e825-4fd9-b9bb-910288b2afe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e739344-3675-4f7e-bc57-d4c3489f78b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fb1862-0c06-47c6-9d9c-a6b40c59ba98",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3275407b-7a6b-4ded-8519-c7ab32077abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e5715be-55c5-4999-bb3e-74a1d7dd8dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4031cf2-9304-46b6-af05-914da077e3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458b1022-c466-4a84-adb5-a34a2573596f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b19e55-b065-4f7f-9238-79b34b4f881d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea1eb42-3cb1-4dac-ba28-824c5df35b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e2fd79-9e21-404f-8c8a-6fb9ce4c3a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325be2ec-b676-46f2-80b1-71e2890bd917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21618baa-694b-4b1c-9739-b49d6ae597c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13666ddf-1ef4-4666-a447-c9dc463de047",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f633472e-a4f3-40b6-9cf3-4df89041a139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849b36d2-e603-4829-bc69-25e266321297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3688c3d9-480f-457e-bfb0-c87da4f2c140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8542f877-1625-4af0-8990-e99420580396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a521cbe5-bd24-4f25-86f4-130eeaf4914e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed49787-2d53-49a6-a0a7-694b70836a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5314b0-2440-4b1f-96d5-7814973e37d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d887b352-d12f-4587-a866-3d304b78d741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594f3769-3873-42cc-93d2-005255fefbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118a4a91-47e8-45cd-aedd-b2dc9ce46db7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1536c5c6-38bb-4674-8669-3a931c0f12b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414f36f9-6da8-4298-a56d-74852666929c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8a9654-ea70-4cb5-b263-727cb78ed4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e379d87-b43f-4771-bc7a-2381a1adbf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9c4e41-ad4a-461e-a4d6-8524b56287bf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d024fb9-87e9-4c35-98c0-31336660ad9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27347cbb-feac-4cd8-a085-469940296e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b780bc-3a79-4b63-82c4-ffc73592391b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836f8f5f-59e0-4330-8900-8a58499a8206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327dc44f-950f-4e39-aa33-1edbe57b9c15",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab478f88-27c4-45aa-857e-6c5f24a1d48b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c13cbb-63d4-478d-8260-d3aa211e87ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8141912a-4bcd-45d0-9646-b2a3c63d401c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53939641-7870-4fbf-a9e4-cd3fd594b97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923bfbc5-68fc-4122-817d-ac038edfe8a6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44996cea-a2a5-4893-b365-fe987ff7ed08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1020f8e4-2a20-4893-9817-17bb94328bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2fdfc7-8926-4b62-92c4-bb5c730d7bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cc1cbb-0296-4b48-9400-c63a479829e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f53581c-c7ba-474e-8b31-bc98cd1b2f06",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c72b9a2-68c6-49a2-b052-d481bd1f1f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc0e49b-d576-4135-ad8d-4b15b4cfcce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58126e4d-7e36-45fa-9df7-ce5682ff20ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a1c5f2-711f-4b05-a243-b9e19793133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43158a2-a39f-456a-88a2-14e9b7d0d1cb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f390b86-5434-4fdb-9907-f1c397f328dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d597f07b-fe2f-4ca8-802a-13424cc1a5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1678e9a8-f595-460b-99bd-a518cc820dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd384009-c8a3-4822-bed4-464b16b99cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b4a309-8bf1-408a-8bb8-4196c16f430f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03b5393-968f-4b75-84c3-571e25b54aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d442481d-6c3c-4861-8392-ab3604480754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e50275-d127-4ede-91d3-4ade53ad4594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db24110-891d-4afc-82e5-74bfa0cc7598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15c5898-3050-4f9a-a803-21e24a55fa6c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53738707-5201-48e1-b2ae-a4e0d2cf5890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c763047-0d53-4c27-8e2c-934e623bb5e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6b8557-1735-40b0-8746-4898c3d96118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da958edb-c368-49db-be1d-8dd5148226e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c127ba0-0004-4bd6-ad5a-af37349a4f49",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93486e11-c63f-40ca-9967-9280ca0ec0ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ecdeb3-81fd-4cac-8a1f-e4b520e3e2f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692d663f-99b8-42f0-a32e-2635b7736ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74715cc9-49f2-41ca-a6a5-a287466722f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13c15ad-1514-43de-afe3-ae11cde240c7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04b5808-cdef-4d70-bfc9-b29fc4b368b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb40c963-8c63-4fec-ada7-d511a5469250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6829f49a-a830-4ae4-9251-f1948182b215",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5470ac21-fa00-4035-a126-abbdb2d8afe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1859c466-d675-4bbb-94a6-cee539180e1d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b15f478-7f78-4065-b9f2-9493672bce3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ab9bc24-1d9a-4099-bfea-ea35d38ac3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8a27c2-4310-4bd7-9f2d-3f9af49592e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633cb2e8-eb47-41e5-880b-f5530eae0f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2949086-cc67-4e76-9d87-3b51087012c3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ece9f43-47c3-4efd-add6-bdc955a17d01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be5c189d-8b84-4780-bc9f-b46bbca38587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72d69de-e069-45a5-a31d-8d6d6f7c588e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25f5d00-4d9b-4256-8f7a-26e29eefd609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7db528-b7f0-459c-9de4-41404e86c001",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26dd4b3d-fc84-4dfb-b60d-f9b0a0e14db7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8544ba-8826-4b79-9f91-4e157e587077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de726558-afc9-4933-9dca-a4c61de14a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b810db-0fe0-4cd0-a077-ca7f84dcfe6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfc1f47-daa0-44a9-baa4-8f16e460c7b3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d778def4-33e8-4c53-86e1-a08b2e25e49c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42c8209-5ff7-4e6b-9a9a-23c51880feba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffd7bfd-e03c-4113-a8f9-2dc187180550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22590a16-d278-46dc-80e6-b435350dede8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7187137-6816-4212-b8c7-a050f14f694b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a428f2c8-597d-4c8c-87ee-2f00d2923363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07414dcd-2c01-4d04-8f38-de64329789ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e552f1-3326-4236-8590-12975b5388ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70ab027-e608-46bf-bd2a-f138ed34b0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2aadbf3-d920-49de-b132-bdaa59493801",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703c2061-133a-4cc9-a8ca-d36f5102d356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56025dde-bc33-4332-9573-81de28794294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553dbb3f-a329-47d1-9ace-43e5f414d2ea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99320187-2d47-4533-ac37-1ee952679073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbde6a4-f41e-435b-8289-650ab1651f3e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7ca1c2-2980-42f7-966b-1adf454f588b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db4146af-90ea-45b0-bea3-740bef2ccde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d96812f-f863-40f7-abea-f965fc560fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c693dbbc-4f68-4f0d-b45b-6c196cf0bd11"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4afac25-46d0-4158-9924-ced7a9d0400f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e9af76c-8a02-4675-b493-122105fb2022"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b202bca-e4d5-42e8-9d02-18099b1ca066",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5bc8e0b-e2d0-4d05-87ad-567b8d2857cc"
                    }
                  }
                ]
              },
              {
                "id": "f80f80c9-41ef-400f-a19c-f5dfd04d71cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf99b9b6-764f-4498-ab7e-1229eae71c95",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6395d1-8f3c-498b-b303-b8d2df857946",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f2759a99-2181-40e8-81ec-72ad805dd751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811b8796-9ca4-497b-9d72-269d03db2c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ec30ec2-5ba1-4e1b-aa19-92f90f032f5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab88f6db-3daa-4509-a588-543e1cb7e186",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "982bdb35-7785-42f4-9fe6-53b11d48158e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3577f21a-edb2-4189-859f-e2c51ac9fe9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "598d9949-3e3f-40cc-95e7-405bd55b5779"
                    }
                  }
                ]
              },
              {
                "id": "2750ef7e-0d79-4852-a08d-2fe5704b60e1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d5fa775f-0b03-44c1-b042-ea2270ffbe87",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a60f0a1-456b-4a28-8c34-23da6d3b5ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5e6c9c3c-f1b5-4549-ba99-af5bc32d58b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a530cea2-1755-49ee-aa6a-72676086377c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd593ef-a4c8-497f-ba36-3c649be38482"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "54584271-3e33-4710-8871-5c69935fdc98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e634fa5-5b49-4846-b71f-055fcc06777c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "578d7f6c-1551-4141-8088-c8d0b3388abb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cd95de5a-bbbd-4323-8109-b222e1283399"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1182390-3326-4dfe-b941-691509541226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49bab403-2895-4310-8524-c3c793497cdc"
                    }
                  }
                ]
              },
              {
                "id": "88070e2f-ba30-4921-ae14-467814345ef0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "faa6e1e5-b4d0-44d7-b094-2dd81161ba17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6566070d-cb71-4aba-900a-ea90aba671a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3995bb58-8159-4fea-be13-76554259b5f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da26b23f-8c4a-49e0-9e12-4304f595795b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f777c4dd-d9ff-4ce9-bb56-554f1bb5d781",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9dc122b9-9f70-440f-be5b-b555e060d983"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f6e2fde-ac39-43df-acd1-d7c39eff4602",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f45d2631-25ba-4345-873d-5f5fb533694d"
            }
          }
        ]
      },
      {
        "id": "0bb6129a-7389-4697-a5d2-a618c4d210e4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "af7c425a-2895-4c47-9ff9-bbc293e4308d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d777b76-ac77-45d7-b9e6-5feed6940a3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96a6d89a-fc2b-451d-9cf0-15596ad9b958",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798a3f65-add2-4a9e-97c0-7c4200b72d60",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "333f149a-78ab-4a04-a441-fd9e32f66e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e81ffd-d229-476a-98d3-817da4cb39cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34d07d1c-eae9-47b3-a68c-407327fcf7bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b70f01b-2cd2-461e-85bf-889873e7b89e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ba98a08-a1d4-4aa4-90b0-f68b4c946276"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "241ca399-5585-4c93-b3b5-8a1a0bb0ef97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35433060-7ec6-4454-acbe-5d52d155dac4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "930b84dc-6492-4579-ae4b-861bf6fe4301",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c61e8e0e-8b06-4bc3-b4af-a28da1abecbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5958dabc-1f90-4c2a-bf41-f718c9e97c94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4cba834-ae01-43aa-8d20-d5aff311b562"
            }
          }
        ]
      },
      {
        "id": "3090f8b1-9fa5-4ed6-82bb-b583b8356932",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "735092cc-d0c2-4c72-9301-b7e1540ec74f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08954dd6-6622-4c40-83db-7e450982b0f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4d52e9a-9869-4fa5-a134-69061ef1b349",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4169711-5143-4cd8-a923-20a77af2055e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e91420c-867e-4cfe-89ee-28eb7bb84e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea99af5-bc31-4fc0-8fef-a2d3c6738d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a22d94ff-2fe0-45d6-9196-1108269517c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "943b266a-2d81-4a3e-b498-1cce9ebd2933",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "581d2f71-c988-41da-ae45-2d1029d0d177"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d18608d-6fa9-4429-b913-10100ec4e610",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9474296-742e-44ce-88bb-b037c7012adf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "716b68f5-b96d-4598-9290-27d02d2b8ef6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7747db2b-5017-4700-b7d2-9d76e3897c44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50aa603a-d703-4d84-8143-d1e5426bcbbf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cff4c367-1456-482f-989b-647989bddf97"
            }
          }
        ]
      },
      {
        "id": "e5e92830-dc4e-4d8e-806e-8f67877a7a01",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "984382bf-b75a-4180-a6ab-0bc0c87b94cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01867747-fff8-4174-8e62-95c20e25f299",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bae33c4e-05d5-4373-a5a9-622b12e9380e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349904f4-d010-4220-b642-ad3a7123d7be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95198a3e-8489-457f-8e39-135265abc052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba545f1-772e-414c-a1a2-5f0c504a821c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcb96c08-0e3e-4cc1-a655-260eab8519d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd103612-e380-4e70-b440-d4e182fce46e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9fc6b08-19fa-4940-9ce8-57ddcfd4cee6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "131890ee-28de-49f8-ad4e-3828ef9330b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdd0bbf5-6e9b-40da-939c-d1262fc3f5e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "278de639-a96c-4258-ae21-939d7915b692",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "308e0430-654a-44f1-b144-1bff8bfe9076"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95ddd697-3397-47c2-8011-54209a3c56ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d50547f-97ac-489e-8dbe-17791d66e69b"
            }
          }
        ]
      },
      {
        "id": "c2260631-fa6e-457f-a7d8-2868505c178b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5de32ae6-983a-4c94-b2e5-5da43dc1a480",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "683efcec-6b04-4a9f-aaa1-390399527719",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "55bd26fd-92f4-4e30-a760-2a6f0d1e82f0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f4ef852-ab5e-4ba7-8ccb-9367e15a3a7b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0ccab42-00ff-45af-9dcd-0cf45681011e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 221.29577464788727,
      "responseMin": 20,
      "responseMax": 5906,
      "responseSd": 390.29881634266377,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689295684870,
      "completed": 1689295761980
    },
    "executions": [
      {
        "id": "935649d7-9636-4a97-a8f5-f7089b8e59e8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "96c757e7-843f-4f1a-8f29-a944aa2a99c1",
          "httpRequestId": "f493a27a-5726-48eb-a473-d1561aabacef"
        },
        "item": {
          "id": "935649d7-9636-4a97-a8f5-f7089b8e59e8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4c969532-7f36-4552-aba4-ae1f210eea82",
          "status": "OK",
          "code": 200,
          "responseTime": 130,
          "responseSize": 0
        }
      },
      {
        "id": "dc81c130-c659-4d06-a7ce-ccc9a6f76586",
        "cursor": {
          "ref": "28365767-2664-4c47-881b-6d5b74092f4c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "618f56db-887c-4589-9e5c-861308186bd7"
        },
        "item": {
          "id": "dc81c130-c659-4d06-a7ce-ccc9a6f76586",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "60ee8b63-78d6-4325-b381-2196cb349c9b",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "0f757992-31b3-4609-8fc8-29c6c56be94f",
        "cursor": {
          "ref": "44399c6f-14ae-4eb5-b398-980098639e91",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3882ea34-4a49-464a-b48e-2b0038b99c27"
        },
        "item": {
          "id": "0f757992-31b3-4609-8fc8-29c6c56be94f",
          "name": "did_json"
        },
        "response": {
          "id": "4e7c4329-5912-4503-bdc3-f16800d7da93",
          "status": "OK",
          "code": 200,
          "responseTime": 1357,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2caa16-fc6e-4a78-8aee-dc0b6dda3cbe",
        "cursor": {
          "ref": "56d315ff-0abb-4db2-a4e0-25c701e822c7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d337b231-ddf4-4a71-bb94-6cab95b3b4ff"
        },
        "item": {
          "id": "4e2caa16-fc6e-4a78-8aee-dc0b6dda3cbe",
          "name": "did:invalid"
        },
        "response": {
          "id": "d3192248-c2fe-453b-9dc5-394c8b88bb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2caa16-fc6e-4a78-8aee-dc0b6dda3cbe",
        "cursor": {
          "ref": "56d315ff-0abb-4db2-a4e0-25c701e822c7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d337b231-ddf4-4a71-bb94-6cab95b3b4ff"
        },
        "item": {
          "id": "4e2caa16-fc6e-4a78-8aee-dc0b6dda3cbe",
          "name": "did:invalid"
        },
        "response": {
          "id": "d3192248-c2fe-453b-9dc5-394c8b88bb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b581a19a-4cf1-47e8-bc2c-3d126f4dcc36",
        "cursor": {
          "ref": "27add989-1108-4716-b70e-e3b90e76eb01",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "98230de7-6b8e-404c-b508-c712aac055e6"
        },
        "item": {
          "id": "b581a19a-4cf1-47e8-bc2c-3d126f4dcc36",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c98ecb1e-9d87-4d08-8477-3f423d4235d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 312,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8562fd-c2db-4cc5-9bfa-6c056c53e246",
        "cursor": {
          "ref": "9bf89e04-91f8-4893-ba9d-91ed2071a075",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "653418c4-3fde-4332-b179-39e062956f0a"
        },
        "item": {
          "id": "6a8562fd-c2db-4cc5-9bfa-6c056c53e246",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0e6fd463-cfe3-40d7-b891-bec99dbf20c7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 332,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90ac5ab-1cea-4719-b472-7b26383c5243",
        "cursor": {
          "ref": "383415a6-1e4e-43b9-bf1f-5c3e0f0d4440",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "faf56082-8a2f-493d-80e3-245890f8873e"
        },
        "item": {
          "id": "d90ac5ab-1cea-4719-b472-7b26383c5243",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f81a68e6-9e19-471c-a610-776f2b024b3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b664dd91-6e17-4321-9e8f-3133cbf9d1d1",
        "cursor": {
          "ref": "99f306c3-57da-4b30-813b-1931e90310b7",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "78b9420b-81c9-44b9-9c86-0cf555328f1d"
        },
        "item": {
          "id": "b664dd91-6e17-4321-9e8f-3133cbf9d1d1",
          "name": "identifiers"
        },
        "response": {
          "id": "c4923973-80e0-46a9-9c9d-786ca67b9120",
          "status": "OK",
          "code": 200,
          "responseTime": 1061,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49a5f2c-f2df-4580-8ad9-86ad0a5095d4",
        "cursor": {
          "ref": "6a20136f-41ba-4540-900b-7604a9c1f62c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "95c403c3-bec4-4ab6-b3c2-dddf01ecd7af"
        },
        "item": {
          "id": "a49a5f2c-f2df-4580-8ad9-86ad0a5095d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "eebca953-8c49-4e36-82b5-4b073378d198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbda01c0-6310-41df-9649-1a44e69aefaa",
        "cursor": {
          "ref": "4b8b7625-ba32-4333-9e71-7ac81a9bc6a2",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "20cad605-eca5-457f-861d-530e11a18f74"
        },
        "item": {
          "id": "cbda01c0-6310-41df-9649-1a44e69aefaa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "141ae06d-d772-4233-9416-9db7dd18a9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91c1183-c33f-4acc-a52b-f41b5446beec",
        "cursor": {
          "ref": "adcc2759-44af-450d-bea9-8cfdf9573194",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ebad47fe-37e8-4351-a450-6ef67e44901b"
        },
        "item": {
          "id": "e91c1183-c33f-4acc-a52b-f41b5446beec",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "77a67c6b-84b8-4e17-8ee8-03636a9767cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b668c1-9bf7-4625-bc6f-698daa127bd0",
        "cursor": {
          "ref": "eec617f2-7baf-4751-b668-442db65601e2",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "79e6b448-ae72-4132-bb3b-f9b5591cb1b6"
        },
        "item": {
          "id": "38b668c1-9bf7-4625-bc6f-698daa127bd0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "36f9c8c4-125c-4d69-9919-50a6fa615ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc1a321-032b-4c88-ab6d-3b0835e64aca",
        "cursor": {
          "ref": "43011de7-2a9c-482f-8202-fd206e1cfcdf",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "732bb549-8142-4830-bc52-c78305442445"
        },
        "item": {
          "id": "ebc1a321-032b-4c88-ab6d-3b0835e64aca",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b855b409-2cbb-4dae-9ac1-0e6d83a78478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44dbe72-6fe0-468e-8612-eab131f97c38",
        "cursor": {
          "ref": "cfb79a35-6b65-486e-9b11-d38a055bba32",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cf61f187-b314-40c2-b1cd-2e557c1b5024"
        },
        "item": {
          "id": "d44dbe72-6fe0-468e-8612-eab131f97c38",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eaaa345f-5213-4d2f-bedc-ce3c459edde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64c89ca-d0f6-4f5c-ad22-afd40dd4682a",
        "cursor": {
          "ref": "7a0a9b87-8ad8-4a28-9f42-726a46ff2a81",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fd303dba-6ae5-4cb5-8f7d-c78ff81022df"
        },
        "item": {
          "id": "a64c89ca-d0f6-4f5c-ad22-afd40dd4682a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0d99aee9-d6a7-4066-a7ee-799b8838dd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43eae07-31e5-4824-a816-fe6a7e821c24",
        "cursor": {
          "ref": "de8b552e-4ab9-4ea9-8295-888a3bef9b43",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eeae81f1-5d86-4dda-922b-1c3e6db1f7a8"
        },
        "item": {
          "id": "f43eae07-31e5-4824-a816-fe6a7e821c24",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d609609f-b8e9-4dcc-ae78-f808a14917ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033cd46c-5427-4d75-a4a5-4f6a0f7b0ab8",
        "cursor": {
          "ref": "e3d1da6c-efa0-4b8f-a26a-559c118ad8b0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "feae85a0-1cb2-4870-b916-c5d5b448c443"
        },
        "item": {
          "id": "033cd46c-5427-4d75-a4a5-4f6a0f7b0ab8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "87cb970d-7e18-4108-836b-9aed5b70372d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5805bb67-d22a-47f7-9535-f68706bf013d",
        "cursor": {
          "ref": "5136858c-fe82-4bc1-89a7-a5dffc68b5f0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b25eba28-3b55-4cb1-bd61-f71bde415a86"
        },
        "item": {
          "id": "5805bb67-d22a-47f7-9535-f68706bf013d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "aee7d4c2-29d6-4a33-a589-922b71086e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fc560f-3264-4304-b6ff-3b6b2ecfad43",
        "cursor": {
          "ref": "ad30d1c4-25ed-4c06-bdea-5b3463e6629b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6980437e-d4f9-4cb8-a644-e693c4e94ce2"
        },
        "item": {
          "id": "e6fc560f-3264-4304-b6ff-3b6b2ecfad43",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5d0c1bbd-51ac-4a65-8c7b-da5be31e2fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba134a7-d689-42ca-90b9-9d0df07172e2",
        "cursor": {
          "ref": "2ea922df-ad77-4c5a-908f-57ea328f5ee7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9a338e69-2fd4-4434-aeac-18216f5ae1fb"
        },
        "item": {
          "id": "dba134a7-d689-42ca-90b9-9d0df07172e2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "535cd96d-e54f-4acd-a32e-5b536d30c565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885766a7-7ddd-4642-9f70-e88f5a77b6b0",
        "cursor": {
          "ref": "78cd59e9-f8b4-45a7-ac07-74a3b366bd96",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8ae0b1b9-4a69-48b9-b7d3-8e575cc7b4f0"
        },
        "item": {
          "id": "885766a7-7ddd-4642-9f70-e88f5a77b6b0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fe04e196-056f-4d2a-9f8d-2e4888175520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c033e06-a419-4892-8591-2966ef1f89d1",
        "cursor": {
          "ref": "b1dc737f-b165-4fb7-82ed-2bc9181933e3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "38da66da-7d65-4993-91d3-f8ea24fcac06"
        },
        "item": {
          "id": "2c033e06-a419-4892-8591-2966ef1f89d1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "066ac59c-178f-4086-8a6e-4a06700fb9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c2efa8-ccab-4151-906d-576f3cb0e673",
        "cursor": {
          "ref": "43ec16f6-45af-4568-8271-e2bef64c3811",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e69c4bd1-6700-4cf6-8398-bb78e2be5ae5"
        },
        "item": {
          "id": "21c2efa8-ccab-4151-906d-576f3cb0e673",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "03ceef81-f22e-48a3-a16d-c644ef631e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5494a81d-2406-4694-8bc8-ba54e40feeca",
        "cursor": {
          "ref": "2ef486b7-2c3d-4476-9a86-6acf6abdfcf5",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "35ec8052-8bb2-4153-957f-d2310bdc0b40"
        },
        "item": {
          "id": "5494a81d-2406-4694-8bc8-ba54e40feeca",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bdd84d88-4b51-4e19-83ed-c7393342fc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a0fbb0-974d-428f-bcd3-1855e5a3dc4e",
        "cursor": {
          "ref": "0ce3c73b-b11e-4abf-86ab-dd13805fef10",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8ad77eba-1401-44f1-a6a8-bcbf1d899b43"
        },
        "item": {
          "id": "55a0fbb0-974d-428f-bcd3-1855e5a3dc4e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b70884a3-302b-4175-b414-732a0fb30ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5de647-60b5-4a04-829c-6d81d573d06e",
        "cursor": {
          "ref": "5b9ce4e7-4426-4c1b-ad19-0220c1ee1b12",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a3283aa3-8cfe-42dd-9d5f-7b6bcd6240dc"
        },
        "item": {
          "id": "5e5de647-60b5-4a04-829c-6d81d573d06e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f118e56a-9796-400d-ad6c-02617cc174c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1aa88e-a7a1-4e20-a3a3-ac95f566b775",
        "cursor": {
          "ref": "aafceb67-314c-4974-823d-82a46038d8e8",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1fc7c77f-f400-4541-a076-8bb132d1eece"
        },
        "item": {
          "id": "2b1aa88e-a7a1-4e20-a3a3-ac95f566b775",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "532f7205-d619-49b0-9079-1c77cc0aa311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166b9bd6-d079-4543-b556-72a5bbd40444",
        "cursor": {
          "ref": "d7f26cef-78b2-4fab-a90f-73639d7e2736",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "452e33a1-f757-4f48-a2f5-466ace46dbfd"
        },
        "item": {
          "id": "166b9bd6-d079-4543-b556-72a5bbd40444",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b5f3d4f2-e7cc-4339-83b5-4fa655a3bd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34336a72-af18-40c3-8682-f6fd07847a86",
        "cursor": {
          "ref": "c60fd78e-edd8-4b11-b4b8-cf55f6ba3f95",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e344a19e-2df4-4dc7-81a9-ab05b248a3ab"
        },
        "item": {
          "id": "34336a72-af18-40c3-8682-f6fd07847a86",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "628ab086-324c-4f1b-a392-02acce862387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbba9bb-8000-43d9-b151-98cf92c54a51",
        "cursor": {
          "ref": "a5abdc02-816d-4803-bf80-62c8266c0a5e",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1afcbbae-e62d-40ed-9c33-89da893f0cef"
        },
        "item": {
          "id": "fbbba9bb-8000-43d9-b151-98cf92c54a51",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c4a6a826-ee38-434b-9226-bdf305fd2310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e22c123-1d39-476d-8565-6a176a84f3bc",
        "cursor": {
          "ref": "87b35747-e03d-47d4-976d-2fb2cd39a070",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f1abc493-082d-4fe9-9b2b-cd4fd77ff9a3"
        },
        "item": {
          "id": "1e22c123-1d39-476d-8565-6a176a84f3bc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "80b4746f-2a9a-43a5-8987-62aca3455055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b962fab-c7ab-48d7-aa44-b7e82a3b89ac",
        "cursor": {
          "ref": "ae71b096-a6e0-473c-b567-2cc0c1d654f7",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cf03a534-84e4-40ef-8d6f-de38f5884626"
        },
        "item": {
          "id": "1b962fab-c7ab-48d7-aa44-b7e82a3b89ac",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "207c99b1-57cf-4e49-a55f-59a12b321c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edfddd2-342f-4371-9b85-1d9cd3561853",
        "cursor": {
          "ref": "b4c21f2f-7ffc-40df-956d-7ccf99249073",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "89462525-9e95-48d6-9e13-fd1d7338a66d"
        },
        "item": {
          "id": "0edfddd2-342f-4371-9b85-1d9cd3561853",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5c0cac91-172f-4b11-8ffe-a73497b9c639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93f45c5-1a6c-4201-b889-c02babc3452a",
        "cursor": {
          "ref": "d6209399-1b2e-441f-a4b0-acbd86250e3e",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8302d36f-0469-4016-ac29-dc5749201e3a"
        },
        "item": {
          "id": "c93f45c5-1a6c-4201-b889-c02babc3452a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3252b445-edc1-457b-b3a3-e852953219c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0606b309-f3a3-4b8f-ac83-9bcf0ca42ad4",
        "cursor": {
          "ref": "ffef2561-e0e7-491f-8f44-34e81820ecd2",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "78cb8e44-9f27-4a63-80ad-fac857c592bb"
        },
        "item": {
          "id": "0606b309-f3a3-4b8f-ac83-9bcf0ca42ad4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9eaaf50f-64d5-400b-9bd3-e3a7610c9234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb2e56d-34e7-4db5-8c40-fa86f02868ae",
        "cursor": {
          "ref": "d5973061-85e0-48ef-9ec9-89a7cc857059",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cb2b4cab-8ac5-4e85-8b9e-c2f01edacea5"
        },
        "item": {
          "id": "acb2e56d-34e7-4db5-8c40-fa86f02868ae",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fd0ac7ef-2f4c-4c1c-a83f-b13238a998e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664bd304-540b-4bb3-add9-f790f66fc94b",
        "cursor": {
          "ref": "fbc35d86-b249-4b6a-859d-4d0ed21d1cb9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "970048ac-9895-497c-8f85-03859d3c6baa"
        },
        "item": {
          "id": "664bd304-540b-4bb3-add9-f790f66fc94b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9d41f136-6129-4969-ba3b-77adb7cfa5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c1f7fb-055b-4152-bdfe-e677149e463c",
        "cursor": {
          "ref": "33c01bcf-a232-45aa-93c4-77f31ceafc5a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "25ae8c28-5532-4141-9f55-772b5cf74059"
        },
        "item": {
          "id": "e9c1f7fb-055b-4152-bdfe-e677149e463c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "abee75ec-4f9b-40f9-b31f-bb6387a144ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096ad368-5886-42aa-931c-b597bb3d22fd",
        "cursor": {
          "ref": "15bce865-a3f2-4fa5-9b07-9ef439093385",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e1a5e06b-6834-4821-a4fa-47a71b99f0f3"
        },
        "item": {
          "id": "096ad368-5886-42aa-931c-b597bb3d22fd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cf89fdac-ebc0-4e46-8536-dc5ff5c08d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bf32bd-21b8-4e3f-9635-ed70b2703dac",
        "cursor": {
          "ref": "1631b10c-b6e6-44cb-ac54-a3b678407693",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7c15df48-c807-4bda-8714-2f0cf1a841ad"
        },
        "item": {
          "id": "95bf32bd-21b8-4e3f-9635-ed70b2703dac",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "36aa07e0-3a90-48ca-94bd-08d0aae98b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba697ed-b701-4c88-95a2-14f27a4cae35",
        "cursor": {
          "ref": "cd6f09d3-e066-44c2-9b0c-93860736d49a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0bc86171-d1ad-4500-86c8-6ce5359e3946"
        },
        "item": {
          "id": "1ba697ed-b701-4c88-95a2-14f27a4cae35",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "463417a3-61c4-42e9-8b43-35e0fcdc6eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6d1db6-70d2-4283-afa3-5aeba3cf6fad",
        "cursor": {
          "ref": "cf512f74-96d5-4b62-8b1e-bd1ea96cf0f6",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9e60108c-02c4-4742-8c16-a9de2e25d965"
        },
        "item": {
          "id": "7a6d1db6-70d2-4283-afa3-5aeba3cf6fad",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d2de306f-1760-4b1c-a3dd-5f769b231cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5b4b92-3ae9-4322-aadf-9e0a6bdfc642",
        "cursor": {
          "ref": "ca227c48-087f-4a98-8600-85b4a65ba98b",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e0590b5c-f2d2-4613-9dee-de13ea041202"
        },
        "item": {
          "id": "8d5b4b92-3ae9-4322-aadf-9e0a6bdfc642",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ff70c85b-0e3e-4e6a-bdf8-822687fd581f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af5ad0e-1543-45c5-bd24-48ecd0c89ca1",
        "cursor": {
          "ref": "d1921f81-ed5a-4be7-af43-fd9bcef94713",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fbbc5fc8-a41f-43a0-ad36-ca839f614503"
        },
        "item": {
          "id": "5af5ad0e-1543-45c5-bd24-48ecd0c89ca1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "487ccd73-43bd-4233-9638-7d7577f88051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905a6e12-c9cc-430d-afb0-95983a66f831",
        "cursor": {
          "ref": "9f23c3ff-6299-4588-8ce3-9cfb6c6b5e19",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a948b5c3-4422-4e40-b4a7-0d7708009775"
        },
        "item": {
          "id": "905a6e12-c9cc-430d-afb0-95983a66f831",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5baea48b-7105-45bd-8074-9b42ed07787d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfee7c8-9ff1-440e-873a-f53bef8930fd",
        "cursor": {
          "ref": "0ee5c05a-e4d5-47fa-9e9e-01cf57e4ed0b",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f3f1713d-b81a-45bc-86ab-efe5bb332d9f"
        },
        "item": {
          "id": "8bfee7c8-9ff1-440e-873a-f53bef8930fd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "edc8dfc3-f727-4468-b6f8-c7411b23beaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0465a409-973f-4d68-b3f7-eb42ca29db97",
        "cursor": {
          "ref": "db9e8e37-dd03-46bb-930f-96b92fb09fd3",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ccf251e3-db53-4657-9340-33a16e7a659f"
        },
        "item": {
          "id": "0465a409-973f-4d68-b3f7-eb42ca29db97",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "63997978-e83a-4b18-a6e3-4fca7c6809d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9331ef-51ba-41bc-9c03-d8f7d0bcc19e",
        "cursor": {
          "ref": "5d387972-2249-41d4-9cdc-74230093236b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3e6e6db1-51e7-40d6-b2cc-79f619aac2af"
        },
        "item": {
          "id": "1c9331ef-51ba-41bc-9c03-d8f7d0bcc19e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d9cd736a-2523-445a-baeb-b1846851d93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52547f6b-adc7-4184-a1cb-40a61a837f23",
        "cursor": {
          "ref": "8a281ed6-324d-47a2-b604-ce141ce70e6f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "86f823f7-9229-440b-8d95-233700ed7a97"
        },
        "item": {
          "id": "52547f6b-adc7-4184-a1cb-40a61a837f23",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8ec8dd59-9c48-4a8c-b380-93a6844078e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2e5e13-9ca7-48a0-9cbd-d3a12a575883",
        "cursor": {
          "ref": "e86837de-4769-4483-a182-0772effebe44",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3841f786-d7cf-4d22-92c0-1b1e651d842e"
        },
        "item": {
          "id": "ce2e5e13-9ca7-48a0-9cbd-d3a12a575883",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1926b02b-7cc3-4ec0-9879-68398928a23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2942a07a-5af9-4dc5-9af3-5bb59191520f",
        "cursor": {
          "ref": "2d07d1e5-0e78-4dbc-beaa-8d2994a91757",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a4c86827-eec9-42eb-8d36-541ed895593e"
        },
        "item": {
          "id": "2942a07a-5af9-4dc5-9af3-5bb59191520f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7f775398-375e-44ba-bcec-ccdbf1f6b856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa58537-5e42-4901-8542-dabd3082a3c6",
        "cursor": {
          "ref": "ca83ced0-fea0-4d55-91b6-b5b714cffc33",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cc8d5e59-1f4b-4035-8d49-15c13674c6b7"
        },
        "item": {
          "id": "9fa58537-5e42-4901-8542-dabd3082a3c6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3030afcf-3806-41a8-83b9-d5455f2b3057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c942d174-3318-4cc2-8cd7-10c5076b4dbc",
        "cursor": {
          "ref": "1f621e04-30b8-45fa-a14b-e923ab21e87f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "428fe754-f6a0-4433-a016-648cff6ba893"
        },
        "item": {
          "id": "c942d174-3318-4cc2-8cd7-10c5076b4dbc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "02f78eeb-1f3f-4a61-832f-cb360fef7a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5dd307-e0e4-4d00-9d55-723fd4047be3",
        "cursor": {
          "ref": "40e6ba90-cac5-48c8-a488-2d043280238c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "97281556-42e4-4c01-8656-15e13e61e74d"
        },
        "item": {
          "id": "2b5dd307-e0e4-4d00-9d55-723fd4047be3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9f51112a-0f86-4767-8dbb-0fcb26717ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380521e8-0072-43a9-b934-89a7f33bb98f",
        "cursor": {
          "ref": "27ad8455-b301-4fcc-914b-d2aeef6d4d61",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4ee00528-c0da-42d9-8696-c3368660cfb1"
        },
        "item": {
          "id": "380521e8-0072-43a9-b934-89a7f33bb98f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ba0a6694-e56d-4109-9d07-54bc566e9342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0b82a5-c700-4bb1-9e65-1299b8291c35",
        "cursor": {
          "ref": "a7be37e3-3505-491e-9b2b-44396063e9a3",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "df46f900-4611-4fa6-8e0e-a9330dacd1ed"
        },
        "item": {
          "id": "de0b82a5-c700-4bb1-9e65-1299b8291c35",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "09af4288-8dab-412b-86c0-571727d20afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e0cea7-039b-4959-98db-38f54df49cc7",
        "cursor": {
          "ref": "870289e5-0bb5-480f-9490-8a21387ceb8d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bc5609bd-6c0f-4781-b051-895bb380c38e"
        },
        "item": {
          "id": "e9e0cea7-039b-4959-98db-38f54df49cc7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6feca5d7-4264-4817-822c-859eb4ea4810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2f9336-5dd7-4c25-90bb-d075887bad51",
        "cursor": {
          "ref": "aaed87a4-bd6c-4dcd-906b-159bceb2d1a8",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9aef7b54-953d-4406-8b7e-0a1eb38233b9"
        },
        "item": {
          "id": "2b2f9336-5dd7-4c25-90bb-d075887bad51",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f00c89eb-bf65-4c04-807e-2760b3e4561f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44225c46-e5a7-4865-b8d8-a6a3a163cd6e",
        "cursor": {
          "ref": "f7b93b7d-c7c2-4026-b963-cfac98aba8ac",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7d78c815-d3e6-450c-8089-ae0ac57245ed"
        },
        "item": {
          "id": "44225c46-e5a7-4865-b8d8-a6a3a163cd6e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "666b317d-d81c-44aa-8039-65177ccfe64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded01f3b-ae90-4a3e-9dc3-3dd1866a9297",
        "cursor": {
          "ref": "a060bdbe-7928-4770-a440-cda323fb2889",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "36dc24a8-5afb-43d0-938d-aab9d4aa2b5c"
        },
        "item": {
          "id": "ded01f3b-ae90-4a3e-9dc3-3dd1866a9297",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4f89dfa1-1eca-4908-b169-3e2fcad6db5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1614c72-cf40-40b8-8c39-56e1c4caab2b",
        "cursor": {
          "ref": "69cd69dc-cb0d-4684-8183-9876dbd8b241",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4682dcc6-ecee-4f9a-80d4-b82baf837c9c"
        },
        "item": {
          "id": "e1614c72-cf40-40b8-8c39-56e1c4caab2b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "eca3d172-f86f-4c40-bd21-b86d07ec759a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e0f460-53ba-40e5-97b7-1e676c59e61d",
        "cursor": {
          "ref": "4905bb2b-d25e-490a-9f8e-cfe717ef62eb",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "448b42b7-b9b6-4bd1-96bc-44175faa6b91"
        },
        "item": {
          "id": "50e0f460-53ba-40e5-97b7-1e676c59e61d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0fdd8e8c-be98-45e9-9e63-e8ad0fdf9571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b7d7f7-ddbd-44d1-a8e4-bf58d4aec18c",
        "cursor": {
          "ref": "a32c0207-1f9c-4aad-a1b1-7d775969570b",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4c53b285-4c69-43fe-8fff-aaea0eed940d"
        },
        "item": {
          "id": "90b7d7f7-ddbd-44d1-a8e4-bf58d4aec18c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3a4b1161-cb9c-4e7d-b380-78a0bde6b329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f7a8c9-6813-4476-a462-f5fe75de4c5f",
        "cursor": {
          "ref": "deaa12d7-388c-4362-9e58-14c2958af4cf",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1af0900a-cede-4f05-a849-9075be960316"
        },
        "item": {
          "id": "d9f7a8c9-6813-4476-a462-f5fe75de4c5f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ae787247-4b71-43c2-aa49-e539e07b8e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2021012-3bc6-4b64-8ee6-42989f7bc7f5",
        "cursor": {
          "ref": "097a248f-3432-40d1-bf6a-6c88f446f9db",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e275b587-72e9-494c-a32a-e9e7f378a028"
        },
        "item": {
          "id": "b2021012-3bc6-4b64-8ee6-42989f7bc7f5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "40b6c58e-5070-4435-a3a7-18c23ead95ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cffc9b1-fa9c-46ff-9cbb-98510ecaf3f8",
        "cursor": {
          "ref": "ea2d209e-1888-46bf-8cf5-0a289683fc53",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f11c4729-c5a8-4a9f-99a0-63d3ab1099fc"
        },
        "item": {
          "id": "7cffc9b1-fa9c-46ff-9cbb-98510ecaf3f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6fbef8ab-3941-48a9-b249-028b6bf1fb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e22d66-6b8b-45cb-adad-ee2662411af4",
        "cursor": {
          "ref": "164dceee-b1f7-4a99-aa4e-5645cb818387",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6ace4328-ccff-4f57-92d7-f41a7318b599"
        },
        "item": {
          "id": "c6e22d66-6b8b-45cb-adad-ee2662411af4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1bab55e3-53ed-4623-b3f7-b7260f47b724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb2666e-1d50-4a98-9570-78a38598f6ee",
        "cursor": {
          "ref": "02ca9ed3-a257-4660-841e-02276e24012e",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "72cd1d4b-0522-46db-93f6-611564a03672"
        },
        "item": {
          "id": "6fb2666e-1d50-4a98-9570-78a38598f6ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "895b66c2-06b0-4500-9468-ac78289d29c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9a0598-e0fc-4561-b955-58f6cd1e4f80",
        "cursor": {
          "ref": "095b020c-8e39-45ff-9f90-bd11dfb855c5",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "076d4dbd-43ab-40a3-ba7c-6986bf46feaa"
        },
        "item": {
          "id": "cd9a0598-e0fc-4561-b955-58f6cd1e4f80",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "71739279-ac19-4049-a2fd-dafe2a06b6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464591cc-ccf4-42ae-a1f1-6a9336ccde82",
        "cursor": {
          "ref": "c26873aa-2142-454a-b07a-7dba550198fe",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2d734068-5357-489f-ba79-2dbbe135dd9b"
        },
        "item": {
          "id": "464591cc-ccf4-42ae-a1f1-6a9336ccde82",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0dd45122-01a3-4db6-8c4d-0b78211ead41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f9bd7e-4131-4b03-b440-fa6d2a41309c",
        "cursor": {
          "ref": "d71071d4-1d45-4fc0-b42e-3ae534b372f0",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0c85ab6a-224d-48fd-8337-c8ee33f23e80"
        },
        "item": {
          "id": "27f9bd7e-4131-4b03-b440-fa6d2a41309c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "264f5467-d2d9-459e-8b8b-c3b8487fa2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d60ae09-b12a-47c6-ae46-53135325876b",
        "cursor": {
          "ref": "119990bf-adba-4db8-94ca-778618e53d6f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "13014779-523c-4418-8fed-c2625cc2f3d5"
        },
        "item": {
          "id": "4d60ae09-b12a-47c6-ae46-53135325876b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c13faece-598c-47aa-ad80-10014cac18cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf74773f-e745-4c49-8355-4b596d366132",
        "cursor": {
          "ref": "102284a2-420a-4db1-92f4-34c35c31706f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d908742e-c9e1-483b-b463-ec22fd2244b3"
        },
        "item": {
          "id": "cf74773f-e745-4c49-8355-4b596d366132",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "55651dbf-53b6-4b2c-a1f5-eca57b21925e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52ab414-942c-4e1a-b3e1-e94b6beffdd0",
        "cursor": {
          "ref": "a8362530-422d-4b7f-bb43-c4aee6f5cbc4",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b1ac0806-cb88-4a87-bd57-a34e04658bd7"
        },
        "item": {
          "id": "c52ab414-942c-4e1a-b3e1-e94b6beffdd0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "19b7a43d-0fe5-47ee-be35-00a5951d88a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50b4da2-d3e5-49a1-b6d4-977590d9a798",
        "cursor": {
          "ref": "919ed396-c4da-404c-b880-5f70b4560ae9",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9910ffec-3605-48bd-a882-55ffd4a6993c"
        },
        "item": {
          "id": "a50b4da2-d3e5-49a1-b6d4-977590d9a798",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8169f272-b458-4499-a343-6f4c9cba1314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db635999-453f-452c-8067-63dbaca95a9a",
        "cursor": {
          "ref": "1549ab81-562b-41ae-a6ec-e39f5f217f69",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "edf8e176-037d-43f4-93da-f494d9c3d725"
        },
        "item": {
          "id": "db635999-453f-452c-8067-63dbaca95a9a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1eb00f45-3b93-4952-9a0a-d97dbdadde0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814ee546-9328-4ee5-8aa4-640281141444",
        "cursor": {
          "ref": "5a23f620-3002-44fa-aaf7-f4b29b652efe",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "17f95850-9797-4887-a720-5350e4a12a73"
        },
        "item": {
          "id": "814ee546-9328-4ee5-8aa4-640281141444",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "83098dc1-7896-4c79-87f8-f48120b6bdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3e17bb-4d1c-46cf-b365-439855b45855",
        "cursor": {
          "ref": "69e459be-01ee-41a1-b37e-8ff77932d77e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "46ae6b3c-f08e-473b-bff1-e4fb7ffa9c13"
        },
        "item": {
          "id": "cb3e17bb-4d1c-46cf-b365-439855b45855",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0082c007-9efe-488c-86f5-610b3c75e450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a31de8-6c70-4bb5-b386-23165171002a",
        "cursor": {
          "ref": "ae61ad25-8c89-4e28-b642-7c74b3224a78",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7a7a1016-f8b4-494b-b7fa-709332b467b7"
        },
        "item": {
          "id": "e8a31de8-6c70-4bb5-b386-23165171002a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7c8589ad-a289-4832-9658-c2e0b9983926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5193d204-4563-4dfc-9eee-9735f5ede59e",
        "cursor": {
          "ref": "3a458e57-11fb-4379-8726-9b80c7e18746",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "766653d2-4e57-4a44-8fae-8cb42d88411a"
        },
        "item": {
          "id": "5193d204-4563-4dfc-9eee-9735f5ede59e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c5266b1f-7bef-4050-a52a-bdac513755bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb49c991-81d1-4263-820e-92f6de2d7c6e",
        "cursor": {
          "ref": "46834512-e807-4732-868f-4e3c01a7c5e7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3f9dad0c-99db-4511-8b3e-b07e1bb32e38"
        },
        "item": {
          "id": "eb49c991-81d1-4263-820e-92f6de2d7c6e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c2a28915-94f3-4038-a05d-288bf9c277ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8f90c9-9784-4b99-8a34-21ba4af6220e",
        "cursor": {
          "ref": "e8567dfc-1390-4f00-af41-37522e044064",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ac1768e1-4a18-4c5a-9a48-888bdd0649b0"
        },
        "item": {
          "id": "fb8f90c9-9784-4b99-8a34-21ba4af6220e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "43b26a40-6e23-4583-8abe-c0ada01ea774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f74dcf2-c78f-4611-ac24-99ac78172ced",
        "cursor": {
          "ref": "3ad19289-0f4d-4dae-baf6-9d2358df8b13",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "90d776b7-4fcb-481d-a696-74aca1b6d576"
        },
        "item": {
          "id": "6f74dcf2-c78f-4611-ac24-99ac78172ced",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d825ba28-693c-4930-9e83-35ee8932aa4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c54ad86-7372-4bd0-878e-9098b76f2504",
        "cursor": {
          "ref": "0e75094d-e363-425f-86fb-2001ecc4b626",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ba045fcc-b750-45f6-ac05-dbece6666252"
        },
        "item": {
          "id": "9c54ad86-7372-4bd0-878e-9098b76f2504",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3551c715-5173-4f93-9a6a-0ae2f4396d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562f8e71-88b7-4f78-a683-b72c04f54ea9",
        "cursor": {
          "ref": "e75ec428-fad5-48c5-9092-55b38e95b83d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9f25fbe9-c7ef-4ff4-ad8a-176aaa1c183e"
        },
        "item": {
          "id": "562f8e71-88b7-4f78-a683-b72c04f54ea9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2cd81467-bea3-4960-b59c-67344098600f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff23515-e0e9-4704-81b2-2fce46da219e",
        "cursor": {
          "ref": "6b514a29-02d0-4c65-923f-e930524d3631",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f6453ff0-7678-4362-b214-5b887f84b212"
        },
        "item": {
          "id": "aff23515-e0e9-4704-81b2-2fce46da219e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a573c43c-cedd-440e-83f9-e1dec6cc3a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3d5eea-3205-4964-b6b5-843b58009cc5",
        "cursor": {
          "ref": "08b76ebf-6e4b-4311-8e30-73b81de429e3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6e658905-7008-4460-afef-1a0704e07d82"
        },
        "item": {
          "id": "da3d5eea-3205-4964-b6b5-843b58009cc5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7e47f82d-7b59-4ed0-b967-1009ead12e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8796334d-cb2a-447d-bb96-2cf063b2afd3",
        "cursor": {
          "ref": "4a4205ea-3c08-4400-a60d-4431e685a3c8",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a7257d01-1912-425b-9530-2b692a50c145"
        },
        "item": {
          "id": "8796334d-cb2a-447d-bb96-2cf063b2afd3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "adb7d1e7-9cc7-462e-97c6-66ae2bb66837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0208da33-7ca5-4a79-80a0-0afa94204238",
        "cursor": {
          "ref": "95499521-8de4-4d2d-97a9-77d2a62948ac",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "133dadcc-d103-4a96-8854-ef5b7a12e8d4"
        },
        "item": {
          "id": "0208da33-7ca5-4a79-80a0-0afa94204238",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "95c8413a-e7bf-481c-93a8-45275a2902a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c48b344-47be-4898-aeee-64563c4abb2d",
        "cursor": {
          "ref": "463c4caa-42df-403d-ada0-49155baef050",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9890e6eb-cf1c-437f-b5a7-4fa5547d3cf3"
        },
        "item": {
          "id": "2c48b344-47be-4898-aeee-64563c4abb2d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2ae22d88-fcac-4302-9c3a-79904300856e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bd515c-87c5-498d-8566-c3d247c95c3c",
        "cursor": {
          "ref": "61070db6-2d96-423a-bcb3-caeab9538936",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6efba301-f324-4a3b-b70b-8496b791ca42"
        },
        "item": {
          "id": "50bd515c-87c5-498d-8566-c3d247c95c3c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dcbc3eb2-d4eb-4f75-bff9-13d97665b7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d6b1ce-5e81-46b1-b2d7-24f328395883",
        "cursor": {
          "ref": "736a04a3-500b-4287-9d3d-f75bb936ce5b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "49aa4762-4369-4294-a986-9afe1021493d"
        },
        "item": {
          "id": "b3d6b1ce-5e81-46b1-b2d7-24f328395883",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ac119698-80de-49ee-8ed8-358542ac6e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35edf02-5be4-422e-ae44-1a8bac02d2d1",
        "cursor": {
          "ref": "3c6da995-cbe9-4c39-99e3-ec48b5bec8e1",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "73c7d309-189b-4571-81fb-38d3f11d2a11"
        },
        "item": {
          "id": "e35edf02-5be4-422e-ae44-1a8bac02d2d1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7e473bd0-caa8-440e-823a-6b9e2cf00e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94688ee-29db-48c9-8b14-92a613ebb5fb",
        "cursor": {
          "ref": "5f456ea2-8d32-4ce7-9452-b67999759bdb",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "49c7eeb9-2f7f-460c-bafe-003366c1c381"
        },
        "item": {
          "id": "d94688ee-29db-48c9-8b14-92a613ebb5fb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "edd9f896-0b8b-4ffd-9c60-ea5c5abd07fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f07f5c-d4e9-49e0-add4-0b8655116a6d",
        "cursor": {
          "ref": "55e5b937-faae-4192-b998-e983a61b6f8b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1e9d5769-15c5-498f-bc1e-b9aa1b62adc0"
        },
        "item": {
          "id": "b1f07f5c-d4e9-49e0-add4-0b8655116a6d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f927fdcc-9270-456e-bf07-9a7ca5d9f3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56468356-6aaa-46bf-a85d-a289e7a3320b",
        "cursor": {
          "ref": "bdea48fd-a57b-4ab8-b2c3-365f265a5f81",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2e4ebabe-e90d-4da3-9cec-0be1cbe4f7a3"
        },
        "item": {
          "id": "56468356-6aaa-46bf-a85d-a289e7a3320b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "99376b3b-9270-4efc-87bf-0d68eeabc42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e53876-88c2-4fa8-88d1-6361f99deff3",
        "cursor": {
          "ref": "d92d23e4-c3da-4f86-9b92-e5da7546d26c",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "344aba22-d6f2-436e-a66d-e6141772575c"
        },
        "item": {
          "id": "94e53876-88c2-4fa8-88d1-6361f99deff3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "646bf96f-f96b-4e54-924e-88a90f4e33a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24995af-09c1-4df4-bee1-d828c1d59aff",
        "cursor": {
          "ref": "f431a187-a93b-4292-bd5c-6ccb1d774c98",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5052a240-2d32-4f13-a285-3879fcb47dab"
        },
        "item": {
          "id": "c24995af-09c1-4df4-bee1-d828c1d59aff",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b6ebf8fd-e2e2-45ff-8b2c-069edc8c745c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0cdfc3-8131-4fe3-8ca3-00b4fc1e4032",
        "cursor": {
          "ref": "3668d9e0-3430-410d-9a39-bd619d5d20c3",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a70bbb6b-e877-4e51-84b7-d60452ac5c2c"
        },
        "item": {
          "id": "cd0cdfc3-8131-4fe3-8ca3-00b4fc1e4032",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d59fc247-0251-49b7-b0ac-849f29d59b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99585c2f-316b-48d9-b94e-4ffd7161c496",
        "cursor": {
          "ref": "02846063-4597-4574-a11b-d779361b368d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4d94deb2-0b8f-40ac-b6a3-ffecd4b02e7b"
        },
        "item": {
          "id": "99585c2f-316b-48d9-b94e-4ffd7161c496",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cf76cb27-45b6-40b1-b1ba-a600a3e8b330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3795f461-177e-48e3-950c-6ca985b6aa7b",
        "cursor": {
          "ref": "12f791d9-4760-495e-8562-92db1360c3a5",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8be4b09a-23d2-4591-b2fa-35d29e1fb3de"
        },
        "item": {
          "id": "3795f461-177e-48e3-950c-6ca985b6aa7b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a68abc6a-1d67-4f9f-81b4-1b350dcf6be0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2fc6ce-2bd7-4e27-9e60-f254d75cd76a",
        "cursor": {
          "ref": "4ad537ab-039e-4592-8031-261e85f6bb80",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "06e957a0-7432-4529-977b-2bbcf426d904"
        },
        "item": {
          "id": "9f2fc6ce-2bd7-4e27-9e60-f254d75cd76a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6f560fb2-f31a-4f9e-98e8-aec58a38ad64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "9df88851-2c99-4633-a865-930df1604014",
        "cursor": {
          "ref": "5a65e408-a57f-47e2-8af9-e4db194b22da",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a95717ad-be28-43fe-a33e-deafa882d3e0"
        },
        "item": {
          "id": "9df88851-2c99-4633-a865-930df1604014",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "61581f51-7999-4590-baae-f33ce25868da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "98349ee6-6005-4eac-bb41-ba9709b700d9",
        "cursor": {
          "ref": "6f606b5c-6482-4fc2-a038-312d45e89c36",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "885bbc67-c0b0-4d1f-bedc-bcc02de50caf"
        },
        "item": {
          "id": "98349ee6-6005-4eac-bb41-ba9709b700d9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a2932fbb-f818-4583-8ea6-3dade78b4349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "683fad83-f6d3-41ec-8d40-b488d0699149",
        "cursor": {
          "ref": "f294f04d-4b5b-44f2-a7f3-439fa1ae4202",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aaebba24-cb0e-4576-9865-030475d41dde"
        },
        "item": {
          "id": "683fad83-f6d3-41ec-8d40-b488d0699149",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6182c8bd-81ea-4455-86c5-5e17ae070593",
          "status": "Created",
          "code": 201,
          "responseTime": 5906,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca7ac72-db65-4026-9219-9d25ce2d7d9d",
        "cursor": {
          "ref": "e33c696c-b90b-457a-b07c-55424665268d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4fa232c6-cb9d-494c-be9b-9778ca787b87"
        },
        "item": {
          "id": "aca7ac72-db65-4026-9219-9d25ce2d7d9d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1dd93296-9f13-49a0-8638-333fcb67b6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c87bf199-9d04-4422-907d-3205fed6afc3",
        "cursor": {
          "ref": "01fedf09-74ac-41ae-9ca4-a6be8da41c57",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ec201f6a-f7d3-4f8f-9205-cd9df83a9ef9"
        },
        "item": {
          "id": "c87bf199-9d04-4422-907d-3205fed6afc3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "69fafd7b-1b9b-41b9-b24c-9a06d04504a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b82aff2a-6bf6-4921-86a6-bb2883327045",
        "cursor": {
          "ref": "6cfb11a0-a4e0-4316-be4a-094e48795a69",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "54398f5a-db28-4940-a7e7-4fbea3dbb7fa"
        },
        "item": {
          "id": "b82aff2a-6bf6-4921-86a6-bb2883327045",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b38b6fae-7b1d-420f-92a2-28251de0c06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18633697-c719-4de6-945a-104220dda8f2",
        "cursor": {
          "ref": "aaff5dcd-4ce0-4732-a1bd-276379953ee6",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "22924d73-77ef-4dde-9be4-ab480e7ebde6"
        },
        "item": {
          "id": "18633697-c719-4de6-945a-104220dda8f2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6207ba64-15a0-4fc2-af1c-5ab2b58c8488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef0cccb-4601-473b-a6aa-bbd5903d16fc",
        "cursor": {
          "ref": "e1dad5cb-8aab-48c5-93b5-4f660e388529",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "17ecb606-6154-41b9-960d-8d8f9423a646"
        },
        "item": {
          "id": "1ef0cccb-4601-473b-a6aa-bbd5903d16fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "41b9afec-62a1-4805-bdc9-5c903580fc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e95b70-669b-4fb6-a962-0e3dedb14772",
        "cursor": {
          "ref": "680c948f-ce22-4dc6-ac60-6c75bd56b2f0",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d22d239c-2aae-49b2-927c-5fc6bcc5ec99"
        },
        "item": {
          "id": "16e95b70-669b-4fb6-a962-0e3dedb14772",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3051d2d8-c248-42ad-bcd5-01293c10abb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ddf6ec-6746-4bc2-bc44-453ffb50e893",
        "cursor": {
          "ref": "88b0f589-359f-4f2b-8f82-aa5e31f6bee8",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "02011279-d95c-49c3-812d-146aa94ac063"
        },
        "item": {
          "id": "b4ddf6ec-6746-4bc2-bc44-453ffb50e893",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "31cf3e39-2b8c-48c7-9fb7-ec46406e0e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ca9d67-af4b-4728-bf76-55ecd84d72e3",
        "cursor": {
          "ref": "8240282f-c9cb-48e3-a76c-5ecb6ab86754",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d41034ec-0550-414a-980c-e85b0378b769"
        },
        "item": {
          "id": "53ca9d67-af4b-4728-bf76-55ecd84d72e3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "900ffa40-d4d1-4492-a670-5c29fa0ab3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36af379-fefb-479e-8933-0a5f3cb5b38c",
        "cursor": {
          "ref": "fd832f90-f4a9-48b0-8e35-c23e07f7edcd",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "010f593c-e695-45f3-827f-ab26ca425f7b"
        },
        "item": {
          "id": "c36af379-fefb-479e-8933-0a5f3cb5b38c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "911c67e3-eb5c-4556-9c6d-1912323fb72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfd73e1-41e0-42e1-95c9-c69e4922a330",
        "cursor": {
          "ref": "d7b3e713-731a-490b-8dcb-2c69f9f17707",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f975d4b3-4208-4a37-a11d-dd503878c4ca"
        },
        "item": {
          "id": "9dfd73e1-41e0-42e1-95c9-c69e4922a330",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "828709a9-2f76-47fb-9df4-bb0901012306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d992db60-2c48-4215-8465-ca205f52c3a6",
        "cursor": {
          "ref": "85617312-ae14-4bfa-a047-eb3fdab3a1b0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4ac59316-7a3a-4616-a8d5-9150d52f4da7"
        },
        "item": {
          "id": "d992db60-2c48-4215-8465-ca205f52c3a6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d999f0ed-7c87-4caf-ad1f-7a8855596d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa37b3a-2ad4-4343-beba-9df96ea767a7",
        "cursor": {
          "ref": "09e0cb93-7132-48d4-b8de-814e82597c31",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c23c43e3-2741-4162-a64c-8a10d62367d6"
        },
        "item": {
          "id": "2fa37b3a-2ad4-4343-beba-9df96ea767a7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fdf6d0db-1704-4f88-8470-f30aade54cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b4358f-7291-4483-ae50-748e8a53b86f",
        "cursor": {
          "ref": "66e57c2d-d104-46a6-94d7-43fa7f8d4ed1",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bb88a6a9-4481-407a-9336-56249213d5ae"
        },
        "item": {
          "id": "63b4358f-7291-4483-ae50-748e8a53b86f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4bb37ad9-e350-4b30-90d9-52a88ea02eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edc8a90-f337-49af-9318-b7e9255c4227",
        "cursor": {
          "ref": "5db9278d-47b8-4f4d-986b-dce568b6c026",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "36b8f2e9-8f4f-4ba5-b8ee-278f252b324f"
        },
        "item": {
          "id": "1edc8a90-f337-49af-9318-b7e9255c4227",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "40413709-4e92-4e6b-a844-169dc5ff01f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef26eb3-1519-41ea-9cf7-c50b93bcd418",
        "cursor": {
          "ref": "1d3810e3-4b33-42c0-a2a6-61932766f124",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3cb2f730-97f5-4dae-91c4-dde7c0500ccb"
        },
        "item": {
          "id": "8ef26eb3-1519-41ea-9cf7-c50b93bcd418",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0868478b-5dfd-4f67-acff-0a24c2903a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519a9b5b-643d-4101-981a-18aa1d59443f",
        "cursor": {
          "ref": "41257b27-8458-4b1b-9a0b-ef14e1703154",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0f24e078-8f6e-44f0-9af2-00cb72e20fb2"
        },
        "item": {
          "id": "519a9b5b-643d-4101-981a-18aa1d59443f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f37d5fbf-c6af-42ea-be27-f306f194ce81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274dd28c-91a4-4df7-b888-fb56641ad4a2",
        "cursor": {
          "ref": "c9eb5dc9-6b6a-43e1-90ca-72d8d1ccb275",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "eec26188-6383-4c14-a858-e3c2646bc920"
        },
        "item": {
          "id": "274dd28c-91a4-4df7-b888-fb56641ad4a2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a81da6e7-cc48-4af0-9e7b-8e8551e6b98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6e2906-6f34-4fcd-8ad0-c2530725534e",
        "cursor": {
          "ref": "fa61b385-8163-4c08-ba4f-c5286ac133fc",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ddc06863-cdce-49a9-8816-9cb47f07b908"
        },
        "item": {
          "id": "3d6e2906-6f34-4fcd-8ad0-c2530725534e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "19e5aef7-3938-41e1-a88a-c1e843960d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71beb86-da43-41dd-a6a1-c0d505a7ce8c",
        "cursor": {
          "ref": "6cf8d04b-6180-4d92-b588-e845127978af",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fdd06e6c-d49b-4715-bb90-bbd54b067608"
        },
        "item": {
          "id": "e71beb86-da43-41dd-a6a1-c0d505a7ce8c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a5ea840-e96a-4164-9ab2-2a9b071d1aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ce7ca5-05e9-4f82-945d-f34d7e062e19",
        "cursor": {
          "ref": "30f764d9-b362-42ca-83d1-234e46154375",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9b64b531-2685-40fd-9da5-070ba7e6cc6b"
        },
        "item": {
          "id": "b1ce7ca5-05e9-4f82-945d-f34d7e062e19",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b250eb0d-fe28-4a65-bb9f-efb925b0c9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53beb903-4c6e-42b1-befa-a0d14258ea72",
        "cursor": {
          "ref": "34cef356-ce4e-4894-b26c-1936b5cabd2f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "008afb65-d4bc-46ae-a575-0396e7d95dc5"
        },
        "item": {
          "id": "53beb903-4c6e-42b1-befa-a0d14258ea72",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0477328d-640d-41fe-a102-38ffa9ed767f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a569d3-3556-4ded-800e-a34b6c5e09c9",
        "cursor": {
          "ref": "975cff32-aefc-4f86-908f-fe8fc09f7754",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "720e9ba9-7da1-415f-959b-6f649c944bb2"
        },
        "item": {
          "id": "47a569d3-3556-4ded-800e-a34b6c5e09c9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fda3d001-9ad6-4fea-93ff-687c4f37c655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17999b92-b676-47bb-aff3-fd18505f94ae",
        "cursor": {
          "ref": "0eac2f3e-1f3e-4d96-bc6c-4203c23c6881",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3179a760-0142-40a5-80b5-381a9fcd0fc2"
        },
        "item": {
          "id": "17999b92-b676-47bb-aff3-fd18505f94ae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a2ce8d66-8a53-465b-90cc-2380e88a0332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3384eaac-d7da-425d-83d1-a65c08f275eb",
        "cursor": {
          "ref": "ef31dd6b-e031-4458-bedd-26b36dc25c9c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9c760e61-3258-4047-a534-0295c0fa8efa"
        },
        "item": {
          "id": "3384eaac-d7da-425d-83d1-a65c08f275eb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cdb7756f-c757-486c-9b81-7919b08331d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e1d6ea-c38b-49ae-a0ba-fe092fdcab6a",
        "cursor": {
          "ref": "9f9ca5e8-88ac-4e8c-ac5a-80c779935559",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "783936c1-88bc-47dd-ad36-d171a6295b16"
        },
        "item": {
          "id": "f1e1d6ea-c38b-49ae-a0ba-fe092fdcab6a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b3fc9bf2-1f8a-49c1-bc07-c8beccd70aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cb0dfa-89f3-4cb6-a74b-2a616bfe440e",
        "cursor": {
          "ref": "3971d6bd-8469-4cdc-be3b-3cb6a7811211",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0a714afc-a54a-4753-aee0-c6d9746e1f0f"
        },
        "item": {
          "id": "08cb0dfa-89f3-4cb6-a74b-2a616bfe440e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "439ac594-f1f9-4af5-b9b7-0fb182e45ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd34de5-9dc8-4a9b-8b1b-e492a3ef017a",
        "cursor": {
          "ref": "03de5776-b145-4fcd-8742-4bcac4fe7f0d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "26bdd403-ea72-4d6b-bf65-386369e9fe19"
        },
        "item": {
          "id": "3bd34de5-9dc8-4a9b-8b1b-e492a3ef017a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "74067cd9-8276-4671-8458-57f89f5e9a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ff7efe-708c-4028-b797-29f09c70c9be",
        "cursor": {
          "ref": "ba492a18-8184-49fd-bd62-997583521d60",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "060b541f-a8a7-4871-8102-e62e24c4601c"
        },
        "item": {
          "id": "a5ff7efe-708c-4028-b797-29f09c70c9be",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "799b0039-3ea5-4cb9-b0ad-ef4164674b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0cf61b-32ec-421a-95ec-6b78a4e73fdd",
        "cursor": {
          "ref": "d1959839-e395-4b80-aecb-ca5e9b508f14",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d2b72149-d3a5-45f9-9813-f6c02b85d165"
        },
        "item": {
          "id": "7f0cf61b-32ec-421a-95ec-6b78a4e73fdd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "64d46e90-9aac-408d-8fa7-5d92c3e596fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9212b33-a90c-403f-96ae-7d4d8c7ad442",
        "cursor": {
          "ref": "9bbb15b4-3f4e-4c45-8ad1-6cf1b5aba66a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "76f86e76-b9ca-4af7-97ba-20c7076e8244"
        },
        "item": {
          "id": "a9212b33-a90c-403f-96ae-7d4d8c7ad442",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bbdaf468-53eb-4918-b168-d180e7c4363b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7c487a-3692-403f-8a66-6be35bbaa09d",
        "cursor": {
          "ref": "45e49f95-34c5-4479-b9d5-394cda39917b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8974bac2-a5d8-48ef-902a-5a7177e0ce38"
        },
        "item": {
          "id": "af7c487a-3692-403f-8a66-6be35bbaa09d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f20ce8b2-39c6-4c3b-9882-339047796113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e56e71-a23f-47de-bbcd-f87c349e768d",
        "cursor": {
          "ref": "20fb8c67-2f09-4472-98f0-ff562ec303df",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fcaa5e12-0516-4835-82c1-64eb66b16493"
        },
        "item": {
          "id": "e4e56e71-a23f-47de-bbcd-f87c349e768d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "48f4498f-41da-49a5-b396-d1f862a2d601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b5b98c-2543-4d21-bc7e-ad0bbf8b166f",
        "cursor": {
          "ref": "6ab328a7-f4d3-4b1b-b002-70a6573fc1cb",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "696300c1-f271-446d-b029-e89e796ff68a"
        },
        "item": {
          "id": "95b5b98c-2543-4d21-bc7e-ad0bbf8b166f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9e9982f3-d3c4-4b97-aa38-fff786c4c108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423e7bde-b7fd-4872-aaef-13239eb81cb9",
        "cursor": {
          "ref": "d9a9abde-bc46-47bb-8c17-d675bf61e1f0",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "689e3579-9a38-4a81-a76a-06e53ca5dcd6"
        },
        "item": {
          "id": "423e7bde-b7fd-4872-aaef-13239eb81cb9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "27700509-0fdf-42b7-94d4-db7a09d23e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8242bbbc-16d9-4cc0-9a02-ce2a9295634d",
        "cursor": {
          "ref": "c0571f24-112b-41cc-be80-d5754d39005b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3bf9571c-b26b-4b3b-ae42-c97ee7cbc733"
        },
        "item": {
          "id": "8242bbbc-16d9-4cc0-9a02-ce2a9295634d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f0a000b0-36d3-4e16-aa41-353f2431497e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe6c85b-bc5e-4ba8-8b2e-fa2f60cb8f91",
        "cursor": {
          "ref": "0b3218ee-0c46-4ec4-ab43-636439e0d487",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ba5972ac-eedf-4e34-8c98-c6dc537e57ce"
        },
        "item": {
          "id": "abe6c85b-bc5e-4ba8-8b2e-fa2f60cb8f91",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d8e5fc65-28ca-4d59-a69a-d900ec7aa016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953f0a96-60a1-4ce3-9e4b-70fda494aafd",
        "cursor": {
          "ref": "d275e5aa-73e3-44e0-b35b-cb70ebf66df5",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b9c4b647-9a87-47e6-842b-e83561776fd5"
        },
        "item": {
          "id": "953f0a96-60a1-4ce3-9e4b-70fda494aafd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e636177d-db3c-4078-81d7-8c3294e9e5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbadbfd-a114-4784-aa68-796cbbe94bbe",
        "cursor": {
          "ref": "3f450b86-2df7-4f50-9a8b-fa286790f5e4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ab9eb953-c776-47a1-9eff-d7e11c09c2a4"
        },
        "item": {
          "id": "dcbadbfd-a114-4784-aa68-796cbbe94bbe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e9e1171e-e4cd-45bd-9087-43aa533cd7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47c5e15-eb43-46af-8296-129fb7e690d0",
        "cursor": {
          "ref": "810e622a-0f58-4f9b-be09-8e63e9510cda",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0d9daa32-f299-40a1-9002-a2861f878264"
        },
        "item": {
          "id": "e47c5e15-eb43-46af-8296-129fb7e690d0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "238fba80-8141-4d20-92f1-03d6817e417e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8914cb51-d111-41f5-aa4f-47ff5ba681d5",
        "cursor": {
          "ref": "44abd7fc-c724-4a67-8656-6eb9fbf7f037",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b197376d-3a20-4993-86c4-89902c760d28"
        },
        "item": {
          "id": "8914cb51-d111-41f5-aa4f-47ff5ba681d5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "119b8cc8-1808-46af-9cfd-018058380a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58be79ab-0a27-46ec-8067-382594b93a33",
        "cursor": {
          "ref": "56ca8ad3-1f1e-46f9-a786-7542b161a678",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0fd4e338-e866-4245-a3b2-42d45f489956"
        },
        "item": {
          "id": "58be79ab-0a27-46ec-8067-382594b93a33",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aac2fbe1-020e-45db-af24-f35c91f3960a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20464cf-2467-428c-a9db-d1274e8b2213",
        "cursor": {
          "ref": "886d8d8e-2517-4df1-9530-9d03a970cae9",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ecabb4cc-0480-444d-b86a-02801c7b7c58"
        },
        "item": {
          "id": "b20464cf-2467-428c-a9db-d1274e8b2213",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "21402902-5566-4b41-85ab-e61eaa2798aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8bba33-68ed-4bc1-a467-e237d2e4d146",
        "cursor": {
          "ref": "418966c6-b4cb-440e-affa-1888fb96b005",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "52621395-3fc6-4dce-b26b-b6e2ec9f7da0"
        },
        "item": {
          "id": "3a8bba33-68ed-4bc1-a467-e237d2e4d146",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1ae9c14b-93cf-47a7-bec4-ab94f2436a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef3d975-8bbe-44a0-a71b-eedc1998cbe0",
        "cursor": {
          "ref": "107badd2-63f0-4013-9f06-c59930139edb",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "746f7a8c-3a63-4e24-958a-2eaef3543eb4"
        },
        "item": {
          "id": "8ef3d975-8bbe-44a0-a71b-eedc1998cbe0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "89ea178a-949a-4f5c-8cee-cc44c9d0fd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6d94e3-57ab-4910-893f-b679ae666e66",
        "cursor": {
          "ref": "6ea68c22-ed79-4b96-84ca-33316fd347de",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "486a5b0b-7b3e-40c1-9476-7bd9b57c96c8"
        },
        "item": {
          "id": "cd6d94e3-57ab-4910-893f-b679ae666e66",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "042ddeec-46b5-444e-b1e2-d150a477acce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984dac7b-294c-4c8a-826e-8c1867138598",
        "cursor": {
          "ref": "6f0fa48f-c82e-45a6-b0e0-b99b7db48296",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7dbcfe1a-fdad-4691-93f8-f6927452a22e"
        },
        "item": {
          "id": "984dac7b-294c-4c8a-826e-8c1867138598",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "94e9ccac-4830-4610-8792-a51f2709b190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d549960f-dea2-401e-8193-2f09068b0b54",
        "cursor": {
          "ref": "f9df14d9-11d0-4bee-aa32-ce5b37a6e903",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "546ad378-06b3-4a8b-943e-a8a023fd3b12"
        },
        "item": {
          "id": "d549960f-dea2-401e-8193-2f09068b0b54",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bf0306ea-11df-418a-8431-c2bf8a3980fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e92b8df-702d-4701-b39a-75a45caaa5b1",
        "cursor": {
          "ref": "9cc57a61-d7e8-4400-aaf6-ea16b9a120f5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a08ba5ff-24cc-4927-916e-7ae06c0a1c9c"
        },
        "item": {
          "id": "4e92b8df-702d-4701-b39a-75a45caaa5b1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aa6b57cb-8f1e-45d6-97c6-b7fd2d41ac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccbb1fe-ec0c-4c6c-b513-b1ec864fa5d0",
        "cursor": {
          "ref": "7e01ef55-d4e7-4098-a7ed-bb914d1cf8ad",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "df52bfb4-7f27-4fdd-8754-b68179b29d4b"
        },
        "item": {
          "id": "1ccbb1fe-ec0c-4c6c-b513-b1ec864fa5d0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4f6c1241-69b3-4d36-9b3e-01b94b2c6770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552f6673-6758-4739-905e-ccfc276cedee",
        "cursor": {
          "ref": "d772e1af-22cc-4e0c-9bd7-66e46b288dec",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "50113f63-ccb8-4207-9993-406d3828cc01"
        },
        "item": {
          "id": "552f6673-6758-4739-905e-ccfc276cedee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "898fe32a-67ab-4381-a935-ea996f3db482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ca714a-a593-417a-a8de-fa65ac5f69fc",
        "cursor": {
          "ref": "30c8958a-5cc9-4a76-8d32-389213fc0b1b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f135092d-33fa-4591-8e3f-a4e8e37d63b0"
        },
        "item": {
          "id": "97ca714a-a593-417a-a8de-fa65ac5f69fc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "34bacc09-233f-48b7-bfcc-42a21e7ca0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77610874-4718-4ea3-af8a-253aabc36aaa",
        "cursor": {
          "ref": "baf92afd-6a54-44f3-b4ac-9a1f5792249c",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a2e28f3b-7db0-4b20-a682-b8489edeb0e3"
        },
        "item": {
          "id": "77610874-4718-4ea3-af8a-253aabc36aaa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "60c2fd9a-815d-4b88-ada4-ca9908ab3fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b371e69-afbc-4ef4-81ff-cfd35b9109d7",
        "cursor": {
          "ref": "c7c78c40-d29e-4b89-820d-9ae8af71fe52",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5521bf89-e13d-4329-ba87-bced1cadfc76"
        },
        "item": {
          "id": "8b371e69-afbc-4ef4-81ff-cfd35b9109d7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6ce7e4bd-45c6-47e0-ae85-d9ffc034344f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e05cb85-a86c-4a4d-84b5-545926c4de45",
        "cursor": {
          "ref": "e8e07e3d-b9f0-4c8d-a4e7-69f5d1eb6482",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d16eb521-f2c0-4312-a1ab-bdf91eebb29c"
        },
        "item": {
          "id": "4e05cb85-a86c-4a4d-84b5-545926c4de45",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dc5e0bdf-fe32-4c02-9873-57694cb873ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbde763-c4b3-4988-b9b2-82fe8b33955b",
        "cursor": {
          "ref": "f1840032-67d7-407b-8cfa-f116ce965e51",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2211f472-f319-40cb-8be9-49f03f588356"
        },
        "item": {
          "id": "abbde763-c4b3-4988-b9b2-82fe8b33955b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f84e24ce-e481-4e02-ba1b-1dd200ef432b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51029aa-d051-482e-94d4-3ce37e2c346e",
        "cursor": {
          "ref": "fda811e5-c850-4f80-8d59-022808436772",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9ccd06fc-0c32-4bdb-b14e-f2dcca31ff8d"
        },
        "item": {
          "id": "d51029aa-d051-482e-94d4-3ce37e2c346e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e4d9ed61-a648-4910-9bac-10486f40190f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994eace1-c351-4ef8-ba42-300b944d89e7",
        "cursor": {
          "ref": "260e837c-b984-42cf-9c97-5eebb8cca7a8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "da6fb243-3066-454c-a14f-7778446cc594"
        },
        "item": {
          "id": "994eace1-c351-4ef8-ba42-300b944d89e7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d9987926-e032-491d-9f88-65a766203f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e44a201-8067-4c06-b8f1-edc29d79ea99",
        "cursor": {
          "ref": "486f12a2-017f-4846-a04b-4da4e3a5364e",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c7f3b174-9637-405f-9e53-89971f0b2ebf"
        },
        "item": {
          "id": "4e44a201-8067-4c06-b8f1-edc29d79ea99",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5eab0db3-210f-47f9-9120-e19a58183b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5041418-d049-402f-b5fb-815a61339884",
        "cursor": {
          "ref": "b47d1578-8cb2-4874-978b-8db3106a93b8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0d001592-b364-4291-adfe-8130e05b73fe"
        },
        "item": {
          "id": "c5041418-d049-402f-b5fb-815a61339884",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8ee544db-943b-43ca-8f57-a184bc9e51ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e0fac0-3880-4e01-986c-7206531a398c",
        "cursor": {
          "ref": "5158ad3d-733d-4f43-8899-16afa6948e41",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "52f7fc9f-7fe3-43ba-9b72-c8bf27348fde"
        },
        "item": {
          "id": "42e0fac0-3880-4e01-986c-7206531a398c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e6671ac6-7ac4-4d19-bf09-29c24006ac1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbbb855-7558-4f2d-a8b4-077d065a0589",
        "cursor": {
          "ref": "43e334c1-6bb0-4fd7-9eaa-a57957bf31c5",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "23386c5d-f849-4539-a162-162d1be1b04f"
        },
        "item": {
          "id": "8bbbb855-7558-4f2d-a8b4-077d065a0589",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5da31ee9-9069-46a0-aad2-fe02ddbccf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7704910-86ec-454a-b5db-f25f04330076",
        "cursor": {
          "ref": "90812bdb-f3ee-49d4-8e11-b66b62923666",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "da15725e-3c38-469e-ba67-52038a85054d"
        },
        "item": {
          "id": "a7704910-86ec-454a-b5db-f25f04330076",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b12c1cd8-c335-479b-afd8-729f9fffbf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f361f7-be28-43ab-8bd3-9647dac1e6e3",
        "cursor": {
          "ref": "86f6ad30-45d2-4067-8a56-0208f4d3c756",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e0b2407a-fe32-4e7a-8c08-0b5904503cb7"
        },
        "item": {
          "id": "45f361f7-be28-43ab-8bd3-9647dac1e6e3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fcfd476a-951b-40f5-b231-ace74bdeba53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414b4b44-fa61-4c51-a7e9-046c1728efee",
        "cursor": {
          "ref": "cbdc1df0-1214-4e8c-ad6d-177cc4040bac",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "63a8bc63-0dea-49cb-b594-e20ff8f9fa72"
        },
        "item": {
          "id": "414b4b44-fa61-4c51-a7e9-046c1728efee",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "521428bf-779f-4c41-b1e7-9ffbea607a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dabdb7-eb2b-42b1-a917-b0d4c3fcb255",
        "cursor": {
          "ref": "610861a8-eeab-400f-9709-f2556c48db7f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f7ae43f4-b1d4-4ac5-8161-53676fc2b7e1"
        },
        "item": {
          "id": "97dabdb7-eb2b-42b1-a917-b0d4c3fcb255",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a3b12e01-b3d2-4303-8763-5d8c20092d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865bcf22-b70a-4dce-8b26-da28ec23167e",
        "cursor": {
          "ref": "20b29768-c746-40e8-a5a3-3b54c4aa9980",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d8df255a-8fb1-4d3a-a275-e7755b137b8d"
        },
        "item": {
          "id": "865bcf22-b70a-4dce-8b26-da28ec23167e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ceab56d7-584f-4b8c-97c7-154e76e14c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2ffff7-1068-42ae-854e-b0d696a617c5",
        "cursor": {
          "ref": "e309334e-535b-43d4-a72a-b821b1b7ae49",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a1a8d6d5-ac31-4d05-adae-86a33090435f"
        },
        "item": {
          "id": "ca2ffff7-1068-42ae-854e-b0d696a617c5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "88bcc14f-683b-4272-b217-fb3cfb066bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ce2274-c0c1-421e-9259-a080a43cd655",
        "cursor": {
          "ref": "7a7f1df8-94b6-4694-bb68-84e20bf24c57",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5b0f0a58-caca-4ac6-ad35-b1dd46abae0a"
        },
        "item": {
          "id": "26ce2274-c0c1-421e-9259-a080a43cd655",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "56a56a70-85d2-41b4-b860-39810c44de16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5ca7f9-77b4-4557-a84c-fd62d78b6057",
        "cursor": {
          "ref": "7f92724b-4233-4865-824f-650e4585609a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "01d2ac72-0fd6-4ad0-960f-6ccc7ae127ce"
        },
        "item": {
          "id": "aa5ca7f9-77b4-4557-a84c-fd62d78b6057",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "933837aa-5c6e-45fc-ac65-9ae67145ebe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061fb377-dbe2-4a9c-be13-02fb281068c8",
        "cursor": {
          "ref": "5fbaaecb-15fd-40ce-aa64-a1a0ae317e31",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "198a8455-cb8d-44d3-b249-b3f3cee9d38a"
        },
        "item": {
          "id": "061fb377-dbe2-4a9c-be13-02fb281068c8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1a283c12-df96-474b-9556-b469fa944548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec7041a-2c86-4d8d-a5df-d326e1f010f2",
        "cursor": {
          "ref": "632ca3f4-443d-41af-980c-eda0560c56a4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3c3a3f8b-19e0-4ff2-95f2-f7dcec87b966"
        },
        "item": {
          "id": "eec7041a-2c86-4d8d-a5df-d326e1f010f2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e9a51aea-4281-4089-925c-31a49db3f19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91572cfd-cd74-4891-bd98-d70361423859",
        "cursor": {
          "ref": "3f8c0bc2-fd6a-41e8-bbb7-f4c5da82b55b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "58eeecc3-1c8e-4a46-bcad-6d0658d6b945"
        },
        "item": {
          "id": "91572cfd-cd74-4891-bd98-d70361423859",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1de24c13-da01-41d9-acf3-00f92c64462b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d66185-09e2-4bcb-a3ce-55aa3d92b7a4",
        "cursor": {
          "ref": "1a1b5c81-f21a-4bcb-88d7-6ead033f11d4",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1a4e5290-e94e-4b3f-a664-a18e9d59dd34"
        },
        "item": {
          "id": "f1d66185-09e2-4bcb-a3ce-55aa3d92b7a4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6683562e-68c4-48e5-8c01-27adddf91b94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b3ee45-0417-419c-bee3-f4e1a25432fa",
        "cursor": {
          "ref": "d21f9f0d-7724-4f24-8e02-e4b3ed342307",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c9ee9e20-ea64-4039-9fa4-03f8dbd2c677"
        },
        "item": {
          "id": "08b3ee45-0417-419c-bee3-f4e1a25432fa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f77754b0-8700-4426-9149-6de4a0ae215b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b797be-bced-4cd4-8852-a84862f92f19",
        "cursor": {
          "ref": "996b3f1d-3f00-45cc-a1e7-bc3da72a7797",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8b3bb992-1a9a-4bd9-8d56-2f032beac722"
        },
        "item": {
          "id": "d7b797be-bced-4cd4-8852-a84862f92f19",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a06c6146-0c59-44ad-b539-55f07b10c5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3bd8d7-03bf-4dcf-9c96-524e0947367e",
        "cursor": {
          "ref": "a28f2603-07a2-4f4c-acb1-b871f147c8c9",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1c185a5f-794c-494e-acd3-a666f66a5039"
        },
        "item": {
          "id": "0d3bd8d7-03bf-4dcf-9c96-524e0947367e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "feedeeac-50f2-4a9b-b66c-8217838bfb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c7ea0f-67b2-40ef-9088-bb1e6acc0209",
        "cursor": {
          "ref": "1f5ff462-d744-4e77-b6a5-8b023db0a4a4",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c1a09478-279d-498d-bb6f-35e23c21c1b7"
        },
        "item": {
          "id": "47c7ea0f-67b2-40ef-9088-bb1e6acc0209",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "62fd59c3-4b75-418d-a2e5-9fcf71fbf362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cfe87d-cf30-4c77-9aed-f710936e5035",
        "cursor": {
          "ref": "0176799e-5665-4cfe-bbf1-c59859f4b3c1",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d56daae7-1c0f-46c9-8c0b-b3160008574a"
        },
        "item": {
          "id": "e1cfe87d-cf30-4c77-9aed-f710936e5035",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e40e978d-2240-4f32-8aed-21f380b247d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311f6afb-21b1-4b0b-a267-36b03501a31b",
        "cursor": {
          "ref": "68efd9b2-a09e-48c5-b4a6-6739407e0f4d",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0dd46016-be7c-46b5-837b-621fd2d72800"
        },
        "item": {
          "id": "311f6afb-21b1-4b0b-a267-36b03501a31b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "89e79077-ed5d-4a22-82a8-8e9a56391b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7183f372-3fd8-4bec-b5d3-f0c77e8af4a5",
        "cursor": {
          "ref": "c0caaa1e-8531-40f8-b97c-f3f814c5914b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2cff4718-15e9-47ca-8017-336fc4cb7862"
        },
        "item": {
          "id": "7183f372-3fd8-4bec-b5d3-f0c77e8af4a5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7987548b-f2ec-4cb2-979e-e66556e89f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e3b4fd-12d0-4270-947a-9e64622cd6ec",
        "cursor": {
          "ref": "bfda1480-f0bc-4332-a39f-54a0d516daee",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c118a1de-4f0e-4503-ba0c-0d5004e82c07"
        },
        "item": {
          "id": "a6e3b4fd-12d0-4270-947a-9e64622cd6ec",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d109f785-9567-46c2-9f6c-e3efa62158c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e533393-a4d0-42a4-9d5c-a3d7410fe44f",
        "cursor": {
          "ref": "961949ff-3aaa-470a-9b3a-1f77808a58b0",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "729029f0-f17b-4a8b-bfcb-2065079fc84d"
        },
        "item": {
          "id": "3e533393-a4d0-42a4-9d5c-a3d7410fe44f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "48566f92-28a8-4271-aeb7-224a6a371372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a92de0-38af-40c9-b2ed-2b5bb160d804",
        "cursor": {
          "ref": "d6d9942d-b6bd-4648-b6ff-693992ade8a6",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ecc167ca-fb0c-4fdd-9e9d-d17983c2b944"
        },
        "item": {
          "id": "a6a92de0-38af-40c9-b2ed-2b5bb160d804",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3d053655-dd17-475c-841a-099c0f2f7c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94ea69a-c207-44d8-8e7b-666a2555cb8e",
        "cursor": {
          "ref": "47408089-f600-4075-a057-cae0d833e883",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0c12d0c7-30c1-441b-9d70-00db965ce626"
        },
        "item": {
          "id": "b94ea69a-c207-44d8-8e7b-666a2555cb8e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ee802a53-1aa0-46db-81e9-c3f176688c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d8d584-aaa4-4715-b29e-c0b1f3e68a7b",
        "cursor": {
          "ref": "5435e2be-c829-4b03-82d4-108df8ad0c4e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d5b8a247-a986-48ce-baad-e9d3f470edf8"
        },
        "item": {
          "id": "a7d8d584-aaa4-4715-b29e-c0b1f3e68a7b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "76418d8e-fbf2-4af5-aabd-c3069a4b6849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74af25f-ccba-4da4-a8d0-c1c25d6c5763",
        "cursor": {
          "ref": "f9cfa865-0d1b-445c-a1ed-fc0096e0b76c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e09e3a69-ec88-4344-a376-8e8f7c38624e"
        },
        "item": {
          "id": "f74af25f-ccba-4da4-a8d0-c1c25d6c5763",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9ca97b2a-d079-40e9-af72-50efb29665ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcfa278-c8ca-4940-9c21-ccf58497a8bd",
        "cursor": {
          "ref": "2b2d004a-4778-4429-af9d-09b05ce4e605",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d48c642b-486d-4c0b-b963-763093867622"
        },
        "item": {
          "id": "3dcfa278-c8ca-4940-9c21-ccf58497a8bd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "600c684f-6150-4ee2-87a0-4f0234752a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8668c0df-43f0-4e72-a048-e2a8253b69d7",
        "cursor": {
          "ref": "2f55f103-92d3-459d-bfbd-1fc4d3fe77b3",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5cde41df-c909-4461-a9ab-7cad572f8772"
        },
        "item": {
          "id": "8668c0df-43f0-4e72-a048-e2a8253b69d7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "335f73e7-dc72-4a95-a249-5f91c94bb9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd03b2e-cf4d-413f-ad88-43468c822d8d",
        "cursor": {
          "ref": "51bb6074-3c20-4fcb-b296-c4a36e9ce5e0",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2d720bae-f36c-4155-98f5-2d8de5944d92"
        },
        "item": {
          "id": "cbd03b2e-cf4d-413f-ad88-43468c822d8d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "85810d06-5471-4ecd-866b-4e807519559c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae5fe28-774b-4e67-bb61-1463eb91a67e",
        "cursor": {
          "ref": "0e71f0db-731e-4032-8dd0-a6b2062b6804",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "70f59653-e6ac-4ed7-996a-ab7ea5f1912f"
        },
        "item": {
          "id": "0ae5fe28-774b-4e67-bb61-1463eb91a67e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "896cdac7-cb5f-4a5e-9240-7d1130318823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ba444b-2313-411c-94fa-954097af6763",
        "cursor": {
          "ref": "c035c2fd-b70e-4264-90f8-39307cd8b48e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e5f6129c-e89a-48c2-90ee-c7ebf3860237"
        },
        "item": {
          "id": "e0ba444b-2313-411c-94fa-954097af6763",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "66408f8a-bd56-4d0b-af7b-a63c83eeaaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efe8417-35c3-412b-9ca1-8fa10f519638",
        "cursor": {
          "ref": "b33c28f6-6093-4006-8beb-d8227cf1c9f8",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "61d12780-6a77-40c6-8359-f75b9989e051"
        },
        "item": {
          "id": "2efe8417-35c3-412b-9ca1-8fa10f519638",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e00f552c-636f-4074-97e7-288434258228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07922b61-63c5-4324-9fe4-8001e9581d62",
        "cursor": {
          "ref": "fc44d568-c0a6-4f6f-9c31-7a0b2d58574a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "567ad76c-4bc7-47f6-a634-495b8c6ed855"
        },
        "item": {
          "id": "07922b61-63c5-4324-9fe4-8001e9581d62",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d0b50f9e-e3ed-4612-b9c2-3d4504c38418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba28c050-9d47-4249-b947-0551688f85bb",
        "cursor": {
          "ref": "373da43f-42de-4078-96dd-c93f8740700e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cbc1b727-814d-4693-a2a2-cae3278b7def"
        },
        "item": {
          "id": "ba28c050-9d47-4249-b947-0551688f85bb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "276c567f-6cc5-4ffa-a79a-a190b2a5613a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bb9ae3-321c-4d10-8d54-822b34556f6e",
        "cursor": {
          "ref": "70a0efe4-9174-4e3a-bc98-782194688cd7",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1d50f7a1-eb7e-466a-a62a-cb2c3d0304c9"
        },
        "item": {
          "id": "18bb9ae3-321c-4d10-8d54-822b34556f6e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "18f9c70f-b90b-4b2f-9fee-1e4c6d545c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3625c2-65cc-42ee-99ce-7c1edb058a12",
        "cursor": {
          "ref": "c3bfa9ea-6246-4aef-b52f-45d12a677cbf",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bc310b79-0ef9-4d1f-94dd-3239de2b92c2"
        },
        "item": {
          "id": "3e3625c2-65cc-42ee-99ce-7c1edb058a12",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2853f1db-36a2-48f0-9438-ff9b94fb75e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1318b2f-0d00-4f4d-92c9-be2131430aa7",
        "cursor": {
          "ref": "c472bf48-6c56-451a-97a2-3be802cf0c9b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fe66e4c9-766d-4a75-a8b4-f8d6116911f3"
        },
        "item": {
          "id": "e1318b2f-0d00-4f4d-92c9-be2131430aa7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7cc560d4-bde3-43c0-adae-0d04f63360bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914a5602-9dc2-4d5f-b2e6-16f72e60fb76",
        "cursor": {
          "ref": "c2d9240e-acad-4599-9522-2907025266a5",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "94f2ada1-0099-448b-94bc-371fd75d5337"
        },
        "item": {
          "id": "914a5602-9dc2-4d5f-b2e6-16f72e60fb76",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "da4b8ddf-bd02-4932-9cd0-371dfdd418e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a29a4b2-65eb-4c15-b813-e96956cf6e0e",
        "cursor": {
          "ref": "fdc8867e-67ae-4a73-8697-fad22fc1c248",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b402cacd-fbf0-46d5-a0f0-0202a579e38a"
        },
        "item": {
          "id": "5a29a4b2-65eb-4c15-b813-e96956cf6e0e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2694b357-32c5-45ba-afa7-36aa5c879e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c935e180-311d-40c4-a829-2df646b5a246",
        "cursor": {
          "ref": "3d6ceb7a-0d45-43ce-992a-8bcda7e2df89",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "90da09db-d550-40d9-9676-daf903050ebc"
        },
        "item": {
          "id": "c935e180-311d-40c4-a829-2df646b5a246",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "357714cb-912b-4e9e-aad9-2447d5e19705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f69d8af-d2cd-45eb-8796-08bd6d1d6eea",
        "cursor": {
          "ref": "89a69662-b380-4a8e-a779-9cdb8c2ff3c4",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bef79395-0d0f-4724-b3ad-e05209d0fa8a"
        },
        "item": {
          "id": "7f69d8af-d2cd-45eb-8796-08bd6d1d6eea",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2b5f151e-d32a-4cb7-ab9f-182e14904d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afd6c69-655a-42fa-91da-87d5cd07516e",
        "cursor": {
          "ref": "883d9530-91e9-46d1-866b-237e6e079b51",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "168ea52e-744b-4e2b-aeef-63782a7a3295"
        },
        "item": {
          "id": "4afd6c69-655a-42fa-91da-87d5cd07516e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "132aed76-ff7d-45e8-ac6a-527588d13cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ce7aee-bb8c-452c-bc3d-c3c0e87413cf",
        "cursor": {
          "ref": "22ff803f-aff0-4ee9-b220-2aa6c1ae06f7",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4e4b1c0a-4743-4bed-aec4-930c9b457487"
        },
        "item": {
          "id": "41ce7aee-bb8c-452c-bc3d-c3c0e87413cf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4b04e275-ef03-4c01-9275-3ac7f4e2cbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d396cefa-bb97-46da-aa52-64246198e22e",
        "cursor": {
          "ref": "593f5559-0386-43ca-856f-caa2c42e216f",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7fb188e9-c51b-4caa-adbb-549e74a061dd"
        },
        "item": {
          "id": "d396cefa-bb97-46da-aa52-64246198e22e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2d6a2edd-6c2d-4428-b466-9936f1ce6e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4926ac41-caef-44ac-9485-870138681a57",
        "cursor": {
          "ref": "dd51a25f-9577-4e04-b720-227c681c833e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ddc79c4c-8535-45ab-afd5-7957e71ae004"
        },
        "item": {
          "id": "4926ac41-caef-44ac-9485-870138681a57",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "346ac4cf-9b31-454a-82d5-a38b5f2dc3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae11958d-abe1-4595-a921-97d52d5f4282",
        "cursor": {
          "ref": "16584382-2cc3-4376-8506-fc5d02d75131",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f27c95ba-51d7-4030-aad9-359c3b0c0ba9"
        },
        "item": {
          "id": "ae11958d-abe1-4595-a921-97d52d5f4282",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "060b31dd-9286-4c0d-8a13-bd4fb924573a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4c06ec-3c69-4568-bf85-b40d3e542973",
        "cursor": {
          "ref": "68ccfeb3-e0f9-4250-b1f9-2658212ebc9d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6cd66307-9e58-4414-bc7e-5896d6a7a5ca"
        },
        "item": {
          "id": "ef4c06ec-3c69-4568-bf85-b40d3e542973",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cd36c3e7-6f4c-4704-9971-ba6c2501fa7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d54283-b0f4-4107-a1b1-ba67f9f3d6c6",
        "cursor": {
          "ref": "0a5bda84-03e2-453c-987b-ace7b14a30a9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ca8e0823-7c05-4202-a8ff-c979806551e5"
        },
        "item": {
          "id": "c2d54283-b0f4-4107-a1b1-ba67f9f3d6c6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0f64f58e-e119-4986-a18e-431e0479b4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16829aab-6da3-4cf1-85d9-69b45e2a3093",
        "cursor": {
          "ref": "6062baec-6a38-420c-9e12-a261a738df04",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c6163187-98e0-4198-b1a1-2c612b6f1f04"
        },
        "item": {
          "id": "16829aab-6da3-4cf1-85d9-69b45e2a3093",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d7ae93c3-d186-4439-b669-66839430f648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5a0af9-22f8-43b1-a297-8708f1c9131b",
        "cursor": {
          "ref": "dcec48c5-f50f-4690-b7c6-30efdc13d17c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "19e4202a-6d82-4367-a255-5e02de4d98f7"
        },
        "item": {
          "id": "6c5a0af9-22f8-43b1-a297-8708f1c9131b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c5540946-47d3-457d-89f2-c9f6a7fb9b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cc2d7f-6d65-4395-939e-3a9744e23cd4",
        "cursor": {
          "ref": "b0aeead9-f636-4ef3-bf94-f17b584d0cdc",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1870d450-74c5-464d-9bc2-2a44654b58d5"
        },
        "item": {
          "id": "87cc2d7f-6d65-4395-939e-3a9744e23cd4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "21a841b1-b5ad-4b79-9e26-8abee6ac9e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b98c270-fc88-4d9a-9092-71d0e8b13a4b",
        "cursor": {
          "ref": "167d0576-5a12-479b-bca3-70c83c2e5fd9",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "72254450-d617-4068-baea-cc09742e1032"
        },
        "item": {
          "id": "7b98c270-fc88-4d9a-9092-71d0e8b13a4b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "68925f8a-41d8-42e1-bf1e-d837f5ffa912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8946c20c-4a1e-4682-9132-7310220b6fb6",
        "cursor": {
          "ref": "96c327fd-5444-402d-bf36-c09480573d93",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1b0c5d0c-ea32-45c2-8775-3e971b1ff16d"
        },
        "item": {
          "id": "8946c20c-4a1e-4682-9132-7310220b6fb6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "34ee2f84-365b-49ad-92d1-9f41126da7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2adbd4-8b65-4b75-a75c-771a50ce43d3",
        "cursor": {
          "ref": "1baa91ec-2a82-4936-b322-e15e3529b377",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3b0764db-8e29-4495-96e0-7581bedc346b"
        },
        "item": {
          "id": "df2adbd4-8b65-4b75-a75c-771a50ce43d3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9f7f04c7-13a1-4773-8f4e-df2e2f459484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddab346-72fa-4754-b6c8-cee75d9788f6",
        "cursor": {
          "ref": "d663474c-6691-4ce9-906f-9ae359894999",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8f6073e2-6075-4e88-91c9-5a0ca4bc6546"
        },
        "item": {
          "id": "5ddab346-72fa-4754-b6c8-cee75d9788f6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9a877255-7b49-4b0c-952c-5bce9f695f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cffe4a-3eb2-41ba-92bb-258b9f253f11",
        "cursor": {
          "ref": "6e691c1c-de20-4f21-b38f-4b2df564979b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c78b3218-37a0-42bd-8d90-246db7a3190d"
        },
        "item": {
          "id": "01cffe4a-3eb2-41ba-92bb-258b9f253f11",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "649033e5-fd5f-47b4-aec3-ae8dedf0a4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4168b9-f83a-47da-b280-cd6221ec7cb8",
        "cursor": {
          "ref": "979cc666-7b5a-4d78-bc16-9499935baf10",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5a5c75b3-e228-4da3-9316-2de5e068d99a"
        },
        "item": {
          "id": "4b4168b9-f83a-47da-b280-cd6221ec7cb8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "64d41b23-95bb-4e47-b562-5a1f3b244bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6456a4ac-6c65-4f8f-928c-129090977714",
        "cursor": {
          "ref": "12e9c9bc-e28c-4f49-9cff-17c141e46663",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "68c0e75d-8ed4-416a-968f-a6c62325cf5b"
        },
        "item": {
          "id": "6456a4ac-6c65-4f8f-928c-129090977714",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dab865a7-13ac-4c1c-a322-34fb99a8619d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e8f39f-640b-4ee9-8978-5b9544ab9392",
        "cursor": {
          "ref": "1e36a261-9e06-4ddf-828f-f06359cf639f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2eba2d73-cc8d-47ef-be0f-95e3456523ca"
        },
        "item": {
          "id": "e7e8f39f-640b-4ee9-8978-5b9544ab9392",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "09a1f378-7bf5-454a-8b99-7dd0dfc197bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7752cd12-7924-4b92-b54f-fe00f217ad1b",
        "cursor": {
          "ref": "9e251e8e-f027-4238-b12e-784d4f6d4a23",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ebc9bd71-793c-457b-b0aa-e47ae58ce548"
        },
        "item": {
          "id": "7752cd12-7924-4b92-b54f-fe00f217ad1b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9a3b1d1b-560f-48d3-b5b6-7617c12fec80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ca9168-1f7a-4cb4-a449-519478e235b4",
        "cursor": {
          "ref": "d7bacbcb-cd86-4eab-8cf2-7ebb93bad4a7",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7af3fe80-f37d-44e5-ba58-65307a84d55b"
        },
        "item": {
          "id": "f4ca9168-1f7a-4cb4-a449-519478e235b4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "987f8c66-b87a-4596-a71e-7557bdbc462d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aca339d-d37d-4ff4-bd25-f0751cafe048",
        "cursor": {
          "ref": "9c02df80-6525-4128-8347-ad7b2d4d1f1a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "068fb7d9-b730-42ce-abdd-54df56495b10"
        },
        "item": {
          "id": "6aca339d-d37d-4ff4-bd25-f0751cafe048",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d08297fe-11e9-450d-b602-500c9d27142d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf21a43-7eb0-4850-bd8e-b3e8a3675ef3",
        "cursor": {
          "ref": "e1245753-3360-4263-8654-f7b78efbb50a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f7ffc054-335f-474e-8633-13fcefeffe6c"
        },
        "item": {
          "id": "3bf21a43-7eb0-4850-bd8e-b3e8a3675ef3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dbe2858b-a9e9-4c7c-af2b-592cc34c077f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88eba8aa-91a2-423c-a57f-1ac14723b097",
        "cursor": {
          "ref": "6a04dcb4-8492-4f63-ad1f-6723a8a0f09c",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f0f7381a-38b0-4b83-b1c6-345ca90b1744"
        },
        "item": {
          "id": "88eba8aa-91a2-423c-a57f-1ac14723b097",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9de884f2-d611-4a72-8c9d-6dff455a92b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fe5e4b-3252-4c19-84f7-d0e4253b0ef5",
        "cursor": {
          "ref": "862ddcd5-9cd5-4da2-8580-a3532db79af1",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f05d8058-6979-4cf5-aa61-fafcd1c49915"
        },
        "item": {
          "id": "88fe5e4b-3252-4c19-84f7-d0e4253b0ef5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "652cee08-fd63-4931-aa67-f7e4aedbbcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb2aff0-e1a8-403a-851f-2768deeeace2",
        "cursor": {
          "ref": "7174f8bc-d2e3-4beb-87d5-fc1aa1d098c3",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "54f82cab-7a8e-4049-92c6-57b6541f943e"
        },
        "item": {
          "id": "2eb2aff0-e1a8-403a-851f-2768deeeace2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "91e6629c-3522-401b-a177-1d1544825c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918d37bf-4910-4b34-9298-2985f6fc556f",
        "cursor": {
          "ref": "68d907a8-08b1-47c8-922f-07a14169da46",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1b4106ac-eb05-4b3a-9e61-52364813ee11"
        },
        "item": {
          "id": "918d37bf-4910-4b34-9298-2985f6fc556f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "04d2438d-f98e-47be-b887-f4e266391545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa06202-7563-4905-b267-180a43d433f4",
        "cursor": {
          "ref": "2c5685b4-900c-45db-a101-824dd11654bb",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8515eb51-7c64-4c99-ad8d-d009bfbce0b5"
        },
        "item": {
          "id": "2aa06202-7563-4905-b267-180a43d433f4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ad4108f4-3fb8-4d36-8ee6-1ae765e88c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e230d03-ef9b-468c-8f33-17a68f2ec874",
        "cursor": {
          "ref": "5919d598-944f-4f08-a3d6-8494240a0e42",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d6138092-cfa5-45ca-a806-67d96c6b1dbf"
        },
        "item": {
          "id": "6e230d03-ef9b-468c-8f33-17a68f2ec874",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bf05c01f-d700-42d7-baf3-22bfbca3dda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a51d85-2711-45f6-8b12-3dae50ea4a48",
        "cursor": {
          "ref": "0af45525-213d-4d74-8aba-6fcb8ec14148",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8dc0aebe-63bb-4893-bc77-f0da46683e24"
        },
        "item": {
          "id": "d0a51d85-2711-45f6-8b12-3dae50ea4a48",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6bc72f29-854d-4b2e-8bbf-5af02c00eaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa00db2-1f2c-4ddf-b017-5f85e87e2886",
        "cursor": {
          "ref": "e379a0cb-2848-4c24-b69b-d24ec8cd997f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c6162066-6e2a-46d7-8af2-f38c8b5220ee"
        },
        "item": {
          "id": "7aa00db2-1f2c-4ddf-b017-5f85e87e2886",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "65ae1d2a-0e3d-4a09-b111-702fc486fd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a47c15-4b22-4bbf-bd09-81e8a91989d0",
        "cursor": {
          "ref": "f7ba9a6c-a612-4fa5-9590-82f6e9edf40b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b334cbe4-9039-4de3-b2cd-152cd6d22b7e"
        },
        "item": {
          "id": "c6a47c15-4b22-4bbf-bd09-81e8a91989d0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "761b51fe-97f3-4360-9e45-a43088fc9939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6f76bc-7742-40af-b53b-10f321a5a28d",
        "cursor": {
          "ref": "cec8d742-624b-4a2f-8a7c-b0bc178a68ce",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cf11c45d-3836-4f33-95c2-e0b6877b3776"
        },
        "item": {
          "id": "da6f76bc-7742-40af-b53b-10f321a5a28d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5136cda6-2971-4385-b901-77c5db68e4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4243b56c-3aaa-46a7-b9a4-6c75545ee159",
        "cursor": {
          "ref": "f07bfd4d-a2da-4ace-a989-31ed6b1baa6f",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d1cba9ff-893f-4ffa-8415-c5e602d51edf"
        },
        "item": {
          "id": "4243b56c-3aaa-46a7-b9a4-6c75545ee159",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "75a96c45-2c47-4b64-a27f-3aaa301f399e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978530ea-2669-45a5-806e-d8986fd0a301",
        "cursor": {
          "ref": "cdbd0a3b-b9a6-4934-ad48-998b91ab1083",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "39336617-43ba-4c94-8d02-19735b0ce9ec"
        },
        "item": {
          "id": "978530ea-2669-45a5-806e-d8986fd0a301",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9112a8ac-f370-4928-a941-b3d700675500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c83c3b3-0b81-4ed9-ab39-ef24ff8dba15",
        "cursor": {
          "ref": "0e9a23ba-50c7-4012-8d32-c4ab92a1f9d1",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7044bcf1-aca7-42d1-b771-6fe0b4725c5c"
        },
        "item": {
          "id": "3c83c3b3-0b81-4ed9-ab39-ef24ff8dba15",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1068eeee-5331-4d25-a7af-5ac3a900d6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98cb202-b6ea-48dd-a413-ec8d25b12fc0",
        "cursor": {
          "ref": "719075d3-87ae-4128-91e0-ef8a62074e34",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "07f083bf-2fc1-40a2-8462-5f938aa3173e"
        },
        "item": {
          "id": "b98cb202-b6ea-48dd-a413-ec8d25b12fc0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "81255ae9-fe59-4fc3-88f1-c27e420ac227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81067993-76cd-4d7f-995f-9faf0edabff9",
        "cursor": {
          "ref": "c6ad5a3e-d1a0-4579-9d9d-d4875fc7922b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c26c4e55-b586-4653-a658-0a7011f0e657"
        },
        "item": {
          "id": "81067993-76cd-4d7f-995f-9faf0edabff9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "15133b8d-a8b5-4fc7-a3ce-576f31fcea50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a1a3e1-7f98-4eb2-b07a-fe30757b7a89",
        "cursor": {
          "ref": "996016e9-6248-4374-9d3c-78d7447a5b36",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7e02e919-e79b-4ceb-b6ca-d018be9c6e87"
        },
        "item": {
          "id": "33a1a3e1-7f98-4eb2-b07a-fe30757b7a89",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "936a1594-3c71-4c15-b1fc-b23c352674c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab09a93-60dd-459c-bffe-fae0649f6ad4",
        "cursor": {
          "ref": "45ca58da-f564-400c-9661-dc8f4687a879",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "85507c19-ea0d-4674-8338-f8fffd5f8ac2"
        },
        "item": {
          "id": "3ab09a93-60dd-459c-bffe-fae0649f6ad4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "25ef819b-0836-4e84-a154-437b3f692c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7721818e-1fec-4a92-98a1-8fca75471aec",
        "cursor": {
          "ref": "af0bb326-e847-4952-ada2-aa7e95c23529",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fb61c56d-99c2-45ac-a889-12e7bbafa0aa"
        },
        "item": {
          "id": "7721818e-1fec-4a92-98a1-8fca75471aec",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b6637624-d3d9-4487-9286-d565f5bfbee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eba347e-edfa-44fc-b515-82791c666a58",
        "cursor": {
          "ref": "28fa2587-400b-423c-a0ff-1b811dbffdf8",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f6559162-3000-4c17-8b88-0dc2d39b4eda"
        },
        "item": {
          "id": "8eba347e-edfa-44fc-b515-82791c666a58",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8ae5a31d-9259-4469-947d-78837041a07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd98bd8f-3e44-48de-8eb3-f8a77859cc39",
        "cursor": {
          "ref": "696c2d0f-c379-49ef-bab4-77a8d5cbd8ff",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c21eb7e2-d41c-4942-b776-bd8d254344e6"
        },
        "item": {
          "id": "cd98bd8f-3e44-48de-8eb3-f8a77859cc39",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "682c9e2a-5793-4666-becd-5811631e5504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d56f8c-da41-4fff-ab4e-3b8b1bdc3b14",
        "cursor": {
          "ref": "ede12ef8-e9b9-4a53-bf7f-04938cce823c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e8514b41-57b6-4def-b98c-f92edff72f65"
        },
        "item": {
          "id": "51d56f8c-da41-4fff-ab4e-3b8b1bdc3b14",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "00df3031-fa62-4a1a-ba8b-4cf06c629747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41702c29-2ed6-482f-b661-46f8ca0a0be7",
        "cursor": {
          "ref": "57c7ce20-3ccc-4bb8-8db1-531c56da2b2f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eae7a636-bedf-441d-a632-664f7f68749c"
        },
        "item": {
          "id": "41702c29-2ed6-482f-b661-46f8ca0a0be7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "671bec25-d57b-4fc0-be47-764e9f1027b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60839197-0aa1-422e-8440-8c3a9bf96c95",
        "cursor": {
          "ref": "04e12633-f48e-49e6-b1a9-c0364644c5f8",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "80eed6fc-0d73-4f37-9b19-b9affcd6e349"
        },
        "item": {
          "id": "60839197-0aa1-422e-8440-8c3a9bf96c95",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "022b57b3-7551-4ade-a154-582d32cff0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec859f68-b3b6-420a-b390-55f1f8d42a0c",
        "cursor": {
          "ref": "0f190dae-59a2-4a16-999b-8d5e979f1e15",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "51d5d72f-d2b2-4601-be96-d376e5c14337"
        },
        "item": {
          "id": "ec859f68-b3b6-420a-b390-55f1f8d42a0c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f2592ffc-5d75-411f-a55d-5dfb0eabeef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab757187-b260-400f-9c71-9ff7882b9643",
        "cursor": {
          "ref": "ed4ac563-513d-484b-b4b0-0728669c8200",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9dcfd602-206d-4d18-8ada-4762f0c5e5e4"
        },
        "item": {
          "id": "ab757187-b260-400f-9c71-9ff7882b9643",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f287eb58-4539-4b13-a524-3098e5cea962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87f02cb-b7e2-4bde-b720-d49bf16b666a",
        "cursor": {
          "ref": "ea4aabef-8f6b-47b5-b979-750b2dad1384",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "315fcabd-b5c1-4fa7-bb36-be4c45df579a"
        },
        "item": {
          "id": "a87f02cb-b7e2-4bde-b720-d49bf16b666a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "198a079c-9929-4394-ae6a-1530810f9bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fb1862-0c06-47c6-9d9c-a6b40c59ba98",
        "cursor": {
          "ref": "07df6b42-26a1-4fff-adcb-d63fd3481501",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "442fb2fc-c2bf-499b-a877-088b4211150f"
        },
        "item": {
          "id": "d5fb1862-0c06-47c6-9d9c-a6b40c59ba98",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8acc63ff-c880-4879-b316-9a2420cddaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b19e55-b065-4f7f-9238-79b34b4f881d",
        "cursor": {
          "ref": "8bc34ab3-ee4d-4eb9-9869-a22c4e8e0dad",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5a7d44d7-2104-4e96-b9d2-cf4e01fabc63"
        },
        "item": {
          "id": "06b19e55-b065-4f7f-9238-79b34b4f881d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7c665871-304f-490f-8eae-dcb019e18cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13666ddf-1ef4-4666-a447-c9dc463de047",
        "cursor": {
          "ref": "f4cbd244-1159-4b55-a5ee-41826b14fb38",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4aab0ee2-34c4-4df6-902d-88e783647e27"
        },
        "item": {
          "id": "13666ddf-1ef4-4666-a447-c9dc463de047",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "219adbe3-c428-47fe-87be-1fa34b550c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a521cbe5-bd24-4f25-86f4-130eeaf4914e",
        "cursor": {
          "ref": "021da30b-7948-4c9f-b66f-30227859bdbd",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cf8d282c-5ef1-443e-8483-d2f2ba86f0d2"
        },
        "item": {
          "id": "a521cbe5-bd24-4f25-86f4-130eeaf4914e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "560bc791-4f4c-419d-aa06-911ba27217c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118a4a91-47e8-45cd-aedd-b2dc9ce46db7",
        "cursor": {
          "ref": "1218f777-368f-48fe-a905-dad035571f57",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "17e97ef9-32ac-4223-acf3-9f587b0c5dfa"
        },
        "item": {
          "id": "118a4a91-47e8-45cd-aedd-b2dc9ce46db7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4197e5e7-933b-41fc-8b1e-1581f7cd2199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9c4e41-ad4a-461e-a4d6-8524b56287bf",
        "cursor": {
          "ref": "806c3ad4-5c90-4f56-852a-f56019667da8",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4df8a7d9-d27b-44f1-9645-2b2b5f736abd"
        },
        "item": {
          "id": "fc9c4e41-ad4a-461e-a4d6-8524b56287bf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "441d652e-1713-4eed-ae22-b8a7d2a94df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327dc44f-950f-4e39-aa33-1edbe57b9c15",
        "cursor": {
          "ref": "36324afc-e0c2-4f61-93fc-5d90bf03edd8",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "61839ea0-67b6-4324-a112-78054980fdd5"
        },
        "item": {
          "id": "327dc44f-950f-4e39-aa33-1edbe57b9c15",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e68a9374-ef84-424b-b0e9-bc013fdc5f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923bfbc5-68fc-4122-817d-ac038edfe8a6",
        "cursor": {
          "ref": "1c3fc4d7-96cb-419d-95d9-c303f1110b50",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c46a962a-2201-4346-8b6c-216d1470d3f9"
        },
        "item": {
          "id": "923bfbc5-68fc-4122-817d-ac038edfe8a6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "93ee429f-0669-4504-a141-f22822bdb3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f53581c-c7ba-474e-8b31-bc98cd1b2f06",
        "cursor": {
          "ref": "8d896420-c5d9-45d3-81de-0806895b7925",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6311691e-ac92-43dc-8466-e8cf5accebd1"
        },
        "item": {
          "id": "7f53581c-c7ba-474e-8b31-bc98cd1b2f06",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f4200bcb-145f-4176-8ea1-7cc2a9a20ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43158a2-a39f-456a-88a2-14e9b7d0d1cb",
        "cursor": {
          "ref": "d73db1d7-ca81-4a1b-913a-00c220fa7e5e",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f0fb2876-c128-4d53-a8a4-c6a0503f181d"
        },
        "item": {
          "id": "f43158a2-a39f-456a-88a2-14e9b7d0d1cb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a610d25b-a82c-42f3-9de3-a0d330285370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b4a309-8bf1-408a-8bb8-4196c16f430f",
        "cursor": {
          "ref": "f70791d9-4a02-4f55-8c6d-7a7f9fb43c3f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "369b8a4a-eee2-4c93-903d-580cbb14817a"
        },
        "item": {
          "id": "78b4a309-8bf1-408a-8bb8-4196c16f430f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d864c465-4446-4e51-a463-e30023ab7d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15c5898-3050-4f9a-a803-21e24a55fa6c",
        "cursor": {
          "ref": "0d5ec4b7-ce83-4134-8b7c-6298bcab0916",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9cb3e91c-5ff4-4bda-b8ce-1a163e38a63d"
        },
        "item": {
          "id": "d15c5898-3050-4f9a-a803-21e24a55fa6c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0ce7534e-4e44-4cbe-aa0a-c1e3fd4425b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c127ba0-0004-4bd6-ad5a-af37349a4f49",
        "cursor": {
          "ref": "f6d877e1-62b9-46c7-84c5-5f5d9162b63b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bdb13169-388c-48b9-99eb-9649c1240164"
        },
        "item": {
          "id": "7c127ba0-0004-4bd6-ad5a-af37349a4f49",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e22e64ac-17e5-4766-8976-47876398376d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13c15ad-1514-43de-afe3-ae11cde240c7",
        "cursor": {
          "ref": "dd9f2659-e0c5-44e7-851b-6021d6bf5a59",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9a261aee-9162-481d-81ae-b8d4aa8a41f0"
        },
        "item": {
          "id": "d13c15ad-1514-43de-afe3-ae11cde240c7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "978fb118-100d-4977-beb0-d55006cd60fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1859c466-d675-4bbb-94a6-cee539180e1d",
        "cursor": {
          "ref": "6c031f22-3c0f-4b82-ab1c-ca47dd11a027",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "cc496115-4257-4e00-8ecc-70e6d1995693"
        },
        "item": {
          "id": "1859c466-d675-4bbb-94a6-cee539180e1d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "698c4ddf-6635-4d24-8b36-54509810cf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2949086-cc67-4e76-9d87-3b51087012c3",
        "cursor": {
          "ref": "0779411c-7ceb-4cc3-a4f4-7a569d59094f",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b3f8c893-1089-4c79-b36b-cd7c97d696df"
        },
        "item": {
          "id": "f2949086-cc67-4e76-9d87-3b51087012c3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "96deeee4-2ab8-4b40-b251-1c03b1293603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7db528-b7f0-459c-9de4-41404e86c001",
        "cursor": {
          "ref": "b80a72c6-7f6f-4c24-bf86-33ef405b0993",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "adbb2c0f-0536-4e06-8691-9808349d305f"
        },
        "item": {
          "id": "5b7db528-b7f0-459c-9de4-41404e86c001",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "03dbbea8-104f-4cc5-a7e7-0611c0fba216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfc1f47-daa0-44a9-baa4-8f16e460c7b3",
        "cursor": {
          "ref": "3c46a4fd-fd1b-4951-bff1-128fa4897c84",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "08affa44-59ae-4c96-b9b8-6bca6b86e0b4"
        },
        "item": {
          "id": "acfc1f47-daa0-44a9-baa4-8f16e460c7b3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e86e43f6-6640-4e56-8793-180f1b95445f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7187137-6816-4212-b8c7-a050f14f694b",
        "cursor": {
          "ref": "d3a24132-9d10-4ca0-b60f-0e9e69422352",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ae39aa4d-1018-4515-9a21-7aab7ce68a20"
        },
        "item": {
          "id": "e7187137-6816-4212-b8c7-a050f14f694b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9c1cd8ee-36d5-44fd-ad59-5c1b786c210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2aadbf3-d920-49de-b132-bdaa59493801",
        "cursor": {
          "ref": "47cc4fee-076f-4ac9-b7a8-85494c304cbd",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "921d53e7-f432-4c32-b271-0d2fbffebc03"
        },
        "item": {
          "id": "c2aadbf3-d920-49de-b132-bdaa59493801",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cf0f4614-f6df-4f85-9177-e46cf7a91586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbde6a4-f41e-435b-8289-650ab1651f3e",
        "cursor": {
          "ref": "362b2359-2564-4963-b986-9e726817af4d",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "43d09aec-0d4e-4715-bbd0-95acae3a2604"
        },
        "item": {
          "id": "ecbde6a4-f41e-435b-8289-650ab1651f3e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bff95338-06f0-4bcd-98d3-02294639a530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf99b9b6-764f-4498-ab7e-1229eae71c95",
        "cursor": {
          "ref": "32a8f433-0d7c-433f-b255-289c4402f2ab",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "175e10a2-92b1-43d2-b1f1-5c47c4d1c057"
        },
        "item": {
          "id": "cf99b9b6-764f-4498-ab7e-1229eae71c95",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b9432e25-c2bb-4a31-8097-bca9f1098127",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fa775f-0b03-44c1-b042-ea2270ffbe87",
        "cursor": {
          "ref": "ce18f26d-2bab-4674-9ac4-82ddba7c6385",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a3c48324-0135-46f4-b556-64c5e109738b"
        },
        "item": {
          "id": "d5fa775f-0b03-44c1-b042-ea2270ffbe87",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "667ae404-10d1-47d3-bb63-512ae3e01641",
          "status": "OK",
          "code": 200,
          "responseTime": 125,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e634fa5-5b49-4846-b71f-055fcc06777c",
        "cursor": {
          "ref": "40350f71-0a42-49bc-94ca-8fcc3930bcdf",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8b54023d-30f5-47cb-9334-0de61ccda246"
        },
        "item": {
          "id": "3e634fa5-5b49-4846-b71f-055fcc06777c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "39f64063-45ab-437a-a768-6dd9d5d1dbd3",
          "status": "OK",
          "code": 200,
          "responseTime": 2085,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "88070e2f-ba30-4921-ae14-467814345ef0",
        "cursor": {
          "ref": "62195db0-8a6c-4652-99ca-af7e66f61637",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9bcaebd6-c51b-41ea-acb4-520d60bca696"
        },
        "item": {
          "id": "88070e2f-ba30-4921-ae14-467814345ef0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "354d3df5-b1aa-430f-85e3-c48e78ec5f0d",
          "status": "OK",
          "code": 200,
          "responseTime": 1591,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a6d89a-fc2b-451d-9cf0-15596ad9b958",
        "cursor": {
          "ref": "38b034a2-d055-4d33-bba6-605930aa158a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "28794c9d-b6bf-463d-a71a-3598eb5396c2"
        },
        "item": {
          "id": "96a6d89a-fc2b-451d-9cf0-15596ad9b958",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0999ad23-5251-4649-84f1-4722f67ab71c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a6d89a-fc2b-451d-9cf0-15596ad9b958",
        "cursor": {
          "ref": "38b034a2-d055-4d33-bba6-605930aa158a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "28794c9d-b6bf-463d-a71a-3598eb5396c2"
        },
        "item": {
          "id": "96a6d89a-fc2b-451d-9cf0-15596ad9b958",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0999ad23-5251-4649-84f1-4722f67ab71c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d52e9a-9869-4fa5-a134-69061ef1b349",
        "cursor": {
          "ref": "d7ffb5d2-68e7-44d4-8097-25303331b0bf",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "dd3a226b-bd85-4808-8340-57971ccc5dee"
        },
        "item": {
          "id": "e4d52e9a-9869-4fa5-a134-69061ef1b349",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8853c49e-0934-4050-9ce4-0126de518472",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae33c4e-05d5-4373-a5a9-622b12e9380e",
        "cursor": {
          "ref": "3bf38ef7-a2c0-4c84-8e26-af5fa3ca13df",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "32b5b688-e1ce-45dd-ab6c-0cd0d7ff873c"
        },
        "item": {
          "id": "bae33c4e-05d5-4373-a5a9-622b12e9380e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "666cdb41-94de-462c-a594-d05944d22ada",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}