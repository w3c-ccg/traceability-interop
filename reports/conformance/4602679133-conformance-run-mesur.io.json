{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d6d9508c-2afb-4c1b-aff4-7efe323ba41b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f353a82d-f386-47eb-8bf9-4fe0a2024d5e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35d2a93a-3401-467b-9023-58993326f507",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aff5e44b-ca9e-4d17-be5f-e289ba286dcb"
                }
              }
            ]
          },
          {
            "id": "8f708715-4c31-43cb-b11f-cf0cbbdf5ed6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b93df5be-002b-4954-870a-a6d2392ea1ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "11d6e029-7339-430c-b751-2eedadae0e01"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c88448e8-6d07-498c-a4e9-bbd953306b79",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "50d266ef-1862-4833-a672-64c8b1a77162",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30f2a1bc-a570-4b14-bbde-41945c893b05",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84eea0b3-92fe-4910-95a4-002858625ec1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf24fb32-986b-4858-b38a-9fe772c7aa9f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca020f87-12d7-4536-a204-f79a7036b843",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84a13d46-ea01-42f6-bb0d-3ab2ad609bc4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "20ad05ca-d2d6-4d56-8839-38139437d1e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5908f9e-5108-4087-a51f-7b57d3dbb725"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a817bc97-3c91-4d72-9639-ff8740ae29f9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dccfc377-76b8-4cb2-bca3-214e931f0a04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e458e933-cbec-4ff6-b3dd-9ed573062610",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df4adcff-0b4f-43ff-a413-3b7e5e4b871a"
            }
          }
        ]
      },
      {
        "id": "d8242bed-9b51-42bb-9bfd-cd28c1b29d6c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6eed626c-ae83-472c-adc6-bd0ae8f6bf72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8038567-aa11-4450-a9fa-ab780f8f2948",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9640645-aff4-494b-8116-87283b5e5ef6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497f18f3-5fcc-44ac-9c38-b0a89f12371b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f044c0e-5196-400e-a5de-b931fc195497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2396c7-c88b-48e4-8e74-2902627983cd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8723de-6186-42a3-b054-df3f7e4a0b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7db1bb60-1074-4a5a-ab51-c6f5dcd3eda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b697d66-261a-4560-ac65-428ba45eea96",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3efb95-1c80-416f-95d7-bd6552f0f96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3be6507-7275-487a-95f3-01e4f7494bef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14c6048e-1929-4775-8b95-37988ba48af4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5caeff82-7bd3-4ed9-a937-2c726dd4101a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43aabe6-763f-4552-b246-75a35f17a966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "514227b7-4f0b-491c-af7b-8f0d8f9ce400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69ddd80-7d2b-49b6-9776-28b79be6b55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0f1efd-b4a8-4288-80b8-c7ad4fc9a1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdba1bb-367f-4f25-9fb6-9fa8ffd8ba1c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234ba550-26f6-4502-8ac3-726b2336fc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ecea9d6-42a3-4b79-8fec-9b3ee1bb731f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d7304b-6f73-4009-8d5a-3b1fafb9dee0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "599f58b9-2bc3-4077-931a-a4aa6f20abe4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "de2c85a9-f0db-48d6-aefd-399ed14d5d14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eeffbd9c-2368-4082-953f-74ad92cbad40",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b0733f3-1353-46cc-b098-fe257f705726",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2558e26e-a7ea-4336-b09f-250ebd5695fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7340223-3e33-497b-896d-26d545b6d9f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "ce5e98d7-a87a-41a3-ac9e-df954a4b6940"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46107d4c-6d61-492f-8509-14cc62a58573",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13082072-b29f-425c-9d2d-ed827c020916"
            }
          }
        ]
      },
      {
        "id": "95a11b86-f4e8-4e05-834e-19745ca0e0f4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d75bb479-1036-45b5-9376-bc5b85414152",
            "name": "Negative Testing",
            "item": [
              {
                "id": "769e07ff-d946-474a-a079-fc2b57be17ad",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4f59031d-16e4-4198-b318-05ecd25200ab",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe06a59-af92-402a-a330-58395a0f5581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab24254-11be-460a-9851-e353aec8a509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd4b7aa-411d-47b0-b390-9f0d0d288e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42dbce94-800a-4ebf-a42d-3431feafbe01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8fd358-ac5c-45de-8144-4b55e9e4613e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19952bbf-d2a9-403a-9340-5dfe93ea8be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f255a2-33e8-4ec6-9f8e-6387a2d13ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6903cded-c666-4232-9f31-d7ba2df601db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac8a5fcb-5518-472c-b315-28b25de0fe1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef850246-ebaf-4975-a2c8-00d279e9944e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da67f880-1555-457e-a7fb-de8aeb9cb723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6a1388-61ab-4648-8298-51878e024b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b798a4af-4b0f-43f1-a21c-bd3e86c38b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4307c16a-00ff-4e33-ac2b-fabbff94e936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac1ffff-b9bc-4b47-99e3-11dbf04b774b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ad67f1-5bd6-4e61-8bb5-6e4bade545d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17eb64da-21aa-4f03-84fd-50ea92c75525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5fb2a7-b853-4d11-b2a3-9a08ac6c58f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e33240d2-841a-4bef-93fd-9925e8172e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c63238c-353e-488a-880f-c1310d970b95",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a2e864-0778-40bc-b94a-da6a344c2beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b70529-867f-4094-a6eb-30a24aa5063e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eca1833-ea79-4807-a794-6e8271878ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07a5724a-86c7-4ae0-995d-e46e0308c967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18305698-c831-4fda-b4d0-39181154c3a4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6392c6d7-48d9-4a69-8bef-5c299923e359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87042347-b1ec-4fec-a1f8-8bb74a25eca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7282ac-de89-4ad8-a1d9-79c25d1d749a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb3232f1-1aee-4ff3-8768-34a156c91258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3c1086-232f-4900-ac40-d96658c6866c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d61a01-1c34-4084-927f-c3011bbbe239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e93093d-556a-4e83-b780-a52482475cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3248d68c-17b9-4c05-833f-0849e7e2cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "964a45aa-5dfc-4df9-826a-991381f88cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dff39c-3cae-4392-8d05-b26adc5614e3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa353ad-8a88-4398-913f-4171fb2dcea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa82950-7b75-4790-b4e1-c9fee407910c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ff3800-db78-4d69-a2e3-d3fe9df48790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fff73e5-3ac8-49f9-9a95-0705d485776b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edf716c-f92c-4694-871c-53e5bb3f7cf7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1cabca-8f7d-4c51-893c-491bdde43957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbcc8c8-e746-473d-adc1-76174d951e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30af5e84-fad7-49bb-917d-419fba0e262b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bee9acef-0466-4390-be4a-7e22fdeb48e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80867ac2-38b3-4502-b4e9-d4757490388a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f045f9-3c7f-44f7-b430-833f1a3f84fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2e1d87-9919-459a-905b-ff35f97d3870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa9627e-e7a4-4da7-bc23-a60e56799562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e120d840-d000-41c3-a6c7-6a697812bb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2cd6ac-f0e7-4747-b1aa-8297ebbaf857",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799764fd-94fd-4615-94ba-955fa22f6173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2510b6f7-1d48-43a0-9e59-87d74b4ca7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31083c64-ee98-45cd-8141-1b3a600e0c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "293ec4a9-f04a-4341-a110-207a796df875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0152f0-e59a-4ca7-b97a-edf6c4d8af45",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f93e1b-beb6-4cf6-8edc-1e991dae1814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580d4a97-7629-4593-bdba-4d7e60e0f052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6702af16-11de-4d73-a69b-3a98f3f66083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "845075ee-7d5d-4d9f-a41b-f161453092d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ddb1c4-193d-4679-852a-a0a5a5a22c7e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b847f2ba-56ed-40e7-90fe-63601883ac5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1213247-399e-488e-b1c2-0021631e092d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c902a0d8-582e-4bf7-8ac3-cd7103cea28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11640a4a-31ad-4da6-93dc-faee5c4ef8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b7ff72-bbd1-4998-9ac6-c6de4af6db24",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655868e7-8cb3-406f-974f-39ff4ed09cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116344e6-c67f-4702-822c-074c8c81f483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8986eb18-42b8-4f67-ad2c-58c625e8dcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b915fd1-0c9f-4c1a-b2a3-2f7f45f94002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c886b5-d463-403e-9f57-4af21c44ad68",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e61d25b-7149-47d9-ab75-5f14d568e070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecaa2f7-bd78-4be2-a630-2e47f6385845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a143b4-9090-49b8-b52e-b5814dd749a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f48c21ab-f391-4603-9e78-cd307264b481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cef240-2afa-4e53-a4f4-e26910448053",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59b378a-0143-4d2b-95ab-d24ac529b6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee562c6-6991-4bf5-b6ec-99c52e95a4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be549ca-295f-44ce-9ea8-c8e9a8d1ccad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a764bfd-30cd-4c02-964a-f79ef8d8e21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ef3707-f8e7-43f6-854b-8b64e7d2e47c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bd9eec-e9cb-4379-bd57-00926fafbd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4d5dbf-1d11-43dc-b230-55d90c35f4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c813a789-63a2-49f6-8430-fb289c04ad05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4f1d057-f17b-4d62-8cfa-be86439e683b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c8bc63-6d1a-444f-8001-4032870b9198",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8500935f-7527-400c-8342-160b8af66ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7984c8-be52-4af4-81f0-ef76720cb0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f53d4e-60d2-4f14-97a4-f30840484519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b585e83f-c819-461c-b4b9-d43d61c711b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5dddb2-fca8-4ff8-9193-84680823401e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f189431-dfef-40fb-b42b-fb60c9e39767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb139baa-81a4-4272-8112-36a9eaffc698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9b781e-9c2f-4822-a2de-0a3e47fb3eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb920c2-dd7a-4d05-8aef-e9fe9e05b122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce08aaab-e2e0-421f-980b-a8c3d96fc86b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e9a7ac-f871-4432-9fc7-db503c7566e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cc8579-eb85-4464-bc6f-210f5c00ad4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492d0a35-1132-4a2e-9af1-dcc0594c9fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e51e3424-2d03-4b18-8635-513d7947883c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530ec8cc-534c-4c86-b348-5438e2529264",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8d6cd5-9f6e-4d07-8577-c4026c95f3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa0fde0-9e43-46f2-bd8b-bf3ca912d583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e608ba9-7ea3-49ef-ba19-ca68af140389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "473531e1-9251-49fa-874b-532232fe0ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3e2494-7a20-4576-9881-f27cfa7b4c5c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf69bd6a-48d4-45f2-9949-bc5733136c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c444d67-670a-4c1c-b4f8-ec232a6b7413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd596253-561c-47ca-a094-1117296d00c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79fdcb44-82ca-4d86-89f9-7f67cc4f8721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889e226e-f6d1-4a3a-aad7-ee0f650a1a1c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53e9358-b961-4417-a829-65238b36597d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7702b4fe-1de2-4493-8e53-301b77c0657f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466d0762-332c-4500-9c42-f10730561516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a987e428-f767-4d9a-abea-75daa7bfb14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bec4b68-1b8d-4a17-96c5-0de34941de33",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fc308e-791d-460f-bae0-e78ac778cf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccba8259-72e9-4261-89ba-b6b211d9f795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9bdb0d-3d82-40fd-93d3-90b6425cee39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef246fc-d6ac-404e-a316-d69caac74476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8bb3f4-67e3-46b5-9c26-5e537fc07ac5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e64cead-a16b-4252-b06f-9e842f9b707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff34db3-c020-4eb5-bb98-8aa477cdbba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09be4aad-eccc-4e4d-8235-2528566c59dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bea7552-671e-4f0b-9613-522ab4f925a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368ab527-58e7-4594-8ff6-fe72fbc58eb4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24146516-d83a-4d66-b9a0-b660ab408bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54aa27cf-f084-41a5-a0ce-5b32329c0ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddf7d55-16ab-42a3-bd78-4d956368272d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82488629-a7e5-4b91-a4c9-bcf702c71c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a19d2a-2a0d-4d2e-a532-d2739313c57a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4982339e-6ab7-43d2-9188-6c63ee50b3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d14c5d-a783-4c80-acc9-b700bf3553e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2134e40-8e0b-43e6-8dc6-a37ef0726ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61a8cecc-93e5-4d35-9565-2c7b8d081684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec04100a-91ee-4d77-8fb7-84d0ea2a50de",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efc8f66-a367-42a8-891e-422477190a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a15932-dc7a-4808-8612-0ce40ab645a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b599099d-03bf-4c87-b6b2-2cc0cb15e6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9747fd1-0bc5-4033-850e-3c5bad794815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6d544f-f6a7-4982-a6dd-dfd9009e9db0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5482a065-f44a-418f-aac9-d5140d604bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea71f68e-1f40-405d-a0b6-0303ece8eb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1852fe-3696-4dcb-a544-6f21282d7309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6447088-b79d-469c-bf37-179181402639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748718fb-0b1d-44a7-b1f1-d17978f8d8db",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36796c28-8f93-4887-88ef-8312ed0feac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab57cbf-0120-4b83-b9df-94e614cff359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9b6066-152d-4e08-928a-6192f3844e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d76c086d-f355-47e9-83e5-3a707bb67035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5e05ce-1d0a-473e-971c-daba54e42988",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f2c06d-37f6-4e91-bc5b-5ea40dce8621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09d0385-1538-4a7d-bf50-fa670c4f9c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ebd630-2e1e-4a14-bae9-00c827be567d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5749cf-fca2-4fe6-ba69-2d55279c2d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e765ba01-294d-4af7-9fab-7a2a34ecb4b2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331aee9f-a768-4c98-99da-485715b8ec73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951b3103-4f30-4e0d-84c4-239aaae3e7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae96053f-2034-447d-8eba-49693bb4fc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7477eb49-9d12-4732-9d1f-27b10b096d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56875d19-0619-466f-be1e-da5135b59196",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17cf8e8-487b-4e41-a602-e4a979a1172b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66362d53-30ac-4619-9a40-5bd36ab7cc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8ffb75-9808-488c-bb9f-eac601f17510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "468bae65-a282-4af7-a76e-b6f6f518c40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab6507e-d649-4950-9c62-b4b20d767666",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc6509c-9bc4-46dd-a4a2-1044aa2f817c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add0c7c7-8a3f-4acf-9e7f-de8c2d903135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fe5aa0-94e1-4c20-ba8e-c3d2c9a42c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1534df74-1765-4a1d-9174-e66254248b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f859af9-08f1-42a7-a26c-5d8df422add4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26170190-2b89-493b-9750-f1a2f7611581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a27b3b3-8e2e-44d5-adc2-6e5d3aca1ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac7d854-889a-47cf-acea-08e0c42b3459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "782fb481-de06-4f4d-8316-a0cb98f5584a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccccfbb-cca1-4151-b16b-2202d883a248",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ec11da-caee-4f69-8423-64be5e991c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98254917-973e-48cb-bc90-e1feac1b9da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fc7b8e-7219-4e84-a9c2-bd662141fe5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fb1c7e-8ceb-4fde-b0ea-96d9892d62c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8676a73-72bb-4563-abfa-262229b7e9df",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7013112-2ac3-49bc-990a-e48f0d47e6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74720ca-206b-46fe-8d80-5c08040313e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c290d4-5991-4f06-9cef-345b39b2bc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "902fbbe5-ffb5-4082-bb86-620e8ee9ab84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9458d12d-0b0a-44c2-8f2d-dcdfcb6f5226",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446ad730-29c7-47b9-aa88-7bf37309c0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdf0991-b13b-439f-bd86-835312970924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b68723-b356-4784-82af-ddc5707f5eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3735e5fc-6f1b-43e4-ad50-e807aaf7ccfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46394ace-4c60-4781-b982-8c4d99c1bdec",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2433aa5a-cd33-46df-9734-00645ce72e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a3c7bb-3760-43f2-8bf6-270dd94e127a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0137af30-4bf9-4070-a186-7d6e01da19b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cef8e99-8303-4a75-a71e-42b170ab9d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460be6d8-5024-4f1d-b807-3a8c336d9a87",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13558297-fd56-45f9-8d7b-295955cf7a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1a97ce-0f7a-4a6d-8e70-a22fa3a8cab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35f58f1-b4fd-412d-973e-2ea509a8a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "13f46a41-19c8-4dd1-888d-adabe36c2c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869d51b9-f7c2-4986-98de-739cf1631846",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166b57a8-9bd7-4dfc-9ac2-afc1acc5e571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c06b1f3-f682-4613-a465-44690c40af3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277619d1-edf1-4715-bb84-b010f85a6c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27283891-8c8c-4a54-a81c-d4a5e36308c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab40931-49ff-4bcc-bdc4-34aa72c30bd1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32260205-94a0-4bcd-a723-e454903a86e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21339247-1876-40a3-bf80-99699b69a0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fbed26-a9ea-404f-98a0-8144d5b59f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "da8f8c0e-fe40-4511-9feb-b95944093e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6ac464-c9ee-473e-84d1-e90c52572e22",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d5b777-fd6a-4175-aede-d3b27e9aa8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd8669c-0b3d-422c-ba36-f286f1ed02af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a47e24-19a4-4f51-a96d-7f57566f42e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf7ad4a-bdb9-4c54-8a5d-8b18624bccc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3cfcd2-7a34-4386-8b65-fc672fbecd5d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6022f567-ac31-4870-bef7-41277cf0b9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a466fb4-4e43-4bc5-b70d-438986df9a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceafd5c6-524d-4b0b-8159-ba7ba340d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab624e16-3a0e-40fe-876b-bdd8681df5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706f5b72-36a6-4a96-9b77-19dcdab8395f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cd2573-aa7f-4353-a417-3f4c4d12898d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c232239-1342-4315-9118-657539e6c4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30628f94-0f9c-4efb-b7fd-cbae5baf7abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a27de47-bddc-4b1d-b598-b98957aef56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80f96c0-47cb-44a5-a0e2-5e001cf32819",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e6edea-bf7a-46df-bdb5-c8ec9d0ec493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcd2ae5-c85a-4b9d-aedd-b88f32472631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81344ea8-b62c-4a21-b041-b2d3dafdc323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "803e3f86-303c-424b-bfc8-4a4065d4800e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e53c48b-0595-486e-821f-714457895cbe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a3ef1-9d40-4417-a07f-ab1594628ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64708b7-445a-44f5-b945-e98c37042128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddd7df3-25e9-486b-bd69-b5c28dded254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2561c25-823e-4a1c-ae15-adbde15969fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3579fc88-c14a-4717-9fdc-580a4bcb91fc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2d245e-d2f5-4cf1-88ce-36cc5e1a6690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9d421a-c149-4a5d-8656-c86883c4376f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4362d275-6ec0-4760-a8e7-5a81715e5f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "696127fc-c63f-43c2-a908-a898bf0650b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc45dfd-418b-432b-b24e-f2d91b3ea6fd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e42b0f3-3c8f-4577-a0a3-4414247ea31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f1a18d-7d4e-4799-a462-ce3eabb07c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788bac54-20a6-4408-9143-9c03c972342e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b265ee2-1db3-4568-85fd-940667aaf75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1162a0-7330-4c8a-9a5c-9d62f8f2d73a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90172c6a-b9ad-40f4-a168-54639802c928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be58ed1b-d5a0-4afe-8dc6-5f626e490f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24a8337-308f-48ac-8242-1faba2b25511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c272adf-6d16-4540-854f-d0fb87f69676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584ffc57-7c15-4b1b-af10-63c8f58f5b94",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14dbc22-7959-4af0-9c09-6c908005b084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9427eb3f-2e34-4ee3-84d6-a2946a7a8575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692382b1-c59b-4bc8-b90e-b76382605223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad4c7a6-82ad-46d5-aec9-3a1a86c709d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a42d31-c700-4cce-9b2f-3d96b245bd29",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc606571-7f55-4d63-80ba-9f815b3fe773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce38b24f-e225-474b-bebe-0e29af1b0326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014cb19e-d5bb-45ba-bfcb-d4a38204da69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc59ee6-8da9-418e-87a9-f9f922e66a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5cd5fc-d006-40df-a00a-4952c9fc6636",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2353edc-040c-468c-9249-5ea6aca2636d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff59993-425d-49c5-91f5-020c20ff17d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db9aa76-eda2-4e2d-99c3-de0c5b817788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "660eba50-dbda-49a6-b387-703ff5b9a7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a2a335-fcb9-41a8-8555-da017a6eef26",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a10f95-aafa-4bcd-b3f4-e81a40f5a5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2bcc0be-02b9-4dbf-a33f-b044f20f6b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dcedcf-38d3-4f52-90ab-a1e6119c5584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1915a240-69f6-4a52-9eca-667a30aa335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b75277d-e0b9-49ef-8f1d-ef44e17af90b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9db9f5-ef89-48ba-8b8a-8ff8f7d1fcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68f71f9-0da6-4017-ba40-04ec0a7c5540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc13f6a-330c-4e4e-9706-b59a251b4829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d27d7771-b53c-4627-bb6d-d72589b77927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b647c2-0a04-48f3-909b-e376a56fd28a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2611ea0-4369-474e-83d6-df96582ebb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00efebc-ffce-4a3c-a498-cff033f2a5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a55c9b9-b9d4-43ea-bca4-57ad5c5055a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d04ea94f-429c-4690-a6c8-6d7baf7a8215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ec36ea-5e89-4dde-a79e-2834de3883a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45e1f12-6aba-482e-bb61-d22c10437c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a67bd87-5dcd-4330-ba58-bf8a9958c888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754a940a-c67a-4e25-b1e1-b237e66d9de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3beab96-121c-447a-9eec-0d3efb9b05f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73962c30-3788-4be2-a979-21cd0219508d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300c495c-6d1e-4adc-8d65-93496a289fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db7d9d5-6b87-466c-b074-2b3dce60f18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f270f9f8-c2d7-47bd-b79c-5db77118a895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5282a0c4-5119-4c3a-8a39-2b98d82e6a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2218fcd3-65b6-486b-a339-b724460e702e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d5d37c-774e-47ed-b2f5-44dd4c5a8b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7784383b-ec0f-4b90-bb2c-788bb7e2b140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5feb41b-1e9c-4415-9661-bd1cce2dc222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc198d1-ee19-4b40-93db-be254e557a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f8ba49-4822-4232-a8c7-e47892b66d76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258d1ea9-dd24-49d1-98f4-74e521f5a5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc939601-b535-42ad-b836-53d6d259b2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc2ce9c-6e51-4ef8-b0e1-4427bb800a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f77ccdf-e02d-42b9-a1c8-abb8754a6cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd5e86f-70ee-4237-a463-f19169f3e293",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70507358-50eb-4ae6-8210-50185f63108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7852af-c3c8-4de4-a8a6-fd082e90a0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbeda2a-d6df-479e-9789-a246b5853452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a51a62a6-19e7-4a70-8341-1fd2e9ede077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e9830a-ceaa-4368-9927-b4a1868531c0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1f7558-1999-4701-b7c7-ac6b90784611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05445788-0689-4661-a50e-82000f40e3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d173e6f9-96cb-4c5c-a440-ffe91d3a6fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd937a25-d137-4b7b-897e-50ba87b938f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e48f3c8-9cbd-4c08-a89a-ed1e99987843",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6692e323-c32e-4933-a60f-78a8077f1629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1491282b-ce27-4c8a-9142-15e469011f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3bf7cc-2b05-4af1-bda4-f0ea47f7e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "360975a3-9f3d-4628-bdb3-6a6df60a94ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaecf88-687b-43c1-ad5f-1013f4a4cb90",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f316e37-aced-4130-b927-20cc6b8e8ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0553d131-b260-453f-bcde-34ebde50c75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5ecbe6-3933-4a6f-b06c-42f3a9a6ecea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05bc59d2-734a-458d-a470-be07abef8261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ad4c3e-0f57-4139-8a68-00b85dc46bc7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca69a253-88c1-44a9-ae21-57bb8122ec5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7925f8d-f36e-4498-b6f1-2152fc80ffa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7922b18-0725-4874-ac75-701ec00638c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb42d0f-3114-4533-9dcc-a904966334bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b9bc9d-298d-425e-ad5a-3f263c6acc7d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391b94e1-d09a-48ba-81ec-415703dda57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289a4457-8b7e-4c04-bf00-f279889f97ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f451051-a210-4105-bb4c-755d5726edc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab1119e-e2b2-4e6d-90ef-03dec95e462f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fc6b36-0804-4549-8549-9ec137fd8a38",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76124270-2690-4664-a7a7-4bfd26008b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6319216c-4ccc-4b65-8323-fca1615b141b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae32e5e7-3e19-45d0-9580-ed63e7abc42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb340e0-bebe-4f37-bcb8-390b8f91fb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e364317b-f897-4a27-aef7-d540dc61a332",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e06d3a6-7601-419e-8b9f-cdd1878f3f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b335dd-6134-4f0a-85be-18239c019f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef49321-6d64-4c12-878e-90ad1aae8ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0462f1-1722-4a4d-b479-c2528a96da43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36a827a-525d-4d25-b9a5-2210f2ec69ff",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0d58c0-b2bd-4d6c-a00a-d306cf7c152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713a40f0-db09-4a20-89fe-8cee677123a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4e67cd-cbc0-4c08-a2b3-729c32ab7aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fbabc8-15d8-4d21-b3d1-a1ad20b7d02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cea16a1-2391-490a-9481-54408e2b8840",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2889fd50-bb96-4398-9d76-dad0bccbcac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec9b689-6553-4bdc-815a-c272b0a23a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d40194-0b97-4fe3-932e-2f1487261914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb08869b-f35f-420a-a49c-8ec02265a6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfd6064-7fdd-464a-a90b-92d30b178787",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7417a677-267e-46a8-8708-fc3600df6211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a5a2e0-d26e-4ee3-9ee8-990fafd079e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c0034a-1ae0-4044-843a-9bc486e297c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efed087f-41af-4362-881d-fcf669e75c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760164dc-38d1-4be4-bf26-204bb02b6510",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f7c396-c3fe-4ca0-b947-337edb33b66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1677783e-e220-49cc-962a-fa06f1029092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3333151-fdbb-43e6-9f7a-12d4426f89aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e91bde-8bc9-4c4c-9d2c-f102d8241608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b26522-48fc-43bc-94c2-374be21a90d6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65fa9bf-117c-4a1e-a314-fc5e5b782cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86602546-e5ff-4a44-8a3a-c03d23682667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbf5923-de86-49a5-bac3-7514137ccb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfebf9b2-d213-49c4-a143-10f311c4d647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f82132-96fb-4120-9fe6-6610c1a9c302",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d2861e-e2f6-4712-acbb-e5df8a57d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712c94ad-4c63-488e-bd73-9b6f7c414225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a8c7f0-4160-4997-a5b1-0bb5f545a2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9bcb32-08c5-4d40-b092-7b4db7225d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ca1445-f449-4b8e-9da4-322d95568946",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79be11ff-a651-441d-bd45-de933502d7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f84d0c-f1e1-4c74-a19a-d4459dd21434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f8536a-cc1d-4b9c-a1de-6f81221ed8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a35149-b710-4de5-8194-5c1baebd3ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83f2dec-b874-4736-9790-00787c1e419b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b12149-0660-4e75-9e88-6bde0b0e63bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161bdb82-2719-40b0-8729-2ab9912a0196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17b1ce6-b74e-46e4-9448-7ad72db60f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "688775c9-e126-4b97-850a-dfba95b5ebe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ed68d7-7a3a-4727-a430-30b5d04853a9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cb0d7b-7f61-4a31-9bd1-6c9728b23f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca866f2-0338-4c70-bd4f-c446c4b97d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04566578-d78b-4280-9a5d-c5c5262707aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5e6f5e-265a-48da-b5e8-11510245fdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca49d26-3b1c-4fe7-809d-096a223795ca",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d53151-449f-4b4f-9df6-c77697d7cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae39f65-c8b4-44d1-ae98-07c4342be543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07097a5f-eb7e-4227-8822-7ae31ffd72c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1498e0be-213d-4f4a-a6a2-5e58e32f21f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e36b35-b30b-4366-81e2-36c3a9101ceb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a583b7cc-8cf9-4d6f-bf81-7867146c5db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d80c6dc-9537-4bf4-88e7-50347c799b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1bfa26-d3f7-42be-966b-2f21def16f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df95acaf-f846-46cb-ac02-cbcc74f2ab64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd183e22-5a40-4ccb-bae4-70a739ddbc05",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf18d7e7-54a9-4507-a2de-197e0dd6c466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4b304f-1841-4cb6-8c5a-80c95e164810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a702f2f-b678-4921-9813-533351cd6b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e388eac-a930-4a47-8038-6771c20a0345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8f87ca-53b3-4d7d-bfa9-c0816d7416bb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c67449-5bb7-447b-9540-e80edd1f074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0327f43-d8c1-4c9d-9429-67bfada69b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1932af32-718b-431f-8863-735b080dd330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e70d65-0b1f-4ddc-b8ff-4610bced2cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a339bd-5f23-46cb-9178-3225d1ab8db3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26a79b3-0e19-402c-a488-5f31fb431da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a380cf88-ee53-4d48-a4b3-313a456d6d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d266d580-db9a-471d-917d-bdc49877d4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f979be-4cd9-444f-818b-690ffcc0aa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53a7207-0db0-45de-9dc0-b3e124a1e18d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61ec143-da35-4e80-b72b-c2b4a48b6ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d51acc4-cb64-4859-8339-4f513fbe9052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1186c53c-57a2-4d0c-8d87-2fbe838faccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1faba13b-999a-4579-9394-fba87beb54cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493f1bac-f7ae-40ab-8af8-88f501952cf5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52920264-df3a-4e03-9993-500a4e3fe407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f42e4b-f778-4c50-9626-fe2164989a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771415be-22b6-4470-92fd-ee984dd94148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bdd1fd-77dc-4e8e-8017-60d1ef2617fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a3c982-d707-46b8-8610-286ed07e5322",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9849dd-7285-4771-8800-1840bd5f5deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dbbc23-d72b-4df9-8de3-48455e6de5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e8a15e-1e93-4f1d-af07-93b4751feb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cff25add-3819-45bf-8e3b-cbcc1cb49a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31a12ef-870c-4e3a-8e90-2f0ef7a73877",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb52913-4b9d-4ddd-ae49-677379ec089b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5b4751-e019-461f-bcf4-5620f570c664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805c63f9-3496-4259-9306-637062f69c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbdc131-fddb-4f79-9f67-49c000d3f339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cc5a06-e0c0-4c15-85e6-6388cdd2bc66",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9461e01c-ed87-4fdb-8789-b0035c300fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5e59ee-a17c-452c-a49d-cb3eb16d76cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4f256d-a6f3-48a3-8a6b-d56cad976417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c677075-2cb0-4f0a-85a1-43b74109072b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205f088f-b0a0-410a-b530-bdf06ac52d72",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532b0c68-f424-45f0-8fe3-83d209141b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66dcf9b6-22c2-4bb9-b0a2-78e404a86c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cc17a7-18d7-4b4a-bb99-993dda5e0a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7faa7d-7d60-49ef-b5e8-50a73594c7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316d4ddd-16ff-4021-adb1-83d50f0c3f4c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b259f7-75ab-4b96-a5aa-1aa447f78df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e987181-a359-45ab-a217-0af67b474f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232f29aa-763f-4fb1-b9da-bf67aa37bdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb74c3b-e898-458a-8193-bc756d17cb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d41bdeb-8f8b-4c4a-86b4-eed3cfaa54ed",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e134e20-5ca9-4c0a-9aa7-b8775b31c4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f5cc06-3879-4a49-9e3e-d45a05dc5d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e300a1b-ccfb-4951-bb1b-2ddd5e269e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81c9f4e5-9989-420c-b7ef-4b1fc0351560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697a9a7b-0b05-47bb-8780-e04cfdbfe7c6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d046d3a2-ac20-4d62-87a4-2057ce7f0113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec9fcf0-2518-4479-9c02-5e0ca4fa14a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a9d604-4f8b-4d4d-9c94-72867f70581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "df3293f4-f38f-4bf7-9b99-3ae1e44a634d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e617c4f-e358-455d-9d2d-e2cfbe1c2d68",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea81d896-32e7-4bab-bd14-b021912112fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "797f5c42-ea6c-413a-a43c-57192232bcdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cff979e-9152-49d2-9dba-a681323c4b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "34da8e77-0778-4661-a379-730b3fd7c351"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eba4abba-4ef9-41fb-a679-c3ec7a598b6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "428a1990-c6f5-451f-adea-12da5ebb28be",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e674ebb-0aba-4493-8a3f-f208ae2e9010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4380c5d-8c69-47b4-a8cd-01d1dd57e5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6a177b-17e4-40f5-9582-9c94f620caae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d6ff03c-c99b-4d25-a779-fe732e2c5931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82386de3-7e38-4b27-99e0-9b11276013c1",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c85ebf-452b-4d9f-95bc-1c7643a5fe53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cc764eb-2c6a-4905-a51b-24d473ae672e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349418a8-4e00-417c-98bb-d08d1c1ca335",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fe191ba-b513-42eb-aaae-3f547fd87214"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c539127b-16c5-4da4-a19e-ade7b98c89f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80a4acc4-dea2-4f32-ac47-876212a87bd0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f312b075-4a42-4d97-b688-8ded65603c1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97bccbfe-c6b8-4627-81e3-170cb6936805"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e235ff9c-0417-4fe8-b30d-31f5479d4ab5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd74bbf1-9099-40d1-8119-f26581553b29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8d3ee759-e6a5-4437-b337-84fc5dc409a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70099397-8eed-4525-b8b6-628d045b996d"
                }
              }
            ]
          },
          {
            "id": "f5f0d7d8-49a4-4723-a582-8bcb62eb0590",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0a99bd1-00c1-4cbe-bc6f-066071e98049",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64ca990f-5307-4a5a-bb5a-eb1b62063df2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e5ed77f-53c9-42fc-886d-bc9ede9545a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7c1e36d-5f32-4c02-8249-62bc77b89fce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9131a959-4bed-4933-9cc1-32889a2d5b6a"
                    }
                  }
                ]
              },
              {
                "id": "b5d4fb11-46d0-4556-8dd2-d085b1e7c81d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d390661-c09a-465c-9513-3e049e5fc215",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25d6731b-0c52-466d-aaa1-1708559ef7f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a7c2b8d-c1b4-4962-8585-0eb47adb1729",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0b224064-18de-4eb2-8b85-33ce8819e396"
                    }
                  }
                ]
              },
              {
                "id": "6343bc1e-a1bc-437d-a7f1-0a427d3e7583",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af5a40e5-40ec-4964-af28-0a8c6ad43ab3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "898cb407-4045-4b46-a0b1-22151bbb83df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c028eeb2-6798-46a6-a429-4eebaec5669c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "506f07f4-32cf-4504-86c9-a4eb65d067e8"
                    }
                  }
                ]
              },
              {
                "id": "900f44c5-ffd4-4ae2-81ce-90e3f9062781",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6d8cf32-b1aa-4dac-af32-9a3f2bc0e030",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9cb7095-b7a7-4a2b-9f75-d767da30ecb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0b72f2c-b8b7-48f9-8248-b9966ce3ec28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d9581c24-fd46-43e2-a629-56b30241efd1"
                    }
                  }
                ]
              },
              {
                "id": "b44e7eaf-a4e1-4595-8cd9-713a26b98ae2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f13de3d9-35b5-45b4-b832-0a1204d0f84d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b96d5bc-d3a4-469c-b7f2-c609d97c143e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef59e870-86ec-48fe-8778-b46828dd7f8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "52ad1b47-7338-4183-a075-19467de4e811"
                    }
                  }
                ]
              },
              {
                "id": "6f8ce909-446e-49c8-afff-4d0fd445b9cf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f56b36b-2bc2-42fc-91dd-6c1216bf5dfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3b20bdc-31a3-42c6-9c16-737baf07d167"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a62412e8-7f52-4b12-87d2-1cf644ef8843",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23b22655-7297-42a3-8b0e-324dfd8504c1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "499db71a-0bd3-4b86-89fd-0e66af55774b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03fbdfd7-0694-4ba4-83a0-639d8abf0303"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a3251581-1ae3-4eb8-bfec-415422734154",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f0db1ff-425a-442b-bcb2-5ab0152b8c3b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01eac228-0f35-46df-b54c-f0124b82049d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b9178ed4-4130-426a-9844-66e622afed32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04b87fb8-3f2c-44aa-aa23-eafc5f0ab2d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63bdcb10-0c57-414a-bb43-925ca90ebe06"
            }
          }
        ]
      },
      {
        "id": "9181f84c-68bb-467b-abb4-d5fb81b3b6c6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5da7c659-a416-4585-b616-22e3cc89fe7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3b9b175-c7fe-4da2-af22-b6da303141db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff580bb3-5b31-4db9-9610-e905dd787b04",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d373fb0-511e-49b3-a9dd-68b2b510c113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1bc4c1-d484-4a5d-9523-674e35c5f2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95fa338-7952-4574-856a-2a5f084b2416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab1eb90-6593-408a-b5f3-0975436f57ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26880fcf-141d-4e96-a417-1849962094b1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a03e41d-6418-416a-9093-b2e5a06f48ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af1210c-c4be-493e-bea6-323ba77cc226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28d80b4-0cc5-4b2a-9ebd-770e4f97958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a826fd6b-6041-4044-bb53-fb8a36f6601d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5863e22f-f5c7-4bd5-9bf8-7f4beee90ef1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9632bee8-9264-4835-8133-efd89f45fe5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d64ae7-8081-431b-b1c6-370deb7d8147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a66d4c-0789-42fd-ad5e-979fc0b8bf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e520c097-2670-41ad-9b78-e61405984d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb09aaf-7330-4a57-9ab0-40aa9267a7ec",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca98cad-84e1-4e85-866c-508b199c87b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9d34fc-64d9-4d67-85b0-c42fc6f1ca32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06649689-12dd-4c05-9d19-1862f164fef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76d3e366-c18b-4c0e-bd3b-2e64cfbb78f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e6b9f3-4310-4e93-a592-efe27acd19e0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1a2dd1-7273-4fba-9ba0-45ace2a96038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fb858e-0001-49f7-b8c0-95227461cfa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd0b737-9b63-438b-9456-16119fdbb872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4de6629-1dc1-40bf-84a3-8150fdf2c754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be00daa0-42ec-4fd0-aa9c-ad4329164949",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ebe5e8-21c1-4a93-9ad0-a0827c96bc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba1a35c-c87b-4039-b0f3-2427eceba8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dd85c8-0237-43e3-811f-9ee1b7786f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a39f713b-894f-47e1-b850-a16bd3839968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45279d89-fd39-49f4-9716-41708234103c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e142fc4c-23c4-4ec1-b9c5-39fa2bf937d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85c287c-60bd-4ef8-92f4-5ce7b2e015ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974d231b-3860-4dae-870a-18aaa11d6084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e692815-9a17-474c-ae17-e1508658fc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a472e6d8-7d79-4fa8-9d5d-8e807a2a32dc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e793345-df96-4c0f-a16e-ce43df995c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b7bb19-1199-451c-addd-cf8780233b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55870eb-80b2-409a-a415-704266f6b1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36311c10-b8d5-460e-a5c4-a4170860ed27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a47dc2d-e667-4e7c-96e6-c0f42a3be4f2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edeaa4b2-2437-4ce6-9b69-b782935b49c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a212ba2c-9155-496c-ab85-571888a17093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc3c8fe-1d29-4a80-b969-7aeb1f60fa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd914ae-b687-42d9-8ca5-a0e58b9fb9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6b416f-1936-426c-8efc-8fdac73f5959",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c6a0e9-9362-4def-aec4-23a875764c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d635a71-85c9-4094-ab60-317f88f65b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4b4b94-55f9-424e-b7e9-88fe8a587785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fc259e-8de1-48e9-ae73-83c8678e0dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b710182b-653e-4dd3-b834-c8c2193fa771",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cd2f3a-7eea-4e55-b807-08dbcc80e08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5959db-6e8f-4c48-9d4f-22700e4b0980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3794e83-818d-4035-8cb3-c8c7f1e5193a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5342b6a2-812d-4e06-a7f5-e344c2e62305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd72f02-6472-45e6-9429-467ff2027d50",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00043357-bc59-42d0-9c51-9211b6fda59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db09e7e7-ce1c-4ee4-b947-9417f1a764e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747ed75d-2814-4730-8cda-78ead0e7d50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca8beac-3afa-4599-b7ad-d7728804a3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66326e9-fdec-4388-b5a2-36335b24a65f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edea8cb-ce75-4f58-994c-d55835bf5c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864922f3-0753-4516-9049-a168997d5691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c64ccdc-0a39-467a-9615-e85ea2b5e8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8caaad-b671-429e-8809-fae24d8b8e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099aa3f2-4378-4584-aabd-622d8b3561d5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9927c634-6739-4e7e-83c8-e3d70e05c2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbd7e8a-16f8-4e7d-9a56-56995c96d3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd97888-57ad-4710-b385-f7e861d39837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "df13bab2-019b-4037-b87b-8d6142c1f6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf1046f-4847-4880-bffd-cdd1f178fdaa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a590d404-6234-4d40-a945-624453db31ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5faa35-c4e0-4553-b7ed-dbf78cc44c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347a9dc7-e83b-41cb-ba70-b627afe825b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b13cf244-1104-4bf5-bcc3-9185154db8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504d524d-6376-4fcd-9dbb-da45fbe25d26",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96959852-9167-4155-a55f-714b481d7c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78af841-077a-449f-8386-5b0225f1fb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d7ddd4-c0ee-4341-9abf-cedce5cff30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "44fc3d55-ec15-40df-bf4e-d515673d7419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23eff003-1b58-4a30-880c-9e66b7caa082",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94661011-c0a8-4786-839c-b9cbfe4c99ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf456b2c-5efa-44fd-9912-1c9063793957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95e0ae9-022d-44c6-a59a-bcddb5865c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "30390663-a700-42f2-8f33-cb8e671591a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70cf1be-afdb-4794-a380-f4b784b4b084",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c15ebaf-354f-416f-94ed-4a7ab7f3a420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c384d9-7fbf-4c0d-81cd-6ccb9af4f40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1dfd83-8e1d-459e-89e2-572efb39622b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f049a28-6816-4b11-8cc5-bbfb620d4286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7dd9230-ad43-4fa7-96a7-17c4e04ac1e0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d980f3e6-3fe7-4dd4-935b-c4185c562ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60b3011-ddfe-4792-bd23-e6c94793ff9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b88c96-8b09-4a48-b67a-c2358a703aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64b7bd5f-6029-4caa-a6d2-fa3e7b001f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7606eaea-fdeb-4bc9-b2c2-396737a42608",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcda7e1-f276-4297-9f35-7494cba4a4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95abc504-36eb-404e-9153-0726551e336b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c043a77-5551-4720-a3e9-4289366681e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91440a42-aac7-4f08-8ce6-03433c04adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2db41c-61a8-454f-be69-e4492d268fba",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ea8a11-ac73-47d1-8274-d9f5f97dba2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa625d69-020c-453e-b240-b93fdcf7b4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473c01d0-57d3-4a03-b2b2-0eb096847d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "910b9649-e320-40bd-86c0-1c0a8b04bd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3240c3f-8d82-4afd-8b5b-35f18fdf4496",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2371cfc8-ee9f-4d5f-b563-6c1c019b561d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84b34c1-10e5-45d2-bfd6-502a25f1ce76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cb8d0a-2e89-40be-aedf-1fd5afb031a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b55271-67c0-4786-b2b2-00165cade622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a10b40a-74e6-4d35-8196-2280ad6ce3b0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2718d127-a971-40e4-bf74-1f01d898d34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107f8f65-cac5-485c-8747-7ea3367882c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4745d9de-709f-4fc4-855e-7af10d6481cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba0d607-9440-4d11-9a81-c90f0be9e7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6794b4c5-4032-47d7-9505-bc1ebdb313a1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e7f844-8b72-4b99-b01d-e6bf60e9d766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d20a90-d682-4695-80fe-7219927d8bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d52eae3-b8db-4850-adbc-860ccaf31530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6886e35a-f19d-40d0-9105-63321634612b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8407f3f-1848-47c9-9370-4fcc4bd88028",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f3d99c-1cb6-4315-8799-509ca613a027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b944e1e-1710-4b29-aeaa-1921ef177776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d434a3-529f-462f-a9ca-bd3ba6e52906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79346af1-51c4-465a-a2cd-cddb81ce5733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed6f8a2-cb73-4b97-8c62-d6f65270474d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078ddadd-58e2-4bdb-b54c-a4202c035e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea18c35c-7d0c-4c93-8147-f07ae8bf8f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d1afa9-2342-4129-aecb-4000bb383bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0bbb51-68f0-4bf4-8003-2a79451f3326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac96969-b15e-416a-a604-84fdb7af45a2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f931d5-d545-45a4-8fbf-dff852002131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af19a26a-aae3-4270-b734-05d209caa498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012fd1ff-8322-4a6e-8a5c-3777ed0d37eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e306017-a755-4693-aabb-6445358abb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a5190d-3a62-4836-adba-ca24cc0041e7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b17ba9-0dda-4218-b571-769fb9feb211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4da5bb2-1b1b-48cb-8617-117c55f441ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be11d823-1d55-413d-868f-22b53ba9032c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66983102-d894-4d9e-a9c7-fd71280f81b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813a1137-a601-4286-a0ac-580a3b375a3f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5776c406-a001-41f7-b799-7b7b087b6e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efab6ccd-9f34-4814-ac94-2e7084308f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2f093f-de75-4b04-b958-0e851850bf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "097ee5f8-2a41-429f-88eb-12bb1a93a073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fabe79-0622-4ca9-8268-ed622f710233",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384ab50a-a114-4d16-a40b-189698b78072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a611c0-37a1-459f-a72d-e11a37bd8b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fc773a-82b8-4da1-9d87-8ef52c9baa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66475545-7caa-42bd-97f5-08aa0a83716f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3eb64b-b99b-418a-aa51-2362002123ae",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975127d6-b0e6-4aca-93df-c456c4ceea14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e86074e-3daa-4ad6-87ab-6b6bd75d986d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03f2458-b027-4cba-b0a1-db2c0d7d5a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b351d384-9f45-4581-bbb0-05f03a47b029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c20220-7965-4e80-a653-85b589aa8f0c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8f12e5-27ff-44b3-b81f-aa56a802768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2609c21e-8fac-43ec-a364-5d424592bedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463a8b93-7da7-4e8b-825d-48647b332314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d71ac9-4da4-43c4-9e4b-512a8a185990"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d9d0e5c-355b-41b0-a436-938ba720b277",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9165197a-41f9-4f86-9428-8d3445a37759",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dc20db-cd79-44e6-938f-973fbef402df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f988edd9-5a15-43ab-90fb-fd6bc0a43f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0756ed5-824a-4cf6-9757-8c293c8dd897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d02ca9cc-0f3b-4d80-8204-5f3f9ffbf5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4181a260-f3f4-497d-a7f1-d2ad7c345a2e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35f6343-c1dc-4de2-bdc0-35f054d51044",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "84372bd7-bd39-47c5-9ab6-9b6103d74ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec55c5c6-040d-4f5b-b38b-f0bba0663fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69cb5eb9-5bf3-40cc-a2cc-f9a909449100"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "959a8af8-bb90-4cbc-b283-96e80f10223b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d40fb1e7-1611-4b99-9f2a-125c86a1884d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad1e57eb-b1a7-4c80-8842-b2c019d8b60f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b092e02-cc1b-42aa-af53-83e9ce4f9414"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e489b18-c8d9-449d-9d67-da72399eef44",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9bf4ba47-eb3c-43f4-b036-4e3562b232b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c4a4aa4-a2ca-475f-8063-8240a9dabd94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f1c009f-e882-401a-aa80-8c15064b17e3"
            }
          }
        ]
      },
      {
        "id": "f2a35eb1-fad8-4a10-b958-32d48afc95fa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "290f27fa-ba7d-497b-b7f8-b364d790d169",
            "name": "Negative Testing",
            "item": [
              {
                "id": "709b3860-a3bc-4d76-b501-5fd88f5845de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab8c0c86-7e4d-4bca-81c7-28d6407a3e29",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6870c58-930b-41ed-85d1-35dc56784baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b4c62a-2f36-48d5-9166-0b27686eb2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07bc6fa-a368-424f-9014-02a1a7d7a2b4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f978d2-ea3c-4806-a676-2d0753a5b8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47947520-22ef-4b5c-8448-dc52ce97a308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f9e995-52be-4a4a-aea0-4617297b873c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c3e3ab-9890-4573-8d3e-e25f5504142a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648a05d8-5764-4cb7-9746-be92ebfff4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c7cac3-4460-42cd-8994-bccbe35c09d5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feafed08-251d-4f25-a028-5663e76d4daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c15e13a-f546-4f5e-ae51-a8cf33fabe8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15c7c28-8afc-43a1-b0f1-db7f93163585",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64665989-e30c-459c-94f1-a42faf76360f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d36372-7345-463b-add0-62c33f1aa35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813432b1-05f8-4c39-a7f5-a12bb8c7ac09",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6084bb75-2501-4185-9370-84d4db12518c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f9adc2-e090-4609-9f0a-e4ea88fd1944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a826c139-c570-4950-b41a-9db53350e58e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2727772e-f49a-4da9-8035-1b5f346e3bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7b4bc5-ec87-4a3c-a146-4b94f727b061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec3a790-d6fa-4869-b68b-20badfb67bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cd8e86-f96b-474e-af5e-4cb54902e536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee9b383-bb4d-47bb-a6ed-16d6d5c8a36e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d9f92d-4a6f-4135-864d-d9871748f90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b4f2be7-a2ae-41f6-abcb-339ff228109b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66401faa-9de4-4f42-9887-5dd8d92bcc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb9e6c1-7957-4c0b-a468-e1f27a4fbb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490e74fc-cb84-47e6-8976-015abde0fc09",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c953487-cb13-4f2e-b159-b81124b68969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1cff26-d3d4-4c46-ad2a-f8c0bbf41b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac9656e-f3e7-46cd-b03d-18758d5583ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eb2991-e861-41b2-87ad-9ab1361a03de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0bbbbd-e461-4b11-918b-93be209fd5bc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffae061-672b-4868-8228-061012dbd232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "493d475c-bfa7-406f-b108-e4bddc809135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b236e4-62ce-4bf6-91a4-6c1646096589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf31d00-96f7-4c62-8757-17520410ce42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1172584-60d1-4f5a-a7f5-1cc28f7a295a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd1db41-4184-4ece-9bfb-37ce6a871341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d29a0a5-a928-4b05-a175-351fb4c02e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111e1799-8f2c-4c98-b750-3ca59ba062ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7fac30-abda-4433-be64-4e9dec83548f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0211b0-83ef-46ba-9288-70dd9226b6d5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a715e67-e90b-48a6-9d6c-965d8eb59434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b1fd30-b29d-419a-8c28-583990c8362a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6339bb42-bae1-40aa-baad-bdda23af0345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eadbb68-f79d-4343-8704-a19a719f1a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21690805-764f-4638-866e-4b4f442ba17a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645f0198-07b9-4942-8eef-75d813031d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3caacc15-a704-49b9-aaee-8925bbd91483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57f22dc-6a8a-40db-9a9f-7cb58e188b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0fa25c-4cd9-4ad1-b516-e94423af5148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb33b69-6c7d-4658-9f95-0ec0633c1d35",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a69e37-6038-415a-82fb-535681b0e515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f94b291d-8dbf-45b9-a3db-5ddbbb6c7b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b573bb-24a9-43d1-abc7-f52baad4d5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4501c0b-9ad6-4985-affd-97f50c1ea726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c504ffb9-81bc-4fcd-a022-b4593b742db8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc9e029-164f-4839-98e3-521e77a6407c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d351a29-f2eb-4d32-a3c8-6f8894b684f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c0e146-fd0a-4111-b248-0540492b1397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7281fc-4fab-49f0-b32e-5df5446ca521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890badde-b0eb-4d26-bee4-2aafeff51d16",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68969057-aa32-4634-abb4-19a61664f47f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eaf8948-a86e-4b0f-a8ea-832df723f339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80dc977-eebb-4399-987c-9626a9b007b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8fc28f-f169-46dd-9bb0-949c62695ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bedb34-ebef-4934-89a3-7be39252c8d1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1dc791-9b91-4410-a807-f6f7a69d20d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ee0132-d232-485e-bb82-eb144f93fc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381b07d4-2523-43fa-84c4-fcd85d5f488c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c94dec-a2eb-486d-a0d7-e1f1044dd0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bc0e5d-35c0-42ff-87c7-31b3ae094ad3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d1c0a7-cb79-4408-b292-99bdbbf19a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c974dd2e-6335-4f2a-9393-50294f788a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75913ac-4c36-4a93-8fe8-5abbc8b70dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7d5ac3-383d-46bc-806d-a8c9e37967c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5f2491-f9d2-460f-ad1e-c1fd23873883",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df79e20a-8b5a-466e-a20f-3c258ecd91e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b6e38c-d94a-4100-855e-3b15742861a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0794b447-abff-4dd3-ac46-6ff570c7cc4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522d2dc7-a5bb-43cc-bbfd-81d86f5e42e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843160ba-42eb-4a2b-bbea-a01c1ee8b922",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d1a47a-24d4-400d-95dc-3a7f2839245a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4937a5ff-fcd4-4284-aa15-ea996542ae6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a62828e-caa5-4b60-9ec0-a232c4cb8c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965da751-34d6-4575-87ff-b335355fe18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d01809-3d19-4535-9748-968d9c5a2462",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6993a3-2113-4a2c-ad0b-04132b49a847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94aaeed9-9dbe-4606-959b-ff7efac00db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015579a4-0693-437f-adb8-05f784140459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bce09f2-5465-463a-bbe8-94ff4bb0f689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f698677c-0269-4ce5-9c3f-ab0dbdde52e6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ffe6a1-a39e-4396-9b6f-c3cdc1e27212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ffeeca-ff94-4d86-9f29-ffba832605cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf7e2d6-9760-428d-8d21-b37d1fcbca2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2e3421-672a-4a87-81ad-01858d0a6221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bafbc6-0459-4fed-be04-7471a152cf4a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5696d13-7d1c-477e-b322-fefe39b9828c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa185df5-4059-4de4-9a72-75dcaebbf8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2c015f-50f2-4b25-861e-29d83a90d026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a8ad03-b2ee-4ea0-b749-9c7f331d134a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea3b163-b56c-48be-86bf-487c4fdc1185",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d336ed90-a892-4dac-a2cf-3ba27056b25c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a23ab1-c7fb-4acd-814c-b97adeca64e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e7885c-50a3-4846-bafc-434a3989a7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc21a59c-5d1f-4109-ab00-05aea281d052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634b8a2f-989e-485b-866d-f781bb11c0f2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad6cfdc-55f9-4eb1-936b-1f381efbec9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c3bc86-31b6-4dda-b3c8-708cc8eb71c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48928c87-845c-4726-bd54-4b8dbd599da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf5b025-aad5-43d7-9350-2838b9e1753c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cee6bf2-f72e-4e34-90ba-929d7c699d77",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993ea324-9938-4418-97ef-ba2be2b6b121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b64b409-7504-4f59-b7db-c68364596595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37269401-a82a-4910-a932-cb0086a89169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976c7457-4055-4c47-aff9-ea3ad85b0d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45ddfc2-c118-4b49-90ff-54f9420d9080",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fa8fed-a8fb-43e3-8c6d-8af95e2e8590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "816c57f4-dbea-4112-9bca-245620443b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409e2b10-6bba-4b0f-8a15-8c9a5b50f045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80262f63-c688-4bea-94ce-31a830e5479d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a91b91-a66e-4022-9dbe-0e218f3d9824",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02a86a7-ee82-4274-b62f-78b37010b5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b21844e-766a-47da-b1d0-539a23609338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc16206-dbe3-4853-8b55-0b264849ae13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ac0e76-0bd1-4674-af7b-16b014457ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3763478c-64af-4651-afda-07e697c19b5e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a64e6eb-6277-498c-b2b5-c448cf1e8ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f1b8f29-adbe-45b4-822b-787b8a8cbb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab345c3-538e-4191-a21d-984d211dfe14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4ab7d2-c209-438e-8901-4e11cae50892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0178a5-f1b1-4e2a-ab33-fa05acb5cdd8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f8de95-f6f8-49db-a8d8-931c937d0519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aef97d6b-7546-4ed4-b7da-de02e83d3afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c46478-b674-403e-a471-8880ac7fab38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6ca6a5-2c37-43b8-9f63-c9ab31c0dc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421be485-60ed-4c12-aa79-ba0aa4135fa0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3aabaa-e589-4c75-981f-6e3ab363bbb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d7cc304-495d-4118-a950-cd27a012781c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba56dcba-6da8-49f9-9c18-e313188b563e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7391a75-8cb9-4c26-afe1-7eb4e6cc88b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29f7802-bd5f-48a2-a1c5-84677726a588",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293ad484-e9d6-426d-93fb-01b0f9a18aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c741c0f-9fd9-4a09-a025-8b4e2bdee72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07b387e-a00e-4959-863f-facfb9f695b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6634b5-ad78-4f3f-9626-636e6fc83b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dd395a-544a-4e2a-a34d-d4b8c606723b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0acf85-09eb-4312-bea6-29862d6c31a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902e77bb-9510-44f4-a9e6-434554ea5326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe052e5f-89c4-403a-9db7-680d4965c4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e730e3d-45dd-4ac5-af99-7678028dd901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6e0f8e-8c22-47a0-99c0-40ec7ef29017",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b41f37-77b1-44c7-a16f-e9e5654a0cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a23766-ceb7-43ac-a918-eaa2654ebb3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349dbb0a-4595-433c-a12c-a0e81f5e2e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5945bbf-0498-4bc3-8eb5-d36e639a3590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148487a7-b464-4eee-85df-1de4b78ba4c9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19490b57-dbb0-4c79-9ca3-90325c282f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be441a76-ff1a-40b1-b8f7-7dbc6f57876d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a353660-ec6f-4a33-8b74-bc5e61e38073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72db09c-9d46-4342-bc62-6843d37ed5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c360c4e-527b-435d-9080-41277a34b4a1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecc01db-18ee-4b87-a90c-c53610f2ae6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890ed369-3d91-4f15-9c7b-8c3163ce58b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191f1ca3-74b4-41f6-9555-fdd9f4031f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652c2c0e-dc58-43f0-b6fc-5d49483dcebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57dce91-db4d-40c2-bf22-6f91abd639bd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d0f554-747f-477e-8c39-827dd962c904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be8eb03-d3fa-4277-98df-1b7680465cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cd1cac-5db4-4f45-afe3-fe6df8550685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7817e096-bc37-4bd2-b003-1a03817bdde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0945527-e05c-41ae-bf3e-7f03b0388405",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0766290a-4b52-492f-98f2-658ab9105dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de66b7db-6423-4d6d-ab61-2864dbd272b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b886096-727e-4936-96d8-12c2044d2ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54d0f15-0e5c-42e9-b9ac-fda7b750415b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b2b712-f42c-4983-a33c-5334cc21dd45",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee16fef-7c70-45b9-ba9e-9ab4cf92a2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5f10c9-e98b-4c83-905a-ed08b50b5ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb76372-9379-4ac5-a7af-0519573c0c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39eb07ed-aa7e-40c3-9d03-d3a2079427f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cf9a04-79ae-4dbd-8948-bec4b589cf81",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163a79d0-e458-47ac-b999-3d040deecf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c4dc62-fc28-4142-9031-7cb45ea5bbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016cedba-2fd1-487c-882d-9c7d21167b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92682928-4a4b-4def-8f64-190e340ec439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7304d6e-f510-42fa-8800-374e835f3214",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2386e5f-39cc-44f5-a126-d9a37b8b6a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd156ab5-0eef-4fd5-90a6-d8f9cee3aaa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9b3fbc-925e-41e0-8e15-d50e26629939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67ad93a-17f0-45ab-ad36-0a902e6c027b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbd2044-c440-47b7-a262-5dbcaf0d8e80",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf536592-0abf-4c39-976a-84f37f2c310a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c04b9e-7395-4258-b610-e78704e5faf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a43545-5c35-4274-8110-7831c8fee34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34cef17-f702-40f9-872a-cf85c24a0190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e91ad10-8bbf-4d87-aa66-bc191f0b3980",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1464711b-c41e-4600-926d-2eda33a63807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36c3130-122f-4996-b08a-f5a7d4b0e328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3d0478-4417-4eca-9e86-9c2edfb5f0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a81de97-d241-4cd6-a9b0-169cc812d008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cce2cd8-4270-4762-b10d-c1b4a224d88c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e94edba-a7b3-48b2-b2d9-7c63156d55af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58933eb-ae4a-49e4-94c4-41347a3bbaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7265af-d283-4c6d-845b-18f64a84770b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e559dd-e17f-4479-9064-d53acf9aade4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a4e051-56ca-42b0-a4ea-556dcd674054",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5a11a9-877a-4756-8013-25c2b55bf755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452ecdeb-cbc9-4c80-ab03-b4d771779ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f37bf68-157a-4c5b-8cb6-a76feee50bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e237f0e3-b530-4877-a9af-a0865dfb137f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05f0d8c-9764-4ba1-85d3-e2b5b469620f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88881a27-0657-4737-9159-f970313a0bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffc91f1-5cf8-40d0-ac34-c57cd55f652a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07974dd6-cd80-4212-b2bb-ec89366c1f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58b0d13-91e4-4ffc-bc4d-fa8ba3ed11d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef49057-7400-40a3-b3c6-378b6a44e2fd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeac84f-94fe-4747-be0f-8a8fc3b3c0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadf8f1e-127d-4ca3-ad16-f88e2504dec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36a0248-87a5-4ab3-a9e3-c8a5030861f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04dda180-7057-4ccb-8649-f4045132c04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2ce66f-4a45-4615-9cb2-c586a170f2d7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863f7a63-9843-4b60-9ee8-04dc7d54d333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836682af-00f3-41ab-8d2d-1f06e379fd63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be09add3-e667-4a4c-8d43-f28667aa42d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e269d214-86e3-4b30-ab71-9deadf712cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248580d3-9467-4fec-8b6b-4dc0eec6cc29",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df3459c-43d1-4b11-9785-87b5652f1c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f8d784-a233-4a61-b389-e94eb5605097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ecb30f-9ee4-41c2-9260-d07e09224ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e208221b-c06e-4960-8cfd-659f4dc881ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843dc45d-ae77-47ae-98fa-c46a0f6aa222",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23fd1e7-bc6d-4fb6-a203-34930766413e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199014bc-4d83-4c07-82ad-0393d1ffe8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02727f44-a540-407e-ae19-b14f5b58eeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230e8362-7e34-4100-9ae3-e321963f91b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62026bba-6bca-4da4-9790-dbcabd0b28d0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468ba51c-f8c9-4d87-b92f-e11ced2eedfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87464f9d-c5d1-456a-aa56-f862bc97c991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f99f457-2359-44e9-9156-ce29b7a240d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b866e6e5-4185-4310-8c67-9d0b18e08d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0677f673-7f20-43c2-b50f-c4b635cf3fc1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea7b69d-bb3b-4828-970f-2fd1a08c0412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf900887-4113-4887-b7f6-0d8a656f3bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d42c71-ddef-45df-aeba-df015afa63e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eed3a95-d430-4626-9857-b4ef1a5a1bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72446e0c-4d7f-442e-b38c-0503eb85fe67",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f74d31-b505-4fad-ada9-da906f411d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a6aacb-69b8-4ce4-8bc8-eb5ed0280cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0507d596-b614-4784-8a7c-6a63f69711f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0954db2-25c3-4b8c-9cc6-b880f87e5dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a54184-b0bf-4a35-9458-00efd2759dc5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810fefc0-b4aa-45eb-8a6e-dbe6c0b68452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fdc844-a1a9-48b7-a829-5cd58c082c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbb5444-537b-44c2-a795-f01b52929b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ab8329-fc6c-430f-8ac0-9357a125c6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a817d256-8cd5-47e9-9e7c-cee1a604447e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba5fb18-c50c-4d17-ba1a-06af5bca8a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44da6188-f1f8-4dec-a871-86e238ec6558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a938a1-1f9b-4399-93fd-ffd28843da1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c095ab2e-676e-411e-9ffd-c9ede5c5ff11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908fbfe1-537f-49d9-ad35-9c03ceb35ddb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14026505-51fc-4534-9b3a-58871e9c4dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69bcac4-f86d-4f23-853d-9a49f60beee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d491c2-345b-446c-999b-35eff15c326c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e9443e-ab47-4ac5-b7d2-8da875dcfffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e46392b-b9be-4dc6-ad31-1cb27b386021",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10802703-5150-4d9f-a26b-61b1c0ee870d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2c4838-18d7-4905-8e28-97a232d22a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8709a20-136c-45e5-ab27-08e32ea21f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf13a621-b07a-4456-8eaa-3b9ab822c7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d83a087-9546-4289-bdc5-9960b8b9ab51",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74212521-db92-4ff9-9675-cc67c2a3e39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc85014-a56c-4e0f-a8ec-e24fc96210b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb45178-560f-4aa2-a401-cc182a6b2d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d2a63b-32d5-499b-9da1-59fa83b30a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8de2696-47ea-4a4e-81dc-84eec6cf7125",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d12f347-c2c3-4119-bf3e-4c79bfc00715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472818d5-57a5-4833-9c9f-4afec306b729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdd0732-9c5d-4cd6-8b5d-1170642243d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd61bbc1-7a7a-4605-a61c-b6dc20db0456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2cb7d0-95d6-40e9-b9c2-191c49d5bdbd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa9de43-53b1-41e0-8023-8435edaa51be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36374097-8402-4af1-b76f-fcb20c6c9352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a1d42c-f4fc-4d9f-a51a-dc3c7cdf2c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afacb792-cd9d-46c9-8e68-e8ca851316b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58486b8-1d0b-48f1-84dd-25cb71110ca2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843fe0ad-9616-4b39-99a2-330b49a4be83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acb8d55-de43-4aff-ab19-f7e9431f5fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dec5b5-12e0-4dcc-a7e4-e238eea44af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e528957-95a5-4f49-8e93-b8e157aefedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f75e7b-a14a-4b69-844b-b2e16de18246",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b064834c-9ce9-4cfc-9138-5fb1f4655a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76200ce7-ac95-439c-ac83-6cb68fead5be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adf006f-94f6-4de4-9098-8370916c028d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d141d8-9c22-43ff-938f-02e7ecaf5eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e820f905-47fc-4886-ae2f-a3a45b6be4c9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7f5dbd-ade3-4039-b76f-4dc232a211df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e97306-f120-4fae-9b58-2dafbcb8af54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bf5036-883c-42bb-a046-f0611d6fe561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33bdb2a-be52-4614-9246-ff144a1b59e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece38bca-af54-4f93-a1fd-1b38f563b193",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724914e7-425f-4592-9661-4ada3f7ced72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b6dcdb-317d-4dd6-8837-9b0bdb767a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a9d936-4b6d-4a2e-877a-2c328fa57254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41691ea7-d36a-40fa-9347-e6e9dd0dbfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25473356-e5f4-41d8-94c3-308144d3f396",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54584d3f-aa17-4c4c-86ba-2af74c8c2c58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4a7a05-62c8-427f-9b25-18d0c86bd333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97e42c6-3c32-43bd-bdf4-bd3a642b80aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdbe1cd-760b-445c-8349-872106e09eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86ee7de-db52-4f33-888b-678cd6a19960",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af3434b-9531-40cc-87f5-25fd5f878702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796c9683-b40d-410f-89fc-3bfaf4c05bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507e969e-7551-4e17-89e9-b0f3f9c5d786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb31a317-0c25-4e06-b1fd-c293fa1a1072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31afe1b-a780-40d3-903a-80dbeb3b79a5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e0b7d2-7b80-4620-bf92-580d4a5e2c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdb474c3-224f-416b-8f03-11d4c0b463b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c722139-d74a-4f29-a7c1-4c91f0d02d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231009b1-dad8-409f-bddb-0578f8d33eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a72161a-092a-411a-ac77-63b022884fd2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29444fe-8c30-4f41-a065-783c79cb12ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20843a09-366d-4179-8295-c3271c296eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729cc269-a1cd-463f-b658-758d9f628ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e948f4-2af9-483c-9263-9dade1f272e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16196b1d-a1b8-4468-ba00-a07217e1c545",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920ea922-2d03-4c46-8c5a-94ddc011563c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f88ee926-a875-42ec-a0be-34391e6390b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85397ac1-50dc-47b5-9ffd-170e1d15b0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62913209-5c00-4687-949c-027f41038534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cb9cce-437c-4899-80d7-68cbcd27be69",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef0892e-0c9f-48c8-b008-1f2341b6585c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff44db1-19c5-45d9-93bf-8e8a5242da0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a139cd-1ee7-4798-967f-8d005c249609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a310a4a6-ff39-41f5-84c0-5ea3dba3f424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da739e8e-670e-4e04-b11c-305b3e8ac69a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fc3f4f-76a3-4308-8cce-77a7d873a08d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867ba9f0-6a78-44d7-ad4e-8d54263ce8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95ed969-c22f-4b29-9d50-d6e25fe7910a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b24e907-6e47-4031-a1ac-5244e08c3b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2c56e9-0c88-41b5-9a07-e18f6e989145",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a251c9-d10e-4e1b-b6e5-0d6e665598fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2387c1f2-5d82-4b55-af99-77e8c2f0a37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6138eebc-aef4-4a1f-95d3-c72ea0eb365d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ddb766-af36-46f4-bdd6-2dc521d41010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e00247-6063-4930-8f0b-322d33cd8ab1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d512573-5a94-4503-8af6-becd484e006b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec638838-3719-4c81-8845-5dce792d50f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8bdac0-aff4-4feb-b1c4-0521344f3b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c3c17f-4744-4cc2-828a-da70f71b4692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f05dbc-788a-4069-987d-3c69a354a059",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b9fbe3-09f5-45d3-bae0-72e852cb4aab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d1350f-8ce4-49d5-911a-6ff3b29a8969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3844d83a-5036-465e-9138-35ea9f2f6b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fd5241-83f6-42f2-a013-7082a26e11ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f51f1c4-2efa-4768-a7d3-27f53710753c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae42eeee-0626-4fd5-929f-6409fd6c99c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a85bb854-87a1-4aac-a785-1f293be59865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e8dc7b-c6f8-4a21-b4d9-483c311c1c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae263833-4810-4d15-85be-5fcc8b3f6794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee23fe33-12a1-4bd6-93dc-a23f2822ebf1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9466d0ff-996f-4983-97ca-c014beb0523c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63993aa-2674-4d10-aef3-f32c6c40b9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e55bea-8dd7-44a5-a1d1-8a68fe75e1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4edb64-8b47-4e90-9287-1c03bbe1ca6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a37d9d9-300a-4b31-9fb9-39d24e8dc9ec",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbc16a9-10a9-41a4-a8d3-a9ce6d4f8102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98dc127f-3c40-4b47-8a8b-b9d2c84bdb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83730e58-de11-4fbf-aeec-1d9a21226be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb05390-675e-4418-9334-878ac5d5a599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a86bda-b450-4a57-97e7-32d9a8915bc7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2f0e92-8612-4255-a8af-bbfe5f037b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86299f7e-0a9c-41a0-ae9a-69b10e092d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0772037-b451-476e-9d65-046a05ed9315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de70889-1e3a-4395-8d34-b4f0f3b8e374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1598bea-f652-4119-ab39-a4bcc97f0e44",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7935c50-1832-4aa0-b1f5-bee6b41e66b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25e60e6-1598-4822-8996-0480f7660eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f62d6d-ffe9-40fd-a505-bc4cd1644376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2c71c4-3b88-45d6-98cb-0aac1bfa9e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81939f89-eefc-4733-b68e-5820f4568604",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b55c13-342f-40c0-b53c-c6032ee5afff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f243914e-f8eb-4fa1-83c2-5a5ff68c7677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b73a3b-2a4c-4eee-9cd0-3d6942883865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26febce1-2a19-4128-8cb9-6855a268a8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0347e7-6c9b-4674-a769-e5a87acc5d2e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219a3fbd-64dd-4029-ae6f-64170bb18636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca78afa-c7e9-43e4-858c-2bf633a80d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcef5b3-72ed-4756-b8c6-f615302d069b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af496926-8e6e-4ed2-a1ed-6399aa86b7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750b8755-d1eb-4b44-bb39-4dc6341b080f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deea027-25bc-47dd-84cb-2374c06628a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7935ba45-2900-4996-a931-699efc1a059d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33c4ffa-9a40-4bae-80c0-f11bba8ce418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2e3f19-ee02-468a-a823-263db83333cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeaf857-e2ae-469f-9597-e54d4249f530",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241c7288-6413-4be5-8937-3816d19260f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e9d5ec-24af-4c8b-b76b-ca7c91ee9bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f59175-22ab-4fb9-9c94-61712e36392a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501da34a-59c3-4dc7-b2a3-63d49a704bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4672d1db-c85f-4cd2-b21d-e555ec7c89b6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d7edc7-4b96-4274-8fdf-78282460f8f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21fb46f1-8217-445e-88e6-b6ca24b4bb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b654ba-3804-494a-a557-f6b5c2baa9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18480c2f-565b-46a8-b974-76e8f99fa48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac2e55b-6e81-472f-a0b5-83dd98b56919",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9c20b7-fb0c-41c1-99af-7552ea9f1a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "368557ee-bd82-4755-8d33-f8bfe97fa188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929c818f-e02d-4d94-b5e6-417f555ff58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aaa57b6-65ba-4588-8387-458082665d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49a738c-d8d0-4d8a-878b-8704b2346a29",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d399407-3c94-4328-8e61-1aaa8fc589e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af7db75b-e4c4-4554-a18d-baeb702da4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35ef7ab-d1c6-477c-8cc4-fb8bc9ac26ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b47e55-647f-4006-8d4e-45548c0e8846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d7a556-55fc-4605-9bfc-69fae76072e9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c631557-8bb7-4a74-b388-53a6ab4166d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91c305ab-a5c4-4b57-96dd-ec49694d6145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb0c1ff-729a-42ef-a215-0e246f99f2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1a2d9e-8f0b-4619-a959-2f991e181089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e765a8c-8b9c-45ee-a5f8-97acffddd03a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0867f1d4-2446-476b-9155-f88061105173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499b8185-2490-4e3f-94ff-fb313f5beab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a7c315-b8e4-46d7-ac8b-4817359d5f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8125d1a7-fba6-465d-b6ba-fb7a92471ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b93d58a-af5e-43f9-ac4f-152fa6baa830",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cb26a3-6cf0-4dc1-a1f5-44c584537081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1768fe68-0bee-4cf9-9d6f-7118a44521c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb0cda9-c443-4071-b580-17c631187077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88d5e46-4d22-4536-9c9f-93ddbaed0270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcf1a32-b7dd-4597-8918-60b281d4251f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e0398b-bdf3-4bf8-9d8d-f358cd4cd457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4003dd90-14e0-45e9-b8d9-deba2e350c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63065b3-10c7-4944-bd99-558814254eb5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e059bb-e65b-49f1-bd61-18a0fd7b79d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c87c0a-df61-4aeb-a7b5-7606725e5fae",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f632830-d4af-4b65-96ab-54fe3d0bcd54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6516f31-6203-473e-af18-a4c8a54a47d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d0901-bdea-4779-9179-ca0a79df570a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405e91ce-8522-4a73-a742-e142c568c70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6285ae6a-9f96-4ba5-a149-4cee5ed480b4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358ca620-0704-42b4-9efb-0a0e3c71d300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "117c5ec8-ecc8-41e7-813d-b197a5f521ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63650523-0ca6-4b51-87f1-0865128551cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec78e2b0-28f7-471f-a01f-ce8d15bc7fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60af3702-28a2-4532-9e74-8283040a8105",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1b7f25-7740-465d-a590-d98888b91c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344d2ab0-49f7-4271-a37d-4a6a4bde8f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c11e6b-3927-413e-a522-d3d87723fa8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f83c1b-7087-407f-9015-51faaefb93af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47033d7f-a68a-490d-a278-030e9b85ada7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985aa08b-6c72-49db-895f-2148be5af6c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6dfa43-b694-40b5-9980-d5985550c2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044e20aa-10f7-45d8-a814-44df48ad836f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35dd996-3faf-45d6-831e-81165a964e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940fc895-bc78-431c-97e8-9ddf3a7cddcf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a30f180-6473-45a6-b425-916922e8bbb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b079b19-8a5c-4aa5-9e9f-e32f1ca1da22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a9e399-4a2b-4a15-859c-3c7a76701f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3166e32e-a5ce-4c4e-a68f-c108051c188f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77e19af-6406-4d38-8d9e-d7d5ae4b2a0d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45419211-847a-4a77-9dc2-f5d0a561eb7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c7e9d7-cc16-47f8-8b3f-0b5002b36e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50e3927-63fa-4fa2-9b5e-6cd5d5dae589",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0524c1-8a99-4f04-9b69-4110913ea424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1b58f6-3cba-4414-ac03-9364217da067",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7fbd39-5468-48de-9d8d-116e301004ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "987ee151-517d-436f-a299-11800efcbb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b909cf-1f61-4e1e-901e-b2d6b88d94a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4eaf21-5910-4c36-8d13-3c91f334a39e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8376301e-6001-4122-a603-87a8010d8c5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efae4b10-bd89-49a0-a266-119f709263cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcb5e192-e3ec-48f5-9449-e5be28367a4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abe9a33e-d5d0-413b-a271-577bf1d4f6f3"
                    }
                  }
                ]
              },
              {
                "id": "c1f7e464-9512-4af6-ada3-0acbf1020126",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a0e468d-833b-4a0c-b51f-993c27001929",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f567d8b9-886a-486e-8bc9-4f67142b950c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "54ba959b-6eb7-46b3-a54b-93c4a5a51f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90d3097-26ec-4f31-b644-52ae27e2359d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "202e9493-ce51-4485-bcdd-661092fa3b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95084ac-7d53-4750-9812-d3d293c30a28",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff7d721-4428-457e-939c-99391667d6f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b2988ce6-ef5b-40fd-aa7d-bbd0961b64fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0185c603-5742-4a7e-a165-12c8ac6bcfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cff1870c-0474-4b30-9a7c-fef8e006bfa7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6c7a260-0514-40cb-93d3-d1cecef7da97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c43a9db7-9034-4cfe-9b9a-7f11e5e23192"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cca9a8ef-5929-465d-b78b-31129156350a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8427cb0-b285-4e42-9946-7b58c3301492"
                    }
                  }
                ]
              },
              {
                "id": "d4347c2f-2370-40bf-97c9-d29545ba9180",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cd3318b3-c56c-4181-8bdc-15a83a2640b3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e03fb6-d8c3-4d8d-a436-417973d77eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fe3b7c7b-3195-404f-a417-c37b52f4ea0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248f3565-23a2-4f12-a76e-337b293144d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605ef6be-bf15-4128-b669-81deaaed7950"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cad442b8-a7e3-4fb9-8a0e-5a96c8cbec6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6e23fd0-e231-42cf-b79d-ce0c46eaa2e1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2a484c2-d96c-44e9-92ca-ff096ffb1650",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bae1dea3-6abe-4a96-abe0-bb00867cbf65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "011b7eb3-f597-45c6-84b0-7898665f4556",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "819ceb39-05be-4e20-b444-a5555b746833"
                    }
                  }
                ]
              },
              {
                "id": "197f57f7-d893-4384-8115-be186ce8e220",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23d009f5-d76d-4adf-a0cc-efb87d7b9b4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5dcba038-065f-4c50-8e14-d903210ce45d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "830b80d5-4ad9-4438-8c27-376cfb8f9280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c07d2b9e-00de-4ca2-9675-2b4b1f42aa08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb9ca580-0dc6-4d91-ace2-d63bf15e6dda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cf48e621-fbf9-4079-bf58-0fe8ac331225"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "262956f7-9dfe-425d-9e06-0bdd17559788",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5692ab3-7fe3-4a98-998e-4c4f5e022578"
            }
          }
        ]
      },
      {
        "id": "e97e5f04-c049-4fb2-abee-238ef0ecc0ef",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3d4c2fa2-abd5-42ee-bd57-3304fd71e4b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08c8bbbd-5e73-41f3-814f-e4bf0a15d60c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d029393f-7810-4830-b137-ebb93c47083f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2284cda-b761-485b-a745-d1f731a2c3b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6f446d51-6df2-47c8-bd41-12481169c915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbcf3db-194a-4334-aded-36941e758d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13ef2612-d958-46dd-87c7-9e2d9ea884b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7a2506-6706-4006-9cbd-e4bdaeaeceed",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8a4873-243a-4d0c-9a5c-51b938320091",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa8be0ed-3108-4e9e-84d7-5b2520461297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b47cba-f18a-4bfc-98fc-e78268384d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af13360c-4c2b-42b8-a354-f37b86d6ee1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a2de96b-e398-4394-996a-2d932beab5ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32bcda7a-62be-45ef-a796-bc3d115800a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "945afeab-cf38-4e06-930b-8bbfb33f2b60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7fa4982-b3f6-43a1-b16e-c4b7cbede783"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6a7a9a5-b881-465e-b5e6-f6c6b379d5ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "abff861f-91a1-462c-84fa-a4f808f1fe69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bff4719e-fb01-4071-9623-89968a2d1ebf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3f7596c-7b47-4bb9-b846-10f1a9d85668"
            }
          }
        ]
      },
      {
        "id": "e31ac5de-92f3-44ba-acdd-3eab01e85e55",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "25aefb34-2392-4371-bd97-866cd9a7923c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f133279-3c08-47e6-825d-fd46f9a1cfd0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83f77a31-c2fb-4776-a02a-2edf84e2dab3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a2d512-dcdb-4c5f-9311-8903cadc09db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efabbf4d-86fd-4d2d-b5f8-ac70033266d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b432ca3b-d7ab-4ea4-a031-6e00772baa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28516d03-b776-4b01-89da-d06b064bb275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb92968-beb6-42aa-a7c4-87695feec01c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb297664-973f-43c9-a17e-a37992f37c62",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "67476df8-d423-45b8-bd96-d5d2e3182db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c599fb70-c1fd-44a7-a73d-153772c0c054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eeb307f9-8539-4791-b057-43c9fd551b87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e6531f4-3451-48ab-9e4f-c0f46b6a829b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c18080d2-2440-4460-9f0b-de6a15fa8e9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "663bcf0f-be93-4573-9b22-8bd6f013d84d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "829061cb-4565-4cd6-ab28-46f8a69a83f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ff3dfac-33c3-49e7-b345-471e20530455",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6fd48686-77c3-4fb8-b42b-0a2727b015a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1aa27935-b54c-4a55-b2a0-008cfa74ba75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d2ef300-7381-4675-a6aa-92c75378ef3b"
            }
          }
        ]
      },
      {
        "id": "ebe7a9b9-8f04-4f47-8020-697b52e99485",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "396df53a-6f26-4b24-8c0a-e69486ec8f74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8acfcb9-2c92-429d-acd4-5dabdaafe9ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1aa152f0-767b-4b25-880f-78d2d7d1c0ee",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3577ff-e052-4075-96dd-fdc1807d9144",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18ceb3c5-a66b-458c-9024-fc7354126321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28796c49-7acf-45f6-a947-d770f166a115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0cffeda-cc23-4859-bec1-f012b1e0de28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35c1cd1-48a1-4f23-8d85-2610a234359a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90b782f-bef9-4150-a60f-a0661b3ef70b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "180fc798-6024-4cb4-9fde-f8f3b5fa2788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07299389-ec5c-495b-b535-d7b6b0eeb7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5115dacd-b7df-4105-af08-853028413dfc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0696edfc-1443-4a58-a842-c316ad431c39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e86647df-783b-4f04-ac78-7a352c02b2c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "666887d4-89d7-439d-9920-0e7542866835",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e70eda7-a686-4abd-9012-b271d3fc4434"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adc44cf3-edc3-4205-a595-41473ba24bfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8fd04a1d-3ca7-45ea-83ab-42505025b844"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6639e13-0bd4-43e3-a536-c3e540e1d242",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02228896-15cd-49ec-a1ad-ca3b3286d599"
            }
          }
        ]
      },
      {
        "id": "84dbb920-45e7-4f37-bc9c-f7d989854294",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd8b86b1-18e4-43a7-9b8d-0cad48fc7bb8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a4cc6cc-42f5-437b-aadf-b0c679ba2739",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0ee986ec-de00-40b4-9747-37265b85fbf3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "676f9cf0-6fb0-4a39-ab77-541a8d71c7ab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d29adb4-fc49-4336-950d-304377f30500",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 21.78461538461539,
      "responseMin": 8,
      "responseMax": 477,
      "responseSd": 51.24706139648544,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680568607624,
      "completed": 1680568625689
    },
    "executions": [
      {
        "id": "f353a82d-f386-47eb-8bf9-4fe0a2024d5e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "53a54824-b79d-4c6e-9d40-c6e0f97ea777",
          "httpRequestId": "6bbfd232-ba91-4dd0-b255-9872cd1e41be"
        },
        "item": {
          "id": "f353a82d-f386-47eb-8bf9-4fe0a2024d5e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4e931c49-0012-4e95-9836-eabaad24d079",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "8f708715-4c31-43cb-b11f-cf0cbbdf5ed6",
        "cursor": {
          "ref": "92e15b2d-8074-468e-a696-4b56adc0a67d",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "891527e5-b01e-440f-86cd-a4d9f186530f"
        },
        "item": {
          "id": "8f708715-4c31-43cb-b11f-cf0cbbdf5ed6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dc7e65ca-3f5e-4777-9ead-1048f2bbc9ce",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "30f2a1bc-a570-4b14-bbde-41945c893b05",
        "cursor": {
          "ref": "b86877f4-93a5-434c-8df5-27ce45f5f671",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "af44b455-a225-40f1-8de9-fd0b252ffd54"
        },
        "item": {
          "id": "30f2a1bc-a570-4b14-bbde-41945c893b05",
          "name": "did_json"
        },
        "response": {
          "id": "09768855-877f-426d-9382-17f18896fd15",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9640645-aff4-494b-8116-87283b5e5ef6",
        "cursor": {
          "ref": "6db247f5-565a-4823-be43-a12ff8016050",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9578d6e8-4bb8-4c73-87ac-94eb0993f6f6"
        },
        "item": {
          "id": "d9640645-aff4-494b-8116-87283b5e5ef6",
          "name": "did:invalid"
        },
        "response": {
          "id": "500b846d-ef65-4fbe-b5a7-1803eb8c87c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9640645-aff4-494b-8116-87283b5e5ef6",
        "cursor": {
          "ref": "6db247f5-565a-4823-be43-a12ff8016050",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9578d6e8-4bb8-4c73-87ac-94eb0993f6f6"
        },
        "item": {
          "id": "d9640645-aff4-494b-8116-87283b5e5ef6",
          "name": "did:invalid"
        },
        "response": {
          "id": "500b846d-ef65-4fbe-b5a7-1803eb8c87c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2396c7-c88b-48e4-8e74-2902627983cd",
        "cursor": {
          "ref": "2d13c737-2e6e-40b6-885f-bf35f632fa4d",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "448ed8de-73b9-4359-8a6c-5923dae1e496"
        },
        "item": {
          "id": "ce2396c7-c88b-48e4-8e74-2902627983cd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "69417c7a-f9fc-4d67-94c3-40bf07a044b0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 120,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b697d66-261a-4560-ac65-428ba45eea96",
        "cursor": {
          "ref": "c3586d59-8df6-4bd7-b303-8bb83972970c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7cb4d8d1-7415-4b55-aacc-ee7eece95af1"
        },
        "item": {
          "id": "2b697d66-261a-4560-ac65-428ba45eea96",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "816c09bc-5017-461a-ac78-b2b68d490aab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caeff82-7bd3-4ed9-a937-2c726dd4101a",
        "cursor": {
          "ref": "95868379-1184-472e-aac6-6a9432f46eef",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0a136d11-4378-4762-8ee6-6b4bed86df71"
        },
        "item": {
          "id": "5caeff82-7bd3-4ed9-a937-2c726dd4101a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "904e4835-744a-4fc1-8a17-6baec4ea32d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdba1bb-367f-4f25-9fb6-9fa8ffd8ba1c",
        "cursor": {
          "ref": "e29df615-066d-4a3f-84c4-cd5869e79bc6",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d14e2b13-5e46-4d2f-8862-eaf281e818ad"
        },
        "item": {
          "id": "ebdba1bb-367f-4f25-9fb6-9fa8ffd8ba1c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e25beea9-35bb-4604-825b-0b55c50106f7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdba1bb-367f-4f25-9fb6-9fa8ffd8ba1c",
        "cursor": {
          "ref": "e29df615-066d-4a3f-84c4-cd5869e79bc6",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d14e2b13-5e46-4d2f-8862-eaf281e818ad"
        },
        "item": {
          "id": "ebdba1bb-367f-4f25-9fb6-9fa8ffd8ba1c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e25beea9-35bb-4604-825b-0b55c50106f7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeffbd9c-2368-4082-953f-74ad92cbad40",
        "cursor": {
          "ref": "28f7021f-95fd-4e71-8418-dafb616b77ca",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f252e9b1-7c8a-431f-933d-17f346d0a1c3"
        },
        "item": {
          "id": "eeffbd9c-2368-4082-953f-74ad92cbad40",
          "name": "identifiers"
        },
        "response": {
          "id": "0e331c7f-8b09-4fc2-a86b-39ac82eeaa02",
          "status": "OK",
          "code": 200,
          "responseTime": 158,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f59031d-16e4-4198-b318-05ecd25200ab",
        "cursor": {
          "ref": "343076f9-4e00-4bee-a9ac-fc9def0b23e1",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "71ad1d82-a95e-4216-a761-5d44ae3e1a86"
        },
        "item": {
          "id": "4f59031d-16e4-4198-b318-05ecd25200ab",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b2c41386-d621-419b-a72e-33e90ec85bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f59031d-16e4-4198-b318-05ecd25200ab",
        "cursor": {
          "ref": "343076f9-4e00-4bee-a9ac-fc9def0b23e1",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "71ad1d82-a95e-4216-a761-5d44ae3e1a86"
        },
        "item": {
          "id": "4f59031d-16e4-4198-b318-05ecd25200ab",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b2c41386-d621-419b-a72e-33e90ec85bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8fd358-ac5c-45de-8144-4b55e9e4613e",
        "cursor": {
          "ref": "d1209bce-4f72-480d-811b-f31679784885",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "be446298-6c29-412b-ab41-c73b7f95cff3"
        },
        "item": {
          "id": "9c8fd358-ac5c-45de-8144-4b55e9e4613e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "365a1167-87f6-47f0-8374-92f601b3fa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef850246-ebaf-4975-a2c8-00d279e9944e",
        "cursor": {
          "ref": "30a90201-7684-4a5a-b01e-519428c8f066",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "396dea91-3337-4965-8d45-b8e0b16c14d3"
        },
        "item": {
          "id": "ef850246-ebaf-4975-a2c8-00d279e9944e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "11f9172c-6625-4d0f-be2c-8e773493bae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac1ffff-b9bc-4b47-99e3-11dbf04b774b",
        "cursor": {
          "ref": "4412aeda-8356-4f30-a795-0d21ff8e50dc",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "58bd8c78-12c8-4720-88d6-cf880446c3d0"
        },
        "item": {
          "id": "1ac1ffff-b9bc-4b47-99e3-11dbf04b774b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e2cd659d-1e18-432c-b505-4e45c8a3c58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c63238c-353e-488a-880f-c1310d970b95",
        "cursor": {
          "ref": "4ff99ffb-b543-439e-b6c3-75afae1322ed",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4f59e753-5528-4e8f-9683-e91b3207b305"
        },
        "item": {
          "id": "6c63238c-353e-488a-880f-c1310d970b95",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "20811fd4-26bf-46ee-a185-ad7d2bc77c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18305698-c831-4fda-b4d0-39181154c3a4",
        "cursor": {
          "ref": "a8d13989-9dee-4114-ac82-e4207555ec0f",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c250c05c-ebb9-4df9-8148-5d8de1935459"
        },
        "item": {
          "id": "18305698-c831-4fda-b4d0-39181154c3a4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6d5eb56a-48e8-44a3-b6c5-bacd51832404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3c1086-232f-4900-ac40-d96658c6866c",
        "cursor": {
          "ref": "0bd4db8d-e059-4c6b-b159-65ff9889ef01",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "11538b9a-7664-4817-8983-9085692fe146"
        },
        "item": {
          "id": "af3c1086-232f-4900-ac40-d96658c6866c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "64ee178e-3fda-4d11-8717-c9b9e82bd239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dff39c-3cae-4392-8d05-b26adc5614e3",
        "cursor": {
          "ref": "122c03ae-9a50-4afa-9b30-3883a6f1c165",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b57f3e79-60e3-423c-ac89-ced1735f86f7"
        },
        "item": {
          "id": "28dff39c-3cae-4392-8d05-b26adc5614e3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "69b88477-c4d5-49aa-9607-94096cec6b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edf716c-f92c-4694-871c-53e5bb3f7cf7",
        "cursor": {
          "ref": "965115fc-6ae9-4066-9a9b-96972b00b49a",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3d8f9a06-6ef7-43fc-93da-3901905cb7bc"
        },
        "item": {
          "id": "7edf716c-f92c-4694-871c-53e5bb3f7cf7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0026e1f6-8d57-47fb-9a73-ba10f1f63a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80867ac2-38b3-4502-b4e9-d4757490388a",
        "cursor": {
          "ref": "f4ef8fda-2399-49d9-9af2-11b81df94ff1",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "006db991-f6b3-4f06-9146-38086829aeea"
        },
        "item": {
          "id": "80867ac2-38b3-4502-b4e9-d4757490388a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "56711771-8702-4e9b-9003-372eb65a4d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2cd6ac-f0e7-4747-b1aa-8297ebbaf857",
        "cursor": {
          "ref": "399c9e5d-38c3-416c-a2ea-4f8494197894",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "640df9fe-7b54-4c3c-ae21-b342d296d966"
        },
        "item": {
          "id": "1a2cd6ac-f0e7-4747-b1aa-8297ebbaf857",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "19f6070c-59f2-4cd6-9ffc-51b9c416badd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0152f0-e59a-4ca7-b97a-edf6c4d8af45",
        "cursor": {
          "ref": "513853c2-2c26-4e9b-9d65-de8a5851f127",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0d450ed5-f879-4f0f-8d07-cb018429cc36"
        },
        "item": {
          "id": "3e0152f0-e59a-4ca7-b97a-edf6c4d8af45",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c04fb616-1d2b-4f6e-bde0-9c6bc8e7d679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ddb1c4-193d-4679-852a-a0a5a5a22c7e",
        "cursor": {
          "ref": "352f485f-8df5-4adf-ae2d-c8ea35fd36d3",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ecc817db-9a9f-4c64-bdd3-8efd933d7690"
        },
        "item": {
          "id": "d5ddb1c4-193d-4679-852a-a0a5a5a22c7e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3adef9bc-4e24-45b4-bc0c-fcbb8818be79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b7ff72-bbd1-4998-9ac6-c6de4af6db24",
        "cursor": {
          "ref": "47c3dc0e-46d6-4c33-9e4e-6a088dd75747",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "abc80905-1988-465a-9f69-7703a1df7091"
        },
        "item": {
          "id": "a1b7ff72-bbd1-4998-9ac6-c6de4af6db24",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "af49dd51-f964-4c70-9305-71ca6c48cea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c886b5-d463-403e-9f57-4af21c44ad68",
        "cursor": {
          "ref": "79018358-f513-4b58-a661-123fd9a59943",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "58895deb-196c-4b3b-a5e8-995d072210d0"
        },
        "item": {
          "id": "b2c886b5-d463-403e-9f57-4af21c44ad68",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "569250c1-2521-40ce-947f-8bc08823c06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cef240-2afa-4e53-a4f4-e26910448053",
        "cursor": {
          "ref": "bb0d5425-a569-410b-80ef-df1767314562",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "221d10de-bdae-46e0-b66a-1058cd513bb4"
        },
        "item": {
          "id": "c3cef240-2afa-4e53-a4f4-e26910448053",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f58501cb-2983-454c-89ee-be9df60f711c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ef3707-f8e7-43f6-854b-8b64e7d2e47c",
        "cursor": {
          "ref": "9c0e5854-54e4-438b-9079-66e7d7d3e727",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f4ae0704-48fc-44e3-9e61-da12e4cce779"
        },
        "item": {
          "id": "a1ef3707-f8e7-43f6-854b-8b64e7d2e47c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6571e700-de93-4865-9bf7-8b51244dd324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c8bc63-6d1a-444f-8001-4032870b9198",
        "cursor": {
          "ref": "5f436c42-4c3d-4428-84c7-c4ec7ea54b3c",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "99cf3118-7c86-440f-a4b0-6a7004a8e85a"
        },
        "item": {
          "id": "05c8bc63-6d1a-444f-8001-4032870b9198",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f3cc6c8b-20ad-4ff2-afd1-7e71a1a076e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5dddb2-fca8-4ff8-9193-84680823401e",
        "cursor": {
          "ref": "5dc26d54-545f-44de-b674-e20563f8cda3",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4166143b-1f56-47c4-9d82-1c7afb964ae4"
        },
        "item": {
          "id": "db5dddb2-fca8-4ff8-9193-84680823401e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0dfadfe5-bbe5-4c80-8bbd-7bb76b61ef12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce08aaab-e2e0-421f-980b-a8c3d96fc86b",
        "cursor": {
          "ref": "02929186-c1fb-40c9-8f31-537799fbc19d",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c2826a5b-f1fa-4ac6-a5db-f2fd97d84c67"
        },
        "item": {
          "id": "ce08aaab-e2e0-421f-980b-a8c3d96fc86b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ddabcee3-d24f-4865-8494-56514b61f633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530ec8cc-534c-4c86-b348-5438e2529264",
        "cursor": {
          "ref": "79eb775e-ba26-4667-923c-7f70219b3096",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5f848ba9-095d-4d2f-be7f-376549c5b8b0"
        },
        "item": {
          "id": "530ec8cc-534c-4c86-b348-5438e2529264",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7ba87255-2f54-47b9-a75a-6aa2895e5b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3e2494-7a20-4576-9881-f27cfa7b4c5c",
        "cursor": {
          "ref": "ba64a173-7e53-4b44-b707-da8ef927c4cb",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1d99f259-32ab-4e6e-8284-c7788f32ec47"
        },
        "item": {
          "id": "0d3e2494-7a20-4576-9881-f27cfa7b4c5c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bdb1d303-3a92-4ac5-aa27-6df0fce1b53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889e226e-f6d1-4a3a-aad7-ee0f650a1a1c",
        "cursor": {
          "ref": "3fcddba2-6ba1-4767-97c1-e23fcc899461",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "891cc7fb-8ef4-4af9-9038-4d9a7903a344"
        },
        "item": {
          "id": "889e226e-f6d1-4a3a-aad7-ee0f650a1a1c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4a6f7df5-f4bb-4871-bf7b-41fe64c70a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bec4b68-1b8d-4a17-96c5-0de34941de33",
        "cursor": {
          "ref": "d8b98cdc-43bb-4516-a6b3-30e8a45894ce",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8ba36577-4945-4bef-9c9e-138df39b821c"
        },
        "item": {
          "id": "8bec4b68-1b8d-4a17-96c5-0de34941de33",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1a03792d-a497-47c1-82db-63471cb83d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8bb3f4-67e3-46b5-9c26-5e537fc07ac5",
        "cursor": {
          "ref": "5d0a3515-e63a-43ef-87bf-5df1062f824e",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ae8d479b-1eba-4e28-9a6e-2c3529e8c1d5"
        },
        "item": {
          "id": "ac8bb3f4-67e3-46b5-9c26-5e537fc07ac5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e3dd3e66-51c1-4e28-a06f-9f393d463060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368ab527-58e7-4594-8ff6-fe72fbc58eb4",
        "cursor": {
          "ref": "2d1917cf-49a0-4342-9fd1-739912668146",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "58965b0e-8140-4ed4-b40d-6947df4bdee4"
        },
        "item": {
          "id": "368ab527-58e7-4594-8ff6-fe72fbc58eb4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9db81c39-d639-4797-b010-a0ec5abe6dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a19d2a-2a0d-4d2e-a532-d2739313c57a",
        "cursor": {
          "ref": "62724a4c-1db6-4af1-8474-daa3be82580f",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a809aabd-00c2-4fdb-b7f4-a4ee29b27a1e"
        },
        "item": {
          "id": "00a19d2a-2a0d-4d2e-a532-d2739313c57a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0ffd3c60-6d77-4144-a260-1b8cbc0622c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec04100a-91ee-4d77-8fb7-84d0ea2a50de",
        "cursor": {
          "ref": "13989671-820d-4735-9955-581fd63bce20",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ae697d57-3edd-4461-981f-5b49c66c07c8"
        },
        "item": {
          "id": "ec04100a-91ee-4d77-8fb7-84d0ea2a50de",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cecce517-f3a0-4463-a425-f6583a783c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6d544f-f6a7-4982-a6dd-dfd9009e9db0",
        "cursor": {
          "ref": "7558c091-3cd7-413b-9cf0-4da3e92a506b",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "285f5e43-96a9-4fe2-ad69-1be66a847d72"
        },
        "item": {
          "id": "be6d544f-f6a7-4982-a6dd-dfd9009e9db0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "65547a33-06b7-4f8f-8f41-ec0661d2b34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748718fb-0b1d-44a7-b1f1-d17978f8d8db",
        "cursor": {
          "ref": "88e6f376-eb7f-4bd2-a83a-aab97db67cf0",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "801f7b77-22b7-4033-9b47-f406d1245d9c"
        },
        "item": {
          "id": "748718fb-0b1d-44a7-b1f1-d17978f8d8db",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "eb1cf071-93ba-485c-946d-8307013a4f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5e05ce-1d0a-473e-971c-daba54e42988",
        "cursor": {
          "ref": "31f077dc-a561-495c-9286-e4a22bccdc71",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "76329841-2077-4a45-8a6b-6deacbb5a698"
        },
        "item": {
          "id": "9f5e05ce-1d0a-473e-971c-daba54e42988",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "40a81cec-492a-493f-ac26-603bf795c46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e765ba01-294d-4af7-9fab-7a2a34ecb4b2",
        "cursor": {
          "ref": "855cadaa-16df-4bae-961c-b14b48a23258",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dec0d23a-10a3-4229-a34c-dfb64b680ae6"
        },
        "item": {
          "id": "e765ba01-294d-4af7-9fab-7a2a34ecb4b2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "23360c05-4cfa-4369-a68c-8d6450581a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56875d19-0619-466f-be1e-da5135b59196",
        "cursor": {
          "ref": "5c864101-6f7a-480d-8f23-dd7fc2e416c1",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d09fae27-6f78-4152-b40d-9497c32f5bd0"
        },
        "item": {
          "id": "56875d19-0619-466f-be1e-da5135b59196",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f5538a60-c43b-44e2-9ab5-16f0f9dfe3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab6507e-d649-4950-9c62-b4b20d767666",
        "cursor": {
          "ref": "25c4a0ff-27fa-430c-bb6e-40329c92f1a7",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b76195a4-2329-445a-871c-651a8ac187a5"
        },
        "item": {
          "id": "2ab6507e-d649-4950-9c62-b4b20d767666",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "353d9796-e4d3-46bf-91cb-ff3b9ee2cf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f859af9-08f1-42a7-a26c-5d8df422add4",
        "cursor": {
          "ref": "e94ff1c6-4bff-4d50-9ef9-b7f4e4f2f723",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fd60ebce-3c00-48e7-944c-3b898b7c018f"
        },
        "item": {
          "id": "7f859af9-08f1-42a7-a26c-5d8df422add4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1a65b8f4-ba62-40d0-bb54-b50e1d13d167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccccfbb-cca1-4151-b16b-2202d883a248",
        "cursor": {
          "ref": "6fa0ffc4-17c1-4309-a186-1dcb77e244b2",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8c5f0c87-7e37-45d0-966b-fb9872fee200"
        },
        "item": {
          "id": "5ccccfbb-cca1-4151-b16b-2202d883a248",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f65ccdae-25f9-4a0e-b29f-ce1310b6d872",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8676a73-72bb-4563-abfa-262229b7e9df",
        "cursor": {
          "ref": "6a093a82-ab7e-4a3e-877e-7b6b86459e74",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0b9d7634-7fcd-40f4-bf29-59b05087f369"
        },
        "item": {
          "id": "b8676a73-72bb-4563-abfa-262229b7e9df",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bc10097e-fb06-4a67-9e13-7f8a9ec8b826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9458d12d-0b0a-44c2-8f2d-dcdfcb6f5226",
        "cursor": {
          "ref": "e274a38d-cc43-4e35-8593-2b3afdc8fc66",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0b12739a-86d8-4283-845b-fbe7434e0c16"
        },
        "item": {
          "id": "9458d12d-0b0a-44c2-8f2d-dcdfcb6f5226",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ff0575f6-a0b3-4a22-a36a-047cae83ca37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46394ace-4c60-4781-b982-8c4d99c1bdec",
        "cursor": {
          "ref": "2ae9bd13-84e3-468b-8476-c6a4d1026f71",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4c6d3ec0-f37e-4472-8c7c-b320424eb277"
        },
        "item": {
          "id": "46394ace-4c60-4781-b982-8c4d99c1bdec",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a9adf602-d6f0-4547-8f9a-5d9368857d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460be6d8-5024-4f1d-b807-3a8c336d9a87",
        "cursor": {
          "ref": "07dcd8e1-101d-458b-9055-e26efa91ffca",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b7bb6772-a14a-48ed-a1cd-eec711e6ceb9"
        },
        "item": {
          "id": "460be6d8-5024-4f1d-b807-3a8c336d9a87",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "764411b2-4dcb-4eb8-a19d-6251c5fa431b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869d51b9-f7c2-4986-98de-739cf1631846",
        "cursor": {
          "ref": "18d6e0bd-e5f5-4439-a5de-182ec8138703",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ea181b25-17a3-4371-aa47-d19f611f78ef"
        },
        "item": {
          "id": "869d51b9-f7c2-4986-98de-739cf1631846",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f814d075-05af-460b-a2c7-3c75f424a1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab40931-49ff-4bcc-bdc4-34aa72c30bd1",
        "cursor": {
          "ref": "fa87e9e7-838f-439b-8bbd-ce774121d8d9",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a8b32f3e-41c6-4bdb-b99b-f8eb690b3b86"
        },
        "item": {
          "id": "2ab40931-49ff-4bcc-bdc4-34aa72c30bd1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "997a72f1-40c2-473d-adcc-430417b647cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6ac464-c9ee-473e-84d1-e90c52572e22",
        "cursor": {
          "ref": "8fd1d561-03e2-42b3-8d7e-53f3af7d2ba7",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ed2c9c79-bfcd-4b93-b95f-8cbf1642bf2c"
        },
        "item": {
          "id": "1e6ac464-c9ee-473e-84d1-e90c52572e22",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6de2a2e1-ea4f-436d-9d2d-1169b3683426",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3cfcd2-7a34-4386-8b65-fc672fbecd5d",
        "cursor": {
          "ref": "e588c98a-ce21-4348-81d1-115019713cd0",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "52cd5912-5609-42b7-a0b4-351904657a0c"
        },
        "item": {
          "id": "3e3cfcd2-7a34-4386-8b65-fc672fbecd5d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1d4b6bc3-ab1d-445a-8665-ab1deef85360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706f5b72-36a6-4a96-9b77-19dcdab8395f",
        "cursor": {
          "ref": "def6cfbf-e79b-4e3d-b4f7-6999110396f6",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ef0894c9-2351-4025-8682-9256fcf92417"
        },
        "item": {
          "id": "706f5b72-36a6-4a96-9b77-19dcdab8395f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a27c1b5e-036b-40f9-9b43-e3dd6bbbcb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80f96c0-47cb-44a5-a0e2-5e001cf32819",
        "cursor": {
          "ref": "ff2955dc-1a25-46a1-b2d4-7d85a8c5ab32",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "94ab026b-2093-40fc-94bb-c32df6fb31dc"
        },
        "item": {
          "id": "d80f96c0-47cb-44a5-a0e2-5e001cf32819",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ba63b809-64bd-4062-8c2c-eaa3ec7bb5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e53c48b-0595-486e-821f-714457895cbe",
        "cursor": {
          "ref": "e1471462-5392-4246-98ba-a3dd4582b152",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "caddeafa-28b9-4a24-872c-53edd97e00a3"
        },
        "item": {
          "id": "5e53c48b-0595-486e-821f-714457895cbe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b1445773-754a-4ab5-847c-213bbb8d48dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3579fc88-c14a-4717-9fdc-580a4bcb91fc",
        "cursor": {
          "ref": "485bbef7-712b-4afb-95f0-aa27c0f91212",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0f093c02-3f25-482a-9a8c-88e08b3cbec8"
        },
        "item": {
          "id": "3579fc88-c14a-4717-9fdc-580a4bcb91fc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fbd94ab1-49f2-4009-8497-4f9fc07f64cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc45dfd-418b-432b-b24e-f2d91b3ea6fd",
        "cursor": {
          "ref": "9d8aea38-cf50-47a8-b205-b1ed9c2897a3",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f696ae2b-1db8-4e58-891d-02e835216aed"
        },
        "item": {
          "id": "1cc45dfd-418b-432b-b24e-f2d91b3ea6fd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "790c4320-d4e5-40ea-9dac-ea382cee8b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1162a0-7330-4c8a-9a5c-9d62f8f2d73a",
        "cursor": {
          "ref": "4e8ff621-6a07-4bdb-970b-c571c8f3799b",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6dd3906b-bf8a-44f5-a7e8-bb50004fc386"
        },
        "item": {
          "id": "5a1162a0-7330-4c8a-9a5c-9d62f8f2d73a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "975f7fd4-3a86-4fec-bd1c-2080aa8a7765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584ffc57-7c15-4b1b-af10-63c8f58f5b94",
        "cursor": {
          "ref": "4186cdeb-a67c-4cdd-8568-cf38b3b966cf",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "780e0a70-ee49-4203-95cb-0b1c9672a759"
        },
        "item": {
          "id": "584ffc57-7c15-4b1b-af10-63c8f58f5b94",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "33642847-19e9-4a56-9dd0-9a697e2fba40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a42d31-c700-4cce-9b2f-3d96b245bd29",
        "cursor": {
          "ref": "b06234db-1656-4ed6-8efd-cf67d6216a0f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f48b240f-d96f-49f7-a80d-2544de53e4bd"
        },
        "item": {
          "id": "90a42d31-c700-4cce-9b2f-3d96b245bd29",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "220d2d67-01fb-4eba-a397-853e1de1ff69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5cd5fc-d006-40df-a00a-4952c9fc6636",
        "cursor": {
          "ref": "07258695-1291-4e5a-bd06-191d2904ffea",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "76654cbc-3505-41e6-93cf-be0003abf122"
        },
        "item": {
          "id": "1e5cd5fc-d006-40df-a00a-4952c9fc6636",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "42d3cc52-4e6a-447f-8aab-c4f35cace23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a2a335-fcb9-41a8-8555-da017a6eef26",
        "cursor": {
          "ref": "b2de0784-0094-4aaa-85e9-796e7e8607a5",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4c45aab7-cf91-421a-8250-57d2a4dbdc97"
        },
        "item": {
          "id": "30a2a335-fcb9-41a8-8555-da017a6eef26",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8c3c6962-8153-433b-9964-a0fa0dee02df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b75277d-e0b9-49ef-8f1d-ef44e17af90b",
        "cursor": {
          "ref": "f8d3d2fd-58d8-4c31-ac13-2b88abff8a35",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2d75057a-3799-4f11-8fc3-e688fdf419b6"
        },
        "item": {
          "id": "1b75277d-e0b9-49ef-8f1d-ef44e17af90b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "05ef3bb9-3bc1-4e7b-8fe3-21042f47b435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b647c2-0a04-48f3-909b-e376a56fd28a",
        "cursor": {
          "ref": "5a07e6f9-49ab-46b0-9f3b-1dc0319ecab0",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7826962b-6dab-4036-9764-b03110f6d94b"
        },
        "item": {
          "id": "22b647c2-0a04-48f3-909b-e376a56fd28a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "48b9baf3-bf24-407f-bde1-899f30017b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ec36ea-5e89-4dde-a79e-2834de3883a4",
        "cursor": {
          "ref": "1baad455-342b-4c06-805b-bae677a34a99",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "99ad9372-4ff6-4cfc-9a00-7b67d8b22856"
        },
        "item": {
          "id": "f2ec36ea-5e89-4dde-a79e-2834de3883a4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bbf078e4-bf24-4670-8add-558eeec8ac67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73962c30-3788-4be2-a979-21cd0219508d",
        "cursor": {
          "ref": "fd00d9ec-038f-4664-be5a-948ff2321b76",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c71a0e14-f08f-4480-a248-4ae84ae2bacb"
        },
        "item": {
          "id": "73962c30-3788-4be2-a979-21cd0219508d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "66cad721-093c-4117-8479-242f6e80eb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2218fcd3-65b6-486b-a339-b724460e702e",
        "cursor": {
          "ref": "64737d08-ec91-4ab0-8697-b467368211ad",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a97e6ac0-5787-48d5-8cad-a0f66fc0ea8f"
        },
        "item": {
          "id": "2218fcd3-65b6-486b-a339-b724460e702e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d38e3e5c-04e7-4da4-945a-11736d301015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f8ba49-4822-4232-a8c7-e47892b66d76",
        "cursor": {
          "ref": "6e727d26-3e0c-4e53-b2d8-d424e58cb329",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "490d3ffb-0450-4863-afc0-efb635ece3a2"
        },
        "item": {
          "id": "77f8ba49-4822-4232-a8c7-e47892b66d76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dd730bac-2a91-4653-934b-c9490bb8c725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd5e86f-70ee-4237-a463-f19169f3e293",
        "cursor": {
          "ref": "60a816d5-52d9-4932-9f06-189cdf4b1aa4",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "342e07ed-8539-4ea4-bf8a-c394db052c50"
        },
        "item": {
          "id": "8fd5e86f-70ee-4237-a463-f19169f3e293",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "534fbeeb-00d0-4af2-a076-11631ccad043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e9830a-ceaa-4368-9927-b4a1868531c0",
        "cursor": {
          "ref": "77aeaef3-61e2-46ed-b091-0a10676bad66",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "675833b8-bdaa-42e2-904f-627bb2c34420"
        },
        "item": {
          "id": "00e9830a-ceaa-4368-9927-b4a1868531c0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f23e0097-5694-41b3-9b1f-c335e532e135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e48f3c8-9cbd-4c08-a89a-ed1e99987843",
        "cursor": {
          "ref": "82da4cce-7518-4baf-9174-81450212de6e",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "51de6b45-ca1b-4b43-976b-0848c2b6774f"
        },
        "item": {
          "id": "1e48f3c8-9cbd-4c08-a89a-ed1e99987843",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7a906fe0-04fc-49c8-a144-c8c2dee768e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deaecf88-687b-43c1-ad5f-1013f4a4cb90",
        "cursor": {
          "ref": "5009eb4b-83dc-4ac3-8766-ab918329d893",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0634eea2-f5f6-45bc-b11a-5b8d78cb7dd3"
        },
        "item": {
          "id": "deaecf88-687b-43c1-ad5f-1013f4a4cb90",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a1aadcc6-9d07-4498-b35e-444d4e05e932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ad4c3e-0f57-4139-8a68-00b85dc46bc7",
        "cursor": {
          "ref": "a9b696b8-663e-4883-af00-d4dd692a65b0",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d7927b42-9662-4228-a160-9f38abada0d1"
        },
        "item": {
          "id": "24ad4c3e-0f57-4139-8a68-00b85dc46bc7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c1edb7f5-284e-496f-98c4-a8522a09204e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b9bc9d-298d-425e-ad5a-3f263c6acc7d",
        "cursor": {
          "ref": "4569473c-016f-4da8-9f5a-cfa77062daa8",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "612d7a09-fe6c-4940-98cf-262d1f68d05f"
        },
        "item": {
          "id": "f5b9bc9d-298d-425e-ad5a-3f263c6acc7d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2009e02b-3e9d-4da4-823e-3561c917e81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fc6b36-0804-4549-8549-9ec137fd8a38",
        "cursor": {
          "ref": "45388cfa-5599-46a3-b10c-830fcd980f8f",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "80f3a509-8c3f-4df3-ade9-c6ac3c55af57"
        },
        "item": {
          "id": "89fc6b36-0804-4549-8549-9ec137fd8a38",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e55c407d-250c-49ba-bae9-efda272ef13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e364317b-f897-4a27-aef7-d540dc61a332",
        "cursor": {
          "ref": "41a47a09-e857-4f48-884f-572f8f7b10e3",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "13423e8e-8712-48ba-b25f-ab8f70c4c097"
        },
        "item": {
          "id": "e364317b-f897-4a27-aef7-d540dc61a332",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "835f392d-728d-4073-a096-ea1036509b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36a827a-525d-4d25-b9a5-2210f2ec69ff",
        "cursor": {
          "ref": "e16eaa44-f3c5-4468-a345-3e9c4d6140bb",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a610a7d0-1f27-4b75-85b0-22b5b0085d61"
        },
        "item": {
          "id": "c36a827a-525d-4d25-b9a5-2210f2ec69ff",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c2c8f458-8300-4af3-a8b6-6b5774dda85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cea16a1-2391-490a-9481-54408e2b8840",
        "cursor": {
          "ref": "04b6d939-dde0-4063-9ac5-912eb5415ad8",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7fb5a041-817f-476f-b0b5-812e437711c1"
        },
        "item": {
          "id": "9cea16a1-2391-490a-9481-54408e2b8840",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e6db3496-ca3d-4e39-8d47-75c4946440ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfd6064-7fdd-464a-a90b-92d30b178787",
        "cursor": {
          "ref": "bf4dda37-28c0-4933-8769-8355ab37eda2",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fd169133-4cbe-4d1a-adf7-65abb9723308"
        },
        "item": {
          "id": "acfd6064-7fdd-464a-a90b-92d30b178787",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "94b59e7c-5b2d-4de4-b5fc-c76f797d9bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760164dc-38d1-4be4-bf26-204bb02b6510",
        "cursor": {
          "ref": "16ac04c7-109a-4733-b49e-2c86c67369c3",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "586918c0-dd51-4d96-8337-854ec90efc68"
        },
        "item": {
          "id": "760164dc-38d1-4be4-bf26-204bb02b6510",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c0655c53-8da3-4b20-9c63-5bc06d0a2e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b26522-48fc-43bc-94c2-374be21a90d6",
        "cursor": {
          "ref": "bb063aa0-5da1-4874-8f6a-cd8d084672ec",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b7b1483a-7685-4df4-861f-7d8c90202d73"
        },
        "item": {
          "id": "b4b26522-48fc-43bc-94c2-374be21a90d6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eaf34955-78da-4f93-a5f1-d0bdbd305fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f82132-96fb-4120-9fe6-6610c1a9c302",
        "cursor": {
          "ref": "7bc2d272-69d7-4da7-b214-8fd50cefdf4d",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "510a3895-2b96-4afe-8a3b-1756c7893120"
        },
        "item": {
          "id": "88f82132-96fb-4120-9fe6-6610c1a9c302",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e739638b-ef5e-43b5-83a0-3d60f7229793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ca1445-f449-4b8e-9da4-322d95568946",
        "cursor": {
          "ref": "61235a2c-b9a2-406b-8ef8-15a40f724b26",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "96c53709-26cd-4b8b-ae0d-667b0c5ca772"
        },
        "item": {
          "id": "28ca1445-f449-4b8e-9da4-322d95568946",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3a1bd625-212f-4f29-b636-1cbedc4cc210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83f2dec-b874-4736-9790-00787c1e419b",
        "cursor": {
          "ref": "f5a89247-b39c-4e5b-be73-0e15f69043f9",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "de411389-ed60-4833-97b4-d047a56b07b4"
        },
        "item": {
          "id": "e83f2dec-b874-4736-9790-00787c1e419b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4074968d-48f4-4e14-ae9d-d3804ba81348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ed68d7-7a3a-4727-a430-30b5d04853a9",
        "cursor": {
          "ref": "09663762-9345-48cc-9ff8-d5918d4a77c7",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d118e00b-3a64-4588-bdb8-ed5c858b9492"
        },
        "item": {
          "id": "e8ed68d7-7a3a-4727-a430-30b5d04853a9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ea6e6ed2-03e3-435e-b9dd-fd68d9a2bc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca49d26-3b1c-4fe7-809d-096a223795ca",
        "cursor": {
          "ref": "e33a57cf-0541-4f5b-97d8-f0b0754f3f8f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c369101e-f94d-40c3-9192-92e4bfa3eba8"
        },
        "item": {
          "id": "4ca49d26-3b1c-4fe7-809d-096a223795ca",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4c49b71e-dc75-43dd-854f-fcb9a9034f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e36b35-b30b-4366-81e2-36c3a9101ceb",
        "cursor": {
          "ref": "463f2929-27af-43e4-b093-1d7bda1e65e3",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "717d6e56-7392-4f4e-87f5-525db131fbcf"
        },
        "item": {
          "id": "d3e36b35-b30b-4366-81e2-36c3a9101ceb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "142eafda-74b9-4423-9d1f-aa73f39b3474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd183e22-5a40-4ccb-bae4-70a739ddbc05",
        "cursor": {
          "ref": "cdf9c37a-2fb7-4ed2-b4ce-7e1dafdcf33e",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4e4d7628-b771-437b-9e9e-8d881f73b163"
        },
        "item": {
          "id": "fd183e22-5a40-4ccb-bae4-70a739ddbc05",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "da52f050-3226-41a4-8327-650015106360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8f87ca-53b3-4d7d-bfa9-c0816d7416bb",
        "cursor": {
          "ref": "ffb9cf08-b68e-410b-9f2a-da9d9c2496a2",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5cd96193-ca67-49ef-ac54-cb62552d30ef"
        },
        "item": {
          "id": "1f8f87ca-53b3-4d7d-bfa9-c0816d7416bb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e8c3a357-4472-4f18-a2f8-28e7d0e14691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a339bd-5f23-46cb-9178-3225d1ab8db3",
        "cursor": {
          "ref": "f9a16e97-2771-45e6-8a03-e9ddcb47cfdb",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "33f4dd43-69d9-457c-b44d-f8dca9af7a88"
        },
        "item": {
          "id": "29a339bd-5f23-46cb-9178-3225d1ab8db3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d61ff078-2a01-41f2-86ba-6723d8da8adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53a7207-0db0-45de-9dc0-b3e124a1e18d",
        "cursor": {
          "ref": "299252e3-c4f7-40ee-9cee-f17298a09f8f",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dd41a3ca-e407-4d08-adc4-e911003fb7b1"
        },
        "item": {
          "id": "f53a7207-0db0-45de-9dc0-b3e124a1e18d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "134a8fb1-c07d-4b87-a28d-80dcd707ee4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493f1bac-f7ae-40ab-8af8-88f501952cf5",
        "cursor": {
          "ref": "f5940638-404e-4b5b-9e3d-fcbd4f4f06f4",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "17d8e2e5-43b2-4f39-ac13-7954ac75a186"
        },
        "item": {
          "id": "493f1bac-f7ae-40ab-8af8-88f501952cf5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "010d5d50-396c-4f3f-8a6b-faf6308f62ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a3c982-d707-46b8-8610-286ed07e5322",
        "cursor": {
          "ref": "cbd24390-04c0-411f-b393-0ef9e204e90a",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8f299601-63a5-42c2-9928-75340edfd2bc"
        },
        "item": {
          "id": "34a3c982-d707-46b8-8610-286ed07e5322",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fc4753c2-e022-47a9-938a-c571c3425776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31a12ef-870c-4e3a-8e90-2f0ef7a73877",
        "cursor": {
          "ref": "46711d3a-c33d-4c5a-9028-396feb335272",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "38f5e0c2-4172-4b9b-9ac8-5f6e502613ed"
        },
        "item": {
          "id": "c31a12ef-870c-4e3a-8e90-2f0ef7a73877",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9f7f0f91-ac54-4c8c-b63d-d691cd4c7ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cc5a06-e0c0-4c15-85e6-6388cdd2bc66",
        "cursor": {
          "ref": "7471c127-dfad-4ac9-943d-d1fef68b5f85",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "06899f1a-6bdc-400b-97ce-4127cce6db9f"
        },
        "item": {
          "id": "a6cc5a06-e0c0-4c15-85e6-6388cdd2bc66",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "27bf4a92-b83c-4384-a21f-b54f6ef7c48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205f088f-b0a0-410a-b530-bdf06ac52d72",
        "cursor": {
          "ref": "2341dc57-930d-4081-933f-29508689f2e6",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8a26e64a-6681-437f-84c6-7b75e86f7e28"
        },
        "item": {
          "id": "205f088f-b0a0-410a-b530-bdf06ac52d72",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ac7d90bb-c84d-4193-84f8-55f13814b5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316d4ddd-16ff-4021-adb1-83d50f0c3f4c",
        "cursor": {
          "ref": "325c4a07-4419-4dec-81c2-9de3d0c4e85d",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "23238f12-3425-4ecf-a022-01ee37c99272"
        },
        "item": {
          "id": "316d4ddd-16ff-4021-adb1-83d50f0c3f4c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b947aac2-a35a-430b-a0a4-338fbf8d7ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d41bdeb-8f8b-4c4a-86b4-eed3cfaa54ed",
        "cursor": {
          "ref": "75be101a-a331-43ec-b595-dbcbfbbf7ef4",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ec7c0c7a-b67d-42fe-a748-ff90d8cd207e"
        },
        "item": {
          "id": "6d41bdeb-8f8b-4c4a-86b4-eed3cfaa54ed",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f938adec-7b15-43ce-92ee-556de897c400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697a9a7b-0b05-47bb-8780-e04cfdbfe7c6",
        "cursor": {
          "ref": "b0b80f33-f8e9-4f5e-87ba-c750df9a0e54",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "283914f0-d123-45de-80df-855f9da35821"
        },
        "item": {
          "id": "697a9a7b-0b05-47bb-8780-e04cfdbfe7c6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a0cd201d-0a69-4c94-8295-4c8247e57bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e617c4f-e358-455d-9d2d-e2cfbe1c2d68",
        "cursor": {
          "ref": "19fabde0-9823-408e-a945-e33c5d5df84d",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "53f03986-7fe3-4857-80f6-339a38a3881f"
        },
        "item": {
          "id": "3e617c4f-e358-455d-9d2d-e2cfbe1c2d68",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3f1f3bbe-c79b-407e-96f3-8087d6b7c200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428a1990-c6f5-451f-adea-12da5ebb28be",
        "cursor": {
          "ref": "7a6955a7-b08a-4e0e-9eba-f566ac4c075e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fd606c5f-0996-45db-94b2-793f508444ed"
        },
        "item": {
          "id": "428a1990-c6f5-451f-adea-12da5ebb28be",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d1cbbf1f-08a5-4e18-a6d6-ea5570fb03c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82386de3-7e38-4b27-99e0-9b11276013c1",
        "cursor": {
          "ref": "bf875a6d-13c2-479e-8949-ac926404422c",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "289b7135-2074-466b-a3c3-c33b786f0be5"
        },
        "item": {
          "id": "82386de3-7e38-4b27-99e0-9b11276013c1",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b4cde7a6-ad2f-455b-a203-583363a0437a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 51,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a99bd1-00c1-4cbe-bc6f-066071e98049",
        "cursor": {
          "ref": "4f8d8cb3-a1db-4aae-a547-eb61ea06949b",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ecfa427f-bc97-405d-9860-0c2f2f4af0f2"
        },
        "item": {
          "id": "b0a99bd1-00c1-4cbe-bc6f-066071e98049",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d0c600e2-9c3b-428b-93e1-984bb0c83836",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d4fb11-46d0-4556-8dd2-d085b1e7c81d",
        "cursor": {
          "ref": "33e29f07-9c31-4e14-89f0-89a5be97d146",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2d679494-e32e-4f50-a7b2-685c5511cfde"
        },
        "item": {
          "id": "b5d4fb11-46d0-4556-8dd2-d085b1e7c81d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ff4530f4-d801-4b6f-a5ee-80bb9091b235",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6343bc1e-a1bc-437d-a7f1-0a427d3e7583",
        "cursor": {
          "ref": "4ec29cf5-4d5b-42e3-a85f-c0bff7c1ea2a",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b197c1d2-9415-4358-95a0-b16589102f46"
        },
        "item": {
          "id": "6343bc1e-a1bc-437d-a7f1-0a427d3e7583",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fb5fe014-b156-42d1-ad9f-9a587e468166",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "900f44c5-ffd4-4ae2-81ce-90e3f9062781",
        "cursor": {
          "ref": "139dc101-417d-4269-bb1f-583f84e06b20",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1e36b937-06fc-4f85-8b04-8437854e46c2"
        },
        "item": {
          "id": "900f44c5-ffd4-4ae2-81ce-90e3f9062781",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e769086c-e9e1-4272-91b2-79d7a89a00df",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44e7eaf-a4e1-4595-8cd9-713a26b98ae2",
        "cursor": {
          "ref": "bea0234f-cbe1-4b5d-bbc4-77fb0914eeac",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cf2ecacc-9352-411a-9577-56993f4a55ca"
        },
        "item": {
          "id": "b44e7eaf-a4e1-4595-8cd9-713a26b98ae2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c42a1156-7e52-42df-9973-957b3d0dd5cf",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8ce909-446e-49c8-afff-4d0fd445b9cf",
        "cursor": {
          "ref": "42b00851-fc93-40f9-96f2-b85bebcbed40",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "888311b4-7a0a-415f-bc41-67b9fbf96d43"
        },
        "item": {
          "id": "6f8ce909-446e-49c8-afff-4d0fd445b9cf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8bf75082-be15-4117-9344-cc54c7dfffc4",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff580bb3-5b31-4db9-9610-e905dd787b04",
        "cursor": {
          "ref": "469ada3b-3e36-4e07-84f5-94f84bf9e52e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fccb0a9b-2d44-48fd-866b-9c8dfc52edd4"
        },
        "item": {
          "id": "ff580bb3-5b31-4db9-9610-e905dd787b04",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "550d1ce3-445f-4f1f-9fdc-43edef1ea637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff580bb3-5b31-4db9-9610-e905dd787b04",
        "cursor": {
          "ref": "469ada3b-3e36-4e07-84f5-94f84bf9e52e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fccb0a9b-2d44-48fd-866b-9c8dfc52edd4"
        },
        "item": {
          "id": "ff580bb3-5b31-4db9-9610-e905dd787b04",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "550d1ce3-445f-4f1f-9fdc-43edef1ea637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26880fcf-141d-4e96-a417-1849962094b1",
        "cursor": {
          "ref": "f6bedd6d-61e4-4336-902b-cf5a857d479e",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "af86f5f8-52a0-4c2d-a49b-c3d6d503d56b"
        },
        "item": {
          "id": "26880fcf-141d-4e96-a417-1849962094b1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "955362e4-1d87-45ff-b544-ff4dbbfe7278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5863e22f-f5c7-4bd5-9bf8-7f4beee90ef1",
        "cursor": {
          "ref": "7bc7b728-ea66-4198-9a28-2a2bd72943d8",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fd700238-d8f5-4749-ac58-3eb60a5e568d"
        },
        "item": {
          "id": "5863e22f-f5c7-4bd5-9bf8-7f4beee90ef1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e34d4bad-5d2f-4eb2-b9d1-be5cc62c0e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb09aaf-7330-4a57-9ab0-40aa9267a7ec",
        "cursor": {
          "ref": "5d5407b9-b135-4044-a17b-20319e4329da",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "eb9bb73a-faa5-4c20-b5d4-8fe2676dfb46"
        },
        "item": {
          "id": "3bb09aaf-7330-4a57-9ab0-40aa9267a7ec",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "04c36207-866e-4767-8fa0-58f2a2400a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e6b9f3-4310-4e93-a592-efe27acd19e0",
        "cursor": {
          "ref": "fea34102-9ffa-4f13-bdb0-616b5012b7b3",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0dcea1fb-3148-4d3a-b933-751593823510"
        },
        "item": {
          "id": "92e6b9f3-4310-4e93-a592-efe27acd19e0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "733c3ae3-4887-4849-9ac3-77c548e28da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be00daa0-42ec-4fd0-aa9c-ad4329164949",
        "cursor": {
          "ref": "1c0d2900-16e3-491f-ab43-5f4406bee646",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e3395cb-a293-44a4-8bff-fba75cd7511b"
        },
        "item": {
          "id": "be00daa0-42ec-4fd0-aa9c-ad4329164949",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fb6dd0e5-1843-4efa-a0fe-d9c4c8966a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45279d89-fd39-49f4-9716-41708234103c",
        "cursor": {
          "ref": "ef33a928-fc56-4e06-9fff-30629c4938ae",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5801fb14-83b0-48f5-8579-54b0cddae670"
        },
        "item": {
          "id": "45279d89-fd39-49f4-9716-41708234103c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8e5a84f3-ff6f-4be6-a762-71c7735698f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a472e6d8-7d79-4fa8-9d5d-8e807a2a32dc",
        "cursor": {
          "ref": "78d5c6d3-498a-4a8f-b660-621cf36bc0e8",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c022639d-3ed0-4e35-a032-d8a5ed0b1150"
        },
        "item": {
          "id": "a472e6d8-7d79-4fa8-9d5d-8e807a2a32dc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3c8a91f6-c98c-4448-8792-436c0aad15b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a47dc2d-e667-4e7c-96e6-c0f42a3be4f2",
        "cursor": {
          "ref": "cb43f9e9-4660-4d94-8e87-459263d95d1b",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b5610d52-931a-4992-b437-44c8fd10bbc1"
        },
        "item": {
          "id": "7a47dc2d-e667-4e7c-96e6-c0f42a3be4f2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bbfb9850-ff3c-4020-9e87-4ec2c81af876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6b416f-1936-426c-8efc-8fdac73f5959",
        "cursor": {
          "ref": "8a351937-fe1e-448a-a847-c6b8544c7808",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2800ff62-68d3-4984-8dbc-c7fd1b6facd7"
        },
        "item": {
          "id": "eb6b416f-1936-426c-8efc-8fdac73f5959",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "be5b76df-0f94-4ddc-868c-9d528e2f34b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b710182b-653e-4dd3-b834-c8c2193fa771",
        "cursor": {
          "ref": "e71be208-4c90-4d6b-b417-8b0e0aff3e2f",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "55de50ff-81e6-4429-a8ed-72d9b426d2a3"
        },
        "item": {
          "id": "b710182b-653e-4dd3-b834-c8c2193fa771",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e1c612d2-315c-41ab-ac3e-d92640dd0fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd72f02-6472-45e6-9429-467ff2027d50",
        "cursor": {
          "ref": "a6d7c963-b85e-41ad-a61d-d523becfa56f",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e8b4d880-33c0-4506-9d4c-c9da31d1f989"
        },
        "item": {
          "id": "efd72f02-6472-45e6-9429-467ff2027d50",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "12838eec-16f9-412c-9b06-4bf598a4fc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66326e9-fdec-4388-b5a2-36335b24a65f",
        "cursor": {
          "ref": "dc2ad9df-a4b1-4384-99bc-4bd1a742201b",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2b23791a-247b-4903-ab3e-14628a6cabe1"
        },
        "item": {
          "id": "c66326e9-fdec-4388-b5a2-36335b24a65f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bce16977-8df2-4892-be7f-96e95eaabe37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099aa3f2-4378-4584-aabd-622d8b3561d5",
        "cursor": {
          "ref": "5bcfb176-c110-430d-8778-02a7b62a54f3",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6a573994-6494-40ad-a7d8-c62db347fc50"
        },
        "item": {
          "id": "099aa3f2-4378-4584-aabd-622d8b3561d5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "11a29fff-987e-4822-abc0-ed4008b155bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf1046f-4847-4880-bffd-cdd1f178fdaa",
        "cursor": {
          "ref": "b7d22162-300f-4c95-9a6f-2d53fb9a02c6",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b79986bb-4121-4757-8668-89749c31ae14"
        },
        "item": {
          "id": "aaf1046f-4847-4880-bffd-cdd1f178fdaa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aaa77fa9-5d0c-4f11-9c87-b799ca274753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504d524d-6376-4fcd-9dbb-da45fbe25d26",
        "cursor": {
          "ref": "1edbe93e-8402-4e47-8822-4a5ebf9bbb66",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "93a49bb7-2a0e-4b8f-aca2-598c27e2d3de"
        },
        "item": {
          "id": "504d524d-6376-4fcd-9dbb-da45fbe25d26",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "36dbe4d8-f489-4ad8-9286-99f5e794c77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23eff003-1b58-4a30-880c-9e66b7caa082",
        "cursor": {
          "ref": "1c54c710-9781-4067-a628-5adadcc2f207",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "db713f2f-3f45-401a-b656-e4005cab5015"
        },
        "item": {
          "id": "23eff003-1b58-4a30-880c-9e66b7caa082",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5c0b0c2d-ff9a-4dc1-b05f-23d8544c20e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70cf1be-afdb-4794-a380-f4b784b4b084",
        "cursor": {
          "ref": "2c9ba84f-5964-4f32-8dde-bef7f98e7178",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6f88caa4-43fd-415f-a5e9-2661468006b5"
        },
        "item": {
          "id": "a70cf1be-afdb-4794-a380-f4b784b4b084",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2af3c74b-6f8b-4ecd-8a67-7aa7927ef6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dd9230-ad43-4fa7-96a7-17c4e04ac1e0",
        "cursor": {
          "ref": "8bc1721e-ba5c-43f4-b175-484afaa3cc36",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f6e07de7-2162-4820-a1cf-ee47ac301eba"
        },
        "item": {
          "id": "b7dd9230-ad43-4fa7-96a7-17c4e04ac1e0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8d1f0def-2736-49eb-ad9a-029d08571d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7606eaea-fdeb-4bc9-b2c2-396737a42608",
        "cursor": {
          "ref": "2308d923-ade2-4b78-acef-9c9b1fa8758a",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b0d2b26d-3136-4f77-87a1-befef713b31a"
        },
        "item": {
          "id": "7606eaea-fdeb-4bc9-b2c2-396737a42608",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "820c541e-cc75-4e30-96ce-de2655dff445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2db41c-61a8-454f-be69-e4492d268fba",
        "cursor": {
          "ref": "5e1d964c-018c-46ac-8437-410f7f31fc81",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "44a079f6-dbb6-4061-87d0-789a566acd69"
        },
        "item": {
          "id": "7b2db41c-61a8-454f-be69-e4492d268fba",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8adfa44b-1d20-4167-a936-3d0c2d5ca135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3240c3f-8d82-4afd-8b5b-35f18fdf4496",
        "cursor": {
          "ref": "6c215420-526d-4d73-a3a2-df3724fa0cec",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eab609ef-1179-46ca-9063-99bba729dc6e"
        },
        "item": {
          "id": "a3240c3f-8d82-4afd-8b5b-35f18fdf4496",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c85edd73-c16d-47ad-acab-4ba0a18d57cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a10b40a-74e6-4d35-8196-2280ad6ce3b0",
        "cursor": {
          "ref": "43df4d27-62b6-43d7-93f6-a2f7bc1b88ef",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3c65ac7f-aa7d-4aa6-b72a-b5afcdbebf2c"
        },
        "item": {
          "id": "8a10b40a-74e6-4d35-8196-2280ad6ce3b0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "274d3760-2e4c-4e95-8c61-71c9c5821677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6794b4c5-4032-47d7-9505-bc1ebdb313a1",
        "cursor": {
          "ref": "315027c8-0411-44c0-b0cf-97a9b10765af",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c4c393a2-71f3-44c2-adf5-bca5b2b786a8"
        },
        "item": {
          "id": "6794b4c5-4032-47d7-9505-bc1ebdb313a1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9211eb4a-b2cd-4d26-beb3-4e27942f646c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8407f3f-1848-47c9-9370-4fcc4bd88028",
        "cursor": {
          "ref": "f611086a-3241-4961-95b7-d3c92b8af174",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5e2237af-709a-4ee4-b721-c37155de5900"
        },
        "item": {
          "id": "d8407f3f-1848-47c9-9370-4fcc4bd88028",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27527773-9867-44b1-a469-c5411709cb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed6f8a2-cb73-4b97-8c62-d6f65270474d",
        "cursor": {
          "ref": "9b005b2d-39fd-4a99-ace2-91254d999482",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1d369c2e-c7ae-456e-a662-51babf656dc3"
        },
        "item": {
          "id": "eed6f8a2-cb73-4b97-8c62-d6f65270474d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "59d6969f-5403-40ed-8fe9-8c06eb9d7305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac96969-b15e-416a-a604-84fdb7af45a2",
        "cursor": {
          "ref": "13dc4158-94aa-40be-9e77-e2761266d351",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b4aaa00d-ba8c-4d2f-beb4-c32c0f39ec4c"
        },
        "item": {
          "id": "8ac96969-b15e-416a-a604-84fdb7af45a2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "97e0beba-2260-4cfe-925e-1e0fb3ff1ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a5190d-3a62-4836-adba-ca24cc0041e7",
        "cursor": {
          "ref": "7ca537fb-0d9c-4e21-8cb3-5ecde5bf354f",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2230b359-71bb-4dfa-8aa3-17636124661d"
        },
        "item": {
          "id": "37a5190d-3a62-4836-adba-ca24cc0041e7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7b7998cb-a7de-487c-af5e-7f0b5b1d64b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813a1137-a601-4286-a0ac-580a3b375a3f",
        "cursor": {
          "ref": "d037ad92-c895-4d1d-a6fb-714c5ee9fe65",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "de6ce541-646c-4775-aa04-cc66699ad1b8"
        },
        "item": {
          "id": "813a1137-a601-4286-a0ac-580a3b375a3f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "281bf450-c147-456c-822f-ed0c61ace951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fabe79-0622-4ca9-8268-ed622f710233",
        "cursor": {
          "ref": "4b23f94e-261c-4e99-81a4-279635c7d458",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "14e708b9-aebf-4f95-8a5d-228246c30ae7"
        },
        "item": {
          "id": "78fabe79-0622-4ca9-8268-ed622f710233",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f836ef67-ffae-41be-b8a2-e923648d8f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3eb64b-b99b-418a-aa51-2362002123ae",
        "cursor": {
          "ref": "ba723d52-3f3e-491a-adb5-c4ba0d00670b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0f58759c-6f41-426c-a43e-532bc8e16607"
        },
        "item": {
          "id": "0f3eb64b-b99b-418a-aa51-2362002123ae",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "01628aa2-2045-42d6-93b8-dcef351acce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c20220-7965-4e80-a653-85b589aa8f0c",
        "cursor": {
          "ref": "f2ef0551-0a03-475d-b2a4-b1270bc3451f",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "642ba31b-4348-44e8-a0bf-d78d4d8455be"
        },
        "item": {
          "id": "45c20220-7965-4e80-a653-85b589aa8f0c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d708527b-c60c-4bab-8a3f-97d32bad6b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9165197a-41f9-4f86-9428-8d3445a37759",
        "cursor": {
          "ref": "3e1b32c8-3a4f-4336-b00c-b788e97346d4",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e382c7bf-fde8-4c99-88d4-71ec513ffe1f"
        },
        "item": {
          "id": "9165197a-41f9-4f86-9428-8d3445a37759",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5830a987-9fe3-4e51-b0ad-4618e7eb41da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4181a260-f3f4-497d-a7f1-d2ad7c345a2e",
        "cursor": {
          "ref": "8cc59d78-acef-4cf9-b619-dcffe52fc563",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f954faf7-f7b2-486a-a20b-40452ec161da"
        },
        "item": {
          "id": "4181a260-f3f4-497d-a7f1-d2ad7c345a2e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "60e5e6bb-099a-4505-bc9c-2f459fdae566",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8c0c86-7e4d-4bca-81c7-28d6407a3e29",
        "cursor": {
          "ref": "b5d8d1f7-2c46-4e18-950b-c589016075eb",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a7fbc696-c583-4ab9-962d-03d2abc77416"
        },
        "item": {
          "id": "ab8c0c86-7e4d-4bca-81c7-28d6407a3e29",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9e0ac9cb-e1d4-4ad1-8d7e-7c43132333b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8c0c86-7e4d-4bca-81c7-28d6407a3e29",
        "cursor": {
          "ref": "b5d8d1f7-2c46-4e18-950b-c589016075eb",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a7fbc696-c583-4ab9-962d-03d2abc77416"
        },
        "item": {
          "id": "ab8c0c86-7e4d-4bca-81c7-28d6407a3e29",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9e0ac9cb-e1d4-4ad1-8d7e-7c43132333b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07bc6fa-a368-424f-9014-02a1a7d7a2b4",
        "cursor": {
          "ref": "06249a6d-1357-4d0a-ad4b-a6f317da218b",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3a8f80d1-e01c-4eba-8be7-8e33d6ab5aae"
        },
        "item": {
          "id": "e07bc6fa-a368-424f-9014-02a1a7d7a2b4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "58964eb6-d711-41ec-99b5-26d37d1daa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f9e995-52be-4a4a-aea0-4617297b873c",
        "cursor": {
          "ref": "3603a8e3-6740-4293-a534-0156ee436bf5",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "616874d5-772d-4e55-9043-37ff13dd0f4a"
        },
        "item": {
          "id": "80f9e995-52be-4a4a-aea0-4617297b873c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f8656265-2d7c-4c8b-8359-a53c2bf96755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c7cac3-4460-42cd-8994-bccbe35c09d5",
        "cursor": {
          "ref": "5827dd30-a1c8-44ce-a1dd-a98b402307e9",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "149c50f9-750f-496a-9a48-6883a47a7422"
        },
        "item": {
          "id": "11c7cac3-4460-42cd-8994-bccbe35c09d5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d4d80a2a-e219-4b75-b810-78ecf889b052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15c7c28-8afc-43a1-b0f1-db7f93163585",
        "cursor": {
          "ref": "0e708598-2809-4573-8393-7291180710d8",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f08f5658-8201-4db8-aff6-a6846eb8ed78"
        },
        "item": {
          "id": "b15c7c28-8afc-43a1-b0f1-db7f93163585",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f590d161-3ea5-4bb9-abc3-61b54b85f9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813432b1-05f8-4c39-a7f5-a12bb8c7ac09",
        "cursor": {
          "ref": "27bce4da-abfd-4ae0-8adf-ef0b87c69925",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6abba485-f64c-472b-acdc-578ec046b8d8"
        },
        "item": {
          "id": "813432b1-05f8-4c39-a7f5-a12bb8c7ac09",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2a06c3d3-4568-44ff-b65a-9f91f99e8095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a826c139-c570-4950-b41a-9db53350e58e",
        "cursor": {
          "ref": "c6437a7a-f44f-4659-9edc-66f960fea25e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "62838a7d-646f-4d8e-993a-0a85643f7170"
        },
        "item": {
          "id": "a826c139-c570-4950-b41a-9db53350e58e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "06917bbc-711d-423c-ac9c-2639a2c75225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee9b383-bb4d-47bb-a6ed-16d6d5c8a36e",
        "cursor": {
          "ref": "a50f1258-9eef-44f7-9e17-6949d3e11014",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c2d58f06-ffe9-4329-bdb1-0274e4dd97e0"
        },
        "item": {
          "id": "6ee9b383-bb4d-47bb-a6ed-16d6d5c8a36e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "318a1a4e-4317-45e6-a953-441b9a797b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490e74fc-cb84-47e6-8976-015abde0fc09",
        "cursor": {
          "ref": "6be19098-05b1-495c-bb5b-fc3d46862a22",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5325cd2f-71d9-4135-9ede-eec889b55c22"
        },
        "item": {
          "id": "490e74fc-cb84-47e6-8976-015abde0fc09",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9341b271-dcfd-4ab2-a2b6-ca5be5b7c4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0bbbbd-e461-4b11-918b-93be209fd5bc",
        "cursor": {
          "ref": "ef98dc7c-7882-4154-a12f-63afdcad02cf",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aaf2fa31-a8f9-4fcb-83e4-4adf8c3bb392"
        },
        "item": {
          "id": "4b0bbbbd-e461-4b11-918b-93be209fd5bc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ed08c098-61d7-4609-95e0-1e6e5f9898e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1172584-60d1-4f5a-a7f5-1cc28f7a295a",
        "cursor": {
          "ref": "d3ec15a6-d44f-4f5b-970d-fb74d56a5153",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "693133b6-1cf8-4df2-a06a-0fd1d6f64624"
        },
        "item": {
          "id": "f1172584-60d1-4f5a-a7f5-1cc28f7a295a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6ca89d76-85a0-4041-bc49-8ad66f3acb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0211b0-83ef-46ba-9288-70dd9226b6d5",
        "cursor": {
          "ref": "0a4ab7a4-9620-45a7-9d5d-9654019db372",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "830b4581-84cb-4c96-8c51-e25febb75b25"
        },
        "item": {
          "id": "8d0211b0-83ef-46ba-9288-70dd9226b6d5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6be634df-636d-4678-9fcb-a9ce95380ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21690805-764f-4638-866e-4b4f442ba17a",
        "cursor": {
          "ref": "1a06f1d3-aaec-4f38-9d29-3213987bec45",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "252ff31d-a2ed-4f57-b196-5c849f5c6f48"
        },
        "item": {
          "id": "21690805-764f-4638-866e-4b4f442ba17a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b996e4a6-2d7a-459c-8b9f-8412f4feae7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb33b69-6c7d-4658-9f95-0ec0633c1d35",
        "cursor": {
          "ref": "ed25755a-5e8a-4ca1-af7a-073190a1f167",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c03e2a88-8612-4396-97a8-eb5530002c94"
        },
        "item": {
          "id": "2fb33b69-6c7d-4658-9f95-0ec0633c1d35",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "68c197d7-ce9c-4832-a632-bbb97bad6714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c504ffb9-81bc-4fcd-a022-b4593b742db8",
        "cursor": {
          "ref": "0d95ca6f-31c7-482c-87f1-eb2ea4913db6",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3f0c7955-070b-411c-a57d-b2d89243465c"
        },
        "item": {
          "id": "c504ffb9-81bc-4fcd-a022-b4593b742db8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c1b127e4-8845-4597-9f62-b41ae6e6efe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890badde-b0eb-4d26-bee4-2aafeff51d16",
        "cursor": {
          "ref": "516b662b-4068-48b2-8547-41e6179691fb",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "82048364-302a-4936-84d4-36d66e53c63b"
        },
        "item": {
          "id": "890badde-b0eb-4d26-bee4-2aafeff51d16",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ef906577-7e17-4baa-8fa4-57fe392eebd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bedb34-ebef-4934-89a3-7be39252c8d1",
        "cursor": {
          "ref": "6e292ea2-3e50-4f84-bdc7-d6e41144bbc6",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a744ed99-2ac8-4190-856a-60a82656fb9f"
        },
        "item": {
          "id": "30bedb34-ebef-4934-89a3-7be39252c8d1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d4d43e14-875d-4125-9b7f-b65a9b89f726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bc0e5d-35c0-42ff-87c7-31b3ae094ad3",
        "cursor": {
          "ref": "9d2ef674-ab17-46ac-a7a5-dc49b84c8eae",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d24fd159-aa88-4a55-ac94-cb386f5bdf89"
        },
        "item": {
          "id": "23bc0e5d-35c0-42ff-87c7-31b3ae094ad3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7830e026-c2a0-4f0b-a163-c32cb9692f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5f2491-f9d2-460f-ad1e-c1fd23873883",
        "cursor": {
          "ref": "ece4de36-fa11-4009-ad18-8c0664cd2ae9",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "73f32367-1f88-4068-a610-e502e55493f5"
        },
        "item": {
          "id": "9d5f2491-f9d2-460f-ad1e-c1fd23873883",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dd00d026-e321-4a41-88a7-0c8089dcf96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843160ba-42eb-4a2b-bbea-a01c1ee8b922",
        "cursor": {
          "ref": "6954511f-0d9b-4fe8-83fa-1ba4aaa758dd",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a8164fc0-13b4-4e59-80e4-f514b82ec6b7"
        },
        "item": {
          "id": "843160ba-42eb-4a2b-bbea-a01c1ee8b922",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7d27493d-26fb-4224-83a2-6a31379d3ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d01809-3d19-4535-9748-968d9c5a2462",
        "cursor": {
          "ref": "f191cf43-c4c3-44a4-abbb-106e9f8a6923",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e76217d9-c58e-4bef-984c-abb163f74f46"
        },
        "item": {
          "id": "31d01809-3d19-4535-9748-968d9c5a2462",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1683eab6-7976-4ff8-9e33-8931e05c93b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f698677c-0269-4ce5-9c3f-ab0dbdde52e6",
        "cursor": {
          "ref": "5f7c2f09-a43f-4283-b386-e54b9c8f4b8e",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4139e7dc-0002-4d43-acb6-8a317fc09725"
        },
        "item": {
          "id": "f698677c-0269-4ce5-9c3f-ab0dbdde52e6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "efd3977a-83b6-444d-bb47-1823a498950d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bafbc6-0459-4fed-be04-7471a152cf4a",
        "cursor": {
          "ref": "19017c73-f333-467d-b9b1-c8c2514b31e6",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9056a001-4b28-4da3-950b-a5d38851740f"
        },
        "item": {
          "id": "a3bafbc6-0459-4fed-be04-7471a152cf4a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7ef6b5f5-fd23-4089-8b7f-0ab83056a7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea3b163-b56c-48be-86bf-487c4fdc1185",
        "cursor": {
          "ref": "77e1fb76-cf8f-49cf-a414-2bf2fb8dc60d",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "145c8bb9-63af-4018-af81-61f987b08628"
        },
        "item": {
          "id": "8ea3b163-b56c-48be-86bf-487c4fdc1185",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8ca99b1c-aabf-4978-aabb-e0fc31c2f611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634b8a2f-989e-485b-866d-f781bb11c0f2",
        "cursor": {
          "ref": "47a01414-6deb-4134-ae46-7932ce927d5f",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "13273503-4932-4ae1-ab5d-ec8678a1f4a0"
        },
        "item": {
          "id": "634b8a2f-989e-485b-866d-f781bb11c0f2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8379c035-1f23-4f81-bbbd-45849b884029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cee6bf2-f72e-4e34-90ba-929d7c699d77",
        "cursor": {
          "ref": "e05331d0-5eed-4f08-812b-a1c7ea790816",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "57a4b34b-93c8-489a-9088-b6e6d425939a"
        },
        "item": {
          "id": "3cee6bf2-f72e-4e34-90ba-929d7c699d77",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cc18fbe4-c96c-461d-b3b4-f153627da27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45ddfc2-c118-4b49-90ff-54f9420d9080",
        "cursor": {
          "ref": "da4c17e5-6c26-485d-a136-cb4fd96e7c58",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "77427870-6986-4c15-ab9b-3285eb17422f"
        },
        "item": {
          "id": "a45ddfc2-c118-4b49-90ff-54f9420d9080",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "acadc1c7-7254-451e-a50d-44cdc5ac99a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a91b91-a66e-4022-9dbe-0e218f3d9824",
        "cursor": {
          "ref": "12d3e793-ff47-441d-a955-c02c20bda114",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7de8b9b1-f3da-460b-b42d-a0403de729df"
        },
        "item": {
          "id": "32a91b91-a66e-4022-9dbe-0e218f3d9824",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9f6b504d-b0c3-4788-bbb8-226172412ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3763478c-64af-4651-afda-07e697c19b5e",
        "cursor": {
          "ref": "1dda8c4e-f102-41fb-b7da-fba7eb93e492",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "65241fdf-9af3-4c5a-8740-1f4704c4e8ed"
        },
        "item": {
          "id": "3763478c-64af-4651-afda-07e697c19b5e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "405054e2-beb4-4c9d-be40-e8702d5b12b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0178a5-f1b1-4e2a-ab33-fa05acb5cdd8",
        "cursor": {
          "ref": "fe858c87-00c6-47a5-9d39-3d8da13f5447",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d4edabe7-e29f-4ed0-a498-a21f5b9df1e6"
        },
        "item": {
          "id": "0a0178a5-f1b1-4e2a-ab33-fa05acb5cdd8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "28d2ab13-c16a-4791-90f5-c987ecacd282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421be485-60ed-4c12-aa79-ba0aa4135fa0",
        "cursor": {
          "ref": "549b849e-aaf4-44c3-a8c1-6d1d7c2ee101",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9a3668f5-7178-4a57-9fb2-c5592229cf92"
        },
        "item": {
          "id": "421be485-60ed-4c12-aa79-ba0aa4135fa0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3b220bf4-b306-4acc-b075-d5cc1504c1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29f7802-bd5f-48a2-a1c5-84677726a588",
        "cursor": {
          "ref": "688e6df9-065b-4c66-b4bf-4a3bb8f9fd80",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f56b21cb-c875-4e16-8e51-717e031f59d7"
        },
        "item": {
          "id": "b29f7802-bd5f-48a2-a1c5-84677726a588",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f003f5ed-17ce-450b-a398-48f3f88a94d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dd395a-544a-4e2a-a34d-d4b8c606723b",
        "cursor": {
          "ref": "9e7ebc8d-ca5d-4e14-aec9-a9765c951989",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "12c4943d-179b-4ed4-86a5-aefe6de1a928"
        },
        "item": {
          "id": "14dd395a-544a-4e2a-a34d-d4b8c606723b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c02f3f2f-bd5d-4361-ab4c-1cb2233d6e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6e0f8e-8c22-47a0-99c0-40ec7ef29017",
        "cursor": {
          "ref": "e6682e37-fbbc-4103-9831-08cd426a5619",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6100c2a9-ffd7-4fe6-a724-e544907f56c9"
        },
        "item": {
          "id": "0c6e0f8e-8c22-47a0-99c0-40ec7ef29017",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "145627e3-f1b4-4801-9a82-657263542b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148487a7-b464-4eee-85df-1de4b78ba4c9",
        "cursor": {
          "ref": "84bd84dd-8688-4b44-82c1-19219c2d7918",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "78af91a7-2ccb-498c-af47-31345c3f8410"
        },
        "item": {
          "id": "148487a7-b464-4eee-85df-1de4b78ba4c9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4a58a060-289b-44b8-b74d-c617d7c31021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c360c4e-527b-435d-9080-41277a34b4a1",
        "cursor": {
          "ref": "3d8484d8-1160-4a69-b4d0-9253598440e4",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dd00ad14-0609-40cf-85a2-1ef6eb93038a"
        },
        "item": {
          "id": "0c360c4e-527b-435d-9080-41277a34b4a1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bf487051-b77e-4ea5-8dee-7996d3363867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57dce91-db4d-40c2-bf22-6f91abd639bd",
        "cursor": {
          "ref": "f896a9c3-cefd-47cc-9cb4-b1832e617628",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2c85e5ab-e18a-464a-98a0-7ee6c3cdda01"
        },
        "item": {
          "id": "b57dce91-db4d-40c2-bf22-6f91abd639bd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "51e13be5-8111-4dd8-b18b-b2933f4af3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0945527-e05c-41ae-bf3e-7f03b0388405",
        "cursor": {
          "ref": "5c182a38-04c6-4233-97c0-b6ba19df9268",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b86ff4ca-fef6-4bcd-ab8d-af023f4236eb"
        },
        "item": {
          "id": "c0945527-e05c-41ae-bf3e-7f03b0388405",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9ba0bca3-4ad8-4114-9385-3f25df8c7893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b2b712-f42c-4983-a33c-5334cc21dd45",
        "cursor": {
          "ref": "5a06f5c2-1424-4826-b624-4b12bfe698f3",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "28392959-d8ee-4dd7-98e2-efdc8be0b4a8"
        },
        "item": {
          "id": "f9b2b712-f42c-4983-a33c-5334cc21dd45",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "48917671-df7d-464d-ab34-e23a74eb7436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cf9a04-79ae-4dbd-8948-bec4b589cf81",
        "cursor": {
          "ref": "6b7e6f98-1c94-4266-a456-f1c09d8cfdc8",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "60aea72b-ae3f-4848-acb4-080a23476501"
        },
        "item": {
          "id": "56cf9a04-79ae-4dbd-8948-bec4b589cf81",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0445439d-2afd-4f90-9c22-dc68fc38e9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7304d6e-f510-42fa-8800-374e835f3214",
        "cursor": {
          "ref": "87b94bef-22b8-4525-9909-ba03ba8b9b8f",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "747b40c5-608b-4cd1-a2b3-3aabb638e72a"
        },
        "item": {
          "id": "c7304d6e-f510-42fa-8800-374e835f3214",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7cfb4df9-9e38-4196-9253-de225e5d3096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbd2044-c440-47b7-a262-5dbcaf0d8e80",
        "cursor": {
          "ref": "8fd58fe1-092b-4927-990f-83ea708aad79",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5d43b95f-f3a4-4bfa-9214-5fa002839d91"
        },
        "item": {
          "id": "dbbd2044-c440-47b7-a262-5dbcaf0d8e80",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "50a93f32-2c48-4967-9cd5-31630543e5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e91ad10-8bbf-4d87-aa66-bc191f0b3980",
        "cursor": {
          "ref": "a10bad59-5f95-44e9-a7e0-8abb07bbaa2c",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b9e54e5b-46b0-4457-9c55-40e6ea01a489"
        },
        "item": {
          "id": "8e91ad10-8bbf-4d87-aa66-bc191f0b3980",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d42173b0-55fc-41fa-9dc2-127fa58aa1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cce2cd8-4270-4762-b10d-c1b4a224d88c",
        "cursor": {
          "ref": "6f240928-8226-4be3-b05c-b9dc53416656",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2824a778-6432-40aa-8224-0654eb2fe7bc"
        },
        "item": {
          "id": "0cce2cd8-4270-4762-b10d-c1b4a224d88c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c6c712c4-6d57-4fc0-a400-d76638f75c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a4e051-56ca-42b0-a4ea-556dcd674054",
        "cursor": {
          "ref": "af8af464-1770-45e9-b40b-df42c6ad8429",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "40f9845b-2c2c-4b49-a10e-e471d0bb6af3"
        },
        "item": {
          "id": "d8a4e051-56ca-42b0-a4ea-556dcd674054",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "90a9c477-8080-4154-b7b4-03bed679bc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05f0d8c-9764-4ba1-85d3-e2b5b469620f",
        "cursor": {
          "ref": "ac453810-20c8-4f1b-9824-adeee0a6b24f",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b1b460f7-cdc3-442b-ab51-f3467283f310"
        },
        "item": {
          "id": "c05f0d8c-9764-4ba1-85d3-e2b5b469620f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "72ec9383-7db4-4ba3-9010-2f94ae0361fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef49057-7400-40a3-b3c6-378b6a44e2fd",
        "cursor": {
          "ref": "98923611-64de-419b-8acc-b16d8eeef60e",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "be0dca31-4b75-47b3-8c81-2fb92da639e7"
        },
        "item": {
          "id": "bef49057-7400-40a3-b3c6-378b6a44e2fd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0c7ca154-166d-4d51-913b-5e77ace5fc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2ce66f-4a45-4615-9cb2-c586a170f2d7",
        "cursor": {
          "ref": "32ebaefa-99b8-4a32-a945-de52048fc536",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "702aecd9-5a04-4031-8e26-6f5aff40714f"
        },
        "item": {
          "id": "1e2ce66f-4a45-4615-9cb2-c586a170f2d7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "02f9233b-6424-4191-8d24-826cb6bd05c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248580d3-9467-4fec-8b6b-4dc0eec6cc29",
        "cursor": {
          "ref": "eae33cf3-01d2-4b2f-b1b0-ec75abfd5724",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "531efbb4-c97d-468d-80cb-4e692b9346be"
        },
        "item": {
          "id": "248580d3-9467-4fec-8b6b-4dc0eec6cc29",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dca611fd-6bbf-4f1e-a5c3-2a0838546abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843dc45d-ae77-47ae-98fa-c46a0f6aa222",
        "cursor": {
          "ref": "0f7521fe-d954-461d-a934-b23d5cead6f6",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3c8c1a16-868d-47bf-89e7-b627e2656124"
        },
        "item": {
          "id": "843dc45d-ae77-47ae-98fa-c46a0f6aa222",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "18dd33b1-e19b-4163-8712-596a174341c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62026bba-6bca-4da4-9790-dbcabd0b28d0",
        "cursor": {
          "ref": "4cabac2a-a9de-40b8-9861-b820a4aee09b",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bfd7b3df-7030-4d7a-b13d-671b15d54fcf"
        },
        "item": {
          "id": "62026bba-6bca-4da4-9790-dbcabd0b28d0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "605bf851-ec5d-4fd3-ba2c-3b03c6bd3b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0677f673-7f20-43c2-b50f-c4b635cf3fc1",
        "cursor": {
          "ref": "005c17f1-0e16-4565-aedf-a6cc603c72c2",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e834edb7-4b9c-4d3e-8c1b-2858687ec3bd"
        },
        "item": {
          "id": "0677f673-7f20-43c2-b50f-c4b635cf3fc1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "786391de-180c-4239-8615-fdbf0a7cb1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72446e0c-4d7f-442e-b38c-0503eb85fe67",
        "cursor": {
          "ref": "2b9a2722-9677-4b15-882e-839081d6b771",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6c2da626-9013-46e0-a5ad-450af615bfcf"
        },
        "item": {
          "id": "72446e0c-4d7f-442e-b38c-0503eb85fe67",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d654fbdb-7224-4021-b027-e71996a9e0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a54184-b0bf-4a35-9458-00efd2759dc5",
        "cursor": {
          "ref": "191cdf92-92c1-4402-80f9-2bc16c6f3dc5",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1720e239-f992-40f9-9943-701564d5f1ee"
        },
        "item": {
          "id": "08a54184-b0bf-4a35-9458-00efd2759dc5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b3bb59c3-afaf-444f-b905-5fe7d4a2df27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a817d256-8cd5-47e9-9e7c-cee1a604447e",
        "cursor": {
          "ref": "8f5438b3-0c6b-4f53-aa9b-d7ac7d67000c",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "478387a0-b847-4a76-be41-02670a0e40ee"
        },
        "item": {
          "id": "a817d256-8cd5-47e9-9e7c-cee1a604447e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "22008bee-7b93-4d79-9103-dd735d5abdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908fbfe1-537f-49d9-ad35-9c03ceb35ddb",
        "cursor": {
          "ref": "8eb20852-0357-42c6-9391-a37d1b53d8ff",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e1563bf8-a4e6-4cb8-9f64-3d64e87f1a8b"
        },
        "item": {
          "id": "908fbfe1-537f-49d9-ad35-9c03ceb35ddb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bc7004df-9ea1-4ede-9125-50fd3b273542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e46392b-b9be-4dc6-ad31-1cb27b386021",
        "cursor": {
          "ref": "60831b9f-0d57-409d-8d17-43725cca2dee",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b1d50cd5-e176-4634-8e44-ecbe3609c76e"
        },
        "item": {
          "id": "9e46392b-b9be-4dc6-ad31-1cb27b386021",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d934b027-b8db-41a0-88ab-331bedbdc9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d83a087-9546-4289-bdc5-9960b8b9ab51",
        "cursor": {
          "ref": "0e07e3d9-0d30-4e32-b3f0-ee50bec1d94e",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "19bbbd2d-0dc0-4e4e-9ceb-337bfbb0da6f"
        },
        "item": {
          "id": "9d83a087-9546-4289-bdc5-9960b8b9ab51",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0c9cfd72-70a1-4ba4-bdde-b09394ceef23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8de2696-47ea-4a4e-81dc-84eec6cf7125",
        "cursor": {
          "ref": "c73e5caf-515b-4534-b524-fe1c2ddbe69b",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f8f8b0ae-9a69-4b82-a84e-22bf2cd5654f"
        },
        "item": {
          "id": "b8de2696-47ea-4a4e-81dc-84eec6cf7125",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b6daf402-05d1-4736-8b37-9f02b20fcd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2cb7d0-95d6-40e9-b9c2-191c49d5bdbd",
        "cursor": {
          "ref": "99e1d7ae-9e1e-4ff3-ae0d-b813420a1e51",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b4185c22-faa6-4fe1-8b07-b4df9aaf8cc0"
        },
        "item": {
          "id": "0d2cb7d0-95d6-40e9-b9c2-191c49d5bdbd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c7bb9305-a226-40db-819b-68166dec0080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58486b8-1d0b-48f1-84dd-25cb71110ca2",
        "cursor": {
          "ref": "245a3997-5410-42ec-bbaf-75354cccf23d",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7a3a2456-ccca-4617-8e48-0eed8da58304"
        },
        "item": {
          "id": "f58486b8-1d0b-48f1-84dd-25cb71110ca2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0617bfd9-b85b-4a94-a096-a63419181ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f75e7b-a14a-4b69-844b-b2e16de18246",
        "cursor": {
          "ref": "b74664f2-0605-44ed-9207-8e2bde6d0e82",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "301e57b5-869b-4876-9286-74cc4d0704d0"
        },
        "item": {
          "id": "59f75e7b-a14a-4b69-844b-b2e16de18246",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bff43b0c-4074-448b-be3a-9ae5f08af06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e820f905-47fc-4886-ae2f-a3a45b6be4c9",
        "cursor": {
          "ref": "aee4df95-bf0a-41c2-b1d5-d6dcb8d3a966",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "824f3920-e042-443c-89a4-17943f85425d"
        },
        "item": {
          "id": "e820f905-47fc-4886-ae2f-a3a45b6be4c9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b868818a-1ced-4110-9631-fe4f35d9795c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece38bca-af54-4f93-a1fd-1b38f563b193",
        "cursor": {
          "ref": "2c4fffac-cc23-4300-a7f8-a62e1c0722ff",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0490f555-343e-4249-b797-8be6c3cf1e08"
        },
        "item": {
          "id": "ece38bca-af54-4f93-a1fd-1b38f563b193",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "798cde14-cdfb-4e31-9cd9-b33038a36016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25473356-e5f4-41d8-94c3-308144d3f396",
        "cursor": {
          "ref": "1d4d2ea9-d0ac-484c-bad4-3ec8958b8468",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3e0ed7c8-22dc-43fe-b9c6-897256546106"
        },
        "item": {
          "id": "25473356-e5f4-41d8-94c3-308144d3f396",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "71363475-ceca-458e-ae28-ee22b178a9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86ee7de-db52-4f33-888b-678cd6a19960",
        "cursor": {
          "ref": "1b936e05-bb84-4d26-ae4f-9ed7ac6a338e",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9140f0ff-83cf-431a-bc7a-5206b794d377"
        },
        "item": {
          "id": "d86ee7de-db52-4f33-888b-678cd6a19960",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "62476818-1c7b-4853-9418-eb1aa7cb636b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31afe1b-a780-40d3-903a-80dbeb3b79a5",
        "cursor": {
          "ref": "0cbb705e-b1b3-4bef-9596-1141a98fb5ea",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fb8bb7d0-f2e3-4714-8e02-ea00feb2ae41"
        },
        "item": {
          "id": "b31afe1b-a780-40d3-903a-80dbeb3b79a5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cff21935-4928-4bbc-bd60-7211d2b4c0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a72161a-092a-411a-ac77-63b022884fd2",
        "cursor": {
          "ref": "7d03adeb-f32a-4d95-9f56-c6f5a624ae71",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f626168a-b10a-4604-ae44-4c6cb1fff094"
        },
        "item": {
          "id": "0a72161a-092a-411a-ac77-63b022884fd2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1c01fb87-5cc9-4aac-8470-3100fa1795d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16196b1d-a1b8-4468-ba00-a07217e1c545",
        "cursor": {
          "ref": "70be3258-8309-42f4-99f1-5469c25613f4",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "12c32544-40c1-4ccc-8a2a-952db0c1b8d5"
        },
        "item": {
          "id": "16196b1d-a1b8-4468-ba00-a07217e1c545",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e52132d7-036d-42e8-b1d8-0ef8a329b4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cb9cce-437c-4899-80d7-68cbcd27be69",
        "cursor": {
          "ref": "caa61834-69fa-4895-9b68-d3fdcc3f6d13",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0f30237c-6e58-4e36-880d-e2e051f901a9"
        },
        "item": {
          "id": "03cb9cce-437c-4899-80d7-68cbcd27be69",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4847e8de-149a-419b-b8d8-d74a6e8d1d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da739e8e-670e-4e04-b11c-305b3e8ac69a",
        "cursor": {
          "ref": "e9934c11-b356-4b35-ae2e-42afa3150f03",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c0db5d1d-bf25-4305-9d7d-f6dbb9160fb7"
        },
        "item": {
          "id": "da739e8e-670e-4e04-b11c-305b3e8ac69a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9cdb3316-eb47-40ff-8eb8-e68108789913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2c56e9-0c88-41b5-9a07-e18f6e989145",
        "cursor": {
          "ref": "18897e32-6a53-4b1b-bf25-69f36820d4aa",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c041fe80-cb6b-451e-b0ec-0318b76befac"
        },
        "item": {
          "id": "5b2c56e9-0c88-41b5-9a07-e18f6e989145",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5016e6c4-2086-42b6-aea8-1cc26e0a6a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e00247-6063-4930-8f0b-322d33cd8ab1",
        "cursor": {
          "ref": "ca619e49-6dd2-4d0d-b78c-6f6723b23710",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7117a271-4d3f-4f1f-93be-7b632cbf9460"
        },
        "item": {
          "id": "d2e00247-6063-4930-8f0b-322d33cd8ab1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "75ad3c59-cf75-44cc-a133-7c12fa49ad5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f05dbc-788a-4069-987d-3c69a354a059",
        "cursor": {
          "ref": "13b20a83-efee-4e26-8096-034a7c7b19a9",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1fdcaba7-b7a0-4af8-956d-2bf28994e30a"
        },
        "item": {
          "id": "83f05dbc-788a-4069-987d-3c69a354a059",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7931e4aa-4905-4f7d-87de-b29c604d1805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f51f1c4-2efa-4768-a7d3-27f53710753c",
        "cursor": {
          "ref": "917d3b30-dc4a-44ff-9560-9c4524fb2938",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "06e7e8d8-a079-460a-8fd5-64c5889086fd"
        },
        "item": {
          "id": "0f51f1c4-2efa-4768-a7d3-27f53710753c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "aa3eed69-9a52-4cab-9d78-31d47d58efc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee23fe33-12a1-4bd6-93dc-a23f2822ebf1",
        "cursor": {
          "ref": "20a3e3d8-e087-4cb8-9ffd-999826f04ff4",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "38317956-f2b9-4d41-a3c3-d5d28805e34b"
        },
        "item": {
          "id": "ee23fe33-12a1-4bd6-93dc-a23f2822ebf1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bb957bed-041e-4c1e-822c-282148c02328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a37d9d9-300a-4b31-9fb9-39d24e8dc9ec",
        "cursor": {
          "ref": "c94e4387-c6e5-46d4-8c61-66ca80c81bce",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "31d059e9-fb59-4462-9f7f-41fa2926dac1"
        },
        "item": {
          "id": "3a37d9d9-300a-4b31-9fb9-39d24e8dc9ec",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5cbf0e69-b608-4774-8480-1ef945935359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a86bda-b450-4a57-97e7-32d9a8915bc7",
        "cursor": {
          "ref": "d24dedf9-28a5-467d-a4e5-cfc0546c9e2d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1dad8a0f-9219-4e52-a605-08c5d1802fa9"
        },
        "item": {
          "id": "f7a86bda-b450-4a57-97e7-32d9a8915bc7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e9d538d1-9f75-4df6-a5e4-cc5bb6c04bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1598bea-f652-4119-ab39-a4bcc97f0e44",
        "cursor": {
          "ref": "3c8a6fe4-0ab9-4d12-8ff5-21e66bd34998",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6dd032a0-3dc5-4431-aaee-cacedb5b18a2"
        },
        "item": {
          "id": "b1598bea-f652-4119-ab39-a4bcc97f0e44",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2322563e-44d9-4859-a1ae-4f9dd072c647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81939f89-eefc-4733-b68e-5820f4568604",
        "cursor": {
          "ref": "963c0558-7906-4cd3-b06e-3c658baa5332",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6bd9a34d-38b8-4a35-bf9b-7ad045263b25"
        },
        "item": {
          "id": "81939f89-eefc-4733-b68e-5820f4568604",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "834f91fd-2870-417a-8901-a68e25623cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0347e7-6c9b-4674-a769-e5a87acc5d2e",
        "cursor": {
          "ref": "10c25962-6941-4cec-8d6e-ffef42d965ed",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bbf298b0-9d9b-4041-8695-73024e3b7028"
        },
        "item": {
          "id": "2f0347e7-6c9b-4674-a769-e5a87acc5d2e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d3af170f-5426-4ea3-9ea4-0670d5910bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750b8755-d1eb-4b44-bb39-4dc6341b080f",
        "cursor": {
          "ref": "293b6d72-b2c2-4aac-9a72-9067c24ccf9f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "72a4fb6f-0f8a-42c5-a354-4409d3ef68da"
        },
        "item": {
          "id": "750b8755-d1eb-4b44-bb39-4dc6341b080f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "be0ea8e5-68c6-4a1b-b058-ba2227045109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeaf857-e2ae-469f-9597-e54d4249f530",
        "cursor": {
          "ref": "9d14db67-1b22-4d16-9691-34935ec5e1c0",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4c1e568c-f365-4b37-b7b2-dbba13fd99c8"
        },
        "item": {
          "id": "bbeaf857-e2ae-469f-9597-e54d4249f530",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9d356976-db1f-4882-9f78-8fa710f77b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4672d1db-c85f-4cd2-b21d-e555ec7c89b6",
        "cursor": {
          "ref": "06bf5863-1b38-4053-9008-0d8f8b7972d3",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "06165302-713e-456e-b0b5-946a33376c10"
        },
        "item": {
          "id": "4672d1db-c85f-4cd2-b21d-e555ec7c89b6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c0440f06-6055-420c-9bcf-c7043e263576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac2e55b-6e81-472f-a0b5-83dd98b56919",
        "cursor": {
          "ref": "ee4871da-13ca-4d68-99ff-23525e44c5dd",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ee789479-779f-432b-90b8-641be7e6aa8c"
        },
        "item": {
          "id": "1ac2e55b-6e81-472f-a0b5-83dd98b56919",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7cdca806-c9a0-4aab-bc34-8ea047fc50c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49a738c-d8d0-4d8a-878b-8704b2346a29",
        "cursor": {
          "ref": "b64221df-d480-4040-9747-d8996884136d",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d2168f25-d827-454e-9cec-386c649e7e06"
        },
        "item": {
          "id": "a49a738c-d8d0-4d8a-878b-8704b2346a29",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2a9da29c-9a22-4d59-a41e-4842f40cd2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d7a556-55fc-4605-9bfc-69fae76072e9",
        "cursor": {
          "ref": "1b04952c-8762-4025-9daf-89665239bf1d",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "431c4881-766b-48e9-b4a3-88cf482c535e"
        },
        "item": {
          "id": "54d7a556-55fc-4605-9bfc-69fae76072e9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8ab88d68-27d1-41bd-8d37-eb2d39e4cbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e765a8c-8b9c-45ee-a5f8-97acffddd03a",
        "cursor": {
          "ref": "82e25883-0f6e-4d21-9014-9d8cc5533099",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fdf19be2-28e0-49b9-a9b0-065d6dff4d1d"
        },
        "item": {
          "id": "0e765a8c-8b9c-45ee-a5f8-97acffddd03a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "67e49c54-f25f-461a-94eb-1c0a0479d824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b93d58a-af5e-43f9-ac4f-152fa6baa830",
        "cursor": {
          "ref": "02df0373-b6fd-4c1c-bd9f-eaf209bd6117",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dab63575-f2e7-4543-9947-d606a08ae211"
        },
        "item": {
          "id": "8b93d58a-af5e-43f9-ac4f-152fa6baa830",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7af74f84-9a04-4485-aca2-ee59db9a5b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcf1a32-b7dd-4597-8918-60b281d4251f",
        "cursor": {
          "ref": "3de4f105-21ec-49a6-8e29-5e9d6ece76c5",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7ae932cc-b7ff-43b8-a87d-9f9e48f9da93"
        },
        "item": {
          "id": "4bcf1a32-b7dd-4597-8918-60b281d4251f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9720a064-bf3f-4e5b-b5a9-c436f8f85d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c87c0a-df61-4aeb-a7b5-7606725e5fae",
        "cursor": {
          "ref": "f744e307-93bf-4dfb-a668-4abbead3dba3",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "26408872-678b-4c40-a0d9-8c264c7fe40f"
        },
        "item": {
          "id": "a0c87c0a-df61-4aeb-a7b5-7606725e5fae",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0c2e8b1b-7e91-4f7f-b528-93e7aa021373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6285ae6a-9f96-4ba5-a149-4cee5ed480b4",
        "cursor": {
          "ref": "f36a98c8-94ea-4e52-96c1-7d2ba6eb2c61",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ef4fabc2-3352-4a5e-bbb2-c9c7d44a305e"
        },
        "item": {
          "id": "6285ae6a-9f96-4ba5-a149-4cee5ed480b4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9557c153-3282-426f-bd9d-07dd7d81b683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60af3702-28a2-4532-9e74-8283040a8105",
        "cursor": {
          "ref": "fa27bb14-0fd1-4ac8-b744-858e3f2b3496",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a6504aa9-ac4c-4595-a7da-e3799c684c08"
        },
        "item": {
          "id": "60af3702-28a2-4532-9e74-8283040a8105",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "26925b82-e073-475d-9172-8c0e15b90847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47033d7f-a68a-490d-a278-030e9b85ada7",
        "cursor": {
          "ref": "1f16f9d8-7f0f-4f69-8db5-dc15727bc520",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "205ff3d8-40e4-4da6-b74b-1a7199227ce2"
        },
        "item": {
          "id": "47033d7f-a68a-490d-a278-030e9b85ada7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8307f175-b342-481d-a0fb-d6a8e773d4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940fc895-bc78-431c-97e8-9ddf3a7cddcf",
        "cursor": {
          "ref": "c4b20353-6f1c-4cba-b31d-330601b69894",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c5934c02-514d-4128-8cd9-162c3840c656"
        },
        "item": {
          "id": "940fc895-bc78-431c-97e8-9ddf3a7cddcf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3fd7ef29-07a1-4192-9785-cdb60a379c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77e19af-6406-4d38-8d9e-d7d5ae4b2a0d",
        "cursor": {
          "ref": "78fb24ca-e168-4b11-943d-773279308b90",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5dde8620-573a-41d3-8ba8-d586e4ae1829"
        },
        "item": {
          "id": "a77e19af-6406-4d38-8d9e-d7d5ae4b2a0d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "04779ae0-189e-4e33-b04a-0fb2821c2a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1b58f6-3cba-4414-ac03-9364217da067",
        "cursor": {
          "ref": "281db368-93e6-4a3f-8647-0210791ff027",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5afc8582-cfd7-468d-9761-899e85e9fbe5"
        },
        "item": {
          "id": "db1b58f6-3cba-4414-ac03-9364217da067",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b5d0f2d0-9dce-4c97-a8cc-77239843fb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0e468d-833b-4a0c-b51f-993c27001929",
        "cursor": {
          "ref": "02b86f57-8c03-496f-815b-c7bc1d57f80f",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ea8bec5f-e03a-444a-93d9-e5d27782a4f1"
        },
        "item": {
          "id": "2a0e468d-833b-4a0c-b51f-993c27001929",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0df265db-0533-4f41-99be-f09cdfd51ea7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95084ac-7d53-4750-9812-d3d293c30a28",
        "cursor": {
          "ref": "73172592-adca-4938-aa30-5172741d2759",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "92901c26-8509-483f-87fb-c71c9fd874d3"
        },
        "item": {
          "id": "a95084ac-7d53-4750-9812-d3d293c30a28",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "31200bbe-5e1e-4cba-abaa-ad6d95caa4eb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3318b3-c56c-4181-8bdc-15a83a2640b3",
        "cursor": {
          "ref": "31ba26c4-e81e-4c1f-ad80-d790dc1cf926",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ce40f1b2-b381-4b1f-aed1-c9f540c5c2f0"
        },
        "item": {
          "id": "cd3318b3-c56c-4181-8bdc-15a83a2640b3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ec6ebe47-3008-49b7-b73d-e5a8dd027995",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e23fd0-e231-42cf-b79d-ce0c46eaa2e1",
        "cursor": {
          "ref": "5fefa6f9-37cf-493a-bb14-332396dd498c",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "adebb1ad-a377-40cb-bff3-ff4c52a56e1c"
        },
        "item": {
          "id": "a6e23fd0-e231-42cf-b79d-ce0c46eaa2e1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ef7ee482-dc59-4953-83c1-4d805c53c9e6",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "197f57f7-d893-4384-8115-be186ce8e220",
        "cursor": {
          "ref": "0c4e9563-e859-4960-93ef-4fa35f36758f",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b634a3cb-6b77-407f-bb0b-3ce08ed9111f"
        },
        "item": {
          "id": "197f57f7-d893-4384-8115-be186ce8e220",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7a661a07-5fdd-4249-9b8a-f5f06161cb39",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d029393f-7810-4830-b137-ebb93c47083f",
        "cursor": {
          "ref": "7ab3fe48-355d-4dbd-89e7-2d64455a200e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c7805716-2833-4442-8a33-a6f28e06e36b"
        },
        "item": {
          "id": "d029393f-7810-4830-b137-ebb93c47083f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7fa26a65-e35f-460d-a42a-6f7152786c6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d029393f-7810-4830-b137-ebb93c47083f",
        "cursor": {
          "ref": "7ab3fe48-355d-4dbd-89e7-2d64455a200e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c7805716-2833-4442-8a33-a6f28e06e36b"
        },
        "item": {
          "id": "d029393f-7810-4830-b137-ebb93c47083f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7fa26a65-e35f-460d-a42a-6f7152786c6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d029393f-7810-4830-b137-ebb93c47083f",
        "cursor": {
          "ref": "7ab3fe48-355d-4dbd-89e7-2d64455a200e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c7805716-2833-4442-8a33-a6f28e06e36b"
        },
        "item": {
          "id": "d029393f-7810-4830-b137-ebb93c47083f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7fa26a65-e35f-460d-a42a-6f7152786c6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7a2506-6706-4006-9cbd-e4bdaeaeceed",
        "cursor": {
          "ref": "7f8ee902-a265-46ce-8ef1-966d21c1da31",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7dc6e95a-4302-4d19-b14b-cdf90e75e545"
        },
        "item": {
          "id": "6f7a2506-6706-4006-9cbd-e4bdaeaeceed",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "59b9ca0b-107d-4ccf-8314-9a81c45bbbe0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f77a31-c2fb-4776-a02a-2edf84e2dab3",
        "cursor": {
          "ref": "20b43d6a-d70d-4eca-93a6-e735d9bd194d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4a900330-264f-4e6d-99b1-9e53a9d9a5df"
        },
        "item": {
          "id": "83f77a31-c2fb-4776-a02a-2edf84e2dab3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3b5ed503-3360-4d69-9a42-6f813162503f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f77a31-c2fb-4776-a02a-2edf84e2dab3",
        "cursor": {
          "ref": "20b43d6a-d70d-4eca-93a6-e735d9bd194d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4a900330-264f-4e6d-99b1-9e53a9d9a5df"
        },
        "item": {
          "id": "83f77a31-c2fb-4776-a02a-2edf84e2dab3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3b5ed503-3360-4d69-9a42-6f813162503f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb92968-beb6-42aa-a7c4-87695feec01c",
        "cursor": {
          "ref": "e10d9542-0bef-4b80-b1b9-f5c7ba65d28a",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a353f21e-a63c-47f0-a822-ab8e3d7b81d0"
        },
        "item": {
          "id": "abb92968-beb6-42aa-a7c4-87695feec01c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "9c4892fa-0398-47a5-b085-781d8167d1b7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa152f0-767b-4b25-880f-78d2d7d1c0ee",
        "cursor": {
          "ref": "6124a6db-9679-4485-8bc4-5a4edba06bde",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8e8a7f2a-b790-45eb-96c0-cfb070a12964"
        },
        "item": {
          "id": "1aa152f0-767b-4b25-880f-78d2d7d1c0ee",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac52c401-b42c-4438-aa57-453a22579d63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa152f0-767b-4b25-880f-78d2d7d1c0ee",
        "cursor": {
          "ref": "6124a6db-9679-4485-8bc4-5a4edba06bde",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8e8a7f2a-b790-45eb-96c0-cfb070a12964"
        },
        "item": {
          "id": "1aa152f0-767b-4b25-880f-78d2d7d1c0ee",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac52c401-b42c-4438-aa57-453a22579d63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35c1cd1-48a1-4f23-8d85-2610a234359a",
        "cursor": {
          "ref": "853702a3-3380-4a9b-a26d-8cf62a8119cc",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "67b3288a-f958-4d8d-86fb-c958aa8033b4"
        },
        "item": {
          "id": "b35c1cd1-48a1-4f23-8d85-2610a234359a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "efdc4d6e-c44a-42f3-9dd9-1c13b309aaad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}