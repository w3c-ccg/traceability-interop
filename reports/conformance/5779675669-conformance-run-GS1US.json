{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bf19cf44-f928-4bdd-bf77-5fe40a64b43a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "773bc3ff-069d-4324-9fca-d737acfb94c5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4bfa710-7a83-4dfd-a740-3272839b793d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fbf94745-eb3a-43bc-b3cd-90757c1112b2"
                }
              }
            ]
          },
          {
            "id": "3cc970cb-58de-4bd3-8c17-763178255850",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad99139d-3a59-466a-abd8-18f123734149",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "80347f52-b9f5-426c-971f-483400183af4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ec7e7833-51cd-4972-9cff-c855bef992be",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "eab262b1-44a5-421b-8fff-aeed8b151729",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c2b98a93-3e04-46a6-af1a-a7c5b2f33a4d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b79d2f87-02fa-4818-81e8-d60bae86dd70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adb07546-a736-4c12-8634-c01e3010f240"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "122d9d8f-cc18-4a35-9e06-f9d92f1edc0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "649ed3a3-856c-4801-b4c4-00129e6db269"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a5ce100-5b49-4a49-993c-7b3e90b53d84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e948587c-dd71-489f-8958-85c8b5722c5e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f557dc7-73eb-4f0c-b978-8a6068b2fa55",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f4aa44e4-46a1-4110-a35a-397d7bab8f71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f2b73bf-acdf-4ef6-8323-f46ad1df51e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48eed597-017b-4371-b151-36106ec90dfb"
            }
          }
        ]
      },
      {
        "id": "433b7abc-f665-45e6-82fa-247c45da6f29",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "debfdc4b-be1f-4229-86fd-bf43ba6115c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dec42f05-e8a9-481d-bbdf-48681f593d3c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8971a17f-1339-438a-b41d-6a0785da28d5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a524fc-2a75-4467-97fd-2712b4749398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61a7c40e-ba1a-497a-8c45-f61a0b8f0eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310a1f2f-52f1-4b03-820b-d259d2b52c91",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5314ab-1fc1-48ab-83cb-6ef4316d1480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ccdd4ee-ea93-4239-a3eb-d70788f44495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a468d726-562e-4bcb-aac9-c17842c9300e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d083334f-3c7e-404d-a39a-10566498c08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "292922c6-4f1f-4b36-a393-2af479e76f11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3a07c27-85ab-4017-8589-8316fedc4260",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "729e2ab3-8de5-40a2-ae76-8f608e3a79be",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcebffb2-888e-445f-a311-4ada0bcaddb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2505aab-9ca8-44a6-bfbe-1912b4a6914d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6a1c8f-7a27-4c06-aee2-45051c093bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1eb2793-6182-4f86-814c-a7c724802787"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a3278dd7-c5bd-478e-84f1-d28f83c14851",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5128e53b-1621-40cf-be79-24ed3dd4f18f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91fad31c-c5fb-4142-8ab6-39013a66d54d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5606d028-327c-4eaa-8fc0-fb0d140ce56c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8bb9af7-ee5e-4df0-872e-daee82ceb825",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f409a208-aa64-426c-a55a-78d3972a8897"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb62b432-d318-4223-948d-2618fc09599e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5cc9e63-690f-4431-b5b1-39c41bf99128"
            }
          }
        ]
      },
      {
        "id": "2a1b202c-d108-43d3-8498-0768772a125b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5ee957d0-4c09-4632-a2f7-d94578172552",
            "name": "Negative Testing",
            "item": [
              {
                "id": "beaa5656-7cc8-4e04-86b5-f8fb748cffd9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "71c35d60-6a0c-4eb5-bf04-f2bfdc3e6a28",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae6fa70-c6df-4495-8824-9e3fa9d21a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd6ce12-b643-4890-aa26-0e7adda0370c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69306b2-29c5-4a89-b1ff-574b00081c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6183a183-1be2-441c-a482-0795d562face"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62ad2d0-7692-4010-9d40-3fd84c3e4ef3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7819fe-66cb-43e5-a9f4-25a45d98ce88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6aadc97-3d2c-4876-b5c1-7bac8b9716eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcf4e81-a92b-4a82-b366-2a91b0d7e6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1edc8b6f-3a9a-472d-8d5e-258549a8abdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72497912-57bf-4156-8eeb-05f4c6592517",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ec46e9-6577-4639-9ad0-97a227a95dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23b6905-fd3c-4275-ab90-f571f9e0dbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee7422e-ef67-4309-b843-c39f50b95266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "946d6181-5a1c-4e00-ad86-fea5241c3edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80536fba-8ca8-4eb5-8500-20fd05aa9609",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e5cba1-3d23-4134-8eed-454e55b15859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6091d409-867d-4d6c-8f31-91f2b13d7ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff20e498-263e-4818-ae20-a0eae78ca580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6deeb71-9fa9-4d50-a72a-03b0580fc8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7754bb11-3e61-4251-b104-503798bae8b8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a309df8b-d888-44a2-9962-f87c33d4321a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca326ac6-0957-4949-aba7-c987373454f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19474078-6e6d-47be-aacf-48011f36f6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66aea16d-aaa7-4459-a3d0-74043e604088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7230104-0410-429f-ae81-5edd8a87b03d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32585c62-d179-4b1e-b8da-327aab2f57d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341b61d7-624b-46b0-abdc-207fb0b6fcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f86b89-803b-4a62-b74a-32da50c4142d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee34a6b2-10e5-4b24-afc0-586a05dfb48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4522cca6-5b45-4ad5-a2c0-7a3040b3c62d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8e21e7-131f-4fdc-a9b4-7cbf8dde164c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c960195a-1f4b-4316-878b-6d0811e7d36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db060b71-d59c-428e-b264-87cdc47bf944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98a8be1f-ae60-417b-8873-f1b92ef308b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b225e98f-000c-4e3b-8b67-261359ded630",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491b5078-3cd3-4bd4-9aa4-c356ad992c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1723e2a-8ec7-4034-91e9-1b85bc6171ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364ac85a-7018-4b81-8040-8145a50f9c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "118eb79a-0134-448a-96c0-b20d6b6d7804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e71bb73-c3aa-41ef-aaf7-59c3f277da8a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a90e16e-4aa9-4cd0-9922-a5bd36ae8f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9005db97-978a-447a-9f24-19246bdd5317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7e9292-adb1-40a7-9628-85bdc6f959ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68dcfd71-70b0-4953-b310-e2841a18b69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a309f6b4-b35c-41d9-be66-f7eaf24df212",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f66da26-977e-4763-8420-59981fc8b92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ec33bd-becf-4c64-8925-f11653e98b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9bfacd-7c65-4e4d-99e1-ecf2cd98da2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f1fe679-6ddc-45a6-a354-70ca4169944c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a61720-a4cd-42c7-8e3a-dbc291ad7f78",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8243ab-1139-4dd2-b0f9-2235342515d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7075ab-cf80-4ed8-9f58-a3e469458e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d87586-398e-4f1d-a6ac-ac754569018a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f500d5b8-be57-4971-b26a-df7645769772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232c0509-a8de-4aeb-8303-985b32df837d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7b9603-50a6-427c-bbf0-e238fccde9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9198ae-9b51-4f95-b79c-43b12f631c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0898b509-1d2e-44b4-b918-436d88bd45a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97042377-b3a8-4c6a-8297-9e1b54f2c700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e6c761-b5a1-4a67-ae43-121ba7d9cc37",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee5ddca-1fc0-4b2a-95d5-31afc4e114eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8648587b-3415-428c-8630-413cf170cfbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7142287a-9573-4694-9670-84b12e484de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae25704e-054c-4a4a-ad9d-e25fa7449ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3b2fec-eaec-4617-9c51-8617492e23ed",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2182bcb0-28f8-4ce3-a726-33aa94636cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b672836b-e765-4e9f-8013-2ca679656b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cbb14c-ae7a-4326-b8a4-1bc28365c0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "321975ce-6da2-41c9-b045-d312d44010d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724c50a4-a802-4e00-8967-0c3c449d69ea",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf429b8-1e52-46fa-838b-be38ec3d427e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548e8ea1-e82c-4026-9ce0-d9cb3bdb1251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e86a68-b9d8-4e04-8881-1a0d9dca335a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac2555ec-ef04-4a7f-a12a-d30e63bb14ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff38404-e63f-47a5-a148-8c90101edee7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c66d8b-b844-4411-b084-873d8ff505ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55222f95-d19e-41cd-90a5-ae3dbe351aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118fd4ce-a0a2-4f2d-b0f8-87754a9accc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0a096a2-3bfb-49cc-b86c-dfb2f9f59778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d6b9ef-68dd-4b9e-8c3c-54ea59bffb71",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751f778c-8c1a-48fe-84c6-6cd12214ef70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc3b257-7bf1-469e-91c3-1fa9d5d96be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e3e774-a468-4fa4-b9b1-647590e8519a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f79d41d2-de04-46b5-906f-e78a043560ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6eb823-facc-4dd8-b4e2-a20f8e32d948",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4f5911-2488-46f6-a5a3-470cf086d6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162e3a8b-8e0f-40a9-bc4a-2e413da64657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f412c2-fe48-4d79-a324-05f6d3f383a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "35272cb4-3a74-4a17-ad9a-a8ee9d6be87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5935a4db-54f6-47f0-aca0-0cb0c5870971",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448bdc38-b644-4871-9a2a-50374dd68eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f07828-5e82-46ba-8b7a-62f20ee4a004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeadb13-850e-4dff-aae3-90f131fbb7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0983a1e-4f6e-4367-bb1f-09f6cbd5e6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233e6bec-e822-4c52-a2ac-b6bbc2abb8f7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7641ba3e-d7f4-4193-93f6-df7a2eef3a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44eccabb-828c-4eef-b3fd-8118d52e8da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598fd050-92d3-4a54-a8be-4373dbdb9605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d6321e-ae77-4ca7-a7e8-501826f79293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d2aa6d-283b-4ede-b4ab-c94282a4f38f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58505779-8050-4db4-bb3b-70886a36f8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7104c3ca-e60c-4ad9-99ad-548d9da8ba03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffed349-b8c3-4170-9ffa-514d898b11c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0439a54-64c2-4fbd-abe7-84f9d9d1aeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463cc8da-9ea3-4ee4-8e79-c78a67ace63d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029aed2f-5c5e-41f3-9207-0bf4ef0c7829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335b3ece-9cb6-4396-91a2-5d855127594e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e552d9-40ad-4578-864e-8f8e56c31362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df428e8-a7db-4ba2-b078-0d4cc0b25770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9a37d6-7cb0-4c6a-a08c-129953cef759",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a9cb49-6509-4267-9496-4c4f0f236a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ed6114-159a-4b94-b994-a9ea44ec3386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1c8637-6651-499d-92d4-6936f47aa984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f09019f9-a3bb-41fd-b191-0231d945be25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5468e27c-a9cc-4957-94dd-74e82c1c3a9e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f1374a-b204-4ece-a4af-30107eecd106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31f1d46-93d9-40c2-bedd-f4fb2cdaedf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f97e873-2eb9-4081-8963-985167d94f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d795719-df7e-43ef-8e02-707912138146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4130033-d783-4b1b-ae25-f33a2fc00a0a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9239f745-f99f-41c4-ac58-7a633746bc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0286bc59-e5f4-4867-be05-031ae2c5147e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbc3329-2c71-49f1-abee-9c7b23c435cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8076bdc6-72f4-4bd6-95e9-24c98155f03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e8612c-9372-47fe-aa00-75532920756e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a917a86a-20a5-43ed-90e2-66f93d14599b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccdfe52-5506-456f-9623-0af238961371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10fb55c-2003-47d0-a424-277e23d0a7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05c1ad9-77d5-460c-a950-f60a90accec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc76b83a-dea6-4e60-9f8f-48cc916630b9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d017c00-8536-4d59-b931-4b751110b8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0504b7e-8151-49be-8d1a-68ea1012e77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11970084-478a-422d-b4d0-17ab182f3a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72e10e67-5d0a-4f53-a0d2-c0bbeba4caa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a542b1-27b7-477d-976c-430524df6840",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e58ba82-3eef-4ab6-9f2d-eeccf026e240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f8961c-471a-480e-8478-2f90f5224208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee927605-76a2-44f5-93aa-d5dff626c8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ec0e29-4962-4896-a731-c5252d983388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b080bfa-8d68-407e-8c76-ba9adbf263c6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5141f05-aa4e-4968-bdef-7e2709ab77a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bba6bfa-9da8-414f-aa39-70dd77a5bc1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521464df-148f-4376-9dde-2b23bddb0c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c6e47e-0a8a-4dfd-be32-d66f95f2b0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb78a9a-fc58-4649-ae42-524aa64390e3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b390f6-2242-4d4e-a2d0-c2eaf63df215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aed4bd5-3553-4160-8f0d-6181e0725450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1700af-1222-4e97-88be-9b951a3f8504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "de021b35-e5f6-4f9e-8a25-a02e1b3dfcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570d53e5-62aa-4d04-8d49-1ee10a7da4c3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd04c311-b7ac-4865-b164-3bc4b20bdb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21348962-b521-4db7-9b78-2dee53c459d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9af1715-0f51-4ae2-b4c3-05697fbea3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6aced9-728f-44b4-b446-f8d851bca641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ae932b-a9ce-4646-99c3-c159df606a6b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b45cbae-d141-475b-bc00-7d3338b8cad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0d4c03-a5ab-4062-8bdc-3acd4d86b00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd77f6b-8ea2-46ec-967f-904ed805e7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e94f5603-3b95-4c56-b93d-9cc06f3ff171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a95be52-e976-42c8-ac3b-116a1a412293",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4426861-d7bb-47a8-97f3-058d4671d9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1e0990-3435-4afc-bd16-1e5ebb822e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fe428d-5c52-4d98-bcae-55a266fb648f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b945b06d-8189-442d-ad85-556628a60040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d02e4c-04c4-4d60-b751-cba55587fd46",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49d2615-be4b-4db5-840f-9e29ee2d819e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfa8fcb-fc82-40cc-a28f-b37ddd208ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c58a47-fe0e-42d2-b822-848480f3139e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f66227f-ad11-438b-a6dd-ab18aca11253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924a29b8-9f01-487d-810d-aa569c0670f3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1f5178-1343-42f4-8929-82db18a4daa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d3ce1a-b80b-4374-9b59-a7bf04437bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487cb747-8f6b-4831-9301-9be92eabf04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8c5946-e3c8-4df0-91e5-b04b4c9ccc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55d88cd-7f77-48ef-974f-d90eb2d3fc3f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c1349d-e794-4848-9828-f7564f7bbcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83fa274f-9750-4a05-a0aa-83e4cd112221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddad9a3c-9dfd-41e2-b0d4-45002654d672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "387bc5b9-7e4a-42de-8aa2-992228c354a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b749c1-dd5c-47e5-a935-2b6a8a990520",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cab094a-8147-4bd0-869a-6b4f60ec72ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e86ddb-851a-4058-9dd7-4c6e78d1019a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775e9a96-78bd-4433-baf2-f9d599fb15d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "693ea968-da11-4ea6-aa83-c856a7e01a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f75a1b-a873-4cfc-88f6-154dfcca39cd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a75be47-e60d-42db-8070-bbdd92dd87c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96989940-0c7d-4497-9d97-31e0675bcf7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ad4629-e786-43a4-adf1-ee34018d16d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d413e4b-181b-4f3b-b9df-ad1b30f9b06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1924abe4-7c01-4f06-92fb-28d72ff62df3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a1b805-50a4-4f27-84d1-33be3a8c85c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68a7f0a-2bbc-4127-9d9e-892746cfabb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0865551c-7b1c-49d3-afc1-7ef5d5048806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "33453986-d8aa-4d44-8b9b-e81210d9bfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152757da-e33b-4c41-ad1f-40831a37bf5e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bf2b72-a891-4e6d-9eee-130d28fc491c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b6e72d-f767-4b9b-b8b9-02e68c546cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5a7c40-366a-40dd-9bb0-dc0f357acbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "72f3008d-0c7f-4df9-854e-a0030c2e98ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521b1b43-0c84-4568-9f1c-a7d8e239241e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3586a2e-751d-4477-a005-fe92836d6d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bce7ab1-4dcd-43f4-b19e-12823eabb461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a733507-1c6a-4b97-8daf-d8f64e3a37a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "40c03445-ce37-4fae-a24a-57a47382427b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89ab15c-6e79-4ac0-965b-ba8bf1053c2e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174fa635-bc14-4e04-a93e-83d098c7c3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e83c120-9885-4657-a5fd-1567df692448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0ec481-77c4-4230-986a-250ced5d270f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1512d4-dae9-4e47-bf39-3148dd96f3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe90737-f2fa-46bc-abe7-470e5c671fa0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa97b628-92e1-465b-a787-dcdfe5011481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a2a8fd-ffb4-4d77-95c9-a61d44cce01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfebbad-8801-4e92-8a00-dd073b3551d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2f682a-3479-4f29-aadc-1c86b86d6bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c94da80-cb23-4f85-a0fa-bfa5c22148c1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba2fa7d-7adf-4409-9667-bc91016d634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4b30b0-1c41-4172-8a4a-0b78f8072a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc0570e-7564-40d3-8b54-1e4bc2162a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "765c255a-706b-420a-b34e-27a447db5b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200b7ec5-70c7-4697-ba81-a22237eab5a2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650fdff7-eb3f-419d-bffc-438de39b18a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d0b5de-0b03-485c-b6a5-fbbf2578aece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8249da-c1f9-496b-a2ce-63050441fd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfe1df2-dd7d-435b-ad0a-2dc9d77e01b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6ef647-d6db-405b-a8fc-b26cda2c2f79",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5d4928-8095-44cc-8585-b4301f661c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfe535b-b73c-4704-a470-5259b1afa390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ec9a84-9709-41ea-b818-73cbc5e6d96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c31353d7-1940-4756-82d6-02b077044c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa031c0e-a29f-428f-8e8d-3b6a3290b3f8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2808db35-d588-4aaa-9ab2-4b5454c2b13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd60bcf-fa3b-47b5-87c2-d5b7cc038c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3952906-f390-4434-b83c-535296f7f916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e79c9cb7-45cc-4f63-bac3-fd153706ab08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab7d7c2-de87-46db-8c16-6051df14a049",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9a2175-4f2a-46e7-b8e9-8bbb89682edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9550bb-692e-429c-b49b-904cce71c692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d7affd-4031-47a9-8451-30d98a0b74a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4e2245-bcc1-4f09-8164-7eb3ad912be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a489d9-d84f-4d45-9ba6-f8ad3500c53a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9c3311-d6be-4841-a949-da934f71d0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d9ccc7-f734-4b9a-8a7d-b7cfbd2ee59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e458fc-9340-401d-8188-7c1799e2d0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8524f11-b8d8-4025-bd21-c296c5ca60d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54de3e85-0616-4b56-a5eb-6beb39ca10bf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d06021-b284-4ee1-b3ca-3f327bf62c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44242d1e-605b-409f-8ed8-61a864861d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2bd1d4-b370-4c44-a091-3805cebc3c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be8339ed-efff-4c97-977d-307cf1582aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b078f5-765d-42bd-bcfa-aee1d19235ed",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b5218a-3935-4767-9046-c082468dd9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8d52d2-6b7d-44ac-97e5-c899d694c78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22dcd52-de5d-45ed-9e81-44637e09f6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7e48dc-7207-43c3-a418-2bbea6327d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aced6cfa-2df1-4af6-83d8-33e7674cd20d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec17c36-5a5f-4367-8477-3efa70be9f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9725bca-81fd-4ae8-8cb3-4c4de0087540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a698bbba-ff74-49aa-9616-1c29abbac2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26870062-e264-4ad0-be9f-9415d8d2a67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b66be0-ddb8-4af7-90b5-3e43e9b29fb1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a634e34b-af9b-464a-8f86-516d12f29adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e703cd5e-db5f-42e2-95d7-aada3537850a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de243093-efc2-46b0-81ce-935473ec4395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da064f3-049d-4a5b-9013-3420c57f7c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115d9860-0a6e-4e57-96e5-351fb86bb70c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add4bead-f5e4-49cc-b010-02f4d3a0e67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214c9442-d675-4b57-8397-78d084b8fd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6afcc7-a7b8-4238-91c4-1e64295a3751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea822925-9a16-4ecc-b861-9e4bda86d279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f732824-ee5f-439c-83cb-26dee7944a90",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5052c003-6665-4fd6-a4a4-cdaee2c51e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83581fe-f13a-4572-825f-ca1e3b87f304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c529d2-34fc-46eb-82d3-510e8af99938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e223377-80b4-448c-9311-09d899dae6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20aa01c-b4c5-4bb5-bade-88482c162688",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c37abc0-d8ae-4e8d-ac74-76525ce1d9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8a9d12-caa1-4532-beae-3b750938d4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a9ebfd-1dd3-476a-a38e-ac67f3d08b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "db0e3fa3-299e-4e97-ac25-4f1b90d3420d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b304e1a-5b96-4bea-9d19-d7f0cc5ff7aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97c1d37-ea27-43a0-a8aa-8299d6d260f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc61a60-0a83-4bef-9b36-b0bfa73143e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d271ee-a88f-4ebc-923e-fe53a54731a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2b2936-7478-4c39-95d6-a78316e1211d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406b3cfc-3aef-4e28-a14c-ed1dcef25c90",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7681830-7257-4deb-8bc8-ca0580fce4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9b5129-cfec-4d32-a9cb-56c15b97e1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dce915-ed47-4694-8df1-05fcf4fcfa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a95902-c6e0-48a9-b80b-113fb1ec2c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b0dcb8-ab61-416b-a201-89b4f60b6854",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b07a777-d723-41f3-8cc2-5f9990112ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eabdb5b-f0d6-4f65-aaa6-3f578421a8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45a2c80-e956-4fc7-ad6f-106cd86b0e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5c349d-d89b-4e5c-84b8-1258bae19416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3488ba3b-6517-4648-ae94-571ff4151e07",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee865d94-a75c-4b7e-ae74-452fa387749a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d58c977-8386-4182-ae82-7d2a0cde2319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a40cf6e-0c5e-4c28-b9fb-52feceb5a796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ec069e-26cd-4952-99c3-a6827dc86d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47be847-967d-4256-b932-4a88f1e3698f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2035f558-25d9-4333-ada0-ef32e29aa12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ccf5ec-f073-40d0-b368-27c21b21575b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaa12c7-c60a-448a-93c5-dfdb1c34d5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "813b641a-47df-4da7-8774-9d779138885a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344b879f-7041-4a00-ba2c-f98a9170ed8e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635a8bcf-18a8-44d1-a858-9255f4c05c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87976901-5af0-4a29-b210-c8ee64b6dc6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567b2b58-b09e-461c-aa2b-67b01850c522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "14b85953-17fb-406a-a152-fdf195540674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4516a98c-76e4-4a82-9fd0-84337093d44c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c8f191-38de-44b4-9a94-2c742f69e40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694c2808-8485-42b0-83a5-478e9838ab14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeaf5a0-02f0-479f-96de-7eddf96d01fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9c645f-0d05-4e3e-8b23-e66f67f0176d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15062bc1-a29a-4f4e-8771-95794e95dd73",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f845548-38df-4413-92a4-26ab58cbd73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394c87f1-5e2d-41da-9b6d-9c9f1d864472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8470d5f8-8428-4c81-a182-474a33a7de7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbc2d97-5b7f-46e5-a35b-5d4b04a2da6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb944d2c-c04a-450c-a110-8479be52c350",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f8e9ef-662c-4dfd-86dd-8fa904ce3c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8292feb0-1fe8-49ca-9e6d-dc940e8e7158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd26c6f-b7ab-4839-a362-4047f618ee0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07ca9a10-7d4e-44f5-8b83-3afa5d4c0753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4f3265-f5f1-4479-ba99-acf298d18bac",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54d5e13-67e4-469c-8585-d9a818886896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2190f0b-762a-4b0f-b2b4-862e8fe6eafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadc76f9-a4c2-46fd-91b4-c547d33c2484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c613196d-b9ea-4e0e-8a50-6ee4436d0bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da296055-cd91-4e73-a494-88df01b16a0b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb3dceb-74a5-4f35-9f3c-ef4b2df05936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d358c9-a38b-4225-b72f-125dadcbb558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b76d01a-59b7-4fda-a6f0-6d78d84678a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7529d6dd-c062-4447-ac27-1c65e058f8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e87573-ec22-4f07-a0fc-16e6cbb59603",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60ab92f-3eed-4991-96f7-a1cd12a269d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0e9368-480d-405d-a747-6a2c568268e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c66cba-1d80-4d94-a117-81db1fe33e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "42495990-b35d-44e4-afdd-9941796a41f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd49182-dac1-4c3d-b68f-4fe6b5ef7d1f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b30be3-c9cb-4e7d-8eed-db384fcb3bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f63c24-9fc5-4bad-a2dc-1852b326e8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b191a0d-5d31-440b-b9e5-820a08e8eb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "39dd444b-8428-48b1-ba2d-0a4325f8ae15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4692bbb1-5115-4e9f-b245-578ddb869ffd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb1707b-e3c1-4bff-96a7-00e12e7799d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d2f59c-2639-4598-acbf-23ef9ce31176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46455f4a-a0c3-4265-9278-31541ee63885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab8eb39-aaf1-4447-830c-1972f00250e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3579c3bf-63b6-4cdc-947b-a2639d9994ff",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099d9897-31ec-43ca-abb9-07c8fb38d965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9afe9e-36fe-4ae9-8ffa-7f35ca32c31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fbaa4d-786d-4228-a388-b5fa5d862ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe0b593-5f28-458e-8819-da48341320c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c814403-52dd-4ee9-af55-4d8cef1377f3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c851cb1-9afd-4bbb-9abf-6d86a5d20f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76596e0-58e0-4a55-8f99-bb2fbdc24179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05602f20-d0ac-439d-8fa5-314e3ddfb922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46f0ba3b-6fb8-451b-abf3-e3335f4d220f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ca9aa7-bd50-447b-b29d-e3fc63c0c650",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b402c421-26ae-478b-b4cd-72787f308ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf962101-6871-4163-82f4-e69a1a7647f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6f6288-78be-4a3c-951f-cc37b0e90442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e28efc-0bd6-461a-9efa-26d78299e5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268da593-ef6d-4cef-9b07-689c7969e0ef",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b51b06-eb09-4ea1-ad16-19425c54025c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9392d6bb-9478-4ae8-9539-581c47b49c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1024d9c5-0e6a-4ac8-a0d6-61501dd292db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "783c9a69-06f9-4ad7-b871-0c5307212805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff2e50e-d28b-42ba-9f48-2fd08e652377",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ddcdb1-c0c8-4ffd-a34c-bcabe61df498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fee66a-6e55-4e48-b157-9bed216e4857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87a912f-72f4-48a3-b78b-79beda9d47e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c422d51a-318b-4c76-8a4b-c9fa25ce51bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4dc93e1-c500-4bce-b01f-74ac3b54ce03",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942b7512-11a0-47ad-9627-ed243442fde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7500472-24b0-4949-bb3f-aecb634b62f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae325e5-3abb-49d5-8348-c21092bf6f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6783e204-4b2b-46c5-baa0-acd93e9e424b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2948a3bd-d911-40e3-82ff-13742a492165",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb17fb2c-0f25-41bc-a935-794fa89f0a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b28fd6-82ae-4c7d-95c7-8e574c761fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da14e55a-0038-469d-b0ba-cf3f7081bcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3af5fcef-e57d-4a3a-bc9d-b2a3129b0197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec667a52-6c81-4e4d-bb3c-5fd2487a20f0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adce81c-4328-4c55-a164-4b9f9b24fe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048ed5c4-330b-4b3b-8ab4-d23bb20f62af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcde0a03-5d84-4771-ab09-91e2d9db13c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fda1ddf-5417-4f7d-a8b4-319e652ea23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f0cbd8-8d0a-4b46-a4ed-347952990427",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5aec74-9758-4a80-8fd2-55334fb0fe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7508fe-db3f-4c0e-9874-064349269d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aba52fb-474c-41cd-b679-2a31153c3158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c85e81b1-5e66-4155-9257-b439ee5e0a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eca93f9-2359-4f79-b367-5c0c57124394",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff927c7-b64e-4c12-91e7-c5b53b33cc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0005a30-007b-4293-86ef-2066552ff70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77402c1e-cdea-4396-b472-ea77cbdeaf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f65f3508-da96-45ae-b98e-8ba18cf097b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489d245d-a88f-4a0c-b368-56a4f539b0f1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fce556-ab02-4555-85c5-15766b4b394e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c563f5b-3b53-4b06-a28f-fd935bb5fecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2b7513-b8d2-473b-8e63-2e292506eedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a636224-27a1-4be7-be36-777d91926ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbe5409-d826-45f2-852a-8ff768b39308",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bae02a-ae0b-4bfd-8fd4-4f727a6213ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695a6058-79ae-41a6-a89a-912860dcc910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e60a07-2a54-48e9-9202-5237368f76e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10521b0b-57e6-4d54-92c7-5514ea5e6c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aa5f84-4732-42e5-a255-6761b061960b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb482c5-9e74-47d4-a5e1-248e14522f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091c51a1-07ae-4957-aab8-eb4ccf8d9a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598133af-c300-40ff-be33-a7a157956600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "456b0627-90ce-4ac9-914a-36025dee2d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccb7e90-3aac-410b-a1c8-de47d21481af",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1a72c4-8392-4c22-b04a-efc0cbe99da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7362b20a-f10e-49dc-af7a-1cdef99ff432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c100504b-baf7-499a-8520-73aeb1dd8f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3234752b-e985-450b-87f3-26419c50c7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4de880f-89bc-4380-a3d8-c4a13ac2eded",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af539884-102c-4aa4-9c7e-0e30547000a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819d95ef-44dd-4306-86da-838c76d6ce39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734a4d01-bf1d-4620-aa07-bac1bf229a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1afb9e-c688-4b0d-9305-23ba27786719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56bd926-ab42-4e28-af37-5a5722ffbf66",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433c3255-b2ed-4fc0-b4fd-06071102fef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbee03e-c07a-4b6c-93a5-8a60d1bd21b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5ae8c7-28a1-4a01-82c4-94fc80f894bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a21cb3-5dcc-4545-b0a6-08dd607a2893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9523d6-35b1-40cc-bf80-559fd7c9d8de",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b601201a-4ff4-4f66-a852-dbb3ab898194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f77b70-a338-41e9-a7e6-ab9a59795123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98d3b5f-3b58-4a60-bab6-da499a50e8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "971e3cb1-c4bf-45a3-a262-c7068dee3cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176631e9-af81-4eaa-b154-b9817dd2bad7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9840a25f-75cb-4f2e-b507-471338ccc3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afaf63ca-ea0a-4c45-a2fc-6d7a7043a623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13f1ba5-ace9-4197-8fb4-a8e3a6992402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50206d26-4869-49a6-b4c9-cb673176ad87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7660e0bd-0260-465a-bec1-43624236ec02",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa17622e-f7c0-414c-96e6-64415bf19ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4d23c1-001b-43d8-96af-5ae2e56dbf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d734b2d-850d-44ee-b668-379db5883357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "47106552-eba7-4a15-accb-c3f5500aac04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8573957-7961-45e0-878f-f56416a19399",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a02d840-709b-4be6-91c2-07a2173a09bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf4b603-4237-4a24-94a3-f5abf3794579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584cd468-12b6-465b-bdf6-c272cc33eeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed30b90-3244-441c-9c9b-64cb3449ae26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56634c9-365b-44f1-a212-9b242bfbc601",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf9da4e-b615-40a7-986d-7cc2abd34855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15d5616-7069-4b28-9b2b-892a2b1fcdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b3cccb-8e83-4186-9f3c-328d347b4e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "458753b5-a0a6-4e41-b51c-7c15047019eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1788521f-04c5-42c3-a19f-4b10df8a2b24",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059bb476-4e02-4eab-b28b-90882d5d29ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5e8e72d0-e2cf-45f2-8481-10f5c9da72e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14058d62-141c-42db-ad98-03bd7dac1f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8911160f-39c7-49b4-a7db-cd4488fa5357"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "06a795b2-0f55-4b0e-a861-f8620c2e1874",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa783d39-7946-45be-a607-88ec5802758c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8053a78-8145-4cb3-a396-38534ccb8624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9872220-6307-401e-a445-0249129aa5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17f1ab7-b347-44ed-a104-b23f0d4efc91",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d172460-6f5a-4ede-a248-55f0b0a1411d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca30753a-3cdd-4505-9445-e637c744e6be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "214a43a9-9d7f-41f4-9692-30cbfd883d24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f83f3f85-0a72-4e57-a66c-7762479fd81c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14d19219-16c4-4e28-a2b3-63898c06266c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "32fa1841-9b13-49d6-a774-b8687a09cd98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0514f135-2131-46e1-9e79-9f307e14f2f2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "adf06a79-89da-499a-be06-66cbdd8905b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35fadf65-8190-4d2e-87fb-3d8d0468656c"
                }
              }
            ]
          },
          {
            "id": "9ea184c4-1b35-4bf3-b7c4-394506b8e7ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e31d5896-57e6-426c-97c7-e634bf77dd3d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "258eeef4-456c-4b9c-af3e-6ea21a45b1ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c65b29be-858b-47d1-9ded-94dd6e6244e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "355540d2-1b10-4550-8b5d-297f88c99314",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6a1f556-2ad7-41cc-9210-3f37f6686b8e"
                    }
                  }
                ]
              },
              {
                "id": "1aaeb2c0-f67c-4dcc-8ec7-21fab225c5e9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6561214-113a-44e5-bbaf-ecd57c7bfa55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e4829d0-3827-4157-bd9c-1002cf0c8fed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f281826d-f7cf-460d-835b-967ef7c7e2b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80e4ab09-3788-4d24-b918-e67ebd2346cb"
                    }
                  }
                ]
              },
              {
                "id": "b0daa8a8-7245-4718-ad0b-7996b900bcd1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0a738fc-0011-4877-8efa-44c314f5550e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf103281-e7ea-4285-88bb-d501b5473925"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c183d794-bb71-4333-91b9-5ff5cceb1dc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e3991f4-38d7-4930-92c7-f8085b98ad86"
                    }
                  }
                ]
              },
              {
                "id": "c9292d20-07aa-46fb-a31b-380afa3cd878",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ab0fae3-ff5a-4d70-8f08-fe94f96de54b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3adce449-3f82-4b01-bb04-21628612509e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65198bd3-48c9-4ebc-beb1-8b106aeb796e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7f81f902-72bd-4387-be15-8be0ef977755"
                    }
                  }
                ]
              },
              {
                "id": "821e68cc-3886-4892-a8c3-77d4e7a67b77",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b85ed1d-f1b7-4683-a7c1-ba16c1a50344",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70e26ec3-2259-446c-9d66-46d1665a11e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81a6e099-8a60-4c0f-9746-274045c4396e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6589bd0b-b189-4a66-b2a3-db7bf007e050"
                    }
                  }
                ]
              },
              {
                "id": "b45a5a11-0be2-4fcb-bff3-384c3f513b57",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff58f738-ad5b-4f13-b8e0-e2442c00bf20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "010c02e9-2f85-4f73-83b6-967433fd5d7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7be0d38e-9a31-43ee-a421-e84746cb7f87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f2da6cd-d5b7-48f5-a992-0f09cc663fd6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd33fa59-ffb7-4557-ae84-7529b6caff36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6a3c037-b3d1-4611-b611-0ead0381a758"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f3d0d87e-3c8b-4e97-8fd3-327a74731eed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9609fe3d-d23d-49ce-b7c9-2f6ff6cc02e9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81a12598-33d5-4051-b8a2-1925d6fdb11f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e84858b1-fea6-4677-9b3e-3756902cc91d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e569a79d-56d8-4017-877d-e51a03355842",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d01f4e8a-bf8d-447e-b3b5-bfe5426e5088"
            }
          }
        ]
      },
      {
        "id": "dd373e86-4723-41a5-953a-b4d9af86a1ba",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c00fcf07-3cd8-454f-8183-ae08db95fa5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e28e80ee-a831-431c-a467-3b4bf5b0343a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "731cf25b-225c-4548-a2d4-ea92791829f5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f487e49e-e559-414d-b078-c8e5447b2fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a3136f-687d-4df7-9699-6b90b28bbac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251fb686-f710-4252-9d4c-617597214620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "afc6a953-f3c1-4ad1-a1f3-a8c61f4e1d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb0611f-8d43-4779-bda1-bbf148d92dee",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2e5e98-9986-4079-a394-8af84a44f094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70f9f22-fd86-4bfb-b0ec-b02aa6867fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bed2f2-e754-4c86-b5f8-a28809e5078c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3fcf3e-2b35-4109-a8b4-a25058f58db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546edb9b-ce0a-47f8-a6aa-80704cd08a23",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff319ef-7024-431c-8772-9ad08232b74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef03b10-d639-49e4-bfab-dca0ff4873d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a952cb-dcc2-40eb-ae9c-c3f6a106d12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d81e58-4cda-437e-add3-7fbbe78b2ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66825080-0d11-4021-9f95-4af8fafae89a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596244dc-832f-4d99-b346-ae49aeb38ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbae61b7-50cd-49a8-ab60-692d61d3f3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b26421f-1433-44bf-b8ac-a51beb19f6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad06a84-dfd0-442d-af3b-0ae7ddebb61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64f02c3-0701-4701-b250-4517ba297df4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc89a7fd-a217-47f6-b360-6533023d225c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee642ee-01b4-4815-8a94-03c79b15669f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44db87ed-2b49-4911-850e-86931992b9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a79f8c5-3ddd-4fca-b253-f2337e5b0c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b42c9fe-005e-4a1d-90fa-d0d6c366090b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3212bac-cf2d-49e5-9ec7-d227f6c52ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225fc0d3-08a5-4d70-9b6a-3e8b75965187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984a3bb9-0b61-487e-ba47-a0c7debc657c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4296045c-e5ee-4b4b-8c95-39295ebe888e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b742b8c-267f-4372-80c7-ac257be0bc34",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49943327-322a-45b4-843d-b6bbc2c5b2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b17b4d1-05ce-40bf-865e-1c464dff4311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a42055-2491-47c5-982b-3831d8f10d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "70551372-8543-4daa-bf9a-f5411fb58485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2742efaf-66fc-430c-8e59-327e81e913b0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78df67d7-9dca-4c1d-ad09-31a2d9db0163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba771c77-48f6-41c8-b7b0-d0c483c4cd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6a9878-f9a3-4270-9cbb-7c51258b58d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99b9462f-01d6-41da-b50d-a81d47273fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec94757e-fa65-4dd0-a836-3c7125a703fa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570d79c5-1d10-4a65-a301-a1d7e1418d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f258d736-c784-47c8-a93f-c47cb9170531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1999d410-a5d9-4601-8cc9-bbb893be9ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "022195fa-4195-4817-8a19-b0e767933b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635b2a59-5934-4c2c-a8b8-5f55a57d4b8b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe47a57-dfe2-4d26-8cfe-14eee40f6307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbc3cdd-b4aa-4c77-9750-a1a8df164a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a296be-2be2-4a85-94c4-86e464cfe20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b04984-4327-441d-8ed9-849c96a975a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b8a078-8999-47a2-a9ff-fdd46b499acb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dc88ff-f86a-4e26-ba89-1eea4aba3e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a32b92e-9520-4614-909b-13585baba883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65ac8ef-2413-40fb-a8cb-6f21479f4517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "16227af8-ec5a-458c-b519-f293d2dbdf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8930cbc-34c3-4e6a-903d-de1e3c187055",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782fc802-7fbf-45f2-a49f-2cf46ce3199b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed702f6-43e3-4582-970b-cdafda82b1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c348410e-d9bc-447f-a5ef-02c709009d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f08383dc-23b8-4d2b-a2c3-f840e562d354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2767fc91-49ee-4fde-ab22-954d5514753b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf43d11-c087-4524-bbc5-e51b218f17a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f48a56-f5df-4251-a753-d08ff1ac32e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca56eb8-72b3-47f7-af21-955aa959c87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4484cfb-d279-4014-b22e-d08a078b6cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe954f0-e444-4f51-8881-0bc59283b7d6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bb9209-e546-4846-8ab5-02796c77fda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d5dc24-3c6b-4351-ab64-a2dad77f9c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5399cf6-b009-4a7d-a076-b7ca0b19ffc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3108ed5-e778-4ea2-9bdd-46e67d0a7946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac80233-1bfd-47d7-9308-5ee67d00aadb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db998632-1e33-48d5-a553-000e1bc2a469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebba121c-665d-4521-8357-84fa9de7aabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500db0c2-6b52-48e6-9152-40272fc12aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b955ed8-cff4-460d-a747-94e6f552db5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e045d46a-08dc-446d-bca7-0b4433569bed",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff31ed4-ff65-4bd2-a8c9-8441a08f232e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb601d5-730d-4be6-85ee-33d49fae4bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa41e04-d760-4fc9-b609-b5c80a19393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc3bd45-b862-471f-b3b3-c282b316fecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac1c94f-34c7-45d0-8a8b-ab38cab6c82e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b196f7-7288-49ce-9267-944d2d6842d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4245af25-a710-46c4-a41a-c8175770cc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa397a7-37e2-46ff-beb0-6f63b59a7491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b46123-6c2a-47e5-9532-3a3848c36234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216f6a9d-6171-49e3-9e41-4e826f5cb055",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cf7949-7a03-4529-ac2c-fc34ee868035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec869be-4ec1-41a3-867c-9b860fd7941c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe522fef-b011-4f75-9285-970986e27471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "667cc380-5427-47ee-b639-7b3c7e9fec85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dba02b1-6491-4b74-ac01-67448119ba28",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bb4a25-b332-45d4-9bbd-2cf4d8645453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3e9693-0c85-4ddf-8517-d50f1021381b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843068ef-2d12-43d1-982d-4f0300eeee50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "152022cc-5a0f-4e60-bc57-f7161da2f150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fae3030-f3e0-4e07-bb72-f443a58234ec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a0068d-7d15-466d-8292-11c8bf77f008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d441acb2-d588-4481-ad75-532e212771aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1847359d-88e3-4094-b24a-1828c1622729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc37abfa-d4cf-4aea-9ec7-0da3d2ffd4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a308def-2d68-4b77-a2b5-ba10a3d0a085",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4e6b85-71b8-43ef-bb18-e1153efe51e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2619ea3-5be3-40da-8650-d3ff6b371ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bd2d4a-85ce-4061-9184-f4f4b17c93af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "543b545f-d1ce-4bfa-bf4e-6716cb178a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f2bab1-ed5d-4323-80ef-aa0debf58022",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f6a0d5-9e47-47f9-9b9a-d549f84fce45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2012d36b-8275-416b-b070-d53f22ef5bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a261656-fc15-41e3-9a2f-56957f05b9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27fe9fe9-e3b1-47dd-a26d-429b3f0b37f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54719b1-743a-46aa-8247-d0f282c48630",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf781750-e033-449a-bb12-9636744228d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe84182e-af04-47f3-abed-a15e1de026f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c077a83f-1f9b-4ef2-b571-e5d52f067b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "053bb03c-54ed-48b1-b674-68b3caf4f1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ad27c2-1404-4e95-b0fd-d7852a684dca",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9343f422-26cf-4795-a004-ffd9b177fed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491a367a-926e-4732-b555-6bb203c1bacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2284403-fdb0-4269-b3c1-1497115db783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1523e0a3-d2a3-405e-a83e-1b52e57d3dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3764062a-cbda-4ca3-beb7-a0bea69e28a6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c15395-3510-4901-b1cc-9f25e12e8003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c2cd79-6eca-422c-9420-8078731bd302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621f658e-000f-47d9-8c43-db26d00febb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4306973f-e5c2-45a6-a4d3-fc2081aacdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0383b977-815c-41e8-ae17-062f4fc83626",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16555815-c0ed-4e79-8ad6-2fa19fedf1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1457d28-e9a8-4f64-b9fb-2e4239e1ae2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1a9e90-c6bf-437c-95ce-ff20a6319898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f9b369-3eef-4873-b07a-378a5b4df5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea30835-e66f-4515-8b33-813da909677e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc8fec5-7cdc-4694-ac00-13a4f41a6fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2ec160-70f4-43c5-94db-5799e3bb5bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587ec84e-4b7d-45e0-9015-36c1a6a32690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f60c8e-584c-4ce8-a2c2-9e8bb435fd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda36b8c-6bfb-43a6-a558-c68f67dde609",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b031607b-a948-43f2-92f7-65db441f4dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c0c6a7-0a18-4b04-893c-cb792bac7522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b646beac-de27-495f-ac94-044829a00312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ad4a6e-3abc-4411-b7b9-425d7e38a9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cedde7f-8b07-4420-af1b-7f485eb24c3a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a687a4-2704-4558-9d07-ad4879eedfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977d9257-8ac8-4898-8029-812b33965cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62efbbf-6537-40ee-9cd2-632c9afa7f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d814e4d-6a85-4659-b804-e2ac56539526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d25cc3-c451-4a00-9ff2-c8f7b190c83b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ffbb34-43aa-4365-9ecb-76bb7771c69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f93002-0acb-4208-ad31-c0c990d67a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e187757-7299-4d6d-b7ec-9aaf0dcd8d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc8b2be-e65e-4c7f-8bc8-6823f6e48e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271c73c5-ede9-4aca-af57-f5651a7cadbe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2773a248-c8b6-408e-8f45-0f0f5c6e75e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8143d097-871c-4797-8cc2-60b7c2083598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035d9622-47a1-42c3-8ac2-dc17200c2a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ff5579-e984-4fc3-b1e7-7187a04441e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d9541a-6321-4ef2-a328-8a7ab7fd9e04",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d788bdf0-0efd-4e6d-8d97-6710cbbf970e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d01d52-79d6-4cdb-897f-d926bbc8ecd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306e263a-211a-4d86-bfe1-82b31987c66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6819b4c9-eed8-40ad-b9f2-cf9b900823be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1dcf129-fb36-4a1b-b052-57ebe26f8009",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e29f63ca-d3a5-439d-933e-9cd58d69060f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b9c183-947f-445f-a9af-40a29e2b5c46",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0f632d67-bbdc-4001-bb7a-ede11ab070ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7302d416-0312-4637-9b01-2b2dcce1db38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68fb11db-8747-4c85-a206-85b8038b5c7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d302d551-1e48-4d07-8b96-c288560f11fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "134be2ba-8f9c-4090-9069-f29b92f4bc29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bace86ff-491c-40d0-90db-1e30f2e1f586",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a68e942b-502c-4559-8b18-cdaf81bc2d62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf7f062b-4013-4542-8f2b-7404c611493f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9706c1f-f555-4adf-bc3a-01aee1e9ea9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b792ccd-f60f-46c8-9352-5b39f4d718c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "607b4871-d2e8-4c43-9428-fdc07cd3a4fa"
            }
          }
        ]
      },
      {
        "id": "74309e38-1917-416e-912c-881d5c47d46e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ed7faf2e-5a0f-4be2-b042-418a8d499e68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93788478-ade1-4ff2-b432-9adba923049a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7e5ca64-d24b-4a78-bf8f-2d275906b343",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4213e1-5ab6-4a29-bd98-c85f4a13a729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cdb06b-273d-4d48-8e8f-a718ab5472fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01e89c1-2bb3-4493-b8ee-bbb319bad401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb86f55-d1cd-486b-9d6b-48cf2acb10e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377ce7da-e3a2-4492-888e-51faa269f7ac",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda99a7a-e525-4317-bebe-6ac20695525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9175d32-035c-4cd5-af15-9bcb2c7342e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72111566-44c5-4813-8cca-f2548a640104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "376b286c-6c6b-4037-867e-f1379f4cffe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e125676-1a6e-4a17-9aef-a2f469430b66",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fdc625-d843-44e1-9bd4-b98af86f0cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c436d832-fad0-44b1-b140-4a17d943308d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36f7328-e9fd-46c4-b3d9-4450bc6d789c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "919806ee-a7e1-4864-b676-af27df2c4b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66daeeb8-e903-40d8-ba78-fe0a7aebeef0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c377d8df-96dc-4389-92d1-5b746c630261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c604ae5-f0f6-451f-a3eb-a107291565fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35493e89-da71-44c1-ae4f-e4eecf81669c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b51fd38-ea3f-4268-9e3b-ec2f72e4dbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d5b2fd-c35c-4f35-bc54-36fb13c62b09",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d46fa2-cf8c-4f95-a0cc-58b05254cb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50999587-1226-4a8d-9e21-695e05af3030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad67f81a-82ce-40e8-b876-c6464190f08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0786ea12-31be-4196-8aa5-8cf51887bfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4c70ff-41ef-4d8b-b352-229e52c64745",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227635de-2e60-48fd-a31c-64fef7721bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a96fbf3-91d4-4dde-8dd7-9d932106bbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49aee57-5c55-499c-9ad3-abf384307b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a270e1-ea84-45cb-9519-4e4bb279847e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab761084-3da8-4b69-a4d9-8d9e4a19adb2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16290367-d8c6-4d40-94ed-676baf333cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8d5b33-b65c-426e-bad8-d2c3c59ffb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec00d8d-adb1-436b-9c69-62c8a2910798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a9471b-96ee-471c-b01a-9eb7a850fff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e1c4d1-e982-409b-b901-d1cf4202e3e9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97e07c7-4468-46de-b42a-7278bf3e6275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fdf26e-295b-4a46-bc54-94ad2ddb9983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afd3bf7-1738-4a44-97e6-8ecf5cfd3688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e96e550-85de-4b66-b73d-1c250505a9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6102f5df-4ff9-4a09-a01f-6e80eb914d5e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c425ab-2777-4094-a5b4-7dee0f739f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c91c24-b05c-43d1-9215-3862d569f535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5379860c-c8fd-4bd5-9701-1f4071966d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80fa006c-734e-47a0-a477-97a851f81a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a3d33f-aaa4-4da1-a3cc-8b663e993b1e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e408dff0-b3df-492d-9dbb-ef0f619fcbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3eaa90d-4458-4a8a-be8e-00aae781d051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c62c7d9-35e3-408e-9f1a-f73b45dab577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2834ad9-56e5-4eb0-99ee-dac50d580b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cce588-ef73-4121-ab95-3cf0aa0bba3e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da7c05c-cacf-42b9-a8ff-0ca3961349db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225514ff-815b-4f14-9fe8-bcb02e8a1cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d3144b-5d52-424e-a5bf-990671281f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bfacfc11-eaec-4ba0-bfde-01b0f107e7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85382c93-b562-4df5-8207-2c4b55c2a346",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d40391-1019-4569-bf3a-32e98c843196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9762561a-f951-4e9a-bdde-eaf34a22e4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730c5b23-d349-4a82-b812-76a7482fca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db021719-925d-4a50-8dea-ff51fa976fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33436ba0-dc71-4b9e-a63e-5ff3c8d5b041",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efefebf9-e863-4dc3-a668-2ce257589307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb70fd9c-6410-4e49-b155-f165ebe3d50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78105258-026c-44d8-b1b4-96fb82e98f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cc3163-8936-45d4-814a-32001fa12cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efabdba-1558-4681-949c-1246eeb6508a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95efff3-9fdb-4777-a073-9bf2f6ac734b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edae789f-46c7-4030-abd3-ad68b4cb6169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbeabc99-2d1d-4505-b4b2-fc20bf501453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bad2f4-c083-40d3-b2cd-1fa00b7fb126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c272d17-6b35-4811-bfab-564164f0a522",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a492f6b-8743-44fd-b55a-916ab5d6d7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529452c9-2d4a-40b9-b837-af297386ea3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e45be9-6ea7-4a37-a8cb-70dbb822659e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2f3074-162f-480f-8ff0-475380f58f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616a2d81-598e-47b9-86e0-0510a328a597",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba91afb-04ae-4808-b31b-033c1e3fc636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea64faf7-e6e3-41e0-ad26-345a0e108904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7a3fb4-2181-43ff-828f-616d6cd71f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdfc341-257a-4a13-9235-14feeba35de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220bc4bc-2db9-45e0-8966-136e563524b0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab66789a-cdd1-42bb-95e9-36d20f227e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5a1ec7-7d0a-4b51-a81d-4c156d862d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208e8bb8-07f7-4b7c-875f-f3a31f523b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d94fd78-6776-45a6-9e4d-0d102b151e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fd0d37-90fe-4f36-8726-09614b55d06f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28142adf-7a9b-40c6-a2a5-e78d2901bd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466df7cc-7404-49aa-8ba6-cc489b0311f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe95ff1-0784-4ae2-bec6-ed93ea530a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b430499c-17cb-49b5-9e35-058bccc07201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2fddd0-dd3e-4dd0-b716-995a821877de",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2778b7a9-834a-45ef-aeac-0788dc7e7ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc06484e-bf4d-428f-a560-2f27711dc33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80c581e-ea56-4ca1-af21-d31d16f72421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "637ecc0a-6332-47b6-bef6-d4a36093a756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf9cb79-2480-4767-8e4d-665f21bc357d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c6f01f-abc7-48e8-843b-ae6d66cec09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665b6bb0-d7dd-49eb-a4f6-b591a60289a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f26be3-93f1-4837-9990-fc9dc670d3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1364be-f034-4e4c-bcd3-9f786caacf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3b1f9f-aa9e-4371-81e6-2542b4ada562",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9964a415-a6b7-485a-8f1b-c924b4b88f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adaeb5c-7716-469a-b26f-fd103cc9d634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d4bd69-92ef-4379-8ad7-021c594a89c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51fbc14f-a521-4110-b7dc-d335ad82ce3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef751558-8e43-49c7-b31a-523280643288",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c2148d-a0c8-4b56-a902-dee31fb5ae5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51065578-7058-43a4-b888-ff032b5e1572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c127284c-1824-4ed5-856a-cb08693bcd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c40b37-6504-460b-be8b-abe0d8009d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fce694-4e02-4ddf-9cae-d25fa5ca1190",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af5c202-9f40-45ec-81bb-7d0d0e0c821d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38593d4-ead2-4903-b283-626d32cf5c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3e8e62-09e4-4160-b96a-5f1fd3dcd624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc61b4ee-7457-4bc6-8b92-a8501c2313d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc0af92-0f3c-4d36-944b-81598bea32c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b3b8ae-4fa0-43c3-8e67-1270c7309a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbab92f2-2080-4315-b1da-715984b62bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151d44de-ac4a-4b24-9855-5d1de8111435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88abc195-2f6d-4340-9147-1829590f091a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6edbbe2-432e-4bfd-9367-a4a1ae614379",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54220807-8dd7-42a6-b6e3-4dab0e9532b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ecaecb7-171a-4b43-a81b-6b3565084bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbcd2f3-bd58-4091-a7e8-f9fad3e332b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8c147b-e2f5-43c2-af03-08c6682629d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bf0d6c-3e6a-487c-86eb-d6123ce9c30d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff93f63-e042-4ec6-be3f-1ebee7de671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1f6033-52e1-4419-9189-ec14b86f40e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7c9d60-b1e6-4c8d-91cc-e73da72d526a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dedafa0-1458-4360-b4a9-499344ffad52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee9c6eb-d08a-4b95-bcf9-8550916dd66c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df48b7bc-6b5d-4c78-a93c-4245cfaa74e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c5c95c-0bf8-4446-b641-54dcf5fd18ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5606a999-7d3d-4102-9611-68aaf795ad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7143ed92-75a8-44c2-986e-d1c4755324ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5143ea-821e-4a65-9600-8ed376e15ddb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b253999-b8eb-45fc-82c2-8f88066b69dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0d68fb-3d3f-4dd9-b8cf-e49a5750796c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53100831-e203-447b-a1cf-91c1eca412dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39591a66-ef1a-480c-8723-48ed0e8354fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da5aed5-cda7-4136-9ac9-087b2db2fb4d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7194365-996b-41f5-ad45-3b08c2ee2d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea989dd-ecdf-4976-934b-87c65e84fc42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6667435f-8234-40ac-a31f-457f320bcb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d603a7a3-939f-408c-85a8-377ad0b3ecde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b89c547-fe79-49fd-9fdf-dd28d28cf88d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d5d018-ba55-44d1-bc5d-f2ad35d12630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4ca479-1439-40a2-8953-f94942b18192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d391f7b2-e1cf-47fb-b000-9e51dd4a4b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d10c9eaf-597e-4a3d-9668-ca4412ed7f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bce525b-c5cd-4d89-b1ab-fb5fa88ec760",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e4bde6-060c-413d-9f74-778c87841988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1dd7cb-039d-41d6-ba96-f7a3824178d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797ebaf2-46bf-4393-b8cb-ba7a667d4f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb6386f-3900-45ba-834f-0c9dd1005025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec99095-20be-4e23-b659-d3855d3e9d6d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d2f9f6-94de-40b2-af50-811fd95364b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a093cd-d518-4670-9064-74e2457f1edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a29dca-c57d-4ee7-b03a-69088adb5fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "723f65e5-1b80-4b27-b542-75b78dcbc731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c8ac22-9395-4f0f-8007-278854e13db2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d8f2ce-77ac-4413-b6d2-79e89bd0318b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa64fa5c-d96f-4fb9-90d6-1ebea63def6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b66619-8a0b-467b-973e-61ff5bb378eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80df3f7f-019f-4bbe-9719-4cd87fbe1106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88d2ecd-a134-4d0c-b49f-21d1dfcd3d92",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb83555-e19c-4c61-91d2-df3a19952521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38799413-2236-44c9-83aa-47b8e15cfce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94912034-1763-4412-b07a-32fca3442dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ddd170-ee9a-47b9-a763-c851c02e8cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3192e587-010c-4e74-b373-55ae5174c895",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369d7189-b6c5-44b6-9be2-7c1f38b9c9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aeeeca5-eb9d-471b-9f65-c0c88b8d545b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf3f7fd-813e-4502-8477-b2a318af129c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed43390e-df62-4c38-ae3c-4461d5d1b73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e734e7-83bb-4886-8fcf-782aae4378f4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dded2a5-ed65-49af-a717-318ff174b254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73a8dff-94eb-4eda-b12a-8b94da7b012e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb008f2-1ddd-4923-b3c6-1876267788ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1143596-61ae-442a-b3d0-ac4ce82abdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dd8bca-1bed-43c6-8f51-8486e32e9445",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e9c4d5-5d28-417a-8e71-a922bafe5642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5baffae1-8700-4db7-b8ce-5fbf3696ae15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccfb77f-cea5-42a0-b542-2e5b87ffe50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f940e8f-bff0-47db-991a-38e7e1a21c6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec90a7ee-c88c-4ca4-a069-35b61129c910",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e30e71c8-e010-4fda-8130-149990b56479",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39e2231-e585-4ee3-b8b8-2b2f9ac0ca89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "966181be-d76b-4207-b374-07280224a74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897d72cc-f7f6-4745-98da-94334104e5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ccbd460-e2ba-4b22-8826-435dd70af68a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "700d57f8-ccb4-4244-8d61-41e1ebdfd02c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27daec3f-ddf5-452f-98de-9b4f39b40a03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de8393ac-4878-4649-a76d-5a7ea4c6f8c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ef2b2ea-2482-4a76-a298-b1d521271d9d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffe2ca45-a3e1-4b06-9e8b-5aa8d67a2fe6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "642e9622-df0d-4b28-95fb-adfe028d0580"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a8a3613-7fcd-4452-8e57-a9644b34a8a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6b61743-15a1-406f-9517-229b6849967a"
            }
          }
        ]
      },
      {
        "id": "d62c8308-df64-477d-b1e1-9b05ebd4a7a0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ecd74821-6c22-4440-a0fb-d1e2493d92a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dd71e02-aece-4429-ab2f-8549e72750b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9eef3e4-e5ae-42ac-8b66-8cec76b7d398",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72685ef3-2023-4ba9-9478-5035039acdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf909289-63c4-4ac6-89e5-92e2be0a51cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf458662-fbba-446a-9f84-5a19478bdba7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34621355-808d-44cf-975b-455ca548563f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cecf573-d055-49be-a395-3d2dca21cf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca87837-4609-45b6-9bef-039bfae0b31e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55842c44-750a-4362-b01e-2a8f0b6bbe41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3094b315-a095-41c2-9f2e-fdf218329520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46701b6d-51d8-453b-9648-b320f3a87b0e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c082ba6f-d85d-41cb-bd37-b01355dfff36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac36175a-40af-4f34-90ea-32b13c265aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f6f7e5-a3f0-4c49-9352-543dc9d6c3b8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bad8582-3507-45aa-9ffb-26ba1c7ad9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f3d1bf-ecf9-4b2d-b4e8-3feef340b933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2075aa-ddc2-48aa-a6bb-ed404bf42501",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c402b8-ef7a-4f47-93b7-b2191ed93a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af0aa28-c536-497d-b6bc-38a85b071719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e39256-7c20-4aa9-a009-9bbb2afbf6c7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d8f9af-3f2c-45a2-a89a-b71be77c5827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e549ec8a-d11b-49b0-8c9d-40b0ebffc8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53269b80-3273-4df3-9333-0bf5626f6507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054ae658-96a2-4a2b-a4d4-5cc924de970e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febe8aef-0910-4c4b-80f7-0a6920356ff9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854ed950-1d93-4293-a155-d392f67eb463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791ad12a-850b-4565-9a3c-85bb37db4d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3c8a6a-3651-40c1-870c-228b0969f539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111aaf60-90fb-4cc1-9fbc-57e56d955244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38559e2-af65-4cde-a3be-2f5099821476",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18a70dc-ed47-4f7b-9b39-16312ff2b628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e8a4fd-23a6-4b14-961f-c5bb4a127758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb52bf39-293e-44c9-a238-f009a31f0daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9224ca00-8bde-40f5-9701-5b6aae804288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a467adc2-b5b1-4543-b04a-ae4772d9ed8f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4805f439-72da-496c-b151-8d5033b330f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fb9d6e8-e7b5-4672-b285-311876b1d399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c04e72-057e-4fd2-84ec-2fb1b2018125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad9ec43-1cc0-4bdc-9eb8-ba5411fad056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f808bf0d-85a8-4be2-9036-1be7d65a026f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4db1dbc-6961-4007-8e59-23572ce195d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60920397-ab66-49cc-8aaf-576249956bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db5d363-ca85-4747-9947-9dc7523d421e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73400be1-5f69-4279-9ac8-5459531c14ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8125ee27-99de-4739-bb05-c0df6d1ce47b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380fe8d1-5f0c-40bd-9d3b-8703d71d39d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3461d80-e0b9-4095-b010-a30204fb45a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed60db5a-8b2a-4a16-9cec-34441f68c258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f3d176-4e44-405a-8064-eecbfcb954ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1836f1-d1dc-4e9f-a3eb-3dc0e5889495",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff98340-dbcf-4d89-91c4-d3997d48feef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5dbaed-7174-4326-bf04-97497482c148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e992ea91-dfc0-4556-95b3-8c4375e9edc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938dbedf-22e3-4c81-877c-f5c3f0e02c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090b4169-cf47-43fa-bd5c-4446916c5ed4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2c0606-c3cc-4ff3-886c-a0e3fe3a5fbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21927fb8-44af-4414-8953-39cd64b14cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a56d9cd-00ad-4191-9dcf-9d71ef5a554a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99311ae-da54-47e4-85a1-bfd110fa4b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21d82a3-c922-4a97-9c0a-0adb78feb430",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28d7222-5c6d-476a-85c2-c32c42f35ec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178edaef-74d3-42f5-b5de-374b6dbc6872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbfc9a0-1c3a-46cd-92fa-779f46954a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37310c42-afdf-4d70-bbdb-73f8a3246fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1903f9-6d4d-4d33-96d4-ed223ac40399",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9ee2c5-61b5-4b57-9ed2-a954e7445c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f32c83e3-db52-45d8-afad-87ae56ffbb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25773a55-f29b-434f-8ee0-d7d308ea4f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87eb8263-f2d6-4826-aabb-e6340efe72e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e5d51b-52fd-48f7-be07-02705fbb10db",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcf9bee-6cdd-4e13-89d9-51dfbebc6a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a884400f-a29b-460b-97c8-80cf0f4ce497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337d6c7e-ffe6-4765-ba0a-86ae6e669b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c68745-4d37-4cdf-8d49-e4ebfa65da88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfca8d97-7c81-499d-8480-85ddddc2157f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85da2815-2c61-40a5-a5df-71d97ecfcaa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49a4c92-3d2f-4af6-b1bc-72259a0e4cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814cdc9a-d7d0-4310-bacb-2d46c36a7774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faefff1a-36c6-4ed3-b812-ce6a7a0e907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822c5e4b-2ffd-4cb0-80bf-4cd6a48cf480",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6abcd0-fb3a-4d20-bcff-ca00ffa9f009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927ca8cc-a0c3-4141-80fe-1252f8fe45b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede87521-fe53-428e-9cd2-98feda1f8080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be0a47b-19ac-4bc8-babe-a73ffe6a25ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba973ed-d499-4ee2-a72a-b760595a9f74",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a898c8b-1882-47be-8ce1-4e6a444ff77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7e170a-b66b-4778-a103-181ad263da81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6c90c8-71e1-43f5-8da1-c20d80193502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9385fe-8ef0-4cc4-8d81-d655ab4c1749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8bebac-bca2-497a-a799-8e093fe3d9e6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cef508-3640-47a8-9c39-a2156ef96d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5ef442-22ba-40e6-b91e-027b74799253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf830b0-005e-4038-a7a7-533d21dddc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6210b65a-5a3e-443b-bf9c-15a569925a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46da936-cc87-40a9-bbe6-1f98c7a0a6c1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20edfcb5-a227-4261-89df-1985d3982b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22dd8d8d-3bf1-462b-9299-f11db31ac5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bd3ff1-947d-4af8-a882-05e5f13b4b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a25f63-27d3-403e-bcca-de24d464dc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c40ff44-211f-4fcb-807b-a6290b224c6a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68cd094-4205-453c-8b8c-345b79e46f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d33c4e2-52a6-4be8-8660-f7e4b7aa7d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f4fd7d-d78f-408d-8548-5ca4d724de0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366faa2a-374f-4ac4-8bc6-7509dd74328b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fcfdc7-023a-4441-9368-db8ba1f01f07",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d79830-c5ea-4b87-b4d9-a82ca2a5fed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b860c1-a2e3-4a0a-b116-4161c2ccef92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df622379-e45c-4e2a-8434-a737cff051c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9549c76a-390a-4199-80cb-0091edf97ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a5a57d-0a36-47c2-ac2d-fe33f523393b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87a0b27-bfa3-45d9-ae09-d16132c2255e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbefd298-86a9-4134-9f53-e5a8e09a6629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aa5866-f4a7-4d40-8c67-8842bf0d379c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5b0d62-b466-481a-9a8e-fdbbeb0eddd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c850e0-d747-4530-b6fa-56cb74b61471",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9ef199-df72-416f-aeeb-bb93f1cbcc50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287596c0-536e-4453-9736-45ca75e788ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4766342-8376-4002-b469-1bb062db79a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1cf6056-9917-44cc-90e7-b2923395e1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3b5f31-04d1-4d94-8c75-a48c5afd32a4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7034969c-0b06-4fca-814b-54a37cb104cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7a23aa-c3f3-46f8-9e1a-038895b24d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ab51ff-b2d1-450b-8786-15b7380a5f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d8f537-7e4b-44d7-ba3c-e9ce14ab351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a775d2-570f-44df-9c95-7ab1633e144a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f60a915-2ead-48b3-ba70-0b502891280c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d777233c-96ab-431d-85cc-706bbe936932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2d462a-16d0-4435-9ad9-778e790c7ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef30ac9-61a8-4b0e-a3ce-eed74095643d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85644d7-7b32-4f5b-bd06-22c4c1810414",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7a615b-7409-4fcc-8e54-9998967856cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a902d760-c51d-4693-921d-20336b1815e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c49311-55ec-4896-a9e8-6aedfb9f2610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0bf929-f9de-4dab-adbc-55acf3e6cba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf2dd53-9423-4d44-99ed-6e0afd176c10",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d177d184-8126-4eba-b991-9541adf8c6a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07fdd0e6-15a8-4318-a2cb-6ed1639e8ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781efe9b-d28c-4065-9ed4-1e6ab3026d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f652fce-a840-4844-a7db-f61f8774082d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f480d5-2427-43ce-a8e2-1af604f90d2e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bb8b25-21dd-406f-9389-1b8ef5111319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93e2ac6-5acc-46ee-bc1e-924466a1b3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c58c1c6-86ba-4e2c-86b6-cc826cc54cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41c99db-8303-48c9-8ab6-42333b75b42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd31aaa-0650-4571-8dd8-69f5b06b7aab",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ddb994-76fd-4b45-ae2b-35210b2ba797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47712ead-b65e-4df5-ac9b-6614fed054ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e10eac-8c4c-403f-9eed-431f9232e277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f91d51-dc4c-42d7-ab1e-982425f1a09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad72e0ff-6af3-4245-96cf-d5e1158d5c12",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66a50fe-74f5-4aa2-b3cf-5b7310e3a437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2b4d5a-92de-49fa-9de2-9b0170be0d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850ae319-8e79-4f7d-8ac0-84b050472f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb430412-b2a5-447f-a0f2-c40f13dc4665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745ae950-6b81-4e6f-a001-356010cca3f3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a780bb6a-4588-47d8-8dbe-ba63c5efb121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3592e3-612a-4b65-bb19-31b92d76dcb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d741b9-9433-47a5-a722-0f2d67008871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ef4888-dfeb-443e-9813-d0b2765a36af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b77409-fe86-4463-9895-7e49166b0b90",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bc9b2a-f15d-4214-9754-09780b1acf9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed84756b-236b-4c7f-93a2-06ace3ce7a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b0296b-30b0-4aac-bc79-d8afaf783ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddb5d39-8267-4823-a460-c3cc9064ee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3530ef-bc1a-420b-a0ed-48ab5b25068a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4a1737-c9ef-4e31-9fdd-c6ee797279ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2cd4f9-614c-4abd-b995-28152764abfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da5478a-6fd8-4e9b-b2b9-98105a8f7f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7ff18d-80ab-461a-b4cd-c8d4a28fa24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05e9c59-4f24-404d-a133-68c25b1d3a8f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524e60cc-bbb7-418b-9d71-17c8fd7935c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c07b519-ff50-4a6f-805e-61c0e51b20dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a651daf8-1b2f-47f1-aa50-4a525d19fb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790fc098-9cd1-41cf-904f-155b61f103a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb297e2-b2d1-4c0e-b71f-f72a67ae38c7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df35a224-1acf-488e-8599-e07a97dbaa97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee6499e-1ef9-4702-a39d-b759c831eb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b48cb7-89dd-41ae-abb4-56394ae3f842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f240d882-c090-4d9c-aa9d-828a65cc6007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4401f10-f840-4090-b2ae-af9808810e61",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7f5c3e-e1d9-43c7-9612-9964c86ba1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a49df4a-94e0-4d90-b249-06dcf7a41ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa90ef59-4c32-4489-a064-5b133c380fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d453dd-8214-473c-baee-c737ec9063b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5b9199-7943-41a5-8a3d-e32f9df4c926",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803c0541-1b6c-4662-ade1-193f17d3b3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af574868-82c8-4007-9f59-eefa87a516df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d2283a-055e-4b9c-8bd5-d9bcd8ec0a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d9e163-4213-4d4e-8c1a-94e94cd92655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209ee07d-ec4e-4d00-9442-ecd367ccad93",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3feac17f-ebf6-4f9f-a421-95648f8ceb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abae270-c0b9-4ed7-8bc7-85c18308c421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be720eb6-2096-4a05-b8f2-1dd6ab074e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f642445-27fb-47be-b44f-7137ca11cc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7e9428-e316-4998-80b5-353b8a7f24db",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833e67f5-1f71-4214-b429-40273cc1c9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789f6bbc-3f21-4356-b0b3-bb3f873a8e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc94423-6368-4c77-b51d-5200d1fb4f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d16f344-185c-42b7-84ac-25957b189d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffa20b2-3dc5-4d3e-9b00-58519cdf5e8e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab9e27e-a91a-4093-8954-65874f0220a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5f67fb-86fd-452e-9a70-2cfbed7d33d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac15e397-2cbf-46e5-9116-447ab2d194fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c605498b-406e-4685-851d-8920b9f23226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2cd70a-a10c-49fd-95f6-516e0884324a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c893bd0-a5f2-4e37-a92d-4be9f5941277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d263ceae-665f-4e09-aaf4-23f8c83fbcaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f289e13-22e2-4bb5-8b08-5c8472afc7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02af0d01-c72b-4308-99b9-1b8b4537bdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78fbeb2-38fa-4e46-82d8-41fe0c206d6a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc72d63-9719-4e72-8110-db49e75e4eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b140f79-c792-4297-b412-88151d339093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36f0a30-4ac5-4697-a25e-471f9d702fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f6e082-7880-4d78-a85e-b33c181e1814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e33375d-c202-4cf6-9d1a-4a5254676246",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adc11ed-4c0a-4120-b19d-eb1c27f9e780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058ec557-8f0b-4e49-b2b2-64b9171fccc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8367b51-2d50-4aba-bff6-956b9de2b834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be514950-436a-43a8-afc7-d149961a4f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6cbe23-2ef0-41f3-b28d-204983148528",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834c9479-78ff-49f0-8b41-33213fce58eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178e611d-2539-4a8d-82ab-f2ab3d366156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e71f88-84d9-4679-bfdf-7b71ac857af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea90e8f3-5b8e-47e4-a727-66f91571bb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8ca4c8-9b8d-436f-9fa7-27d01bd8f4d1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82648da-2842-4af2-8d24-2d12452ad03b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33def1a8-a943-4736-87b1-d4bbf09351a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862f924b-4b0d-40b2-a77e-f9c94ac44477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a10f4a-38a1-402e-a34c-2eabcaf30fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0607b107-0001-4451-9166-c5bd1bf459d2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1525c258-3306-477d-8b54-b58d4f1304e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75a3522-b3f1-49c1-9d30-5a10eea43194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b70dd31-326d-45bb-ba0e-6fcd42f8b827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88e1d54-3614-41bb-ba1b-b88dbeb4b4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac5d754-c945-47d8-86a3-7c10f68c8f57",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2725df2-5801-47f2-bc41-7ce8ec51c56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e99ef7-e006-41d4-8a2c-ac8d8f57b8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86c0135-0401-42cf-98ec-86fbc13ff043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b12350b-d8af-48dc-a14a-dc9f8fcf35d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa02da5-ac85-4acd-a32a-044c3e2b61c5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b84b65-9e7d-42e6-b68e-1d4cd80f2ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f3e697-c437-4606-ba49-1ba8f2b91211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6263ea-430d-425b-bb19-6ac5ba5ca87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8eeb916-5793-4ca6-99b0-82e7234a983d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef4af0b-4f9b-493e-a675-38e362b7cd9b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8074026-2157-4d35-b85b-76aea6b72f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0e6f5e-77f1-4471-b87c-5165002edd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8852c0e5-b26a-4f5f-a93e-3824b9f8c580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8edaec-818c-4d79-b1aa-2ae351fb6904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af389ca-07f7-41e1-9e4a-92d00d278138",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b1fd85-f223-4e9a-a1f6-94d48b358ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbe893c-5766-4353-bcd0-46cb139d4256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba8f015-6f68-4037-99a5-0d9a9e2c0d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bdbe16-2c73-4b8f-8b32-674c360a4c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92d8e0d-b4e5-4f5d-a63e-ebeb5166a52f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b4889f-216e-4732-a0a0-be9bf5a2c464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f767f6e-ed88-4f68-9879-a4ce934c347a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08585b2e-3354-4c04-a146-54e57b86a777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd784bb-24f4-42e1-af94-68efd0dca1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2a9e4c-9c21-4fc2-a928-4c96140afd65",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c7b9c6-4cc2-4811-b651-8f099cd41ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d771439a-58fc-4eee-a177-cf99874879b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546095a7-3bb4-4de0-b0c9-1f280d3737fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59b6d81-639e-4ca3-9968-96d543432307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a0d979-cd6f-4c4f-98e0-e8be9fa7c57d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b304f0-e0b2-4964-9680-d889571ba0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f981b6-af86-4996-bed4-6d28e2e56577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d789b5-08ec-41ee-8947-b3c7ede58102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec27ec81-402b-4469-a4f8-3bccc44921bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaa2c4e-ba6b-4573-889e-005195ab0ef0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467473da-0ae2-4f5f-a0c3-ad07a9ef740b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b27861c-4899-4d1a-9233-320cb875c592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0754c77f-890a-4131-bd66-e655bf427f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c0486f-c414-45d1-a29a-9ff5d25aea4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ff072c-29ae-433e-952b-8a9741899d7a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feb8ac4-9ed5-46e4-b08f-0c1f47466c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c6b149-0827-48d4-b0db-90471fc148f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bc7be6-58f6-4353-ba25-342fb1e86933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8dd7a42-34dc-4978-8243-e53020913138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f687f70e-15bd-426f-9cdf-4ca062b2dcaa",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1eb3701-1f5b-428f-8e4d-4eb1426b7ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2be589b-440a-43dd-b1c0-e28429102d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd287941-6c1c-494e-930e-b901c77490a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024fc129-bdb3-4c3c-ad12-cfe37ccd254d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0fd1ab-e636-4cad-ae7f-a8562c55c20d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ead1cb6-2e5f-461e-a90a-a1723903c99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d819fcec-350a-48b6-86ff-0c3bf0bab51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c43f32-b919-44dd-a2fa-bda240bd3882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5145078d-6825-41f2-9971-f6722208245e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57de8a4f-fd35-4b41-b88e-e6d8078f0660",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e00a4b-142e-44a6-a062-9b80f729f9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e6a263-0c5c-4628-9139-795bdbc1e960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db52b493-5ee4-4ba7-add1-bbb6e3f2bcb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9887d509-47b2-4deb-aa0b-e5c8e2b4fd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea48d6b9-d0a1-47cf-a5fa-7a9a4afe423d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c528cea7-1d33-41ec-89f9-672de192668c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0886487-a4c0-4aac-a19f-af0bd3e8fc9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e467c23-a98b-4c1e-88d2-e97d6d7c6ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75f49ae-fe9f-47f5-8e23-c85603ca9d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeedebf-ca00-4161-9f39-9500d28a8027",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbff143-4de7-416e-9955-15e7f2a672ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d6d5aa-f5f8-4497-ae36-4582719fbf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f0dfe7-b8b9-4b6b-af2f-a3403fbbf9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbe9519-c16f-4ed1-88e3-dcddc89d86c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f197cb17-50cc-4b90-9f46-da0e1842bd96",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d68c8e7-3aa7-4191-95ff-c8d4118e2c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9087ed56-5cec-43ea-aab4-102d0d37638e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b819e58c-bde9-494e-b2a9-70bcc5abefc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68c7b46-66de-4cb3-a385-2819c132c284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67169216-8c82-4f7b-a819-1d282c963b80",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f687d0b-7ab8-4a1f-ab30-d862982ed812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be504931-13fb-466d-9771-2d60013470f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cf450a-b595-49d7-a4e2-23269457878e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285edd06-5be4-4e3a-9962-3086c3ebecf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514706ba-9f96-412e-8ae3-92c347a7d133",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df6366c-aaef-4202-9e12-86e672ff8637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78fc73d6-1720-4819-b6e3-8d13643c405c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26ce9c0-3903-4464-a957-e25996b06c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc536dc-02fa-467e-83cc-300b4cefe0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9c585a-8a36-48f9-9bb7-adde019d77b0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9761868c-2e8e-4697-9668-a7e33f47719f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "560b675c-7abe-4cd5-b6af-7ce37c823800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea25c44-6e76-4b9b-b245-8d503e1ec9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1d938b-9032-4247-bc42-600306c9d198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557c1b05-c787-4edb-bfa0-0555287b871b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535f9b60-2dfc-4ef4-9110-2b0e059c9931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89258eab-27f9-4539-b911-457d203fa57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e520fd0e-5dce-4d09-a8df-de344b34504c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec94c288-a972-48d2-a6d1-d64fa6d6ef6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dc228e-bf84-4ca0-ae7d-4d0329244c56",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa3937d-d0c3-4dcd-9c90-041f2e4d5049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c456bf-4725-406b-938c-e047d7bf93e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a850599-4d63-4075-b991-627333a654ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191e6f83-6523-43b4-aa13-615fcc91d64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d34b82a-6dfc-4eb0-ae5c-80eb8dae1b2b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78dde9e-90cf-4985-b375-16685d81e43e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e92040e-b624-4d98-bc54-96cc3e34804a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d323506-df2d-40d0-b715-3243e20ddf48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f2d01a-4a16-47db-a58a-c5b62f1f520f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940cc2c5-a175-4125-a595-62b87b63486d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5d888b-c250-4cfe-b940-e4efe5ab3aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde68fd9-a328-410d-9cb7-b623b64a4878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7773152-bab8-455f-8a7b-461faa98d418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b49b782-cd00-46a0-9a5a-6ea61d4ccb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49cb94c-0c17-4875-b1c9-90be21894c76",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb229c9-ab62-460e-8afd-8e2e19172f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f1920fb-84df-4f00-a362-b77b418abcb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce77f78-384f-41ec-988b-dc249ef05b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86054747-9dba-4bfa-941a-cf29e51b894e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614fa067-ea00-49c0-b3d6-6caf698c1707",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4c4b43-fff9-481c-bfd3-4c00f5280959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f827c98-d00d-47c1-b5ba-51030781b807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaf9407-3eb9-42c7-92c9-8b725e82ab78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18974e95-f45a-4b48-8e13-46f3fcbef110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0852f17-3cac-4164-bae0-f41897f5a5f3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadb5ab5-aa56-4b1f-a156-cac8d745f77a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de3610d-64c6-4937-adcb-18343cafaea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2dde24-51b5-4c0f-a0e7-baa13de2a85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c08410d-bcea-4d81-80e5-c88ba48d377e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7822f0a8-6270-4845-856b-67e11d2042c2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae99eb1-55d7-411e-b844-ba67fda2dcb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06df64d5-cb2c-4a0c-bdce-02ac93bb6471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821b4356-6a80-40eb-a0bf-3de7bd2ed7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c4e3b9-6420-4d66-b48f-edab09440c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d363ba-7f38-4940-a539-f76b3579f19e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b42c88e-56dc-4471-9bb5-3cd929bd9413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5096e9d-3095-4144-82ba-408347fd9fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291e426b-3ee0-455d-9a14-b58c149a554e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca718685-d1d6-4194-8c57-f32fbaa8d1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d2bb5b-8ca6-4b4e-bdcc-2ffe89041e14",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c021692-40a4-4f83-a1d7-7e15f0ff2dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3d780b-1189-4045-ade4-f22e41991cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511c588d-f0da-42ae-ad62-713cf1c2d7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7cc504-770f-45d9-8df1-5d2510dc9edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c58f04-7395-4f85-8117-15ca8745237b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e7c9b9-faad-40dc-a1e3-ea9adffcea08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ed447d-a43f-4a66-9a40-ef4d02a606eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bb2ed8-e014-47e6-8c62-ecd1a8adcb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ccba43-c297-49b0-b4ec-42541f355005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa04a61b-aacc-4bbe-a54c-98b21e1aa983",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7bde46-691e-4d65-9a6b-04d23f6d81f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e428aa-c03c-44e0-b5e9-9ca6ac1dd291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330e30fa-08a4-4986-99e6-512705df521a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7b4e07-f456-4805-b85b-f16fee377ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb58c52a-64e8-4974-9a16-cc0962f12e22",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac66501e-49b5-4e5d-93a6-e400c1c175d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214f5197-63f8-4dc8-9867-994e14fca7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d300bab6-87ed-4aea-b721-525c9f900990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6b29bf-4c2d-42ad-a15e-d1c0bc4859c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cda2f6-4a02-47a2-8cc7-fc533e06b1e7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88bd27d-69ef-43d0-afb9-e7b23d1a0bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49996907-3801-47b4-9d5a-f3f1756281dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f24a586-3083-4cc7-9291-c75cc62cb744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0f219d-5978-43cb-806d-2f874f79f787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8aac28-3368-4db8-b5c2-e53d14683801",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450296d2-c0ec-445d-af63-f56517370a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e21fe81-685a-4eb7-aaaa-145af8405297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b72e17-3e53-4fd0-9ec9-45df7d03d793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f261407b-f323-4116-9af4-f7234ea96213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed94119-8bd9-4d7c-91e4-3e61d6d09926",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09166a51-7000-4037-8bfb-95ef522382cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e03d91-b83b-4c87-a949-2400ef7e9fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de7a85e-a538-4be4-aff3-2bf86eb34b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c8715a-bf3e-455e-9539-5ee91c1869fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9d9d42-158f-4e07-ba03-01ceeb9fc6b1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0466e84-ec0f-4b0c-8a0d-fb068be5971c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb3210a-1303-42a7-89c5-7685ac0e58a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af589c87-6689-4bc9-9c00-41cd57ee5d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623c9747-7ae0-4290-b6f9-777a401f11e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273b8545-c974-4e0e-a528-8197e7229ebd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fbe2f6-425d-41a0-9715-668cb162d59a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfbceb5f-6ee2-43c7-8291-f5e373fb8225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c821be-363d-4cff-ac20-4ff0c84c71f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d726313-e5d7-45c2-9d4f-0b969714d165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eecf1e7-e3a2-45a5-8648-a44c785bd51c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f41460-905f-4985-bca0-e2ac6185e310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e9de19e-5efe-4946-91ba-c020a46faee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f6627f-db93-4dc0-897c-484a956a2d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b411ed-bf81-467e-9838-257498a16878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2180db38-07a2-4756-814a-1bd422071149",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a751f3-84e1-429e-b7a1-6ec9e6c9a97a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2629f9e9-28a4-4922-b2c2-e068126104d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79426d3-3ce6-49d4-9747-02eaa31539be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7087f426-19dd-4412-a148-95035766dd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff305d9-51d1-4017-afbe-bed9fd95f37f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7722042b-5776-40bc-b4ec-5a6b11bdd712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb892f7c-1be2-44ee-864a-2ff71ebab453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316d7d2f-6685-4f64-a723-a4df0199a80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684dcf5a-3023-4012-90ca-29d9020045b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c3c677-67d9-478d-9fa5-7d735950c2e3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f489b9b5-9fc6-4545-9a90-4c88f90815cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "843ac01c-7ec4-45d7-976a-2917f255fa15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff99bcf-2683-4c8c-8b99-506f2632636d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1be01a-7d7c-4992-8610-890f26e15a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d07a62-5fe5-4cb7-a23b-e497a37785e5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8454c836-a9e5-4959-994f-246a0c3b67f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aadf213-a807-4f5b-ad60-1341ec5e0821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9331e95f-a3f5-4ed4-a8ca-ec782e521707",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c770a6fb-7f85-4b56-9287-18c0fc8bd52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148b3e0a-27a6-4f12-8780-2c3a07dc58a1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3645ccc4-f0a9-49e6-880d-d2be1517b6d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246dff9a-c79b-489d-bd22-b07e9519b3bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfd7ca8-a166-4c22-9cb6-7d74e2b32d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3763bc-54e7-4a33-b0ee-667fac64c88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81086358-e53c-4fba-81fe-e9e9a012ea45",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab3f450-6da8-4875-a348-eee5aedb29c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42f70ed4-83ea-4fbc-8a2b-05c130c7d7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dc4b62-116e-414e-b35b-ceac4e5d5d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa15f7a2-8be1-49fc-98bd-51d100a28b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6193ac-c583-446e-b242-e6d87c61303e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc8fc7e-c028-4608-a30e-4fc9d7d3a658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8119d860-ec0e-4564-925c-9ee656e08de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ce32c9-dc0e-4023-8571-d5176752210b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed082211-7a73-44fc-9b4d-341f94688560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e79a22-2af9-47e0-8592-335913e04fac",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404232bf-2b7c-4aa2-a0b0-cb1ca187d9c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d3e765-01b5-4333-8f2b-40a524c39dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c740b92-f3b2-4fac-9732-358293972c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2993630b-fab6-4c8a-bbe8-7111053c054e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08dff30-195b-4379-b05f-179f7211b8b5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2591aab9-945b-4fe5-b9e4-646493510062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84c11bf-bc64-4486-9102-4156b16c3d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024acdca-e987-4fcc-8fb8-e19834ee4d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76ec708-190a-4be4-9a0c-014ed54b6cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09631f22-7a03-49d7-88ae-5b45d2904497",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7585a197-74cd-454e-a8e2-059845805c5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "439029cc-e510-4539-9f87-c7dc2304cf8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04721fd5-4e21-4be1-9ce1-2f3845e55b0c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb8f772-a318-461f-935a-57c32e0c5b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6d848e-f8f1-410a-bb2b-ee024ec81475",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbbc76e-5413-4d0b-8339-ecc4e71166f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148a5b17-6693-4478-884c-0df4ea1bdb56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072818b8-f63d-4596-8493-cf94711122c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58858d80-5d8a-47f2-b01d-5def0e22e577"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0f109ce-15bc-49ab-8ddc-5aa5727834f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72b02188-c74d-4c2f-8d5f-987e4557843e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54e8859f-b8a4-4300-9de0-846624e6512d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12cedabc-8d68-4c36-b32e-0b4439c48f73"
                    }
                  }
                ]
              },
              {
                "id": "8c36a89d-1784-4186-8ca6-58ec860e64b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f20ea0be-0104-495e-be80-29cf57d2fbae",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ef6710-f3ce-4e1b-a17c-5e2a4349d406",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "159636c7-5d0f-461b-ad1f-3ac0ac5b4351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ee509d-773e-48e2-af8e-3ff70e67c37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d030fa05-91e7-4976-8cef-f4b25cca7dfd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16068a28-e39c-4ae3-b739-7410fc3689aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "604ba8e3-b162-4fe6-87bc-bc32f35f6f33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af90bf0e-d75a-4de0-9fc2-13dcff7910b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c400171-656e-4602-a220-ed3e0d5ba58e"
                    }
                  }
                ]
              },
              {
                "id": "d65ad378-b298-41d2-b8b1-586c05d4533c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bd3aa403-fc20-411f-9fce-5f98bd3bb9e7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccda835-52d3-487b-b08e-7f9b0799daf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a9b41f2a-4deb-4ad8-b8ce-a52c561be107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548ce8f3-7a17-4d7b-8149-3ca448072e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7105af-cb9a-4a93-8ad1-44a9b46079ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "153bf76b-38a7-4391-b750-ce9d235e0f1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6bf6b5c6-5439-471c-864b-9efa58a31866",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cc7aa95-eeb3-4af9-9791-7d5eb1c2bf7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "81f5c3f7-e99b-4704-a791-939776eeb54d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3f4da70-e882-4f27-96c6-9d737e60a17e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f4e3d77-c1f7-40db-9d76-14954066b1d4"
                    }
                  }
                ]
              },
              {
                "id": "0510af0b-b6d0-40cf-922c-8f24d344526f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc624df0-061b-40a6-a515-dc08cd5c9d05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b57ae99b-1e84-468d-b328-3f5d9e362447"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd955521-3772-4edc-b07b-8765a391ac56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b78fde9e-d1d0-4b9c-8add-f2a157a4cf40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1197ee7-1a2c-4bbd-b70c-1ef80b148849",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fc1f3d4f-4407-4dbe-8745-a224f0f9cb0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0773ee52-1b91-4b98-ad42-49a0c253a789",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f35282d5-01c0-48a0-b268-4b151afa57d0"
            }
          }
        ]
      },
      {
        "id": "34c598b1-1161-4b8c-a830-fadf68ce215a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f1ff6b0e-b9fe-416c-9734-2940869e1f27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fde97b7-4e69-4699-9040-a97c8d3b0f48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4aa38ca-5374-4c70-9491-df655064a187",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5200d777-0314-4f3b-af54-6b028ed29726",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9db22e82-8943-4a55-8495-048aa5f86084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a92a885-c205-44ef-ba13-1b9499aca738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04c4f062-9719-4553-872f-b92409b2a34e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80da2f64-87c8-4577-8ad2-ceb8b7dc17b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7361f68-49e2-4c6f-93b9-16106362bb12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f15c42a-e81d-41ff-a13d-371c2205b5ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7b32a87-afeb-4523-ab2d-11b4da2b8972"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a8d110c-8820-46a3-932f-61703dd2ec7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1144b1b3-468b-4c33-809e-e5f070f6919b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce3948c0-4cc6-4165-839b-577ad38df4f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26e26de6-9220-4988-a629-a76fb787d8f9"
            }
          }
        ]
      },
      {
        "id": "dbe3f612-e65d-4c71-aa16-271e40acb08b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4ac0da9f-8cc3-484f-8990-bedce4fdadac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe2662af-853c-4208-be60-4ef6804e1554",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a151c336-fd9c-401f-aa5f-728372c94675",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d2a081-e2da-46dc-8468-a404c3fa625e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a21915de-5343-468d-9150-a9aa42f76293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7095a3eb-b0ff-46bb-a9f4-01dd538e959b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f47d2490-23c1-4ec2-b514-1944d010f5be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b43ebdf9-b9f2-4b2b-870b-d9f9b208ac67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc4cd00b-21da-482d-aaf2-97ce32f239cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d461cb3-f5d5-47bc-b11b-437f43bf341a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62cdd406-fddd-47ad-8118-1b2068b6aa2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3422459-8cfb-4244-854e-0258a8202171",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa349d55-fb3f-4705-92f0-dac776900b70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d37e102b-a81b-4614-ae9b-a8af5c8d1e08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7d919e3-94cf-4ae7-8a3c-43313b2b1f67"
            }
          }
        ]
      },
      {
        "id": "64979327-86e1-4eaa-9d90-2b05202d8ee9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a7480d94-5209-41ac-8539-7cf4c00b4d34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b385eb6f-a24c-400c-bf31-c97814ee8ace",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abf8c79a-df8c-4414-9e38-74561514fab5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b92d6db-cd10-4e25-b8ab-b8c895bd5462",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bb9816a-ebd5-4149-ab65-133866a53169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3cb7d4-6e46-4d39-a770-e7c48c6fef59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "470f8bd3-8fd1-42e4-a32d-d4d0e7cf83b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40b087d7-251a-4169-a5ec-4a39d96a7fbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ba86753-2168-4fb1-9f6c-c98d17360fc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2183285c-4bb5-4a3f-a38b-ab2f70c13f6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c048387d-b8db-4091-8741-176f6cc9c8ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d60f619-bd9a-437d-abf3-237e14ba8ed5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60ee5ec2-3228-4344-92d0-7bcbe042311a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce0a29c4-716d-484a-96a9-eebcc97cd6eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53c4cb04-0117-4988-8264-c78fefe52cca"
            }
          }
        ]
      },
      {
        "id": "096ad304-d4aa-4ef8-b019-85909b395447",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c88ec5f0-e94b-410f-bfbe-3f1e7501daaa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5dca152a-c733-4200-aacc-9586ed98d350",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bf16efad-18cb-453e-a9bf-112c4b6b5d61",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d5016f2-432f-44a3-b171-6990a90317ee",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9076ef4f-b08e-43ea-8106-0549dfe73379",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 286.38380281690155,
      "responseMin": 7,
      "responseMax": 8215,
      "responseSd": 866.564589169463,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691368794117,
      "completed": 1691368889874
    },
    "executions": [
      {
        "id": "773bc3ff-069d-4324-9fca-d737acfb94c5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6d4a985e-46d7-4f96-b01d-499728faaf8e",
          "httpRequestId": "0acd2f19-0b84-46c9-bdde-dfcfefc3f22b"
        },
        "item": {
          "id": "773bc3ff-069d-4324-9fca-d737acfb94c5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a8e4cfa2-086e-4ef4-bec2-2591f67e9656",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "3cc970cb-58de-4bd3-8c17-763178255850",
        "cursor": {
          "ref": "5e80e6cb-72b6-43b8-9ac6-8c262e2dda4a",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b5ab47fd-144b-4389-9deb-8d57768db0ec"
        },
        "item": {
          "id": "3cc970cb-58de-4bd3-8c17-763178255850",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a5f66704-9f1e-44f4-a8ca-aaf6b568181d",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "c2b98a93-3e04-46a6-af1a-a7c5b2f33a4d",
        "cursor": {
          "ref": "edf00702-f011-4385-a5c5-b186ab8c2eda",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ed6edf73-2f92-4b69-99d0-a6f6a71bc74b"
        },
        "item": {
          "id": "c2b98a93-3e04-46a6-af1a-a7c5b2f33a4d",
          "name": "did_json"
        },
        "response": {
          "id": "bcbd3184-13ca-45ed-802e-22db7dd736e9",
          "status": "OK",
          "code": 200,
          "responseTime": 563,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8971a17f-1339-438a-b41d-6a0785da28d5",
        "cursor": {
          "ref": "e7b8dcc5-956a-4c9e-8b83-aa43b551a0ea",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6fe1e373-bc95-47e2-8dec-0a5f83d608d8"
        },
        "item": {
          "id": "8971a17f-1339-438a-b41d-6a0785da28d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "4c4a1309-b4ce-43db-9c0c-5bd3ed7790b5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4917,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8971a17f-1339-438a-b41d-6a0785da28d5",
        "cursor": {
          "ref": "e7b8dcc5-956a-4c9e-8b83-aa43b551a0ea",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6fe1e373-bc95-47e2-8dec-0a5f83d608d8"
        },
        "item": {
          "id": "8971a17f-1339-438a-b41d-6a0785da28d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "4c4a1309-b4ce-43db-9c0c-5bd3ed7790b5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4917,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310a1f2f-52f1-4b03-820b-d259d2b52c91",
        "cursor": {
          "ref": "59b56f57-4915-468f-a116-a88f80b86c2a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3269e48a-f63f-4d9c-9508-09263c8140c5"
        },
        "item": {
          "id": "310a1f2f-52f1-4b03-820b-d259d2b52c91",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "97aae178-8295-4df2-ad47-06c656a2d286",
          "status": "Not Found",
          "code": 404,
          "responseTime": 106,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a468d726-562e-4bcb-aac9-c17842c9300e",
        "cursor": {
          "ref": "196b8e70-5686-4351-8e29-90f36620735f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8ce9cb9e-2f88-4012-932f-31f3f146b46e"
        },
        "item": {
          "id": "a468d726-562e-4bcb-aac9-c17842c9300e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bbb8a7a6-f407-4c1e-aca4-6cba7c22e7f7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 139,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729e2ab3-8de5-40a2-ae76-8f608e3a79be",
        "cursor": {
          "ref": "bba2d7d7-a571-4a99-a433-150c056ebf6e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d59d8741-2656-44dc-a493-cf838a9fe792"
        },
        "item": {
          "id": "729e2ab3-8de5-40a2-ae76-8f608e3a79be",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ca22e44d-5405-4372-a571-aadbc9e8d07e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5128e53b-1621-40cf-be79-24ed3dd4f18f",
        "cursor": {
          "ref": "4583f596-8f37-4d30-adc6-838268063b4d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "33dcbde6-1fbd-4f61-934b-ddcd4f2987b1"
        },
        "item": {
          "id": "5128e53b-1621-40cf-be79-24ed3dd4f18f",
          "name": "identifiers"
        },
        "response": {
          "id": "a69716a5-8481-443d-a5c2-925e572192fe",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c35d60-6a0c-4eb5-bf04-f2bfdc3e6a28",
        "cursor": {
          "ref": "efb8d353-2057-4bd1-8393-be809b69e055",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "058168e4-53a9-4bf1-9564-2997d988436f"
        },
        "item": {
          "id": "71c35d60-6a0c-4eb5-bf04-f2bfdc3e6a28",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "14ab545d-478f-49b2-b22f-5dab8e28797f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62ad2d0-7692-4010-9d40-3fd84c3e4ef3",
        "cursor": {
          "ref": "afa4625c-8884-42e6-9e27-0d0af27e7acb",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "842e595a-d6d8-4887-a089-a029f6f59d69"
        },
        "item": {
          "id": "b62ad2d0-7692-4010-9d40-3fd84c3e4ef3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "09993642-2c27-4331-9eed-1d3a33c69b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72497912-57bf-4156-8eeb-05f4c6592517",
        "cursor": {
          "ref": "151a1956-ab16-49ec-a805-8bb1c4c03fbb",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "413cff57-ac27-4834-bbc8-b5dd7c130626"
        },
        "item": {
          "id": "72497912-57bf-4156-8eeb-05f4c6592517",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "022113a6-ad40-479d-a163-42490525bc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80536fba-8ca8-4eb5-8500-20fd05aa9609",
        "cursor": {
          "ref": "4a4aab89-cac1-4dae-bd75-c4fac7e8db74",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "71714f9b-9ca4-4ee6-bfec-cf371fa9139f"
        },
        "item": {
          "id": "80536fba-8ca8-4eb5-8500-20fd05aa9609",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a2721c80-320b-444d-9fa7-218ad36c78ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7754bb11-3e61-4251-b104-503798bae8b8",
        "cursor": {
          "ref": "33285775-2d53-4c08-a8c1-d99ac96d7a6c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6a56edc6-24b4-4923-9506-2e4b648c92cf"
        },
        "item": {
          "id": "7754bb11-3e61-4251-b104-503798bae8b8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "60ef8b69-8dcd-4619-9d2b-a88f19c888f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7230104-0410-429f-ae81-5edd8a87b03d",
        "cursor": {
          "ref": "49cf4201-b840-4ee9-b468-08ca0978de27",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c9eb61d2-487a-4fff-b175-789ee334e6ef"
        },
        "item": {
          "id": "f7230104-0410-429f-ae81-5edd8a87b03d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bc895dd5-e8e8-4969-a1f7-4d51c65b30da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4522cca6-5b45-4ad5-a2c0-7a3040b3c62d",
        "cursor": {
          "ref": "b849e0ac-129e-4e00-829d-8212a387c3bf",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "78055034-a16b-4766-832b-d98df0fdd14d"
        },
        "item": {
          "id": "4522cca6-5b45-4ad5-a2c0-7a3040b3c62d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "17b149bb-68b5-42cc-b793-1a45553e13d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b225e98f-000c-4e3b-8b67-261359ded630",
        "cursor": {
          "ref": "419b0df9-0f37-4378-9f00-be77a5b2de77",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7369b67b-d101-4b7d-a279-865924193036"
        },
        "item": {
          "id": "b225e98f-000c-4e3b-8b67-261359ded630",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "78206475-e98b-4457-af08-987357e21b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e71bb73-c3aa-41ef-aaf7-59c3f277da8a",
        "cursor": {
          "ref": "3bbd429f-6e74-46e8-bd19-74e31027c09c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "29f460a3-8b10-430b-b6dc-a1c2b8790281"
        },
        "item": {
          "id": "5e71bb73-c3aa-41ef-aaf7-59c3f277da8a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b5469999-6a6c-4dfb-9951-22babdfa0fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a309f6b4-b35c-41d9-be66-f7eaf24df212",
        "cursor": {
          "ref": "0e60e218-a112-4d0f-8397-2a72a9c77e95",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "012c5bb9-1bf3-4eb4-a046-0d946f0c9bff"
        },
        "item": {
          "id": "a309f6b4-b35c-41d9-be66-f7eaf24df212",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c7690b2d-7ee2-4722-87e0-492a0ad25161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a61720-a4cd-42c7-8e3a-dbc291ad7f78",
        "cursor": {
          "ref": "fc4eaf21-5af7-4aaa-8118-96a1c2c8b8fd",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9706487f-3dbd-43e4-a1d5-876fd9a11f1d"
        },
        "item": {
          "id": "83a61720-a4cd-42c7-8e3a-dbc291ad7f78",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "172149c3-bf21-49ff-a2ef-4e5a862f77c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232c0509-a8de-4aeb-8303-985b32df837d",
        "cursor": {
          "ref": "22400404-9890-4963-a423-8d47b5fa74f1",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e8704fa0-6db5-4289-8fbb-f7a22ee5f4e8"
        },
        "item": {
          "id": "232c0509-a8de-4aeb-8303-985b32df837d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "70eff1eb-483d-42ff-9e08-9398e3d0fca6",
          "status": "Created",
          "code": 201,
          "responseTime": 699,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "b6e6c761-b5a1-4a67-ae43-121ba7d9cc37",
        "cursor": {
          "ref": "1f6e3e2e-2aa5-4ffe-b221-954289060e9c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "231c0a8a-98be-49a2-977d-40deddd80c34"
        },
        "item": {
          "id": "b6e6c761-b5a1-4a67-ae43-121ba7d9cc37",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "279612ab-1fad-4a3b-a832-99c6fdf54785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1723,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3b2fec-eaec-4617-9c51-8617492e23ed",
        "cursor": {
          "ref": "60261a30-0367-4510-bdae-3721a2a544bd",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "42080447-8928-42b3-8650-11e5ed31926d"
        },
        "item": {
          "id": "af3b2fec-eaec-4617-9c51-8617492e23ed",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f50599b1-638a-42fc-8485-7a1de7766cc0",
          "status": "Created",
          "code": 201,
          "responseTime": 5668,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "724c50a4-a802-4e00-8967-0c3c449d69ea",
        "cursor": {
          "ref": "46d207bb-1ccf-4d16-a7b8-757a2f2f4650",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3e4ba125-3c5e-4827-bea8-dbda5219c390"
        },
        "item": {
          "id": "724c50a4-a802-4e00-8967-0c3c449d69ea",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "33e8bee5-6625-42f7-a4d2-4fe5dafcafb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff38404-e63f-47a5-a148-8c90101edee7",
        "cursor": {
          "ref": "ecda100d-ac7c-491e-831d-6f8a1f7f4b34",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e435643-d664-49d6-92c1-274b072ab917"
        },
        "item": {
          "id": "cff38404-e63f-47a5-a148-8c90101edee7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bb7cf65d-545b-45b4-9c75-195ed740a9d6",
          "status": "Created",
          "code": 201,
          "responseTime": 3424,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "42d6b9ef-68dd-4b9e-8c3c-54ea59bffb71",
        "cursor": {
          "ref": "a99b68e1-b878-4d09-83c0-276370d56d62",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "35091de6-27fd-48a8-8829-ef17e5c3b854"
        },
        "item": {
          "id": "42d6b9ef-68dd-4b9e-8c3c-54ea59bffb71",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "13fb39a5-d49a-420e-8113-4d86a29d0761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6eb823-facc-4dd8-b4e2-a20f8e32d948",
        "cursor": {
          "ref": "0b945e37-c1ff-48cc-a316-cc8eecff7afa",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "de375fcc-6b7b-4bc3-8edf-f994e9987b35"
        },
        "item": {
          "id": "1f6eb823-facc-4dd8-b4e2-a20f8e32d948",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "47351d67-98e1-4d23-8058-0f3c295ae94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5935a4db-54f6-47f0-aca0-0cb0c5870971",
        "cursor": {
          "ref": "5ccfe4bb-e972-4121-9a2c-41c7b6637152",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "09caabfa-da16-4b78-9421-6274c04fd687"
        },
        "item": {
          "id": "5935a4db-54f6-47f0-aca0-0cb0c5870971",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c45b0642-9c8b-4d35-b070-79caeb23e5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233e6bec-e822-4c52-a2ac-b6bbc2abb8f7",
        "cursor": {
          "ref": "060d3947-47cf-4744-9f54-3b4d4c022577",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d0a41984-1132-4f82-a18e-14a74a3cf6c0"
        },
        "item": {
          "id": "233e6bec-e822-4c52-a2ac-b6bbc2abb8f7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e307757c-6a63-492e-b64d-03e40d95d85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d2aa6d-283b-4ede-b4ab-c94282a4f38f",
        "cursor": {
          "ref": "3802fa22-b943-40f1-88e5-c1ab9356e077",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5afa6620-dfd0-47c7-9693-ddeacd5a95e1"
        },
        "item": {
          "id": "e7d2aa6d-283b-4ede-b4ab-c94282a4f38f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b1bce4b8-1b75-4b02-b2b1-c29a8c9c90f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463cc8da-9ea3-4ee4-8e79-c78a67ace63d",
        "cursor": {
          "ref": "2a31b9bb-ba7f-453e-8380-8b27b5ba1ad6",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "63adb6c3-a7b9-4469-83c6-3c352503493a"
        },
        "item": {
          "id": "463cc8da-9ea3-4ee4-8e79-c78a67ace63d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ab5aa546-dcf4-4284-8290-e89be3070a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9a37d6-7cb0-4c6a-a08c-129953cef759",
        "cursor": {
          "ref": "14ed4034-6f47-48aa-be0c-efb3f6749bb8",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7f39b360-08d2-4eaa-9a2e-6198517dd9ba"
        },
        "item": {
          "id": "1e9a37d6-7cb0-4c6a-a08c-129953cef759",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "422f3856-5de9-43b5-aa61-13fa99ba30e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5468e27c-a9cc-4957-94dd-74e82c1c3a9e",
        "cursor": {
          "ref": "9ded6ed5-f3ed-45ed-875d-3df1e81665c1",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9e9a7d5d-5a3a-46b5-82bc-27f833d39662"
        },
        "item": {
          "id": "5468e27c-a9cc-4957-94dd-74e82c1c3a9e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "72afe9a1-7748-4ca5-9057-8fa0a4653074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4130033-d783-4b1b-ae25-f33a2fc00a0a",
        "cursor": {
          "ref": "794953a3-c864-4b91-aa87-d111509730ef",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e0619bec-d348-40e2-9537-e49a39ff62f2"
        },
        "item": {
          "id": "e4130033-d783-4b1b-ae25-f33a2fc00a0a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bf2266c7-668a-484e-ae4f-a774bd96de46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e8612c-9372-47fe-aa00-75532920756e",
        "cursor": {
          "ref": "32173444-5bbe-4b1d-8777-318db2de4dea",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c21eea29-86a8-466c-99f7-f9d9afc29429"
        },
        "item": {
          "id": "73e8612c-9372-47fe-aa00-75532920756e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ecf6b815-c71f-4028-b1df-deaf4fdcecf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc76b83a-dea6-4e60-9f8f-48cc916630b9",
        "cursor": {
          "ref": "b54ff6e7-481f-4b78-bc5b-6ac7ab995a33",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3c675bab-15a4-47ca-9629-a6ac5b5162ea"
        },
        "item": {
          "id": "fc76b83a-dea6-4e60-9f8f-48cc916630b9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "48714e39-f2d4-4b05-af11-87755b04232a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a542b1-27b7-477d-976c-430524df6840",
        "cursor": {
          "ref": "9a294199-8368-4951-ac52-545b73c96ac4",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c19cb755-2eb5-487e-a2e0-a23aa2e4f2a2"
        },
        "item": {
          "id": "d1a542b1-27b7-477d-976c-430524df6840",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "039a5d1e-0e6c-42ba-b3a9-6a26abbae7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b080bfa-8d68-407e-8c76-ba9adbf263c6",
        "cursor": {
          "ref": "00a5d961-6143-4212-8ff3-b8e0a441c6d9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3da85754-0357-4c3f-8a98-fb53cd27fbcd"
        },
        "item": {
          "id": "5b080bfa-8d68-407e-8c76-ba9adbf263c6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f27b7077-6101-425d-ac9b-286c2f5650b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb78a9a-fc58-4649-ae42-524aa64390e3",
        "cursor": {
          "ref": "a1fad96c-8462-4d1b-b8a3-cf524fdf13eb",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e254d690-961b-46b5-a184-d69419237b08"
        },
        "item": {
          "id": "5cb78a9a-fc58-4649-ae42-524aa64390e3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7b2e7e82-65f7-4871-8ca1-c09d9b6ed2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570d53e5-62aa-4d04-8d49-1ee10a7da4c3",
        "cursor": {
          "ref": "12ef1c78-3b56-4f1a-8edd-399327acac9c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "90d5c8d6-4402-427e-bf0a-b6cc45c8d57b"
        },
        "item": {
          "id": "570d53e5-62aa-4d04-8d49-1ee10a7da4c3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a6c67f32-3941-4828-b7c9-87009ea154b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ae932b-a9ce-4646-99c3-c159df606a6b",
        "cursor": {
          "ref": "2ad4d4bc-9f8f-48d1-95c4-28f1df65d76e",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c85edfb0-3767-463f-828c-acb2f7070250"
        },
        "item": {
          "id": "d7ae932b-a9ce-4646-99c3-c159df606a6b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d818c1d7-8692-486f-b894-00e276f8a890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a95be52-e976-42c8-ac3b-116a1a412293",
        "cursor": {
          "ref": "7e779563-15c4-41ef-afeb-4cffd782a229",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "acfdc30e-bb26-4b00-903a-85db0b419cd1"
        },
        "item": {
          "id": "3a95be52-e976-42c8-ac3b-116a1a412293",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0a3c7464-fa0f-4b6c-84f7-eade462bf8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d02e4c-04c4-4d60-b751-cba55587fd46",
        "cursor": {
          "ref": "786c0c58-57cf-4d6c-b243-e46fd473da6a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "923e4c4d-795b-43c4-8be0-a87531b5fc7a"
        },
        "item": {
          "id": "45d02e4c-04c4-4d60-b751-cba55587fd46",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f89f9ecb-8f39-4345-a54f-ac4ab73cc65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924a29b8-9f01-487d-810d-aa569c0670f3",
        "cursor": {
          "ref": "f0df5ce8-7b91-4347-968b-d2ca0716054c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "960dc2f6-9188-47d8-aad3-6688075fe457"
        },
        "item": {
          "id": "924a29b8-9f01-487d-810d-aa569c0670f3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "56d39763-a82c-4efd-81a7-a9e594134285",
          "status": "Created",
          "code": 201,
          "responseTime": 2949,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "e55d88cd-7f77-48ef-974f-d90eb2d3fc3f",
        "cursor": {
          "ref": "2252f8bb-8428-45e6-9c4e-8bbc9d471da0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d211d59b-a158-41cb-b2e1-a8b21de9afc7"
        },
        "item": {
          "id": "e55d88cd-7f77-48ef-974f-d90eb2d3fc3f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cb4063ba-7a7e-4262-ac63-5c39f1ea63b1",
          "status": "Created",
          "code": 201,
          "responseTime": 2667,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "80b749c1-dd5c-47e5-a935-2b6a8a990520",
        "cursor": {
          "ref": "ec1dc212-9e08-4b3a-90b5-73a804e9d3bf",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d8eba864-8729-4735-951f-b9296e23fb25"
        },
        "item": {
          "id": "80b749c1-dd5c-47e5-a935-2b6a8a990520",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2119240e-e28e-4191-a83e-3f2eda31f2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f75a1b-a873-4cfc-88f6-154dfcca39cd",
        "cursor": {
          "ref": "1f7167ad-cd77-4851-8cba-37475256cb80",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "74f17ee1-33b9-4a03-89d5-d79ecdeb3b4d"
        },
        "item": {
          "id": "52f75a1b-a873-4cfc-88f6-154dfcca39cd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "723991f7-8bcf-4f51-b083-ee3888ca6a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1924abe4-7c01-4f06-92fb-28d72ff62df3",
        "cursor": {
          "ref": "2b4cdac2-50da-4ab6-8bb4-fe1dbed38b98",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6feadab0-048c-4055-91b0-1c38a74b5861"
        },
        "item": {
          "id": "1924abe4-7c01-4f06-92fb-28d72ff62df3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "04e963d5-b12d-44fe-af2e-7f235bf6ddf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152757da-e33b-4c41-ad1f-40831a37bf5e",
        "cursor": {
          "ref": "f2785413-a819-4fe6-a10a-a7047dafcbcd",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3b4ef3dd-45d0-40ed-94f6-5ec0281e1263"
        },
        "item": {
          "id": "152757da-e33b-4c41-ad1f-40831a37bf5e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "90ace97c-0845-41ce-81d6-eec26634a984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521b1b43-0c84-4568-9f1c-a7d8e239241e",
        "cursor": {
          "ref": "6c8e18e8-ccf8-4745-b7fb-459db7fc2974",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c26f4f51-3758-44d9-b77b-4012862b8a46"
        },
        "item": {
          "id": "521b1b43-0c84-4568-9f1c-a7d8e239241e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "644f04c2-696c-4b26-bbe1-8fed623e25f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89ab15c-6e79-4ac0-965b-ba8bf1053c2e",
        "cursor": {
          "ref": "029bb8a7-bf09-4960-a5f0-ea066929c965",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f4ee01f8-f488-4d83-823b-2bf5013ac9e8"
        },
        "item": {
          "id": "c89ab15c-6e79-4ac0-965b-ba8bf1053c2e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "091a01d6-70c7-4b19-bb66-b42aea860a83",
          "status": "Created",
          "code": 201,
          "responseTime": 2723,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "7fe90737-f2fa-46bc-abe7-470e5c671fa0",
        "cursor": {
          "ref": "43b0cc92-e160-497c-9097-6e64d87ad62f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0bce35ea-9830-491c-b0a3-87f58671c998"
        },
        "item": {
          "id": "7fe90737-f2fa-46bc-abe7-470e5c671fa0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "39b49e7a-a9f8-4c31-82a2-92953b68d8aa",
          "status": "Created",
          "code": 201,
          "responseTime": 2636,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "5c94da80-cb23-4f85-a0fa-bfa5c22148c1",
        "cursor": {
          "ref": "8591fb60-6b42-4ffc-95b7-7eb81d58c90c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a90ea42b-df23-44ee-9de8-a203df2bd833"
        },
        "item": {
          "id": "5c94da80-cb23-4f85-a0fa-bfa5c22148c1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9da4687a-6843-4258-a04f-a0bd103e51c3",
          "status": "Created",
          "code": 201,
          "responseTime": 2711,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "200b7ec5-70c7-4697-ba81-a22237eab5a2",
        "cursor": {
          "ref": "3da414c0-b796-4bca-889d-245737ec5500",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "649c60b5-47d8-4beb-9bd8-6bb64aeb53c3"
        },
        "item": {
          "id": "200b7ec5-70c7-4697-ba81-a22237eab5a2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "316315ce-e7f3-42e9-9f2f-6af5a5bc2e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6ef647-d6db-405b-a8fc-b26cda2c2f79",
        "cursor": {
          "ref": "18cc2063-bbae-43d4-821b-b66192fc08bd",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cc1fbd15-bfa9-4281-9c72-8b8fd2d1d757"
        },
        "item": {
          "id": "8c6ef647-d6db-405b-a8fc-b26cda2c2f79",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f9b0e22e-073e-410a-8c4e-3432a6e09f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa031c0e-a29f-428f-8e8d-3b6a3290b3f8",
        "cursor": {
          "ref": "df155e50-827a-45a2-bb72-23d8e0ed1de5",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "735448c7-2afa-4fd0-83b3-0ea27e4e17b2"
        },
        "item": {
          "id": "aa031c0e-a29f-428f-8e8d-3b6a3290b3f8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c7d822d8-289c-4806-9e4d-7dcd6292ae0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab7d7c2-de87-46db-8c16-6051df14a049",
        "cursor": {
          "ref": "91298b76-9a3a-4500-860f-e7d2a93b314f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5e4630d3-748a-4600-974c-dda9a93d2d56"
        },
        "item": {
          "id": "dab7d7c2-de87-46db-8c16-6051df14a049",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2e112c03-278c-479f-92dc-920ccbdc9289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a489d9-d84f-4d45-9ba6-f8ad3500c53a",
        "cursor": {
          "ref": "0f3b5ce9-381a-4361-8b4d-ba328f126425",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ada56d68-1b05-4895-8d56-d348f84059a8"
        },
        "item": {
          "id": "e0a489d9-d84f-4d45-9ba6-f8ad3500c53a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a2e5c1ff-f4ac-4d69-b4a6-34ef59783999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54de3e85-0616-4b56-a5eb-6beb39ca10bf",
        "cursor": {
          "ref": "9d17fcd3-0f00-4449-85ee-e2ca89b97495",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "707f13be-ee65-4559-87e1-f1b047b9b92b"
        },
        "item": {
          "id": "54de3e85-0616-4b56-a5eb-6beb39ca10bf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5ecd6fb9-c636-4c78-95d9-0c78afe28113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b078f5-765d-42bd-bcfa-aee1d19235ed",
        "cursor": {
          "ref": "5e2ca6d8-bb74-4bad-8b37-f5c3927f11ac",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "411083e7-ebd6-4de5-967e-19012cb49d22"
        },
        "item": {
          "id": "64b078f5-765d-42bd-bcfa-aee1d19235ed",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c9f6e5ec-198f-406a-831e-86889d0e6dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aced6cfa-2df1-4af6-83d8-33e7674cd20d",
        "cursor": {
          "ref": "1e4c09e6-57ee-4677-a2c7-c22926334751",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7063ee46-b244-49d6-8fa7-5ae529bd3809"
        },
        "item": {
          "id": "aced6cfa-2df1-4af6-83d8-33e7674cd20d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d198d31a-5227-4066-a68c-c1f27658e7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b66be0-ddb8-4af7-90b5-3e43e9b29fb1",
        "cursor": {
          "ref": "d9a76d47-eae6-4e3b-91d8-19455c8590ea",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "53f011a2-d485-44f2-8cfa-4b0fe57ec852"
        },
        "item": {
          "id": "65b66be0-ddb8-4af7-90b5-3e43e9b29fb1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "92d1a8e3-6ce0-4f3b-bab4-cee42507bc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115d9860-0a6e-4e57-96e5-351fb86bb70c",
        "cursor": {
          "ref": "d44dba3f-20da-4586-832b-e8b904845950",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d84e6e5e-8366-41d9-a8df-d30abcecd739"
        },
        "item": {
          "id": "115d9860-0a6e-4e57-96e5-351fb86bb70c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b849f6d3-1488-44fc-b53a-36b17021231b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f732824-ee5f-439c-83cb-26dee7944a90",
        "cursor": {
          "ref": "4488b5b1-0512-4184-93e1-33de6d83cbdb",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dea491e7-977b-439b-9231-b741b4d571b2"
        },
        "item": {
          "id": "7f732824-ee5f-439c-83cb-26dee7944a90",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "684787ca-0b08-41cf-891d-e479358ac8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20aa01c-b4c5-4bb5-bade-88482c162688",
        "cursor": {
          "ref": "35e6aef2-3b40-4e9f-8fc1-1fb96e685fa1",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "42de014b-6f56-4e73-a55d-5a382779200b"
        },
        "item": {
          "id": "a20aa01c-b4c5-4bb5-bade-88482c162688",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "72673426-0473-45b0-acdb-9f460aa91ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b304e1a-5b96-4bea-9d19-d7f0cc5ff7aa",
        "cursor": {
          "ref": "9f117381-a917-4489-a3cd-c1c41ead64a7",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3e6ddf28-7391-47b0-9a67-742db58394f4"
        },
        "item": {
          "id": "9b304e1a-5b96-4bea-9d19-d7f0cc5ff7aa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "257da9ce-ab88-417e-a130-52c51c55e1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406b3cfc-3aef-4e28-a14c-ed1dcef25c90",
        "cursor": {
          "ref": "9f98e5c9-45ba-4b4e-9719-21e997685cd0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3c7e6e95-e48b-46e5-87cc-622938470193"
        },
        "item": {
          "id": "406b3cfc-3aef-4e28-a14c-ed1dcef25c90",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "18cf5afb-f32d-44ff-9b16-56f6627243b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b0dcb8-ab61-416b-a201-89b4f60b6854",
        "cursor": {
          "ref": "c7c8c4a8-af1f-4381-b6a8-9bbbc665ae70",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9e80977a-9937-48d2-a106-95bc422ba83e"
        },
        "item": {
          "id": "41b0dcb8-ab61-416b-a201-89b4f60b6854",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "15768ac3-0303-4b28-9624-8f7af4f2e8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3488ba3b-6517-4648-ae94-571ff4151e07",
        "cursor": {
          "ref": "5c3228a5-a55d-4f8e-a147-4637535f47a4",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "37310811-5a48-4ab1-a16e-6a6833366dd5"
        },
        "item": {
          "id": "3488ba3b-6517-4648-ae94-571ff4151e07",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c0d56ebd-3c42-4f91-9673-6efe0b6e941a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47be847-967d-4256-b932-4a88f1e3698f",
        "cursor": {
          "ref": "4cb6a86a-0eac-466f-b8bc-921b83e97133",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dfe39e1b-939b-4e83-9ae6-f935201eab49"
        },
        "item": {
          "id": "e47be847-967d-4256-b932-4a88f1e3698f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3e1138f5-b36e-44a5-9e7a-7dcab694b54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344b879f-7041-4a00-ba2c-f98a9170ed8e",
        "cursor": {
          "ref": "a1bb70fb-2cde-4e47-a1e3-01e3011bf4dc",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "683df73b-62ea-4178-8f9e-4e7b86ce32a7"
        },
        "item": {
          "id": "344b879f-7041-4a00-ba2c-f98a9170ed8e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "402d5230-a055-4019-a74a-79d92ab489f5",
          "status": "Created",
          "code": 201,
          "responseTime": 2769,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "4516a98c-76e4-4a82-9fd0-84337093d44c",
        "cursor": {
          "ref": "afc13614-7bb1-418c-863b-4954287f66a7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "96f75f6c-bc8e-4272-b19d-b9a4464e7c51"
        },
        "item": {
          "id": "4516a98c-76e4-4a82-9fd0-84337093d44c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5c65c65c-219a-4ce3-b360-2b6c5a6c1826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15062bc1-a29a-4f4e-8771-95794e95dd73",
        "cursor": {
          "ref": "50e86996-2f74-4f5c-9538-a36e986ac877",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "44e78997-bfc9-462c-a733-936d57adb56c"
        },
        "item": {
          "id": "15062bc1-a29a-4f4e-8771-95794e95dd73",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "917ebabb-851c-4825-92d5-65e5a9da5f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb944d2c-c04a-450c-a110-8479be52c350",
        "cursor": {
          "ref": "cde5c756-dd35-484d-b356-b3f94ae66753",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "984f9e8a-1bfc-416b-bf28-ea80659244f4"
        },
        "item": {
          "id": "cb944d2c-c04a-450c-a110-8479be52c350",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1a459223-331f-4c81-9c4e-dabdeecc5f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4f3265-f5f1-4479-ba99-acf298d18bac",
        "cursor": {
          "ref": "1caba172-fd91-4ec4-9f93-cafced690290",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "25f7f389-8fb1-4277-9844-68efd1ab845c"
        },
        "item": {
          "id": "2a4f3265-f5f1-4479-ba99-acf298d18bac",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8db78ec0-5439-4417-ab3e-97d41e1ff92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da296055-cd91-4e73-a494-88df01b16a0b",
        "cursor": {
          "ref": "2575bf64-60ac-4757-b508-8e839fc6b7f6",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "35e5727d-c009-4e72-8363-1b64eeb6d96d"
        },
        "item": {
          "id": "da296055-cd91-4e73-a494-88df01b16a0b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0550b6cf-2471-49df-b3e5-f9a048d4a869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e87573-ec22-4f07-a0fc-16e6cbb59603",
        "cursor": {
          "ref": "8c25c285-54a7-4f67-a9bf-c29addafbdac",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "08eb8c77-ab7f-4662-a645-2aa58a70a37a"
        },
        "item": {
          "id": "67e87573-ec22-4f07-a0fc-16e6cbb59603",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f851f716-ab26-4c8b-b6d8-95f1457b2ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd49182-dac1-4c3d-b68f-4fe6b5ef7d1f",
        "cursor": {
          "ref": "6f7efc1d-d93e-4a4d-b939-35ba3af9a5f7",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fa3966f9-fe55-4c12-9c01-b305d0a403b5"
        },
        "item": {
          "id": "1dd49182-dac1-4c3d-b68f-4fe6b5ef7d1f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "382857fe-66ed-4ec7-8c65-c6a69febf8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4692bbb1-5115-4e9f-b245-578ddb869ffd",
        "cursor": {
          "ref": "2279f223-3433-4c66-b108-59ca0c54e144",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "271b67af-8892-4ebc-8cd5-302813e2cef0"
        },
        "item": {
          "id": "4692bbb1-5115-4e9f-b245-578ddb869ffd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1b2af63c-6d9c-4b2f-bbe5-d3e5ab77bcb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3579c3bf-63b6-4cdc-947b-a2639d9994ff",
        "cursor": {
          "ref": "b418ce75-0ed3-47f4-a768-a00a4d2bba77",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8286a863-6aad-48b4-84e4-20b067ab8767"
        },
        "item": {
          "id": "3579c3bf-63b6-4cdc-947b-a2639d9994ff",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fba43d7b-db8e-4a7c-a75f-aab04d635eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c814403-52dd-4ee9-af55-4d8cef1377f3",
        "cursor": {
          "ref": "aaaa01af-1705-4337-9f33-5d169e9974cb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dd706ea8-945d-49a6-a1a7-2f56cb3851f4"
        },
        "item": {
          "id": "4c814403-52dd-4ee9-af55-4d8cef1377f3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "69d81781-b2bb-4340-8d1e-bee51df578e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ca9aa7-bd50-447b-b29d-e3fc63c0c650",
        "cursor": {
          "ref": "18680b6d-5a8e-446c-a26c-8c67663acbf3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6484ed22-9e87-4a43-8bf7-471107569be9"
        },
        "item": {
          "id": "59ca9aa7-bd50-447b-b29d-e3fc63c0c650",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f5aef363-0954-49f9-9755-3c17d326b8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268da593-ef6d-4cef-9b07-689c7969e0ef",
        "cursor": {
          "ref": "ad9e0638-3013-487e-830e-878599a0618c",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "470583d6-07b9-46c8-bbda-6f6bb92fb8bb"
        },
        "item": {
          "id": "268da593-ef6d-4cef-9b07-689c7969e0ef",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3872c0f5-5a99-48e2-9ac9-981747663467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff2e50e-d28b-42ba-9f48-2fd08e652377",
        "cursor": {
          "ref": "bfeebc0f-1c97-46a2-b376-77ff53a1193a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3f692599-035b-46ec-991c-6516b26e54e7"
        },
        "item": {
          "id": "2ff2e50e-d28b-42ba-9f48-2fd08e652377",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b014f874-6f9f-4f8e-83e8-8acefd3c11db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4dc93e1-c500-4bce-b01f-74ac3b54ce03",
        "cursor": {
          "ref": "03b0fdbf-8b82-4683-86eb-e15d616e0561",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f09439ba-e59a-4140-a6ee-6f6c523bfa59"
        },
        "item": {
          "id": "f4dc93e1-c500-4bce-b01f-74ac3b54ce03",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5681a076-e151-45a6-8933-d629487a949a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2948a3bd-d911-40e3-82ff-13742a492165",
        "cursor": {
          "ref": "100cb315-12d5-4145-9e3d-c59137bef39b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3fb7b0b6-a378-450c-bd37-bf69ce26f512"
        },
        "item": {
          "id": "2948a3bd-d911-40e3-82ff-13742a492165",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "30a3d054-4482-4725-9784-1d464effb7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec667a52-6c81-4e4d-bb3c-5fd2487a20f0",
        "cursor": {
          "ref": "56ec7ed7-ea50-49e9-9ed1-ea7b372f55cb",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "12ae5a4c-64eb-491e-a270-826e2e684058"
        },
        "item": {
          "id": "ec667a52-6c81-4e4d-bb3c-5fd2487a20f0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a253d2af-ceec-4d9d-a1c6-443fda499e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f0cbd8-8d0a-4b46-a4ed-347952990427",
        "cursor": {
          "ref": "32898fc6-f893-4550-850b-1666df54970b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0623e372-8851-470f-8882-0b3866825739"
        },
        "item": {
          "id": "54f0cbd8-8d0a-4b46-a4ed-347952990427",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a2b909ed-eccd-4818-82dd-a72e24f71035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eca93f9-2359-4f79-b367-5c0c57124394",
        "cursor": {
          "ref": "0825ebf0-d7dd-4a2a-8193-d2fe021876c7",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f23c1ded-bd57-4377-a1ff-bd9653c5649a"
        },
        "item": {
          "id": "6eca93f9-2359-4f79-b367-5c0c57124394",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dc84ed94-8f97-4d63-b68c-b02b1b7c2ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489d245d-a88f-4a0c-b368-56a4f539b0f1",
        "cursor": {
          "ref": "cfb7a7df-1c06-47ee-a8d1-8ef05ba646c9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0bbd6a08-e7e7-4757-87b8-a0cdea767b4c"
        },
        "item": {
          "id": "489d245d-a88f-4a0c-b368-56a4f539b0f1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "301b2e28-2a99-4cc8-b055-8980e9a58b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbe5409-d826-45f2-852a-8ff768b39308",
        "cursor": {
          "ref": "39993daa-a7f0-423e-9f81-738eb2ccac37",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ace55746-ee96-44cb-864e-ef766f35960a"
        },
        "item": {
          "id": "2cbe5409-d826-45f2-852a-8ff768b39308",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "10131a39-84a8-4a9d-baf6-29f45d5bc23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aa5f84-4732-42e5-a255-6761b061960b",
        "cursor": {
          "ref": "bcdc00ed-3b0c-40a8-ac67-848a42f9779b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "17f7b6ba-fa4b-4624-99df-91ff52236d72"
        },
        "item": {
          "id": "10aa5f84-4732-42e5-a255-6761b061960b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d9f517fe-c007-4726-b762-33487bf4746c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccb7e90-3aac-410b-a1c8-de47d21481af",
        "cursor": {
          "ref": "6821d3cc-2b2c-4277-af9a-87ea59d12639",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5074fcae-d406-43c7-ad62-b08e6a501b49"
        },
        "item": {
          "id": "0ccb7e90-3aac-410b-a1c8-de47d21481af",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4bfbca55-7be8-40c8-bd58-354683cc1efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4de880f-89bc-4380-a3d8-c4a13ac2eded",
        "cursor": {
          "ref": "6877ae9e-165b-4f26-b712-02043735a4b5",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d2046e87-1ef3-4aca-983c-d40f26698e6b"
        },
        "item": {
          "id": "a4de880f-89bc-4380-a3d8-c4a13ac2eded",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "adda8970-3d49-4787-ad2a-6754444a1f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56bd926-ab42-4e28-af37-5a5722ffbf66",
        "cursor": {
          "ref": "dbb6735a-1811-4b58-bc11-4bf3c9044f25",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ca5c89d9-2188-4efe-bc1e-491f672074af"
        },
        "item": {
          "id": "c56bd926-ab42-4e28-af37-5a5722ffbf66",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "db2de1e7-72a0-4603-a1d1-8be3f6f1c30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9523d6-35b1-40cc-bf80-559fd7c9d8de",
        "cursor": {
          "ref": "35481f29-98fb-4b93-88ef-ad7170a9d911",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b512f6de-c8f5-4a3c-81a5-834fb1b16e35"
        },
        "item": {
          "id": "bd9523d6-35b1-40cc-bf80-559fd7c9d8de",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "46952765-254e-4e01-93c2-ebf254a0afb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176631e9-af81-4eaa-b154-b9817dd2bad7",
        "cursor": {
          "ref": "4e85b919-f814-4d21-90a3-ace6b7924269",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8309bc87-6d6f-44cd-a39f-72bb0d0a0549"
        },
        "item": {
          "id": "176631e9-af81-4eaa-b154-b9817dd2bad7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3c50d482-f4cf-4c8f-a0c6-4ad76eec1555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7660e0bd-0260-465a-bec1-43624236ec02",
        "cursor": {
          "ref": "664675ad-b920-4e57-ba28-429a9cc2a620",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aec9b8f9-972c-4504-8379-ff47598b502d"
        },
        "item": {
          "id": "7660e0bd-0260-465a-bec1-43624236ec02",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "926119e6-c622-45a1-bf55-f5073be25eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8573957-7961-45e0-878f-f56416a19399",
        "cursor": {
          "ref": "fa2aeebb-1a1d-412e-8414-ac62dfc57e99",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3c3f8867-783c-49be-9031-b9c1f99de4d1"
        },
        "item": {
          "id": "d8573957-7961-45e0-878f-f56416a19399",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6444e2b8-092f-47ff-8fbf-6ecafd54f329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56634c9-365b-44f1-a212-9b242bfbc601",
        "cursor": {
          "ref": "bda15b00-f2b2-466d-b0de-27aa51982641",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4c25203e-258b-4a9c-b2e7-72e030a2db64"
        },
        "item": {
          "id": "c56634c9-365b-44f1-a212-9b242bfbc601",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5d319e4f-44b4-4985-a9cd-39b467f38ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1788521f-04c5-42c3-a19f-4b10df8a2b24",
        "cursor": {
          "ref": "e7402383-3321-446b-a8d4-6e6cf608e8f8",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2674a192-09a6-41d3-80fe-eaf02e8cac98"
        },
        "item": {
          "id": "1788521f-04c5-42c3-a19f-4b10df8a2b24",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "90ffed44-1c59-4a03-921b-972dda14b335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa783d39-7946-45be-a607-88ec5802758c",
        "cursor": {
          "ref": "f105710c-3494-4f4d-bc24-576f4e66a48a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f610bdaa-5f64-49ad-a37f-3b4fcc36cea4"
        },
        "item": {
          "id": "aa783d39-7946-45be-a607-88ec5802758c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3af793d7-f119-4499-bbca-824a23e4960d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31d5896-57e6-426c-97c7-e634bf77dd3d",
        "cursor": {
          "ref": "0e3d3ffa-71e7-4a78-bde0-bc6f60bfa893",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c5b40bae-9986-4889-890c-10e0210b7bc4"
        },
        "item": {
          "id": "e31d5896-57e6-426c-97c7-e634bf77dd3d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cf656f43-7d13-4a0b-a18a-b9ca3894f169",
          "status": "Created",
          "code": 201,
          "responseTime": 2279,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aaeb2c0-f67c-4dcc-8ec7-21fab225c5e9",
        "cursor": {
          "ref": "6a444bf4-0aa0-4fb4-ae4a-2840781caaf8",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dc320153-7426-4876-9f7b-f802a67ec5a2"
        },
        "item": {
          "id": "1aaeb2c0-f67c-4dcc-8ec7-21fab225c5e9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a1f46c43-1642-4e78-9442-113481e9151a",
          "status": "Created",
          "code": 201,
          "responseTime": 2489,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0daa8a8-7245-4718-ad0b-7996b900bcd1",
        "cursor": {
          "ref": "2ff09c80-b2c0-49ba-92a3-42f534c019d5",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "017bf2b1-2f1a-41eb-97fc-83d890065f13"
        },
        "item": {
          "id": "b0daa8a8-7245-4718-ad0b-7996b900bcd1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c38429e7-4e6b-4886-8ad1-fa66585a9a5e",
          "status": "Created",
          "code": 201,
          "responseTime": 2894,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9292d20-07aa-46fb-a31b-380afa3cd878",
        "cursor": {
          "ref": "86f2516e-852e-477d-8bb8-c1ad2d04ca3d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ebefcf23-6e16-40d0-91bc-372f92ee0efd"
        },
        "item": {
          "id": "c9292d20-07aa-46fb-a31b-380afa3cd878",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2365eaf2-4c10-4c6e-b6cb-2f3f0cd60ceb",
          "status": "Created",
          "code": 201,
          "responseTime": 2476,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "821e68cc-3886-4892-a8c3-77d4e7a67b77",
        "cursor": {
          "ref": "18e188c9-5a3c-4060-9be1-9c0d9722f53d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d43d5f67-627d-4799-87b2-772246f84028"
        },
        "item": {
          "id": "821e68cc-3886-4892-a8c3-77d4e7a67b77",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7dac8f4e-d338-4100-987d-39777b759ba0",
          "status": "Created",
          "code": 201,
          "responseTime": 3261,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-08-07T00:41:01Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-08-07T00:41:01Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b45a5a11-0be2-4fcb-bff3-384c3f513b57",
        "cursor": {
          "ref": "4be67ac4-f839-40f1-b665-4aa608a28a49",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "81f16647-065d-4c0e-b120-6ec517e5f2e3"
        },
        "item": {
          "id": "b45a5a11-0be2-4fcb-bff3-384c3f513b57",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "45ab5d36-7b29-497b-b779-77a9bea3da75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "731cf25b-225c-4548-a2d4-ea92791829f5",
        "cursor": {
          "ref": "a64dcb0c-f211-4117-bf2c-6c33c8c7bac6",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7362e31a-6f34-4d4c-a937-901b8206e46d"
        },
        "item": {
          "id": "731cf25b-225c-4548-a2d4-ea92791829f5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5a502128-f70c-4b61-9f39-29973e0da373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb0611f-8d43-4779-bda1-bbf148d92dee",
        "cursor": {
          "ref": "362d380d-7c1c-43b0-ac73-b5f5c97c4f58",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0f90d1eb-dd43-458c-8f2f-175b665a614d"
        },
        "item": {
          "id": "5fb0611f-8d43-4779-bda1-bbf148d92dee",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "af88003b-4416-4b3a-a29d-15afa1ed0b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546edb9b-ce0a-47f8-a6aa-80704cd08a23",
        "cursor": {
          "ref": "3e730d90-596c-4c53-9e4c-a18dc90c9042",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d8df3f95-2f21-4771-bf59-dc3412649b7f"
        },
        "item": {
          "id": "546edb9b-ce0a-47f8-a6aa-80704cd08a23",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "aff75910-c183-4bd8-913a-ac038e209b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66825080-0d11-4021-9f95-4af8fafae89a",
        "cursor": {
          "ref": "f6f6a428-360e-4f30-a7fd-fc0c71d670f5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "23c62fae-defb-4fdf-b658-6cb2ec0e84af"
        },
        "item": {
          "id": "66825080-0d11-4021-9f95-4af8fafae89a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f6635990-e8f6-4a27-aeb8-25e303a5ade5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64f02c3-0701-4701-b250-4517ba297df4",
        "cursor": {
          "ref": "5e6a6925-6189-48ca-b836-ec5d1012bd64",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0d6a74fc-ac50-42e2-93b5-3b279cead1a6"
        },
        "item": {
          "id": "d64f02c3-0701-4701-b250-4517ba297df4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cfb133a1-6011-4f78-b4c7-f888cdb93312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b42c9fe-005e-4a1d-90fa-d0d6c366090b",
        "cursor": {
          "ref": "09ccfe65-6d54-4e37-a6e3-40b0cbd48ef7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "50746ea8-f8bc-465d-aef9-e5e84f1ea21f"
        },
        "item": {
          "id": "4b42c9fe-005e-4a1d-90fa-d0d6c366090b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "74d1d1b4-3f75-42a7-bd46-bdd36689191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b742b8c-267f-4372-80c7-ac257be0bc34",
        "cursor": {
          "ref": "bd69a14b-2ed4-40a0-945b-d71c0eaf6b66",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ff0e8cf1-938e-45bb-8eeb-337b72fa2a67"
        },
        "item": {
          "id": "1b742b8c-267f-4372-80c7-ac257be0bc34",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "213277c8-d5b7-4f71-aa18-ebcd478c81ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2742efaf-66fc-430c-8e59-327e81e913b0",
        "cursor": {
          "ref": "caf5d84f-32b0-4a14-b756-a003b3bb0190",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "404901ee-d81f-441b-a862-ce0b1f002c41"
        },
        "item": {
          "id": "2742efaf-66fc-430c-8e59-327e81e913b0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "002b4c84-099b-470b-a36f-06866319085a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec94757e-fa65-4dd0-a836-3c7125a703fa",
        "cursor": {
          "ref": "c5bd5f70-97ff-4c9b-8458-834ead515928",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9088ab96-4403-4cba-87f4-beee1cf4da98"
        },
        "item": {
          "id": "ec94757e-fa65-4dd0-a836-3c7125a703fa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "30b58f29-2914-4188-bd9c-941f6ad60df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635b2a59-5934-4c2c-a8b8-5f55a57d4b8b",
        "cursor": {
          "ref": "b74502a4-800e-4f11-a044-42236ee41b25",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4afb795a-2023-4e8d-8748-d856d596e75f"
        },
        "item": {
          "id": "635b2a59-5934-4c2c-a8b8-5f55a57d4b8b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "456757e8-3828-4a60-b0d0-5bbff32d6f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b8a078-8999-47a2-a9ff-fdd46b499acb",
        "cursor": {
          "ref": "c521eb78-a981-4b7c-8a78-f1cd9f239620",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "eb223d11-fabf-421b-aae0-8d772e1f5373"
        },
        "item": {
          "id": "31b8a078-8999-47a2-a9ff-fdd46b499acb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5ff24076-7930-41d7-b60e-0613920ae40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8930cbc-34c3-4e6a-903d-de1e3c187055",
        "cursor": {
          "ref": "868d45d2-392b-47d4-88da-443b50b1d170",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "71a9506c-6fb9-458b-a3f3-334daa548e03"
        },
        "item": {
          "id": "d8930cbc-34c3-4e6a-903d-de1e3c187055",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c64ad48-26d1-45a7-8c0c-0eb859b4e799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2767fc91-49ee-4fde-ab22-954d5514753b",
        "cursor": {
          "ref": "8f06dcc6-3d50-4280-8889-8c96095ba478",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d7ce8b84-2d5a-44e5-8bfb-8913ca1acf7c"
        },
        "item": {
          "id": "2767fc91-49ee-4fde-ab22-954d5514753b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5d1ac7cf-08ef-4711-b3b0-00456dded774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe954f0-e444-4f51-8881-0bc59283b7d6",
        "cursor": {
          "ref": "2c6153af-1a48-4485-ae64-ae1d6bce396a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e136f5f5-e3d6-4e48-9d29-d2399f8643a3"
        },
        "item": {
          "id": "ebe954f0-e444-4f51-8881-0bc59283b7d6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "399c2ec2-363b-4b8a-8a22-65f825f3e8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac80233-1bfd-47d7-9308-5ee67d00aadb",
        "cursor": {
          "ref": "2ecff080-7ab3-486a-a597-3b3aca3bad65",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "13f87cac-6ccb-4fff-a89f-f6d80137b144"
        },
        "item": {
          "id": "4ac80233-1bfd-47d7-9308-5ee67d00aadb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cd426d55-666e-46ff-b05d-5b8c2f3d65d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e045d46a-08dc-446d-bca7-0b4433569bed",
        "cursor": {
          "ref": "9210903f-1783-422d-9cc1-a2d07457a8af",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "578ef932-285e-44d4-8486-f7704d594745"
        },
        "item": {
          "id": "e045d46a-08dc-446d-bca7-0b4433569bed",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "513722d4-7136-46eb-bc11-5e8f4b7a5157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac1c94f-34c7-45d0-8a8b-ab38cab6c82e",
        "cursor": {
          "ref": "60412bc0-3f93-478e-a561-e11fc37579d2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f1d88d4f-e7ce-4dee-a110-bc072b149d9e"
        },
        "item": {
          "id": "fac1c94f-34c7-45d0-8a8b-ab38cab6c82e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "595200c2-fd54-4731-a130-dfba976c64f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216f6a9d-6171-49e3-9e41-4e826f5cb055",
        "cursor": {
          "ref": "7c646234-aa27-4122-9b7c-b7291f95d1d8",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "94e30318-7b95-4ca6-9ae8-c62638f766c0"
        },
        "item": {
          "id": "216f6a9d-6171-49e3-9e41-4e826f5cb055",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f05ae8b1-05c4-4153-9606-84a3e438d611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dba02b1-6491-4b74-ac01-67448119ba28",
        "cursor": {
          "ref": "467d051b-fc4c-4709-8c2d-2ee613d6be52",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1b4c1463-4e00-4efa-a3e5-0df4bb4ad8be"
        },
        "item": {
          "id": "8dba02b1-6491-4b74-ac01-67448119ba28",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "280c6898-024d-4d2c-b2a9-c1994aa6b9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fae3030-f3e0-4e07-bb72-f443a58234ec",
        "cursor": {
          "ref": "dd16b702-1345-4d2f-9458-83273db7a1f2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "601fd7a3-d5b3-4619-96d2-5a7ab1eb5d0d"
        },
        "item": {
          "id": "2fae3030-f3e0-4e07-bb72-f443a58234ec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "61b8e161-32c1-465a-942c-8caf098d9225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a308def-2d68-4b77-a2b5-ba10a3d0a085",
        "cursor": {
          "ref": "c95e86d4-107c-4aaa-949a-c97737bb7253",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "13075e86-4ad7-4020-b457-9d97bca020d8"
        },
        "item": {
          "id": "1a308def-2d68-4b77-a2b5-ba10a3d0a085",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "90684d1d-ae47-4834-81ec-f6e138fde333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f2bab1-ed5d-4323-80ef-aa0debf58022",
        "cursor": {
          "ref": "4557e2b7-5dd5-4493-8ece-8d3fdf152e63",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3f81486d-ce4e-4be9-a160-2f4b52eb4646"
        },
        "item": {
          "id": "e5f2bab1-ed5d-4323-80ef-aa0debf58022",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cae67b05-a6ac-4079-b79a-6562a5034dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54719b1-743a-46aa-8247-d0f282c48630",
        "cursor": {
          "ref": "7ec32815-495d-4eaa-bfa3-28fb892c3198",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f153e148-d1e8-483a-9156-71dd2d320568"
        },
        "item": {
          "id": "c54719b1-743a-46aa-8247-d0f282c48630",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3c4e43aa-4f5d-432f-ba69-9f7d75b83bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ad27c2-1404-4e95-b0fd-d7852a684dca",
        "cursor": {
          "ref": "68a91aed-76b8-4dbb-88eb-a450f3879da1",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a1f92a27-3b1f-4fbc-8e9c-39564bb0e54e"
        },
        "item": {
          "id": "c2ad27c2-1404-4e95-b0fd-d7852a684dca",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1c6f25b0-f052-43e0-81f6-4ec8bce5d172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3764062a-cbda-4ca3-beb7-a0bea69e28a6",
        "cursor": {
          "ref": "b8c38e5d-7743-41a3-b107-7477fdc4ac9c",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7f56cf93-d61e-4697-b3fb-0289c31fda50"
        },
        "item": {
          "id": "3764062a-cbda-4ca3-beb7-a0bea69e28a6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "14e4e762-22b4-4414-9b53-f394e821b8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0383b977-815c-41e8-ae17-062f4fc83626",
        "cursor": {
          "ref": "cd7bc6b0-1900-45a8-ab1f-96cd569dfcb2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ebfe103a-0d64-41eb-9de8-39332ed27d13"
        },
        "item": {
          "id": "0383b977-815c-41e8-ae17-062f4fc83626",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a917c693-ec6f-42c2-addf-2f7343ed0625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea30835-e66f-4515-8b33-813da909677e",
        "cursor": {
          "ref": "8d9ff2aa-379c-411d-bbb4-8d03b81d697f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f696cf3b-ec41-42f0-a253-2b0cc979bceb"
        },
        "item": {
          "id": "7ea30835-e66f-4515-8b33-813da909677e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "55cb79ad-321e-4481-9ab2-6da9e941b037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda36b8c-6bfb-43a6-a558-c68f67dde609",
        "cursor": {
          "ref": "d34f0566-d1c5-4454-93fe-a118a76e6eba",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "699d22c2-6ffd-4a9f-a595-59797e5d682a"
        },
        "item": {
          "id": "bda36b8c-6bfb-43a6-a558-c68f67dde609",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e169faa2-a38d-47d4-951d-a85d90376bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cedde7f-8b07-4420-af1b-7f485eb24c3a",
        "cursor": {
          "ref": "2928a742-09c5-4dd2-af33-79d9a991ca52",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cdff17ba-6fb8-4016-8eea-b890ac74b22e"
        },
        "item": {
          "id": "6cedde7f-8b07-4420-af1b-7f485eb24c3a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c2f0468e-c6ba-4ca0-9348-a6a46f326bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d25cc3-c451-4a00-9ff2-c8f7b190c83b",
        "cursor": {
          "ref": "1f7e4881-1013-4f51-a8fe-505f7d46dd04",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6d81e991-c361-4f3e-9e0d-e0700bb6a157"
        },
        "item": {
          "id": "88d25cc3-c451-4a00-9ff2-c8f7b190c83b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "61a5a16b-d3df-43b8-968c-5754d2203245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271c73c5-ede9-4aca-af57-f5651a7cadbe",
        "cursor": {
          "ref": "85cef576-1fde-4fea-9f96-cea539eb9123",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b117694f-6f87-4634-8b6b-f45fc11ffefd"
        },
        "item": {
          "id": "271c73c5-ede9-4aca-af57-f5651a7cadbe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aa16fbb4-482a-49fb-b230-a8808321e16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d9541a-6321-4ef2-a328-8a7ab7fd9e04",
        "cursor": {
          "ref": "a5066bd5-e584-4d97-b7ed-e7b92c88afff",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4925f38f-c6c2-4ca8-8d22-541426f9c026"
        },
        "item": {
          "id": "97d9541a-6321-4ef2-a328-8a7ab7fd9e04",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "94c2fd1a-1554-4d1a-8c97-47f939794e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29f63ca-d3a5-439d-933e-9cd58d69060f",
        "cursor": {
          "ref": "73a93463-8cea-41ae-8be7-90c91abf2769",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e2ffc181-21f9-411b-bcf2-f50f65ac33ff"
        },
        "item": {
          "id": "e29f63ca-d3a5-439d-933e-9cd58d69060f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b467dcb-1014-4878-a9f1-6c7d966edb96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e5ca64-d24b-4a78-bf8f-2d275906b343",
        "cursor": {
          "ref": "d13c2d3b-99db-4dd7-a96c-200f8c97fd33",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e0d74b56-7b6e-43a1-84ee-b1ec5fcdffc6"
        },
        "item": {
          "id": "c7e5ca64-d24b-4a78-bf8f-2d275906b343",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "321b5566-57de-406c-a48c-ea9bababa2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377ce7da-e3a2-4492-888e-51faa269f7ac",
        "cursor": {
          "ref": "38732b4d-5ccb-46a1-89e8-691f464f367d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e167adfa-e781-43f6-820a-eac733eb4c0c"
        },
        "item": {
          "id": "377ce7da-e3a2-4492-888e-51faa269f7ac",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0146015a-9f8f-461e-b02a-abe36b583da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e125676-1a6e-4a17-9aef-a2f469430b66",
        "cursor": {
          "ref": "f204b192-be54-4917-ac76-665fcdaf8bfa",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6c5c702f-38d3-4cb1-bf18-c332e702ee1c"
        },
        "item": {
          "id": "5e125676-1a6e-4a17-9aef-a2f469430b66",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a3229285-3ed7-43cb-bdfd-bf61adee0701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66daeeb8-e903-40d8-ba78-fe0a7aebeef0",
        "cursor": {
          "ref": "19f4e407-5084-4027-821f-35a58d9e3969",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a77a50b6-98d0-466d-91d7-0b5e5eee6448"
        },
        "item": {
          "id": "66daeeb8-e903-40d8-ba78-fe0a7aebeef0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "59b0020a-2f47-4534-bec4-812a03dd58fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d5b2fd-c35c-4f35-bc54-36fb13c62b09",
        "cursor": {
          "ref": "ca43faf0-7f6f-4a01-a778-e8563a59a506",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e5f71f29-2d76-4092-86d6-66a606e54e23"
        },
        "item": {
          "id": "66d5b2fd-c35c-4f35-bc54-36fb13c62b09",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5a5d143e-f266-49ca-890f-1f0798cdcd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4c70ff-41ef-4d8b-b352-229e52c64745",
        "cursor": {
          "ref": "1ee88404-70c1-4fef-943a-a7b4d179b561",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "edb540ee-d3b9-4eeb-8d5b-d150d43eb685"
        },
        "item": {
          "id": "db4c70ff-41ef-4d8b-b352-229e52c64745",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fb56cc2c-9a6e-4d96-98ad-3851fc699cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab761084-3da8-4b69-a4d9-8d9e4a19adb2",
        "cursor": {
          "ref": "bcc851ef-710a-4464-8e49-5c891a956fcb",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "723a2c42-c2fb-4d20-a142-38c40437eebe"
        },
        "item": {
          "id": "ab761084-3da8-4b69-a4d9-8d9e4a19adb2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "26aa57e4-eee7-4779-9c00-2f74c3db4149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e1c4d1-e982-409b-b901-d1cf4202e3e9",
        "cursor": {
          "ref": "8eaf874f-7e84-4c5e-995d-98630136326e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "43d9116f-a997-4c5b-8966-887f84aae2b0"
        },
        "item": {
          "id": "76e1c4d1-e982-409b-b901-d1cf4202e3e9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "29dec384-7864-4b2d-970f-294ab1abe719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6102f5df-4ff9-4a09-a01f-6e80eb914d5e",
        "cursor": {
          "ref": "049423d8-6a5b-4d56-a8b8-6f9e1d7b4c31",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d2c79aa6-8b77-4646-a78f-a01d07e2db10"
        },
        "item": {
          "id": "6102f5df-4ff9-4a09-a01f-6e80eb914d5e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6841cada-1c1c-4716-8bb6-dc853b18639a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a3d33f-aaa4-4da1-a3cc-8b663e993b1e",
        "cursor": {
          "ref": "4fb85d63-142a-4a43-841b-8ce34b8205bc",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3c99a01f-a1a1-4edd-a6ae-86bba112fb39"
        },
        "item": {
          "id": "65a3d33f-aaa4-4da1-a3cc-8b663e993b1e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9705c6f9-22f0-456c-a581-76238937d61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cce588-ef73-4121-ab95-3cf0aa0bba3e",
        "cursor": {
          "ref": "4d7ada6f-6b75-4c64-82ff-8e331746f041",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8c2602b3-326f-42f3-8a46-f7a48d3e6bdd"
        },
        "item": {
          "id": "63cce588-ef73-4121-ab95-3cf0aa0bba3e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e4a65796-1de5-4c76-88c8-f3a382464b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85382c93-b562-4df5-8207-2c4b55c2a346",
        "cursor": {
          "ref": "3cd64c7c-62aa-4a71-8e93-68068b42ab17",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5b95cd9f-9e8d-485c-83f9-64cbcaf52caa"
        },
        "item": {
          "id": "85382c93-b562-4df5-8207-2c4b55c2a346",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ac37458c-fdf1-429b-b512-ec985c48b495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33436ba0-dc71-4b9e-a63e-5ff3c8d5b041",
        "cursor": {
          "ref": "0ae87c4d-1668-4abd-a141-cf9022a612b1",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d1faa25e-4253-4bfd-8eec-6e6ee8a56ea7"
        },
        "item": {
          "id": "33436ba0-dc71-4b9e-a63e-5ff3c8d5b041",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fe5901cd-038f-4ddc-992b-ace5ebc09033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efabdba-1558-4681-949c-1246eeb6508a",
        "cursor": {
          "ref": "c12116b7-8cfc-4920-967c-d6f3d2d65dcb",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "420f4a6f-54da-4143-88b7-22aa14186003"
        },
        "item": {
          "id": "8efabdba-1558-4681-949c-1246eeb6508a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "566bb17a-74d7-41f0-865b-00319386d5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c272d17-6b35-4811-bfab-564164f0a522",
        "cursor": {
          "ref": "6bb2ba9d-1a30-423f-92e2-14f24459e07a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "904f9871-ccc3-4242-b53e-959e0c90efef"
        },
        "item": {
          "id": "7c272d17-6b35-4811-bfab-564164f0a522",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "25c97957-3678-435b-b5e7-51f1a5eab266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616a2d81-598e-47b9-86e0-0510a328a597",
        "cursor": {
          "ref": "d0b2ee2f-477d-4a71-8213-2e112f4d2ce7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ad45ac75-bb2f-4506-b1a9-f0a6c6def71c"
        },
        "item": {
          "id": "616a2d81-598e-47b9-86e0-0510a328a597",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "787ce3c8-4025-46fb-b7f3-ae59a383a811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220bc4bc-2db9-45e0-8966-136e563524b0",
        "cursor": {
          "ref": "fda14ba4-b617-417a-8735-215ee1f32d23",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "54f7abdd-9371-4ba7-9b69-f181c3a46f3a"
        },
        "item": {
          "id": "220bc4bc-2db9-45e0-8966-136e563524b0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e63580e2-9430-411a-84d3-47911297ba7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fd0d37-90fe-4f36-8726-09614b55d06f",
        "cursor": {
          "ref": "5f4a4458-2d9e-4d6a-abfb-046b46d62e70",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "940cdbc3-c788-4268-8dec-9e116c5e2f3c"
        },
        "item": {
          "id": "68fd0d37-90fe-4f36-8726-09614b55d06f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dbc8477f-8970-4219-acf8-263e37ba216b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2fddd0-dd3e-4dd0-b716-995a821877de",
        "cursor": {
          "ref": "101ff6fb-ac98-42eb-9f08-b7f6d279ff16",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "65b88630-6659-4d3f-84c9-7724bb4b9074"
        },
        "item": {
          "id": "9c2fddd0-dd3e-4dd0-b716-995a821877de",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "805f84c8-ed9f-45eb-a95e-ea07f25f2406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf9cb79-2480-4767-8e4d-665f21bc357d",
        "cursor": {
          "ref": "1b70b7ae-23bf-44f0-85ff-8e708c4b6df6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3b483191-9322-4feb-80c3-ad1afc436ce1"
        },
        "item": {
          "id": "9cf9cb79-2480-4767-8e4d-665f21bc357d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f8b6b5ee-edce-4bb5-a312-0d802e8ed9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3b1f9f-aa9e-4371-81e6-2542b4ada562",
        "cursor": {
          "ref": "6f86802f-3694-4c16-8df9-efbf0d85b759",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e90a9645-84de-4a76-b2db-269e0dac89ad"
        },
        "item": {
          "id": "8e3b1f9f-aa9e-4371-81e6-2542b4ada562",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5b622591-3535-4651-9a8b-cbe3c94352c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef751558-8e43-49c7-b31a-523280643288",
        "cursor": {
          "ref": "c5b32973-3f6d-4b4e-a6ec-81654cbd96b1",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "626a2140-665d-47f6-8ce0-44f99fe332ad"
        },
        "item": {
          "id": "ef751558-8e43-49c7-b31a-523280643288",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2e2ed993-8fe8-4d5d-ba61-bc4f83b93171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fce694-4e02-4ddf-9cae-d25fa5ca1190",
        "cursor": {
          "ref": "1a33c6cd-fc69-4749-8862-6c71030fb4dd",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cf57e3ab-f3ea-4180-8126-8ab79bd0a56e"
        },
        "item": {
          "id": "45fce694-4e02-4ddf-9cae-d25fa5ca1190",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a56b492-5970-4fef-b667-46766dc19adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc0af92-0f3c-4d36-944b-81598bea32c7",
        "cursor": {
          "ref": "49448b62-1757-4dfe-869c-3c4312fb6120",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "316908bf-0f8d-4422-abad-3f16935a65e7"
        },
        "item": {
          "id": "0dc0af92-0f3c-4d36-944b-81598bea32c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "289aa250-8461-403a-b80c-003d92fbcf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6edbbe2-432e-4bfd-9367-a4a1ae614379",
        "cursor": {
          "ref": "57b6e24f-c2dc-456e-86f8-703e9912cfa1",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4d68078f-e1a7-48b1-9497-88ff8428a6ce"
        },
        "item": {
          "id": "f6edbbe2-432e-4bfd-9367-a4a1ae614379",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "55b894f7-c8bc-4062-8ed8-5dd1edc95fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bf0d6c-3e6a-487c-86eb-d6123ce9c30d",
        "cursor": {
          "ref": "fb804f61-d20e-4a69-83e7-b21f226272df",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a0649818-0e2c-4ae2-a498-1a999ba7d89c"
        },
        "item": {
          "id": "f7bf0d6c-3e6a-487c-86eb-d6123ce9c30d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4c123177-0d68-47c1-9f44-7861cebd6e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee9c6eb-d08a-4b95-bcf9-8550916dd66c",
        "cursor": {
          "ref": "9f323e5e-56ab-4622-947e-7d6a114d8101",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "757bc1a8-822b-4637-93eb-bf82e980da6f"
        },
        "item": {
          "id": "0ee9c6eb-d08a-4b95-bcf9-8550916dd66c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6cda0ffd-2da0-4d73-b804-487d01a6592c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5143ea-821e-4a65-9600-8ed376e15ddb",
        "cursor": {
          "ref": "58e2c964-0337-43cf-821f-9816e6b92909",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aa026a31-7cde-4355-8ac9-a02645ae0b92"
        },
        "item": {
          "id": "1b5143ea-821e-4a65-9600-8ed376e15ddb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "50b86ecf-69ce-40e7-b22f-fc8309e5869d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da5aed5-cda7-4136-9ac9-087b2db2fb4d",
        "cursor": {
          "ref": "dcb6ea9b-f07c-4b3e-980a-86a20a1fded9",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cea96e0b-2e8f-4247-a8e1-b97acd8dc5ed"
        },
        "item": {
          "id": "5da5aed5-cda7-4136-9ac9-087b2db2fb4d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "806d5fdf-6598-4b3f-bd91-0c947998d4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b89c547-fe79-49fd-9fdf-dd28d28cf88d",
        "cursor": {
          "ref": "aebea572-663d-4ce8-9269-3657c3d18418",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7e82026f-e5b2-42da-bb86-a929bd514876"
        },
        "item": {
          "id": "6b89c547-fe79-49fd-9fdf-dd28d28cf88d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5984e010-3e79-4da6-9132-b2d25caed50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bce525b-c5cd-4d89-b1ab-fb5fa88ec760",
        "cursor": {
          "ref": "344331f2-2bdd-407d-9140-384e7f86489a",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e69a0801-0032-49ce-b1b4-f7ffcefd2020"
        },
        "item": {
          "id": "4bce525b-c5cd-4d89-b1ab-fb5fa88ec760",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "63d3b12a-4e5b-4aaf-b22f-af3dc9b8289f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec99095-20be-4e23-b659-d3855d3e9d6d",
        "cursor": {
          "ref": "dbdf6040-e928-44b2-95fa-c3bcfabea9e4",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d4957eb3-9232-492b-b770-b62503374b6f"
        },
        "item": {
          "id": "3ec99095-20be-4e23-b659-d3855d3e9d6d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7cf36d5d-32e4-42fb-b320-30c26babfff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c8ac22-9395-4f0f-8007-278854e13db2",
        "cursor": {
          "ref": "05e6583c-63b3-4615-ae66-3cacf253d8b2",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3f3583d8-9bcc-4a2f-b412-a2a7a65e100b"
        },
        "item": {
          "id": "78c8ac22-9395-4f0f-8007-278854e13db2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8709305c-e48e-4732-a7b5-3d9a1a2ffcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88d2ecd-a134-4d0c-b49f-21d1dfcd3d92",
        "cursor": {
          "ref": "df9f5ad3-95a9-4f65-903f-5f2bbd1fb3b6",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9762fb97-4a87-4f8a-9618-6b206e73c681"
        },
        "item": {
          "id": "c88d2ecd-a134-4d0c-b49f-21d1dfcd3d92",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4e3ed6db-2849-440d-a92f-5641318cf0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3192e587-010c-4e74-b373-55ae5174c895",
        "cursor": {
          "ref": "efa5f0e2-8985-484e-9537-dc882ede27f4",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "05179b9c-fc2a-4acc-a40e-f596341c852c"
        },
        "item": {
          "id": "3192e587-010c-4e74-b373-55ae5174c895",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "44447cf4-d52c-4492-9b97-6884bab7a430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e734e7-83bb-4886-8fcf-782aae4378f4",
        "cursor": {
          "ref": "b26eb7aa-f991-4bce-abf8-df4a823627d1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "949903f3-ed71-4c44-84b8-177ad742ca96"
        },
        "item": {
          "id": "63e734e7-83bb-4886-8fcf-782aae4378f4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "dbfd19c6-faa3-4794-9add-d36dba82f5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dd8bca-1bed-43c6-8f51-8486e32e9445",
        "cursor": {
          "ref": "1b2a6ff6-e379-48d0-af99-93ed4122ff21",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dc0c8b51-6b6d-493f-8926-88a61cf902ef"
        },
        "item": {
          "id": "f0dd8bca-1bed-43c6-8f51-8486e32e9445",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a9832e51-5027-40f9-a62a-8b3e5f6743b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30e71c8-e010-4fda-8130-149990b56479",
        "cursor": {
          "ref": "54dfa537-3ca2-4e68-b4f4-9e31c9063e90",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "52c61855-e77d-4647-a255-3eb3f4308d72"
        },
        "item": {
          "id": "e30e71c8-e010-4fda-8130-149990b56479",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c4280144-7d71-44ff-bb5b-dfb8b8324b51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9eef3e4-e5ae-42ac-8b66-8cec76b7d398",
        "cursor": {
          "ref": "21ffa2da-377e-4957-a48e-1cd818c7dafc",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a91d38c8-2056-401d-9d52-fd3e2e9bfdb3"
        },
        "item": {
          "id": "c9eef3e4-e5ae-42ac-8b66-8cec76b7d398",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fc93fd11-1aa7-4cf6-bcd2-3c148822b8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf458662-fbba-446a-9f84-5a19478bdba7",
        "cursor": {
          "ref": "d83586b8-8051-4496-8898-f0ae4e606231",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bf9adb57-eba7-4813-8078-5c6480f129cd"
        },
        "item": {
          "id": "cf458662-fbba-446a-9f84-5a19478bdba7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8f2adb4a-ab0c-4cef-b278-1fa7b711396c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca87837-4609-45b6-9bef-039bfae0b31e",
        "cursor": {
          "ref": "015c405a-da20-43e3-b813-98c420a9a8fe",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3a0bf96f-ce44-4658-be75-706590f8eae0"
        },
        "item": {
          "id": "7ca87837-4609-45b6-9bef-039bfae0b31e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b2b76efd-7d49-4808-bbf4-c177f9d51731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46701b6d-51d8-453b-9648-b320f3a87b0e",
        "cursor": {
          "ref": "9dba6c5b-7d87-4e2a-a241-47de2037e8b1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "19b83b3f-ff9f-4854-8c3a-eafa1f659be7"
        },
        "item": {
          "id": "46701b6d-51d8-453b-9648-b320f3a87b0e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9ed54e34-55cd-45e8-85bb-0d1fd7a7961e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f6f7e5-a3f0-4c49-9352-543dc9d6c3b8",
        "cursor": {
          "ref": "7ce0382f-c463-4346-a968-054ec1880612",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b4644d66-696f-4e55-9558-cb384edbdd08"
        },
        "item": {
          "id": "56f6f7e5-a3f0-4c49-9352-543dc9d6c3b8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b1130eb9-9cf1-4958-970c-cc67f69d61c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2075aa-ddc2-48aa-a6bb-ed404bf42501",
        "cursor": {
          "ref": "4c42c295-1764-41fd-b50b-0b985c24217d",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7555dd29-1e20-4b4b-827b-732aff6c9987"
        },
        "item": {
          "id": "6f2075aa-ddc2-48aa-a6bb-ed404bf42501",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f5650073-ecde-4464-a62e-e8073e71b39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e39256-7c20-4aa9-a009-9bbb2afbf6c7",
        "cursor": {
          "ref": "c83997be-75fd-4aba-9aec-631f9a234acf",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4a526d5c-047b-4a32-b038-e262c226feed"
        },
        "item": {
          "id": "c9e39256-7c20-4aa9-a009-9bbb2afbf6c7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e89eef52-5e40-461b-a47a-c26ef20e7910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febe8aef-0910-4c4b-80f7-0a6920356ff9",
        "cursor": {
          "ref": "23465248-5f90-4867-84e2-fb2f82fdc4d2",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "74a11653-2dc2-43a3-8e86-a7e368ebcd50"
        },
        "item": {
          "id": "febe8aef-0910-4c4b-80f7-0a6920356ff9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d3027000-c11d-4d00-b893-cdd3cc820c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38559e2-af65-4cde-a3be-2f5099821476",
        "cursor": {
          "ref": "bd580b9f-e579-4de1-b3af-b905afd04d1e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "471d6eba-b96c-43f3-8d21-538bac3324e0"
        },
        "item": {
          "id": "f38559e2-af65-4cde-a3be-2f5099821476",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cc500cba-e37d-4b18-baa0-a5aa817f9492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a467adc2-b5b1-4543-b04a-ae4772d9ed8f",
        "cursor": {
          "ref": "d9e937fc-bc1c-4008-bec1-b3995fbff6a0",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ff33cfd2-9d0c-44a0-a772-b6f01cece08b"
        },
        "item": {
          "id": "a467adc2-b5b1-4543-b04a-ae4772d9ed8f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6b9cc99a-4859-47ce-983a-6e4eaf847645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f808bf0d-85a8-4be2-9036-1be7d65a026f",
        "cursor": {
          "ref": "9dfe25cd-5c15-420a-b65f-b9b8edf1ac23",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4c66c143-8617-4d50-a761-e1f81e52a671"
        },
        "item": {
          "id": "f808bf0d-85a8-4be2-9036-1be7d65a026f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "edc37fd7-057d-49c1-bc47-2b3d5971fe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8125ee27-99de-4739-bb05-c0df6d1ce47b",
        "cursor": {
          "ref": "d53638a9-110b-4bdb-8dbf-840b2796fc25",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8ef439b2-5b67-4358-b6a7-3bc141863f3b"
        },
        "item": {
          "id": "8125ee27-99de-4739-bb05-c0df6d1ce47b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a70acb7a-a83b-4fa3-a3d7-6a8e7d294444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1836f1-d1dc-4e9f-a3eb-3dc0e5889495",
        "cursor": {
          "ref": "a1374f39-5f01-40aa-b121-04b95a349cde",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "864eefe5-c1b8-43e3-b5be-7971e613fef3"
        },
        "item": {
          "id": "0c1836f1-d1dc-4e9f-a3eb-3dc0e5889495",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cbaa4df2-d418-4c1c-9fb9-b928a0d9f266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090b4169-cf47-43fa-bd5c-4446916c5ed4",
        "cursor": {
          "ref": "ca16cffb-59f6-4560-a423-ee5c31808df5",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3256208c-6ddc-4e4e-b649-73caec8e4447"
        },
        "item": {
          "id": "090b4169-cf47-43fa-bd5c-4446916c5ed4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0f7b3717-84d9-456b-aca2-03cdfadfe8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21d82a3-c922-4a97-9c0a-0adb78feb430",
        "cursor": {
          "ref": "04d73011-9551-48e3-8fcd-af371538fd30",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "587143e2-9451-44e5-91c5-6f377429069f"
        },
        "item": {
          "id": "a21d82a3-c922-4a97-9c0a-0adb78feb430",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "437e8ec8-5105-4818-b6a6-a773fff865c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1903f9-6d4d-4d33-96d4-ed223ac40399",
        "cursor": {
          "ref": "14847b53-6948-4294-b741-735fdd13a5ea",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ec6a16b6-e815-43cf-b053-b528e6fe2f88"
        },
        "item": {
          "id": "fb1903f9-6d4d-4d33-96d4-ed223ac40399",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "daf6b1fa-aab9-44b7-93c0-ded6788d2e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e5d51b-52fd-48f7-be07-02705fbb10db",
        "cursor": {
          "ref": "3dd57a3d-ec36-4a69-91cc-286033212a2d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a3a1a8c7-4ef4-4f69-a465-aa1a37a91919"
        },
        "item": {
          "id": "16e5d51b-52fd-48f7-be07-02705fbb10db",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f9842f8e-2832-42ae-bc26-934e583fb88a",
          "status": "OK",
          "code": 200,
          "responseTime": 213,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "bfca8d97-7c81-499d-8480-85ddddc2157f",
        "cursor": {
          "ref": "05e609e0-15f0-469b-a16b-d67a199d5a89",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c4ac4bdb-0e2b-4f16-8943-886d9a27848d"
        },
        "item": {
          "id": "bfca8d97-7c81-499d-8480-85ddddc2157f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "015733b6-ac34-4caf-96e9-02911360d6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822c5e4b-2ffd-4cb0-80bf-4cd6a48cf480",
        "cursor": {
          "ref": "5816f2e3-9a15-4bf1-81c9-2d825b3bf473",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b5920788-5de3-4c5c-b1c3-880ec179236e"
        },
        "item": {
          "id": "822c5e4b-2ffd-4cb0-80bf-4cd6a48cf480",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4a618967-82dd-401b-a432-54fa2bd54f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba973ed-d499-4ee2-a72a-b760595a9f74",
        "cursor": {
          "ref": "b10966dc-00bc-45d7-88aa-9c497d20349e",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "53263005-df32-488a-b5f1-fa665ee15da5"
        },
        "item": {
          "id": "4ba973ed-d499-4ee2-a72a-b760595a9f74",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8f4789d3-e4cc-44f6-a438-f4675d429b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8bebac-bca2-497a-a799-8e093fe3d9e6",
        "cursor": {
          "ref": "adc1dc5b-7470-4df1-940e-6ef250429b82",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0a2d67dc-cf38-4f4a-8c21-34239dd76325"
        },
        "item": {
          "id": "1e8bebac-bca2-497a-a799-8e093fe3d9e6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "03ede17a-4867-4c7f-932e-099a3076377a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46da936-cc87-40a9-bbe6-1f98c7a0a6c1",
        "cursor": {
          "ref": "547a8e68-d14d-46b0-b5fd-0c9819f4c7d3",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c3a4b63a-d975-4034-b50d-373ce56c555e"
        },
        "item": {
          "id": "b46da936-cc87-40a9-bbe6-1f98c7a0a6c1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9264ddbc-ee24-4e8c-9fce-bf538257d4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c40ff44-211f-4fcb-807b-a6290b224c6a",
        "cursor": {
          "ref": "2adcf19a-da67-4337-8fde-dccf6a885acb",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f2be06da-9024-42ae-8a62-b4707b40728d"
        },
        "item": {
          "id": "8c40ff44-211f-4fcb-807b-a6290b224c6a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2bd40b98-12e6-4c81-bd84-598ad645ba04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fcfdc7-023a-4441-9368-db8ba1f01f07",
        "cursor": {
          "ref": "65b58f12-8fde-4872-aeed-90f039ab04c6",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "013ad68f-04ea-4933-8104-2caf307ca4b0"
        },
        "item": {
          "id": "10fcfdc7-023a-4441-9368-db8ba1f01f07",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f2b4fbb3-fb04-4eab-8a78-02b98d226163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a5a57d-0a36-47c2-ac2d-fe33f523393b",
        "cursor": {
          "ref": "d0f77971-61e2-4a34-8bcc-342d42ba9edd",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3525c0cd-d15c-41d0-9fc6-4485c53945cf"
        },
        "item": {
          "id": "23a5a57d-0a36-47c2-ac2d-fe33f523393b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5972e201-84a2-4391-b967-8b45d6264aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c850e0-d747-4530-b6fa-56cb74b61471",
        "cursor": {
          "ref": "eb61193e-ff2d-49ff-9064-5dab884b7c74",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c5c2a807-d7eb-4cab-90ec-db9273ddad97"
        },
        "item": {
          "id": "91c850e0-d747-4530-b6fa-56cb74b61471",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "653841e2-10af-4893-a1f6-1401014f6955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3b5f31-04d1-4d94-8c75-a48c5afd32a4",
        "cursor": {
          "ref": "d186be53-c7c6-42e1-a7f7-2b35178a5a88",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1acaa19a-426f-485c-903c-d98a03e465c5"
        },
        "item": {
          "id": "ac3b5f31-04d1-4d94-8c75-a48c5afd32a4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "09bd88ef-4116-43fe-8375-55c3a72453c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a775d2-570f-44df-9c95-7ab1633e144a",
        "cursor": {
          "ref": "8080b101-7de0-442b-8e2b-0adfc83c9255",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5cfdc262-54c9-401f-bd1f-3b8f3e1a7ced"
        },
        "item": {
          "id": "90a775d2-570f-44df-9c95-7ab1633e144a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "72ac8c20-b33e-4b25-9243-dee52b69bb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85644d7-7b32-4f5b-bd06-22c4c1810414",
        "cursor": {
          "ref": "14400b06-f0b9-4125-964e-a54edf02c31b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "daa7c783-3726-4e1a-81fe-be6e88784a33"
        },
        "item": {
          "id": "a85644d7-7b32-4f5b-bd06-22c4c1810414",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "14e41be7-210f-4ae2-99d3-45b7c9c15443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf2dd53-9423-4d44-99ed-6e0afd176c10",
        "cursor": {
          "ref": "36bb839b-8740-4f63-ba7b-d58cab157fb9",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "37ef4ab4-c6d2-4e18-b571-b3807d374ac5"
        },
        "item": {
          "id": "acf2dd53-9423-4d44-99ed-6e0afd176c10",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5712a24d-f3f3-44d8-b6cd-d1198a185b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f480d5-2427-43ce-a8e2-1af604f90d2e",
        "cursor": {
          "ref": "2c6c0120-1591-4a81-a266-8a59b5b7b607",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d231e39f-3ced-4819-9981-38b8ec17e8ce"
        },
        "item": {
          "id": "75f480d5-2427-43ce-a8e2-1af604f90d2e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ff8cced4-1801-4db8-ba15-aa40a4aac3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd31aaa-0650-4571-8dd8-69f5b06b7aab",
        "cursor": {
          "ref": "5b48c987-07ee-4ccf-b885-11cab8f7fb6d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "83fff650-eab7-4fda-8f4c-d3d94320f9cd"
        },
        "item": {
          "id": "dbd31aaa-0650-4571-8dd8-69f5b06b7aab",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "726ea5c8-65a8-46e6-bc08-f3041656afa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad72e0ff-6af3-4245-96cf-d5e1158d5c12",
        "cursor": {
          "ref": "8a14b108-5ae7-4baf-ab6f-4b91ec641dd1",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "db390cf5-ebf2-484c-91bd-8f3ba9d25466"
        },
        "item": {
          "id": "ad72e0ff-6af3-4245-96cf-d5e1158d5c12",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "22afbed5-6174-422d-a902-93e270283d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745ae950-6b81-4e6f-a001-356010cca3f3",
        "cursor": {
          "ref": "66dbaf6a-9e76-4522-a8f5-5a31900263a2",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5657945f-2156-4c92-b170-d0fd4e8a27b6"
        },
        "item": {
          "id": "745ae950-6b81-4e6f-a001-356010cca3f3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a38292e1-0dda-47b8-b865-91cee8ae2e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b77409-fe86-4463-9895-7e49166b0b90",
        "cursor": {
          "ref": "62d3dd1a-f0cc-4bb4-b416-ee17fc80f058",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4a75fe41-db33-4a57-bae2-3ccdafb6e6f0"
        },
        "item": {
          "id": "79b77409-fe86-4463-9895-7e49166b0b90",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3d96de2b-9e81-47b6-9bb3-eb82d26f267b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3530ef-bc1a-420b-a0ed-48ab5b25068a",
        "cursor": {
          "ref": "d545b0d4-28a2-4678-82fd-791d051edb2e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "643cb922-6bec-4be2-9914-726ba9f05a77"
        },
        "item": {
          "id": "ee3530ef-bc1a-420b-a0ed-48ab5b25068a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8597f522-5ba3-4523-b542-bbe419218c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05e9c59-4f24-404d-a133-68c25b1d3a8f",
        "cursor": {
          "ref": "165684ce-b77d-4ac8-8216-eba5612d39f5",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3f8b9c55-8fce-485a-8135-e8477d906f2d"
        },
        "item": {
          "id": "a05e9c59-4f24-404d-a133-68c25b1d3a8f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0a83ee02-55b4-4da4-81af-a5bffe773394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb297e2-b2d1-4c0e-b71f-f72a67ae38c7",
        "cursor": {
          "ref": "8466cb15-ee30-49d3-9ca5-7e497435fb1e",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e1ba7788-d15c-49c1-908f-dc58c867bfe6"
        },
        "item": {
          "id": "efb297e2-b2d1-4c0e-b71f-f72a67ae38c7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7438519f-0389-4af7-b0eb-b60c8e174d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4401f10-f840-4090-b2ae-af9808810e61",
        "cursor": {
          "ref": "38754442-ea94-49cf-bb54-93d442d50064",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6779530d-634d-4fd3-b3c0-45e65414ef45"
        },
        "item": {
          "id": "b4401f10-f840-4090-b2ae-af9808810e61",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "acfdf593-e1a4-4180-9a1d-d6f3bec4ca99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5b9199-7943-41a5-8a3d-e32f9df4c926",
        "cursor": {
          "ref": "395acf1c-1d89-49af-a3f7-9a9ecf622af0",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "10400a77-3cbb-47ab-baa1-4d6742dc3fe3"
        },
        "item": {
          "id": "5c5b9199-7943-41a5-8a3d-e32f9df4c926",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a2a5f09c-bbbc-4b38-ad60-1e44fb4e9315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209ee07d-ec4e-4d00-9442-ecd367ccad93",
        "cursor": {
          "ref": "45acf954-925c-4503-8b98-183d0f1bd675",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "62abd3bb-e05f-47ed-b214-06a38d012088"
        },
        "item": {
          "id": "209ee07d-ec4e-4d00-9442-ecd367ccad93",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a90e563b-1257-4aae-814e-5a5b3259ba37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7e9428-e316-4998-80b5-353b8a7f24db",
        "cursor": {
          "ref": "ab459a09-4832-4f28-b693-119790b65a75",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d309d1cd-15f2-4996-b331-b4012657b5f4"
        },
        "item": {
          "id": "7c7e9428-e316-4998-80b5-353b8a7f24db",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b783470c-89e3-45cc-9aaf-3b3a6699fe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffa20b2-3dc5-4d3e-9b00-58519cdf5e8e",
        "cursor": {
          "ref": "ad871daa-dbe5-47ee-a64b-1a7404e325a6",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "80faba90-16bb-4f7b-8d51-a844e694fd06"
        },
        "item": {
          "id": "6ffa20b2-3dc5-4d3e-9b00-58519cdf5e8e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c750fd87-52c9-4aec-9aa0-61bf59624481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2cd70a-a10c-49fd-95f6-516e0884324a",
        "cursor": {
          "ref": "b14c8341-3be0-4cbd-a8a4-3ee99add217a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ec904d3e-95b3-44f3-a5fc-e4ad5bb01b29"
        },
        "item": {
          "id": "3f2cd70a-a10c-49fd-95f6-516e0884324a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "86c89c63-69b0-42d7-af49-f880e0fcfc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78fbeb2-38fa-4e46-82d8-41fe0c206d6a",
        "cursor": {
          "ref": "ecb49343-0963-47d7-92be-727fa991591f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ae350a1c-f7c8-4af5-a2f7-0043f251d122"
        },
        "item": {
          "id": "b78fbeb2-38fa-4e46-82d8-41fe0c206d6a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f8571c2c-8a46-424d-9582-0091891b7dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e33375d-c202-4cf6-9d1a-4a5254676246",
        "cursor": {
          "ref": "7a2214cc-fc97-48ab-92b7-c259cad71326",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4316b94e-0585-425a-b103-197e9eb6981a"
        },
        "item": {
          "id": "7e33375d-c202-4cf6-9d1a-4a5254676246",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aa3b5a63-34c2-4746-a0e3-ac345919fdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6cbe23-2ef0-41f3-b28d-204983148528",
        "cursor": {
          "ref": "a52e1ac9-9bc8-4afa-a5b7-ab36f8984589",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3dffd631-b5dd-4690-ab81-d8f0193de433"
        },
        "item": {
          "id": "6b6cbe23-2ef0-41f3-b28d-204983148528",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fd559380-2626-4c6f-aa2c-4a956e0b88db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8ca4c8-9b8d-436f-9fa7-27d01bd8f4d1",
        "cursor": {
          "ref": "030cc78d-c08c-4f64-8179-e029d0439527",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9e4a3702-32d6-4384-ba46-a90df204442a"
        },
        "item": {
          "id": "ac8ca4c8-9b8d-436f-9fa7-27d01bd8f4d1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "32018385-dbc7-4afd-b33c-5dcc54938fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0607b107-0001-4451-9166-c5bd1bf459d2",
        "cursor": {
          "ref": "5a1cb541-386a-4e5e-9915-15eaf5d20e64",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7b15f234-9959-4e8b-b9b7-0ec5cdd1f76b"
        },
        "item": {
          "id": "0607b107-0001-4451-9166-c5bd1bf459d2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8492b8d4-aef5-4e09-92ff-a75c14273586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac5d754-c945-47d8-86a3-7c10f68c8f57",
        "cursor": {
          "ref": "c0959139-db11-4ec4-8eba-7ebd83155efc",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e679991d-6d0a-4708-b865-b44318b0ad09"
        },
        "item": {
          "id": "4ac5d754-c945-47d8-86a3-7c10f68c8f57",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1da0056e-610b-426f-99d5-5b1d5a2e20ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa02da5-ac85-4acd-a32a-044c3e2b61c5",
        "cursor": {
          "ref": "7a3fee95-abf2-4eb7-80fa-11ffcae89cca",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "30dcac60-568b-4ebb-8554-5d3b5d371287"
        },
        "item": {
          "id": "faa02da5-ac85-4acd-a32a-044c3e2b61c5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9271b3aa-d7bc-4e7f-8937-c1d98dbd3078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef4af0b-4f9b-493e-a675-38e362b7cd9b",
        "cursor": {
          "ref": "211abb5b-e3d9-4df3-adbc-bd95d9ca322f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "93d64aae-b39e-44ed-8fdb-8f8799930862"
        },
        "item": {
          "id": "6ef4af0b-4f9b-493e-a675-38e362b7cd9b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "17ddec9a-6cee-41e7-976b-d9a01e92ac4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af389ca-07f7-41e1-9e4a-92d00d278138",
        "cursor": {
          "ref": "f0033dad-dbc1-4047-996c-515f6e503135",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9beedeaa-ab21-44d9-9e6f-390467886563"
        },
        "item": {
          "id": "2af389ca-07f7-41e1-9e4a-92d00d278138",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bc32f259-dd01-4f3c-b732-568303251c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92d8e0d-b4e5-4f5d-a63e-ebeb5166a52f",
        "cursor": {
          "ref": "1cd52aab-6157-43cc-9703-334c2d239660",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c79f614d-cd5c-46de-866e-47811b988070"
        },
        "item": {
          "id": "c92d8e0d-b4e5-4f5d-a63e-ebeb5166a52f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c143adad-62be-47ac-9f54-7e789a5debb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2a9e4c-9c21-4fc2-a928-4c96140afd65",
        "cursor": {
          "ref": "5e9d400b-0039-41b1-964e-8d050c87a156",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "03719bb4-3117-40b8-a464-d64a9f0935f5"
        },
        "item": {
          "id": "2e2a9e4c-9c21-4fc2-a928-4c96140afd65",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c796a68e-7424-4cb0-86c8-b4d73dfa95bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a0d979-cd6f-4c4f-98e0-e8be9fa7c57d",
        "cursor": {
          "ref": "5b17c025-ac70-4e21-8c04-7a432123f19e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a994db1f-bc7c-4d9e-a904-d8fc9797b828"
        },
        "item": {
          "id": "05a0d979-cd6f-4c4f-98e0-e8be9fa7c57d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d319832b-d094-4fb7-950b-773b88feeb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaa2c4e-ba6b-4573-889e-005195ab0ef0",
        "cursor": {
          "ref": "0d6e8512-f6ff-48fe-bae5-53f49173e32b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f51f5c99-c56f-4112-8776-9bf844efcf38"
        },
        "item": {
          "id": "daaa2c4e-ba6b-4573-889e-005195ab0ef0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "71708258-2b0e-49dd-a8a3-93c08eee7f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ff072c-29ae-433e-952b-8a9741899d7a",
        "cursor": {
          "ref": "67ebc035-2f28-44ae-8d3e-47d0ad903d91",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "422d3b92-870f-43c5-a37d-88eb7d9fa59f"
        },
        "item": {
          "id": "b3ff072c-29ae-433e-952b-8a9741899d7a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "70dde5e2-61c5-4f67-9f63-e42e11ffd271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f687f70e-15bd-426f-9cdf-4ca062b2dcaa",
        "cursor": {
          "ref": "1d824919-2774-4f23-8c47-06b4d6fda3ee",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "56843af0-3d14-46ed-b37f-821868bdbcf4"
        },
        "item": {
          "id": "f687f70e-15bd-426f-9cdf-4ca062b2dcaa",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fdd17d94-2e3a-4e7e-969f-ab994de355b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0fd1ab-e636-4cad-ae7f-a8562c55c20d",
        "cursor": {
          "ref": "a01494eb-f8b1-40f2-89b7-cd61265470fa",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5a60c7f4-4c31-4442-9b04-dddf6ce05b68"
        },
        "item": {
          "id": "bc0fd1ab-e636-4cad-ae7f-a8562c55c20d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f7aa66e5-c5b8-413d-a593-98f1466febc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57de8a4f-fd35-4b41-b88e-e6d8078f0660",
        "cursor": {
          "ref": "1e3e936c-52bf-4cc7-9cae-90d87a80b417",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bc6d46ea-7733-455c-b657-bc701db0d7d0"
        },
        "item": {
          "id": "57de8a4f-fd35-4b41-b88e-e6d8078f0660",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6869c937-1d53-499b-a25c-3f1e06fba3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea48d6b9-d0a1-47cf-a5fa-7a9a4afe423d",
        "cursor": {
          "ref": "ff87ffb8-6409-4b7b-9258-1324a5027248",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4e3ce574-b2ad-43b1-b42d-13bfc4c990f7"
        },
        "item": {
          "id": "ea48d6b9-d0a1-47cf-a5fa-7a9a4afe423d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c4485006-31b2-4b2b-b825-7895df909bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeedebf-ca00-4161-9f39-9500d28a8027",
        "cursor": {
          "ref": "3abd6839-78a5-4777-bc1b-00b58598a218",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "52a2254e-2f07-4c26-9f84-4d3064720122"
        },
        "item": {
          "id": "caeedebf-ca00-4161-9f39-9500d28a8027",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ad8a0df6-3b7b-4fa5-822f-01de6c8b2c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f197cb17-50cc-4b90-9f46-da0e1842bd96",
        "cursor": {
          "ref": "370743d5-2be3-4b46-8e6e-6fbe3ccd019f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "aef3912b-b3c8-4f89-9302-a740328cf528"
        },
        "item": {
          "id": "f197cb17-50cc-4b90-9f46-da0e1842bd96",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b36018dc-cf2c-47bc-876a-e6dba409023b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67169216-8c82-4f7b-a819-1d282c963b80",
        "cursor": {
          "ref": "88b1c77f-9438-4f90-a99a-22b2b48989e3",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ed9186d8-1b76-4456-80a4-9d0be8b065a1"
        },
        "item": {
          "id": "67169216-8c82-4f7b-a819-1d282c963b80",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b883050d-e2fd-4b45-98be-59517a445132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514706ba-9f96-412e-8ae3-92c347a7d133",
        "cursor": {
          "ref": "508c0e17-86eb-484f-a7d3-4a2d8dc613e3",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a45e7d2d-2e1f-4489-a446-800292513311"
        },
        "item": {
          "id": "514706ba-9f96-412e-8ae3-92c347a7d133",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "72dc2c69-bcbb-4b1e-9c5d-59a2ee243486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9c585a-8a36-48f9-9bb7-adde019d77b0",
        "cursor": {
          "ref": "ad72e61d-2264-46c1-bb57-9fdb80d82542",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bb7c489a-6514-4f5b-a89b-8972905629d7"
        },
        "item": {
          "id": "8a9c585a-8a36-48f9-9bb7-adde019d77b0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "405afb54-7eec-4cc9-a463-966da5abd53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557c1b05-c787-4edb-bfa0-0555287b871b",
        "cursor": {
          "ref": "232945b5-6921-4961-add4-1f5fb83c543d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7da340af-7706-404e-a13e-5d0e3c4dbc90"
        },
        "item": {
          "id": "557c1b05-c787-4edb-bfa0-0555287b871b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dee771d6-e941-446f-96a1-618f289eb16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dc228e-bf84-4ca0-ae7d-4d0329244c56",
        "cursor": {
          "ref": "526cd5d4-ea5c-461c-805a-39cb449dab2e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6bd640ec-841d-46c3-be9a-72444d486c4d"
        },
        "item": {
          "id": "64dc228e-bf84-4ca0-ae7d-4d0329244c56",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "437e9462-0fa0-40a3-bb34-6208fcd38b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d34b82a-6dfc-4eb0-ae5c-80eb8dae1b2b",
        "cursor": {
          "ref": "babb8048-cdef-4168-b49f-fe10dc2ea531",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "01fc7576-383a-44db-89cb-4ff7146a481e"
        },
        "item": {
          "id": "4d34b82a-6dfc-4eb0-ae5c-80eb8dae1b2b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5aaa8ef3-3d77-4640-8cac-8580599b5bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940cc2c5-a175-4125-a595-62b87b63486d",
        "cursor": {
          "ref": "4bc09ff4-1537-49f3-826d-31d2c2cdecee",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f95ccf2d-f56f-426d-8f9d-6c9f90e1c3e1"
        },
        "item": {
          "id": "940cc2c5-a175-4125-a595-62b87b63486d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f87631ac-db95-4cf5-8512-da346fac9154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49cb94c-0c17-4875-b1c9-90be21894c76",
        "cursor": {
          "ref": "2fd95ad6-1629-4ed3-99b0-76e1040a2b3f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a6e82680-7b7e-4566-9b57-afc79cb0cd5e"
        },
        "item": {
          "id": "d49cb94c-0c17-4875-b1c9-90be21894c76",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cec9c147-4dd9-4557-964d-0e1945c2a028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614fa067-ea00-49c0-b3d6-6caf698c1707",
        "cursor": {
          "ref": "e04b062d-a553-4b35-8528-2d2c7b0bf7f6",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "681aaad2-58c2-47e2-9b9b-3693a9beaade"
        },
        "item": {
          "id": "614fa067-ea00-49c0-b3d6-6caf698c1707",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2a4debd7-7b22-4004-b938-5678cda0b010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0852f17-3cac-4164-bae0-f41897f5a5f3",
        "cursor": {
          "ref": "d902ea3a-dd3c-4070-8706-2c4a86571c2b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c6b91f96-401c-49e1-a266-babb71cdf746"
        },
        "item": {
          "id": "b0852f17-3cac-4164-bae0-f41897f5a5f3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4d7cd4f9-e436-4ffc-a095-d3ade7ca9c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7822f0a8-6270-4845-856b-67e11d2042c2",
        "cursor": {
          "ref": "dbefe00e-7fe4-40a3-aec1-84907dd819b5",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d2104763-8cea-41e6-9c65-369fd60ef413"
        },
        "item": {
          "id": "7822f0a8-6270-4845-856b-67e11d2042c2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "02eaa29d-6b2d-46b8-9d1b-d931f811bc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d363ba-7f38-4940-a539-f76b3579f19e",
        "cursor": {
          "ref": "4b936fb0-db06-44e7-ae94-6363d3f15727",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5d59ba2a-f5f2-46a9-95e1-6225668545fe"
        },
        "item": {
          "id": "d7d363ba-7f38-4940-a539-f76b3579f19e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d93451b8-94c0-46e4-8a5a-1558a9976050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d2bb5b-8ca6-4b4e-bdcc-2ffe89041e14",
        "cursor": {
          "ref": "c1fb0834-0591-4861-8458-b003eecb1513",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bb2db52f-7191-45a8-97c7-f89f71465616"
        },
        "item": {
          "id": "b1d2bb5b-8ca6-4b4e-bdcc-2ffe89041e14",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2411a286-0e62-44ac-b6e1-d19004a98356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c58f04-7395-4f85-8117-15ca8745237b",
        "cursor": {
          "ref": "accb3a94-e89f-4fa3-896a-c57bbe4db85d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "93731676-d8c1-4c6a-add1-6fb8519b3fd6"
        },
        "item": {
          "id": "94c58f04-7395-4f85-8117-15ca8745237b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "05ce6198-1f92-4178-bbac-413128b8b8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa04a61b-aacc-4bbe-a54c-98b21e1aa983",
        "cursor": {
          "ref": "1b223d66-436d-4127-aec6-3b481c199bc4",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3e6d6a4d-7755-451e-98d3-eec4365cd9b7"
        },
        "item": {
          "id": "fa04a61b-aacc-4bbe-a54c-98b21e1aa983",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "376d7018-a931-411e-a7c2-38b3749d1914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb58c52a-64e8-4974-9a16-cc0962f12e22",
        "cursor": {
          "ref": "7460e6b8-bd2c-40aa-bc60-d18f59f73f8d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "eb187983-b34e-48f7-b5e9-75f295b4bfbf"
        },
        "item": {
          "id": "cb58c52a-64e8-4974-9a16-cc0962f12e22",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3e618656-1d57-4e38-832d-aa3385e85fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cda2f6-4a02-47a2-8cc7-fc533e06b1e7",
        "cursor": {
          "ref": "219812a3-d105-44e3-b2c9-e2bbae1d3002",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5ad980f5-1282-4d57-86b6-7de42a5bbdd7"
        },
        "item": {
          "id": "19cda2f6-4a02-47a2-8cc7-fc533e06b1e7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6e0d6b1b-3f2b-44df-8e01-05b2291f3245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8aac28-3368-4db8-b5c2-e53d14683801",
        "cursor": {
          "ref": "8f42dd26-81c6-4ccd-a23d-4ba05a15589f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "70c89275-dd9b-4a32-9cda-b889661559d0"
        },
        "item": {
          "id": "bc8aac28-3368-4db8-b5c2-e53d14683801",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b22f3854-f678-489b-ac01-485b2042f487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed94119-8bd9-4d7c-91e4-3e61d6d09926",
        "cursor": {
          "ref": "f87e9672-4e4d-4d5d-8186-10fb51ce6206",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "07f134ae-fa49-4d1b-951f-f097cff8cebf"
        },
        "item": {
          "id": "6ed94119-8bd9-4d7c-91e4-3e61d6d09926",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a757c5bb-0258-4208-8522-24138fed0d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9d9d42-158f-4e07-ba03-01ceeb9fc6b1",
        "cursor": {
          "ref": "ecf56966-93e1-4621-b65f-d691ce1baae8",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "51f36d93-2b84-49ae-82c0-c3fbb4bfc799"
        },
        "item": {
          "id": "ef9d9d42-158f-4e07-ba03-01ceeb9fc6b1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "77341f8e-605c-47fc-ba07-cb5e982e4f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273b8545-c974-4e0e-a528-8197e7229ebd",
        "cursor": {
          "ref": "9c8a9530-2963-49d9-b5ad-b4fbd466bfc5",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "55288bc6-3fe5-4e5d-98e5-96b90d27d98e"
        },
        "item": {
          "id": "273b8545-c974-4e0e-a528-8197e7229ebd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "79663c27-5059-471f-97d8-8335314a2bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eecf1e7-e3a2-45a5-8648-a44c785bd51c",
        "cursor": {
          "ref": "a17ce0f0-89ed-4de8-92d6-d9d7d8d703af",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0e95bd3a-c04f-42fe-8572-55a1621a45d2"
        },
        "item": {
          "id": "5eecf1e7-e3a2-45a5-8648-a44c785bd51c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a6625999-0ec2-42e8-8257-f8cbd0c7175d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2180db38-07a2-4756-814a-1bd422071149",
        "cursor": {
          "ref": "b4486736-a7fd-4d96-8d86-60b04693dc46",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fcb7d7e4-0428-4ee7-b4a3-46eb90b33589"
        },
        "item": {
          "id": "2180db38-07a2-4756-814a-1bd422071149",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f89acec2-84e7-49a2-8ad3-df5f67b010e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff305d9-51d1-4017-afbe-bed9fd95f37f",
        "cursor": {
          "ref": "54d53a45-d632-4078-867f-69dde3e8b755",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "555ffbc5-8a75-4a57-a4f6-56ef1f966706"
        },
        "item": {
          "id": "7ff305d9-51d1-4017-afbe-bed9fd95f37f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2fcbbe2a-b96e-41aa-8a34-4debafcc29d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c3c677-67d9-478d-9fa5-7d735950c2e3",
        "cursor": {
          "ref": "67ecfc67-2cd4-4970-b793-cdf4866470f3",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9f0b5f6d-4927-4a7f-8e47-fd3e20745a16"
        },
        "item": {
          "id": "b0c3c677-67d9-478d-9fa5-7d735950c2e3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3f7f9f37-e4e9-4c66-8b8a-aa54e9056645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d07a62-5fe5-4cb7-a23b-e497a37785e5",
        "cursor": {
          "ref": "0890e5f6-42be-4f74-a9bb-ce756fdd0229",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9f1ca22e-ddfd-4767-a7a7-3fc9c626fc09"
        },
        "item": {
          "id": "43d07a62-5fe5-4cb7-a23b-e497a37785e5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "001af4e3-d33e-4f0b-b0d9-50b608d83052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148b3e0a-27a6-4f12-8780-2c3a07dc58a1",
        "cursor": {
          "ref": "963afbd8-f8cf-445b-b0ce-9d10e486e7df",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "042c1e29-c769-4419-9a99-b72a2819a39a"
        },
        "item": {
          "id": "148b3e0a-27a6-4f12-8780-2c3a07dc58a1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f1e3084c-68f2-4c94-b958-4c462bf53df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81086358-e53c-4fba-81fe-e9e9a012ea45",
        "cursor": {
          "ref": "d57ea1ad-d11d-48c4-9376-2f0cd72a3260",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0f54ac89-a479-4a9b-b877-90cff3a09125"
        },
        "item": {
          "id": "81086358-e53c-4fba-81fe-e9e9a012ea45",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "eadecf0b-4cc4-4984-94dd-cd194bea8ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6193ac-c583-446e-b242-e6d87c61303e",
        "cursor": {
          "ref": "23379c98-c797-4242-be5e-95a2b032c3de",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0b5e50fa-a951-419b-8a0e-0484ae28f9ff"
        },
        "item": {
          "id": "dc6193ac-c583-446e-b242-e6d87c61303e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7627531e-6362-4063-a4d5-6dc1528b8b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e79a22-2af9-47e0-8592-335913e04fac",
        "cursor": {
          "ref": "9cc48320-0b95-4a9a-90d9-9e26b804650a",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "348486d7-b0f5-46e0-bbb2-bbf64f4f3279"
        },
        "item": {
          "id": "53e79a22-2af9-47e0-8592-335913e04fac",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d06ce534-9828-4e15-a562-3b0627cfcb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08dff30-195b-4379-b05f-179f7211b8b5",
        "cursor": {
          "ref": "1437c3ba-ddec-427f-a1df-4db3ca52de50",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "474d049e-32d4-4615-a80b-55da09c76e77"
        },
        "item": {
          "id": "c08dff30-195b-4379-b05f-179f7211b8b5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "42c259bf-e21b-4e2d-b2f4-17bc0afb2b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09631f22-7a03-49d7-88ae-5b45d2904497",
        "cursor": {
          "ref": "23d04395-8a76-483a-b4f3-95ca9528b074",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f02e4e98-f861-444c-82b8-a6d825248c63"
        },
        "item": {
          "id": "09631f22-7a03-49d7-88ae-5b45d2904497",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9ea4566d-efb5-4bb1-8977-008291c90164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6d848e-f8f1-410a-bb2b-ee024ec81475",
        "cursor": {
          "ref": "89b6b759-9637-4518-a149-c3bf50efab24",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d90164cb-8713-40be-8683-8a2718248d1c"
        },
        "item": {
          "id": "3e6d848e-f8f1-410a-bb2b-ee024ec81475",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "03454d04-dff7-4bbf-b7e2-593c908e8eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20ea0be-0104-495e-be80-29cf57d2fbae",
        "cursor": {
          "ref": "a014726d-3e9c-4581-9f86-680fb82ae741",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1638548c-ea46-478d-bad5-d63cc4409319"
        },
        "item": {
          "id": "f20ea0be-0104-495e-be80-29cf57d2fbae",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "aaff0c30-617f-4f0d-8056-d86e77363ae6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3aa403-fc20-411f-9fce-5f98bd3bb9e7",
        "cursor": {
          "ref": "ee064770-7941-43e6-a487-c3125289ab1e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cfd50226-4767-4433-bc05-f7d93531140a"
        },
        "item": {
          "id": "bd3aa403-fc20-411f-9fce-5f98bd3bb9e7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c1c7f4de-f027-4c2e-80c5-57dbd7d41042",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf6b5c6-5439-471c-864b-9efa58a31866",
        "cursor": {
          "ref": "b5e22b17-e03b-4e50-8376-a2e3da9d9c4a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6cff5c3a-2994-4206-b615-e02bda0cbc40"
        },
        "item": {
          "id": "6bf6b5c6-5439-471c-864b-9efa58a31866",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b3383a71-4d6d-4863-9fb7-8641b4f5524f",
          "status": "OK",
          "code": 200,
          "responseTime": 2584,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0510af0b-b6d0-40cf-922c-8f24d344526f",
        "cursor": {
          "ref": "6a4227b7-35a5-49c1-86bc-b2ce11367919",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2ff3dcef-1c00-447d-b19b-c611031c35a5"
        },
        "item": {
          "id": "0510af0b-b6d0-40cf-922c-8f24d344526f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ea3a3a7b-9744-4774-aef1-4086cb28b285",
          "status": "OK",
          "code": 200,
          "responseTime": 2548,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aa38ca-5374-4c70-9491-df655064a187",
        "cursor": {
          "ref": "bdc85105-243f-4809-b854-b3805ed9e9c0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "306686b0-248b-423a-b807-da404344dd67"
        },
        "item": {
          "id": "d4aa38ca-5374-4c70-9491-df655064a187",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "220a637f-15d3-423c-97e1-3d17b5b1c22d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aa38ca-5374-4c70-9491-df655064a187",
        "cursor": {
          "ref": "bdc85105-243f-4809-b854-b3805ed9e9c0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "306686b0-248b-423a-b807-da404344dd67"
        },
        "item": {
          "id": "d4aa38ca-5374-4c70-9491-df655064a187",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "220a637f-15d3-423c-97e1-3d17b5b1c22d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a151c336-fd9c-401f-aa5f-728372c94675",
        "cursor": {
          "ref": "9251f5ec-c4c8-4f42-b047-675d399661f5",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7bdfc617-af1f-494b-89c6-abe9832303ce"
        },
        "item": {
          "id": "a151c336-fd9c-401f-aa5f-728372c94675",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "add6295c-51be-4af1-88a1-4d29c45603d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf8c79a-df8c-4414-9e38-74561514fab5",
        "cursor": {
          "ref": "c853bf56-e3a5-46b2-afdf-35df9e520edd",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8211135d-b1fe-4de0-bc19-d09b19e3b56f"
        },
        "item": {
          "id": "abf8c79a-df8c-4414-9e38-74561514fab5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d8968fd4-f87f-43f7-9150-49ddd310a21c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}