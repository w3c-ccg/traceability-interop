{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b5a6bac0-6cb6-4fba-8e4c-dea5cbe3c80b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a7968e7a-419d-4245-9d06-e35a950548a7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c711871-adf2-4b5a-b816-4b024f46fa9a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2f689855-4f68-4280-a744-6b02f6472a28"
                }
              }
            ]
          },
          {
            "id": "235c7040-fc07-4126-b2f0-8d8f5739a582",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f23c58f-e6ab-4561-8cea-271978543577",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dba705c6-66c5-4a18-a3b7-563ddce76edb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8b298af6-2d10-4913-bc15-8f2125ea68cd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3b398fb7-e2fd-4942-b44d-7b9c2d5d0b6b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30903bad-5472-4207-ac11-4a5da3215b9b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4072cea-522a-4914-bbba-f805bcc58913",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a87a8352-1c07-40bd-aa58-5326dd1fea17"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9703be77-13e7-48dc-9bc3-41f1539bfb5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "921dd93b-973a-4169-8ded-158fe491f7fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "964232f6-c788-4edd-bee9-1fb571a2535e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fa34f1b-eb70-48de-8652-bb72553eaef1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a24e3d5e-5701-462e-9ec1-080c7245a72c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ee8ccd80-4f5c-41d8-af87-b081ae131a3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2783bd2e-5bd4-4d3f-8e99-6ab58dabd610",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f19afa7-fb32-461d-8222-f3e35eca2d3a"
            }
          }
        ]
      },
      {
        "id": "cc5d5031-2af4-445c-b693-768b7ffff7ae",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "96774109-5495-4582-8ba6-032590b1ff1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35dcec36-e273-4404-a9b6-314a1f95c9cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "af884eca-619f-4969-9601-691955931528",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39c0008-a88c-4873-98ea-5e9b88fcb6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8b6a22d-7c78-432e-9e14-a112787ee0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de11b67-7858-4bbe-9194-115db2dbcd1a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea97993d-849e-4ec6-b138-361a88612d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3f6f998-3ae3-4038-9ef6-b5937a67ec65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8d722e-3c39-4fac-82a8-5aa33cf30510",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7158e374-44ef-4550-8b7f-1127d82299f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c050f058-ad2b-4126-8757-44dd8a47ef71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f6cc9f88-fccd-4244-aa2c-9efe2646086d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ccbc7dc-d0ff-4602-9026-ba6fac20513a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43865218-2161-405a-829e-b7d29df03256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce654f65-c722-46f4-9a80-31c3746e4570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8153857-4a75-4914-a5e0-b12637f053a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fa9f16-731f-4c5d-8a3e-505da3b0db3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "05ec2c67-6331-4f0a-a769-f71068d23f8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a311932-4981-4fb4-9a8f-c5b46f64d630",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1938e3b5-0896-42d9-9c3d-f71c9cc53f58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5bcb7eae-0901-4618-8049-05ce475c28ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6dc93528-95ba-4508-a228-52181bb4c2db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8a724fea-f83a-4568-988e-07d373379622"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e0b1bf2-5a92-47b1-8fe7-8a322ada4b12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fed859b-74db-4ae1-becc-fa6a7b737c5e"
            }
          }
        ]
      },
      {
        "id": "65351249-2981-4484-9228-3a53b1aa8c1a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "43b2c85f-af5d-403c-89df-231e00ad1897",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ab76a40-b506-4c11-8b70-7f4b2910ae89",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1fbcf5ef-3a01-44c8-8ac1-46d61e6c863b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223f393a-d651-489c-8089-61911876b9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6a1887-7e98-494a-8b0e-a7e3b066ac9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16df93a-86a4-4c95-9c39-a017387807f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d6edbb-bf13-4bf1-a819-caf9b58eaf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cbaafd-3e99-4778-817e-18fd9c416b4e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940241df-f98e-442f-bdae-a51e5cc9fda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3565296a-afaa-4179-8876-65748321b7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d841ea3-1d3c-46e4-b34e-d8d4ac43672e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b434e53-34cd-4621-8e41-412f7eb1b198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04cb6c1-c227-48ca-83cf-2eaa8a2dd5e0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c9ba61-3150-4018-8718-4dee4c64035b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd80f8b-9947-47c1-80dc-cbb7ad90b157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781b6cac-e50f-4405-852c-037faaa06325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a7802c6-86c0-4432-bbbf-0d04ffb215d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d1aed7-0ba7-460a-8926-ba65640e7bfc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1634cb1d-b645-4aff-b164-66634e306fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835f4639-7107-4286-8584-e9f0fe7d222d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3e99b0-d85c-423a-946f-a35eb74785d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b7d89b1-ff57-473c-bb6c-4249a553a40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d43c12-8fc9-4461-a2f8-674d849839e9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b4e919-7762-427f-877d-ee4a4d2a5f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bb9a58-8c13-41f4-8304-af554c93ecba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90adfb37-b880-4b6b-9b1a-63bba000d107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2969005e-0b52-40c0-932e-8d51eeb72f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fa4525-5f04-4e3d-902d-48b33fafcd7e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39357f7-cc4e-40cc-9278-72e9a19acfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a94491-68d0-4bbe-b2e0-ce232359a4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc34437-126a-49a8-9dd9-552f5e25c5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6fbf579-e5b7-4258-886d-1a8480a56eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee4e45a-135a-41b5-bba5-394ed7985b47",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407e97ec-3d25-4fa3-8e55-1e8d9f598643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8d72ae-86b4-4125-b7c9-44a102f2f2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf25e28-0fdf-4568-8f7b-a88f5b6a8bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c627b833-fa4a-4b74-aa80-37b254b50f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917c31b3-5c64-4c44-9a74-cd1c077f216e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c02a849-7ec0-4e59-8bcb-f00ab10d7587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa546a1c-0a06-4e44-a299-b127b032489a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89165a5-6ee5-42d7-b17a-6cccb93523bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61f73493-facc-4793-bc6e-4a147d2fcf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1269f60c-1dd7-4299-bc21-ad5d6fc908ef",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6b564b-ee67-4ba2-b8de-e330ff9e99ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2640c89-1dda-4244-bc23-93e8ead612a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c094d965-72bd-48e1-8673-af817ddc9f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e9838d0-d2c6-47b6-8492-018f099cd480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cd8705-7ab1-4c2f-8583-74a201928cd9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844969d1-668c-4505-b0f9-b68ea754bdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a0c803-39c3-4062-bd11-62862b7db211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad2959f-7310-490a-b177-6f550131b2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd1d1139-2e1b-42aa-8fa0-5a4349de2a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c256fbff-dcb7-4560-81a7-28ff6508a2a9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da06a0b5-58f3-47e0-8c74-7c14ee8fc4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c7976a-c1fd-47c7-92a7-54dff75b711c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e6f042-b094-4c14-aeb4-fea4e96ac749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8faad34d-925f-4f6b-9cb0-3c92a0e26dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08f5ae9-51b2-4948-85ff-087532b706f8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84622ed5-2aa6-4499-a960-be943a33b80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b045f8e2-29da-43a0-9aec-13abc19d068f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f66f34-0c8a-4893-a0d8-add61d9ccf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7dbb901-e92c-46ed-ad9d-8396cc846a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75eb5333-b66e-4124-92fb-15dceaa9dbb7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f466528f-12e3-45a1-aaa7-d63151462aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955702f2-7c87-4c17-ab93-d38de2db917e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02bdeed-e7bf-467c-8af1-9d5acf781723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7d5850d-4685-4f34-b84d-7ab144faa10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f6c18b-2142-4fbc-b9f7-309ca13ed1e6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30679622-3ee8-4eb7-b50c-1650ee39aaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db73fec-e8d7-4999-a2fc-70061b413a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d145fcc4-f10a-4ac6-9a51-57abb2ea3862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5edf7cb-184c-4f2a-b458-3d5d8f1cb131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4eb7a2-d933-45f5-93bd-7202b02eaa10",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7968ef2-7ff1-4c86-ab09-9523c2eedf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094e8d0f-74c1-4eb9-b71c-ed61ff5495bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36793bc-3cbb-41f4-ac2c-80fe23abaa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fb24c07-baff-48e7-a0a1-b1774a7cf3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb7a6e1-4533-4e52-80fe-71f163235060",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f445bad5-d385-4179-9f49-fd7a8934aa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2ffe97-546b-4e56-965a-6c321c5bb975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99791f4-4169-47bb-b3e0-aed48d46c9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eff6918c-c2a3-452d-8dc4-c3ef2192c8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ddbecc-eaac-4912-93c7-75884b4c6373",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf1dcc8-1b5a-47a8-8f69-6796f141394a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb95139e-ad6c-446d-81f7-93efd8611341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c3d070-3d50-405a-bfaf-de7952dfa8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32982184-0cd3-4357-abc3-6ae98cb288c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250f1533-fb0a-46d1-b746-a92803300288",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2056797-ba79-479f-af22-37d1d4edce9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b36d1d8-4c75-4d43-b2c9-de7a998e16f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee7b940-803f-4b25-aa63-d772a97f9c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1e9d3c-4204-4e0e-8bcb-f282d44c7a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4703ec-0d9c-4a16-a7a6-1949ab66d1e8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabbc82f-1870-48ce-953f-3a4e41a50322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d599535-0d94-4341-a6ba-fd9633095652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3efe596-e41f-4636-aff8-8ca7439b5ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7950a7-3e06-4d96-b751-a304824b439c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044c85a4-4896-4d16-bd97-0b8f2ff632fa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352707a8-b068-4066-b258-f57c710ad777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e877c3-21b0-469c-9642-552d0ea7b629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80707438-0b32-4471-ba1d-09c429d6e21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa9d04e-8a21-4324-9102-a93e134f1095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c28163f-f9df-4bff-80b6-fbd1c1101309",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2fda6d-d3bd-4d71-beb0-9fc37f3d791f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbd29db-eeec-4066-b890-8e25b6320e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1903c7-ac0e-47d8-878d-4551d355d299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9965cb3-1970-45f2-be8c-62cfbcff18b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a12381-bee9-46c9-b65a-f4e725e59fcd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4160fcc0-cdc3-4a46-bddc-bfe230125dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786b3da3-548b-4c4e-994f-a5e3c7415e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a33944-1b8f-4162-91bd-6889142419ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc311aa2-2932-411a-8807-6262a7b0bb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d422521-7c65-4971-8f8d-fc10b2e1b971",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638eeeef-88ed-44c1-9f32-e4dc159a2d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c422a2-3bf9-457c-b558-f56c81a54768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694daa54-88f2-4062-98bf-2a96772f5b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1cae8a-4397-46bb-84a7-a4b965052cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb32a55-e4f2-4a00-a5f7-567632bc27d7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedef258-12ae-4bad-8c00-68f49bbdcc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930afa2d-7c59-4113-9aaf-3a8acf2ffcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a943f08-d7c0-404c-9457-222b17223c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a498cac-ac95-4b82-89e4-da97c94bcc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a08362-d5d5-4f07-8ae6-6ac5d66f7e5d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa80812-6b23-4065-b8f1-ee46ceccb28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f17e89-ac2e-4e5c-bf55-67ecaaecc898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514a56a3-212f-4f9e-97f4-89268cb8b437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d261779a-2bf7-4240-8467-74f1551760a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda98e90-835a-42ed-a58d-26395b3b74c6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee26bccf-a306-4167-ac64-c04e67071045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1d44b8-ee19-4ebe-bc72-8b0152733406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d149ad55-1614-4b5a-87cc-72c2bf3efc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca31cd7a-14fa-4eff-b4a3-674e086344fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be225dd7-422c-43db-a1ad-8d6ab5796446",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b63a5ad-749a-4bf3-bfd9-b3004ba0d94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ac6d84-6981-4b30-a621-461a0e9a808f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673d1f85-a55f-4350-8783-a45e8e9cebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d26c053e-8121-4722-a064-451603a083ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dde6036-7a42-45fd-9563-a078841e0d09",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80365bbe-5f76-40e5-a227-6a0d155e1519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c82f89-8ec5-42be-a667-b2d24188784f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc71eb1-a355-4eaf-9764-c59a061b6104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f124bba-ef09-4196-80c9-fbda06f2e312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce310cc-7b37-4c0a-98cd-35380761ec43",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d986b8-8489-48c0-a665-3755de42b7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350471b8-0cbe-4954-b24e-60ff1041ecd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f1b950-b3c1-408c-97e4-3fbf459869bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8017cdde-876c-4f05-a621-bf7da62d29c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9005eb24-6721-4558-bf3a-77d5eed028d1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15abe98e-838d-4092-8866-c3ecc7eec3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7046ee14-51c8-4232-b51a-877c3babff5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8569cb79-5d22-42ed-bc54-b31cc9024490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee17364-4934-43cd-a6cd-a30039bd5b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d38a6ad-b3d8-4469-b342-d8798936ce9d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2a63e7-2683-4633-8b2d-698b646ecc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5b1ae8-5cb9-4660-9370-30a323c97d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700607a2-69be-448f-8afb-e456083df498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "607216a6-1087-4679-9e00-da5ea4eef19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f970cac-6435-4032-83e0-541310b60d96",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4184cd4-6b71-445e-9de0-30444ab1ae55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3a79f5-940e-4b6b-9994-e232c6eb211e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c78a947-d410-4074-a328-8fd5990a1545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27bf6fe3-ead0-416a-9b02-e4848d3f34f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0694cc1f-50f2-492b-b154-78ab6ba708ad",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565472cb-6dfa-4a6f-b96e-0d9b995c0888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ce2d0a-6c16-4744-b89f-c8d330c79e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ff755a-e5db-4a78-8833-04ae1087a31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad53d6f5-49d8-49e4-89d9-40c98d04ec58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01485f8c-92d7-436d-978b-e7f5ecf3a298",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5e6114-bfd4-4470-b172-ccdaf99307fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1c8319-09a2-4302-8954-c663458d01d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdaff7f-8fa0-422c-a590-71c6940e5f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66512012-cec6-4a11-b752-d0c0c867dadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa0a82f-6043-4900-b097-ceffaad87d83",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3caabca-6652-43ae-a8d1-d34258489c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902896d5-8fa5-41a0-929a-e685f8a9008b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8a592e-b534-411b-82fc-3d46447fb1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ead6ba03-4a1f-4e3b-bfe4-fcc8898c5f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3009eed-f65a-4a0a-bc94-de7b7c1f27fd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b57a8a9-7a5e-4bdd-877f-aa0a6286c2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ee87702-99dd-44a5-a943-f06bf1a3529b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004d297d-58a1-42a2-b749-2de55cedbec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70b02979-e8a7-4e6a-b64a-1764d06fb7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dc65df-2189-4712-b09b-e504aaff54b6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4f1f2c-b9c8-456b-9ea9-16426cfbe4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5008ed1b-2ef8-46e7-b955-3962d78af438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55aa824-109f-4f31-978f-67923d1fdc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9305d1a3-bfe3-47b0-9783-ff249c48521b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9420a3ce-9911-4d46-b6b1-5fd09adb358f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe6665c-114f-4b6b-8ea6-e44e436477a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad52c40-1795-483e-8a85-3a2a99431ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d8204c-8155-40cb-b6fb-1b2ba9b3b41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "71c45302-52e5-45db-a9a4-ca4c8b8fffe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb4a1f2-aa1e-4334-9cdc-f1ed0de03858",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55d7046-e95f-4b84-8c5c-61d7b566755d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb6a049-ac6b-4bb5-b69d-5c39d7d9da9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef3d893-a8f0-494a-8374-369413f5fe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a51202b-85f8-46ea-8500-cd4a6fcbf995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a182824-7f4c-4851-9a75-5ba96281f448",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de411ea-eb5d-46be-841b-1bcd0e69f316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c492af-54ba-4c7b-af79-fde9192819ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ae3bf2-5b76-4ff0-9562-93aff09617a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a460751d-fcdd-4e84-aad8-185ee6ff33b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ec87df-0052-4d9e-8ccd-68f963e5147c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fd24ba-4e18-489b-8c42-1338c11671f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f178e55-f959-4949-ac5c-23e6307ca480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e8c3be-a0f7-4e97-9f05-84e918d61f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "373685dc-e176-470a-9fb4-bc09467593db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a9334c-f132-42d9-aaa1-209ee71194ab",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d1a3a8-31ae-4e6b-86e3-daf1ab395a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b6f1a1-a6fe-48c9-a0fe-dae6fc2854e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a90feb-396e-4724-8195-4c2e5d16d691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3bade4-cde5-4403-8c09-a32c343a5afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0344880d-74a6-4c42-8e07-c055185f6471",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846417b5-4767-4e4c-bfeb-cdc9e1524cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345a8c09-0ba6-4d78-bfa2-ae9dbfb85f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c668911-5e3d-4c07-a68e-afb1a8a7415d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "70f06947-3465-40b1-b754-e00bab228608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5778d89-af1d-420b-b00e-34870a96a8f7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38776d82-a0a7-46de-9327-49d69e14d33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b7bee7-aecd-48df-9b3f-4488b3764ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4f718a-a1b5-4700-9843-8390656011ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac20851-6764-4193-8c4a-0a92ad13cdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155b1a04-c44f-4376-96c3-e98ec078e0ac",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0e82b1-9a79-46a9-9559-0eb50feb1aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7377e3-4b51-4de0-8c8c-3322169fc442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cf80a4-e046-4f46-9604-e8c92ce73315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcac6e02-c36c-4718-9daf-0fd8d091f2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849fea39-ac86-4223-bd02-4b7fe06405ac",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1d43eb-bc6c-4c20-8fa7-151362d3dcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46e2e7a-1138-49a7-8bdc-dfb07c2e75e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffc79c4-2ce7-4e65-a6ea-9f0b242a1dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e354846-0dce-4789-8f71-676345cb811e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf822892-cfc2-406f-bd76-6e01c1996308",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e860ee-a193-4c25-be17-32358972e0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08f4a0c-cbd6-4c0b-b634-c42cd50fd867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e36d774-22aa-41b8-bcfe-743ec205ef5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0abfbfa-27ec-4283-9229-e78e7901ed49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ce7809-e776-468b-bd13-8108e6035247",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a8c320-dbf0-4dc2-b982-fd6c98216e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec4cdce-e98b-4d24-a5fa-041706a89f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab46594d-ea2d-402b-a450-e1b827267fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc1121f-7de3-436b-951b-658dbd5bed43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0908758-a6cb-4591-bff0-f3be82fe6eb1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cdd855-3714-4682-98c9-c97d818629f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ac965e-7600-4839-8d1b-4664f443bc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ce8a4f-a88c-4127-9055-555e3f355e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5be81134-2e6f-446f-86dc-1c83bc078dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c156e53b-8830-426c-b953-54bc246946a0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d06d903-8b1a-4e87-9ee9-c015c2744105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b39beb-f241-493f-85c5-b394a76df3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d84d0c-9081-4ccf-ad48-c9ee07fde5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "224ba9cf-502c-4ed0-bcae-6a617413f627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5953e9-69f6-4840-bbef-db44bec0e0fb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeac6eb0-2b6d-42d4-8fc9-8fd56bf1829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afa2afc-0a28-4361-8daf-62512df54485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a061c76-4145-473f-bec6-b8a2458a7dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ff7824-e98e-4db5-8b9c-867a0ca5efc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d101dd-1ef0-4bcd-a00c-51789d6e9226",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0aec5e-1fe6-4bfd-bdc9-7ae0d6908c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f13bcc7-2de7-44e3-b370-6d5ba217ed59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f53ad4-78e4-48ff-a0d8-fbc8f3f051eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8443227-91ba-4420-bdf2-400bfc8e0dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb84ab99-cb3f-4095-868f-e9f12952ab3a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522049a2-b1b2-47c7-8a38-529a3a4db068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d1d083-7773-4f8c-bc58-bcda33a419a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91d334f-97f2-4488-99bc-279defc19671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5b8917-c631-457b-8117-058881cb6f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c78d8d6-31f9-4c11-a1f6-0eb1a4c2a441",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabe680f-e35f-4d00-9504-197d7f8626a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e10d2eb-301c-44a0-b875-5ece39a57869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ad3b94-a5f2-4a33-83c9-2ad756af1fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78b44718-9cac-452a-9e7b-41d59a66766e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8165324c-bf4c-492e-9390-6a47caf02a1a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ea400f-a97a-431e-b25e-50b71080a1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba02e776-2b8d-4471-8ef9-737821aae2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a10bc6-9ad5-4410-9cb4-304800bd7517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71722c8f-fb90-407e-be78-3801b80bd7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d93405-25db-4288-b4ea-64a17e04b1c0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f12673a-4d64-43d6-a52a-806430a207b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8239a38f-7369-4737-9608-3e40ba939d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eeb51a-a2c6-49e6-9de4-270e8b85a699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "68eb3a0b-3b9e-40f7-a528-e15f63c8fa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbedeaa-e76f-44bc-b6bb-5b545c258788",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff14b212-e74f-494f-8685-f5bfe44452c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a793b781-6271-458c-86e4-4633303bb0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8678b5-6eae-4d08-918a-83758e4b049c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eacee1cd-4016-48d4-8921-75b5bca7a1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c066f4d7-c102-433a-b484-d8b837471096",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2201ac8c-dae2-4476-b669-3234a36af0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20323d9e-2317-4dc9-94a7-9c5286fa7b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd82d780-b95e-40e4-812b-15bf1e748391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38653e79-bac7-4422-98e9-333a36ab2796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88fa837-dfdf-4c82-b78e-28eb76c60f43",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e585b644-d23f-4e09-95e7-ee7976fe21f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6713b8a-bbe8-4b3f-9c3e-1509650396b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48c2a77-4286-4898-8919-dcb9bcf992d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2db92a-6555-4ccd-99de-e9a3cf57616f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4153fdab-2aad-4ac9-88ed-d079bf6326ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eec9695-e812-40bb-929e-80a34657deeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dda5786-f2a0-4d5c-8359-02b67f8e1b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473ce983-7654-43f0-b3d7-a51cdf2bd144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49b898b3-df17-4a16-a653-2d2693dffd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944b71c2-7045-4871-a2ba-a1abc04dc944",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1904354-6adc-4942-a0b5-41a1ba23460b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5f10c8-464d-4425-9c28-a14a16edf3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104c178b-ed1b-42c9-85c1-67d45b14e1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "826a69b7-887f-46cb-b39b-56d1b3e954a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eb1fe1-f796-4006-a60e-7ae68ddb10d8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdc960c-658c-42fb-b015-886eb7e508d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40c6540-4a07-49a5-a71c-9c40657c3068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062c6fde-1bd5-48a3-b9e7-21e756ffab8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "03a965b9-69ec-4d3a-aa02-17d0e2daa0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf20da1-a0c8-4d14-be1f-4531991405f9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa8a9d8-bf8f-4086-8de0-0dcd914b4f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7751084a-30cf-4d70-abad-8b0254e95625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037da6f3-f959-45ec-8c7e-e451a40c8be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6456b00f-f39a-466f-8ab2-e571531157a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56489321-92e5-46c1-8025-3f78158e67e9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b08591-b27b-42f0-9bf7-9b3fafac9862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a7f658-41c9-4cd7-9420-db500b226022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d71af7a-c58c-4b47-bb94-dcc3957fca2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99dc26de-71fb-46af-947c-3500b3626fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cd5160-c85f-43c1-a3e1-4670f75fbe26",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d733085-ba14-4991-8bfd-3750d0f18803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5a603a-9aab-4148-9b45-96bb6cb0a708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e155de1d-2893-4ac1-9613-cd47cef30e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d66bce1-46e6-499c-bf46-38d37c8d4525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979fd708-9969-48f1-ab57-cf9c8eef2af9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10816f5e-40c2-400a-890f-2b68a8a3d4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4626876-fa2b-4464-a304-185894e3be9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd72c8f4-d78e-423c-b62b-1d8fce8bd5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d037e4e4-e0b8-4cdf-89fc-ea95dc38cdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a3446d-02b7-4896-9c1d-a7e68dadb372",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f8d32d-d7f9-4091-8675-80e0e7922963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7281899-5184-4e00-8d71-3fd48a2d5e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1bffed-6bd1-4835-ac1e-dd13d4528b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02f7c9e6-4c67-4af1-b1f1-1a9e2d7e8f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3241abf1-40d4-4d57-85b9-f7e8a16282e3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fb16ea-be5a-40a9-b25d-7000143c337b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164e9a1f-10cd-4e09-b449-509b800b9920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214fa004-5817-4eca-876f-8ce729cc7b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaccf12a-8ee2-4050-9b59-c22d5a5e3aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7280526d-6d73-468e-a1ff-456470509779",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40418555-7f82-4420-8a0b-31cf00bfcb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24028191-9989-48dd-9481-8798ab898671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02aca731-9230-4be5-ba52-cc268addcc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "316ea904-bb41-4b1f-80ce-8d69cd541c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9896bd8-dd2f-436e-9e0d-32e8a0026dcc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cdde5d-19cb-449e-98da-795adbc80878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03d9a9d-ffd3-4a6a-9104-d070924290e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efeca2f8-fc95-4218-a133-bbc9edd4da1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1fa9ff-591f-4b88-89c4-59e4a039ff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239c931e-f8d8-42b7-af4f-d2b685444afe",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e0a7c7-44b4-40c0-947f-c7f69ae03451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa22270-19f5-4e04-b008-3556ddbddc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e062b07d-4f55-4e17-a6ec-14419497b8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19627e3e-8bf1-4178-a2b9-d38e843b50a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaacc45d-a76d-44ba-88f0-350aa468558e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5fe9c7-fa3e-45b3-b4bb-d4332703523b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fa9852-9d2c-442e-9b20-019f7a7fa2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d7f652-7192-40ba-8223-3fc8e4b47d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d89290-c3f2-4a54-b4df-3d3d82c0e10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef843227-9f96-480b-ad5e-7e601797f1e3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1baf33-9678-4aad-96cb-39455269436f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a07ad56-ad19-4521-aad1-088754adf4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f257e94-61b3-43b7-ad31-586ae5499f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd6220d-3343-44fb-8523-a2493a0fa669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33680a74-d722-45f4-bbcf-88149036df4d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb00c80-ea05-445f-bdb7-5c77998aa57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5abddfc-8e10-4bad-aa49-253c48d67c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af08dd4c-df7f-4734-863b-a85f2ecfb160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32d4d992-b1d2-428c-bf8e-ec0fbf946ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d109f0-3a80-4c81-b92a-334b47d3ded6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c0628d-a2bc-4146-88ba-5a95111d521b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2962c6dd-003f-4ff2-a8f3-22d800ac348b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950bc00b-ee08-4b04-9594-04ebef789940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2605fcc8-2e7e-4758-b720-8befb285c417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbff0422-4098-46f2-9b05-322b613ed115",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4036f8-ca85-4776-b9a8-cbcdca3d33fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4287e6a0-b743-4e55-9f4a-111d8529ffa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b58ac1d-9b7e-407e-adc7-8faeff902b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae9c059-cba7-4eba-aa0f-f14755b71619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38274f1b-12b4-41ee-a747-78dee4683319",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b91e3c-c7fb-416e-8ee0-13a024ebdfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9858ae4-139a-4d90-8253-497e9a4f469d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83f04e0-3255-4f21-a090-7930fd2b09e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1e44ba-64c0-4eb7-8c4d-8112dfd038a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827a0b15-8745-48a0-8e05-e618c92bf7ad",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89678885-796f-4cac-9af6-67be38c9dded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4974e1ba-f572-4e56-abba-f1818f3579a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa238174-1d15-41ef-90fd-0f068a2e3249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f947ce-22c1-49a2-8d8e-ae89a1c0ccd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7e0cc4-0596-4729-a6ac-6aa0256ab8f8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ece1c61-7644-49c4-8fcb-d89ba5657291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d973f134-c2f3-4e3d-8632-a505ba98bd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b02af4a-430f-42df-8495-30d4b8862af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e390c6-2c56-46fb-9148-cec34cb9967c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89972aae-255d-4c0c-ab63-0cec3ffe9e11",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e276813-ef42-4b8e-80e7-aa9d7f561560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f489ac57-d137-477d-8c35-893f0a23de2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0a03f1-4706-4f01-919a-324001d3a8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96db586d-e7b9-41cc-ab04-79948fa87886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8e1d27-a3c7-4df7-a226-454f75f17806",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3be70ad-c26d-4e1a-8608-01130f6dbe12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabf3da1-f7aa-4cc6-81bd-e5517b958c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5d90cd-5f83-4d91-aa6c-6cad9399ff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "77667180-1c12-4d21-8c04-c129ce274432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595e7e13-8b09-4e3a-ba96-352fe551c877",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8cc5ef-2acf-4e06-b90a-6c843c5e2f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29348e38-f683-4896-8bd2-b69aafe87531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7a38f3-a134-42fb-bda9-153e9f2aa09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a816af50-6d9e-43d5-aa72-0e65a3695fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2257ac47-8aa5-4aba-907e-f95bff020847",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b869851c-3af6-495d-857d-9ed8c39cf383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6636b3c-8d8d-43b9-8a5f-e57a31613d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7939a6-da04-4376-a2ea-0eac8228d3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "905f1a2b-92ac-4c5c-86a0-a2f8e0d91cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd95942-c6d3-44b8-8198-47507d930d03",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9973fc06-ebaa-4800-9dea-586c61b82f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f28403-d422-48dc-a266-a4700faf39a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2904ef-f9d6-4ac0-a8fc-981f108311c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7fbb8b-8578-4c03-8a40-b9f68c39d17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689ce3f7-c571-4250-8080-276fc0e14fcc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c431f5f5-fe69-498a-b8d7-6116210ade73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b057f03f-d3ec-4c2c-bea5-487fee783025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c57302c-7e30-49a8-b334-e70e65c3b845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e87d4d-0c49-4b4d-ab73-229d9290712d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ba927a-81f5-4e27-ab96-ebee3ea526fb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4a1d04-a5fe-4735-a22f-359291674457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9e327c-3af3-4e46-8ce4-d3bce55617b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dd77a5-67bb-4463-a067-f12165bc6650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee6d9f3-9f2c-49db-8439-6f59e73fce03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15ca2dd-efc6-4c1c-b0a1-728ee6469c4c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75914801-7fc6-41ff-91c3-7b8dec760d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ca740c-fe7b-4b35-b0a1-5d2501690ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3953732c-c9a0-46f1-8ed2-a2d29e82ea29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "89b3feb5-6b6a-40de-b9f9-1daf90e7dce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dba232-47d3-4c15-8812-319ef29f1d13",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090d387b-3bf8-4e5a-8214-b77df6988fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4bca73-6fc7-4f09-bb2a-d2b8790b59fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e0006c-1ebc-4981-8f80-b2a4197a51f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43f7be3b-2bc5-406e-9990-08a6dc2574ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407cf7be-e735-4436-b052-0f6bac160ad0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e973ea3-f779-4b80-bb1e-b9ff32f05c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1359507-cc44-4bf8-a8a3-d6d3c123f1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084c8b16-0038-43a2-9ec6-a314dfb7a603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "30cc5468-e766-46c6-91d4-7bccaf70a198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978af362-fa80-496b-81c7-685db351b6ff",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20228261-42c8-423a-bcb9-c7e3df3a5ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cde9edb-6d44-4037-ac3e-95d313aba4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf8f7ff-d5db-4fa4-adfa-0a2278f7d76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "992388cc-2a20-48ae-8ac4-b6d14f92e89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e601ab38-db5a-4a19-9c6e-3543762ccaec",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b785780e-9f83-4e3a-ab5f-c6d41d4ce79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3cc265-e7d1-484e-b711-b831f6fe6cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3236edcb-b401-4b37-85a0-dc99b8d595ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e251cec-15cb-44bb-affc-6c563901f758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf519867-40a5-4391-93ea-f25a4fac5b7a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6344f8a-d524-4747-80f2-17e773720890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bf87cb56-9efd-4a0a-8f5d-abec43a84754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babc01dd-f40c-49df-8e6e-f8a4382fa817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "48149c67-d334-42ce-8ee1-6cb8d3cf040c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "449f9664-e2c6-420c-8a84-8674cc417c7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50201596-afc2-42fb-a412-fe8099464fba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaa33cb-13c5-43fc-9729-2b44cef6598d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d062ac3-d87f-4664-a84e-69fe190489ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696060c8-1281-4264-94b7-bb77bca4338e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a4059de-539c-4697-87b8-39a709580337"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e154d96-ea50-49bc-b9f5-51f984057edc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b66436d-b098-452d-8edb-f46cf7210180"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c1502d5-553a-44fa-a327-ddc5e71082e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9843bde-6acc-4872-9ba9-5a221d1759b0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f1a994b-d7ff-4200-b75b-f784a0fcb4e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "acd82dec-4a46-40c8-a455-944524d6f5e8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0e16176-21ac-4ee3-82a7-747f805e693e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a03ecd72-71e9-4112-bca6-d1725d17e53b"
                }
              }
            ]
          },
          {
            "id": "aac462fb-871e-4a3c-bea6-f959304ac921",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd63b6c6-11b8-445c-89d3-b4ec7129ee26",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8396f142-cfac-4346-af97-855ecce33b6a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237ddf35-858a-475e-8f39-432e7f964cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "60b1fca5-8218-41cd-bd03-841320d28abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ed5d32-2bd8-4a8b-9149-ab8e9c782c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e404c630-714f-40b8-98bc-b50e47afff64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5081281-cef8-4d53-9791-4fb0cbaf583b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a9dc828-de02-49d7-a7fa-d453ad7df1e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d782d24c-c841-40da-a73f-3f3d0b0c920d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "844a3ef8-5a01-444f-8935-4eda0561e0f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5dbf211f-ba78-45a9-89bb-843571aff65d"
                    }
                  }
                ]
              },
              {
                "id": "2b4a5fef-5423-4e1e-91ac-892540d5b3f1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "027c7cd7-e707-4f94-ba4b-e6d06b8dd3ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4b120b2-3b55-485b-a385-c3071e8af7b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2f64a40-0507-4f2f-a805-6e73f94f4fe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1a9ceaf-9e7b-4b9e-9b12-ba09cd14b205"
                    }
                  }
                ]
              },
              {
                "id": "d5b1f7a6-b07f-4f0b-aaed-4667ffead21b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f1ba8eb-2298-4656-a9d0-d788cd6b10b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6c904a5-6d5c-4aa0-86c8-77276e7cfed1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7bda3fe-1497-49d3-af40-2a8e2c5bfcc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9ed9e40-6e5e-4e59-ad9d-5bc6a82f8599"
                    }
                  }
                ]
              },
              {
                "id": "4a888ba4-9d2e-4393-b4ce-a0a70df4a922",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f23685c9-7918-4e40-ac74-afa874e39449",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d57b861-b669-4a0b-a9f1-b46b342f7a54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "121b0f62-6b2e-4a0a-a06d-f38c220cedd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c0969e4f-ed2e-4bb9-aa9c-fbe748124344"
                    }
                  }
                ]
              },
              {
                "id": "f094b258-f91b-4de5-8314-7a575a3739fd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2d5f414-07c5-44a4-836f-eddab806829f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "035d22b1-f97b-438a-bf95-6e3884e7522e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "208f971b-f200-4f25-9ca1-8139bbe345fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1997b5c7-b322-4be8-89f5-caa359049c7a"
                    }
                  }
                ]
              },
              {
                "id": "4172502b-b1ae-457d-91be-94574b89ddb8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8f888db-6773-4003-8493-fac455671b27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14098272-40bf-40d2-b4cd-5bfb008fd105"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4877fa05-3d27-4a4e-acfe-3d680ccb815c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0d5e0931-be81-49bb-b044-031f48e45423"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1f0166c-e7b6-4fc9-b121-e5e3d1dc3fd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5f3bd3b-8fb7-4b08-a6e3-675bc32bcd7b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "af7f4d87-e7f6-4043-9750-f1ea8a59467b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0d4bb9b-f594-458a-90a5-dc8377c52571"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa433360-3c33-45a4-8019-54dc9b4c0561",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "977d7dbc-b615-4bd8-a9c0-95715a51530c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14941e06-6639-4961-8ef0-6f7dbf4342e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "212fa8c9-25f7-4ecc-8d90-df9f3c3c8d9d"
            }
          }
        ]
      },
      {
        "id": "04d577ab-ae96-4192-a74a-8ab784b605b9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "363998a3-3379-43df-99df-82535304a456",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0aba62b0-c055-452c-b197-2a528354481d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "963f5d5a-d3cc-43d7-9f98-68645a518f31",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90f3d3d-4a37-4ea5-88d9-ecb45b1deb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff392ea5-6ae5-4da0-b754-3abfd966880c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25d0cd7-5a05-487f-adff-9aaeecbc0ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "179d79ff-636a-467f-869b-f6229fd197ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63ad073-1e9d-4a65-8b5a-c46712c874b3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e8db28-2b8c-44af-a729-e61120d6b687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96e79b3-f080-4f91-9514-9d99ad094777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d7dde5-2cb2-49cb-83d9-6e520b801083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cda30fa-e64e-4cca-bfa2-8a4b69928b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d08ad8-00c0-418b-87ac-918b3ed690c0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06252d7e-3bfb-441a-8af6-e74873859ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c87e17-d46a-42d8-877d-e854fedd7664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1ef1a5-ea52-4e77-93c6-07f6faaf9b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b01c85de-6d9c-4da1-a671-eadb80acf7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8f1049-415a-4cec-8621-88ca8f52dd67",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8bb16b-d9e3-420c-892c-038719544798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4567f5b4-76ca-421d-8758-6e6193917b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc325466-85a3-4027-8816-39fecad4ca33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1356cb10-67bd-4847-b8e4-c221424848d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3bd4a8-c953-435d-ab30-08468990f222",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c69e99-b2a2-43a2-88fe-260aa7e8d601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67aeb3d1-6ba3-46b5-b378-b63f2abe1ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee0a9aa-24e4-468d-aa1e-80a23b440054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9790d3-9156-4a8f-aa6c-114705c88935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12576cc3-b219-4352-882c-a31e993ba854",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e332b63-f508-4cc3-8b29-2a59bbd76c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9402acf9-5bba-4292-a359-cfeaf367291c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4381b46e-0b04-4e81-a8d5-264b30b341f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3b7051-ac3a-47cc-b5df-7989b1cf02dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037fa3ea-ec11-4aac-a934-809adf84d008",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8a4946-fc9b-4a00-bed5-e1cf9278c787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9570b629-e354-4239-8d04-ab6ead9cbb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01994763-9029-4ba2-b51c-edfde94e23b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e06aecd-a364-4dc3-8b35-35eaa7672792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ccafd1-14b9-49cb-9d61-f0955624288a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d1d6e1-15cb-42c9-8fc9-522d8a484c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fae89a-1c66-44ae-a895-6b8d0397c76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63037de-dd91-4bae-bc66-eb0c2e34cd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c75c35f6-21aa-4136-9cdf-45bcfd3d970d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4097c6e8-5978-4999-a162-b2ed5378c0cb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5740b93-a638-4a1c-a346-b4816f4a08e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f532ace6-d713-46ef-b3a0-fac52c6b8f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8427a1b2-4487-4dac-8a5a-d9a4702112f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "962b578d-ab97-4b88-b73f-3dbc1fd6cf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cca039-46f1-4617-b41a-624cfa2a901c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442d89fa-b546-4481-bb78-d29a6430e38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7be4a0a-1f66-44f5-8748-4280d2bbe5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b63d82a-cb19-4038-bb13-5d2f9ee0eff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5931b9d5-df25-4823-b005-06dd26338737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2766e4-dd7e-4177-ba52-87d9c05afacc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1f423f-0e78-474e-a2ee-feda9057b476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d711f1a9-0fe6-477a-9d1c-aaed63427832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b248171b-52dc-490e-a962-d8287d23abfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9669b664-0119-4be7-994b-4ba1473faa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38786206-438b-47ec-9fec-388515476a7c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3720ada9-5620-4133-abc0-d2478e37e31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f9ddc2-a160-4ed0-80fd-74e628929ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4981ec08-da44-4777-b063-860551cd4a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d76760-9b9b-4a5a-bf06-eb3ed0429528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e388a561-0d85-41a4-afd3-4d12dbea9851",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f257598-4b4d-4a70-91c8-394167ffd1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a4a212-7c3c-4a85-9bf9-3b9a303e5844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddcb2d2-db4a-4613-96a1-98d0b22f2d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0403cbc-d8a1-46d4-a15c-aca68dc8687e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40269d06-7948-4f90-9f10-b0a860cc5ec2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845ad299-b4bc-4879-84f2-2f7b8e266020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179f0446-85a3-4d01-8304-5b19952722df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26454b01-61bc-4654-80ea-dc7efc7f5799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4880323-f841-4534-9909-891835f61f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010df5d0-b721-4027-b826-cd0fd2331e57",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493bc6a2-9608-44bb-87a9-39cdda8f05fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef54e59-977c-436f-9be3-f520870f5703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04d28b2-acd8-4c93-99ee-2c2ae06b6678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8653a092-b485-4b1c-aff0-42638cad861c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421de1b5-3771-4d95-8e5a-e24dbd67d238",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0d9cc5-f704-4b20-8a02-7dd1b1f97c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ee65e2-8f60-420c-996e-095778a6fa5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca49e16f-8f18-43be-a01a-ad837e04e88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5408ffe1-403d-4f0e-ac9c-d33aaaa360e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffd6ec5-87e3-4878-919d-e7eb258a5f17",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65764b22-3c3e-470f-ae61-d18bf838698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad932d3-defd-43a4-b379-5cb12741178d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c523694-e1af-4f2e-ae60-e236a122c5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8a0ec8-c1b5-4440-b9df-9a425e61a13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba922219-eed8-48cf-be66-7798bc5bd2ed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e8e6e8-ae7f-4c7e-ae22-f3e885bdeb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b8b1f8-2736-407f-8349-d1a792f84eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39148e21-80c4-4a99-8e70-d57565663a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e30a0857-8586-4fd9-9ad5-5e895e6cb9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5074aa2-e3f2-46a6-bfb2-d8c3dfa823b0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21280e4e-1755-4eac-add1-1565c4e0090b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53c6275-4b0d-4b1f-a4a9-6ce225a3b6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35783f6-1f45-404c-93ee-4c3536d7945a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90be9d94-bdef-4b2f-8f80-086e3876cc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de156f6c-f073-43f5-b952-6a168018144c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42585a1c-38b3-4438-a7c0-1bd57b97b6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30197373-cb99-473e-98fe-6aa553d24389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e366fce-29c1-4e33-a4f1-cb17e79106a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9001af6-9dd8-4604-8e3d-06fc7f3c7725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4aed6e-0723-4555-a1b1-57cff3db4060",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe6197a-b8b4-4fe6-b1af-4c8578c61c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d8af5b-fcc8-4bfd-b7ce-094d24fade06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3199bdb2-dbe1-4117-b85c-c1da90d8bfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b319fc93-645a-4b17-b0d9-3130537f6a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9525cf1-452c-4205-950a-f4a987910eb7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6283b7f2-9b67-4574-b60d-c305dcce2ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eceb0f9-e60b-4692-b326-e8539ad5f5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf0717d-8888-49e8-9752-7655aa0e5666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bdc866-56fc-4e1e-9e61-e9f649d014fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b872af-f661-4e0d-99f6-2d65e93e2b84",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54e5958-22c9-45c3-98e6-f911f42341e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b1e9b1-7171-4055-aac7-c37c12b299e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9d5c0e-3746-4e09-a7cf-f554cbc5386f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b55544d-f61d-4ab3-a970-679c30e44d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044d18b0-f349-4808-af73-7a5a4528bf18",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f9889e-94fa-47ca-b40a-76db9b7e2db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275bb94d-27ae-47e4-b5da-49f9b00fb7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6109e975-214c-4d99-b077-b8238067d13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ec2ec4-a226-4a00-beb2-42a032037d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e962ef-070f-449f-aee0-39dc938939fd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e92dc68-6a7d-4280-a7eb-25d9493441b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88c3061-4500-40d1-b806-5388da531775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503dd914-fa49-4343-ab63-48e893960beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10cd58c0-0d8b-447b-bb8f-21c2372a71f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea05ca14-63cf-4e56-8848-9a66b040f438",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adee6db-0451-409a-83d7-3f7e8915e0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232d3e98-5c05-46a1-a54e-1c3406626254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a2a18a-851f-4036-8469-5f595ceaf2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4044ee-cc8e-4800-82d9-61d31a397b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4452506f-6c0a-4a64-9c56-6a8960afb9a5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7d0e1e-0596-4383-993d-5be1acb5448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9344ea13-1548-4fe5-a555-268a5b3b21de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac607254-7dc6-4fc2-884d-8ef02bfd4814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d52d75fd-c37a-4b8c-a09f-9d48f063b5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f274262-3d4d-4ff7-9ced-de881e9ad82f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86e4806-d31d-43ac-87b0-591da3a5e504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c788d660-cdcf-4d81-aedb-570004a178ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6996a7cf-050c-4ed3-81b4-a997fe223909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24efc65c-39e1-4b0f-bf80-097033fcfb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ef6c2b-6d97-478f-8742-768d7b4df313",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09c9e3e-d577-474e-8a79-f15acbf5c418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0b8d3e-babc-4222-92c8-b0a860a88b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0674a29c-cf84-4f0d-9918-4fbec1d12a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a23bd8-b292-4a7b-a267-5342b9be2041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a38bf2-7074-4490-9f8d-db384815a2ec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fae97c-ff50-44ca-9f82-96c7bcaf05d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54358d24-aaa0-45aa-8e88-512e3ba4a29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a729dc20-f9b4-4464-81ba-a4ef0870e648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b744505f-afef-4fdd-9276-29bd49a44b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484a707b-b080-4e20-bafe-f08939fadb9d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c696abeb-c684-4e9f-873d-27bf6be6b0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fed8cdd-c171-4e3e-b72e-394edfe96fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe50150-c8b5-4827-862f-78f2243ac198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5924eeec-cd11-4bd4-8817-c388d92ebb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20544782-e312-47ec-bdb8-4f0ca9d04d6b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6f1f57-9162-4599-8b5a-82f4e5c88ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cc1d2c-45c7-4fd0-88a1-2b71437a947d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41307f39-35bf-4d60-bc72-e7db78e04aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b53b57d2-20ae-49df-be55-fa80ec400f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5bf76b-21f7-4cef-a037-5883023989a3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b488c637-18db-4e9a-a1e0-f69e93718c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d22b85-78dc-4d2a-ad54-94318d961472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627819c5-0bde-45f2-9e91-6a9c7e824e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe3f2c1-adaf-4782-9273-8ad924f6ce63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b615d12-9816-428a-b1ae-182659806d2f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67791f52-5ebd-4c42-93ac-36c926fabba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c160e7-5073-4e96-9d94-0a5715b2b571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7195bd-b7b6-4969-adfd-3ff06ae978f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26acc17c-7653-43d7-a891-36386c1457ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8901548f-fa73-4089-a844-79a6ba1d8831",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab2cb96-36a2-4cf4-85f0-7729dcc94b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4500316e-70fa-4aa0-9e71-2dbefe4093cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885f5991-f0cc-45f5-ab49-695589d0e960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f19a7a20-f144-4996-8e58-c8c1c0b263d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b9a2ae-676d-4ad3-82b6-e8bb1f2f077b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e3a533-6225-47d0-9346-b45b7c0f481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f03812f-4e4e-4bd9-9a83-ee97150a1974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafe7533-daed-4bbb-bcf4-899a8199d062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3ae4ab-0332-4c91-95ce-e38befe731bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd346ad-ae38-441c-a8bc-b4a68bacaeab",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c686ac5-3d51-4009-8e03-f51d9a2aa369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e741cb-a7bd-4f0b-aefc-86a1b41cbcb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb896ed1-d760-47c0-b1d9-1d6e3e88ef1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e5bf00-87bc-4499-be6b-900c923ed7bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2367f8b-93c6-40e3-ad20-86bbd69fa05c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffc08609-70c9-4454-9eab-c577862b43f3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd28bc4-9191-4d03-aa61-946c2ea4275e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f08ca3-3634-46f7-bdc2-dfbd626d6e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f960c4-9986-4cb0-a70b-ab03588368fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "916399e4-7369-4271-a66b-4cc0f79a046a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6282e300-e345-4f58-902c-3cd4ba64e7f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "402ea350-644a-4ad7-8b7a-39ded0aa7f59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50f63a39-3b52-4833-9196-cd8241651219",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "445f9447-6c00-42cc-ba6d-dcbdd944aba4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7254bf59-2566-485c-93db-be4a0dc3a152",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de997fd0-ae9d-4fa3-95e1-8ec376b25210"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a87f0f1f-0553-4b49-9a61-f695b8434bc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5d14d6f-daca-42a1-83e8-d756e29c58b6"
            }
          }
        ]
      },
      {
        "id": "7018f4ce-a5bb-46bc-9f26-d9355e508f4c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6d1d21ce-a422-4266-bb1a-de599dc43bec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49f94051-f028-46b2-b53b-b6582fcea4fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "546a8233-7592-44f2-a53c-bcc15f76bbdc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a554d800-6395-4798-80ca-056ebb588e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b28ee1-4060-4181-8974-e5f89abf1998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba1a0a3-b23d-4bc4-84d1-12750344159a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1ef895-517f-4a6a-b558-c37afef48f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e13905-1a35-4099-b741-9be41f0f974c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a53292-3f8e-4db7-8efe-b5ef65607b26",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03465061-66b6-4489-b36e-faa66d6c06c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2844b561-ec24-460e-bc2d-f2786c7e9977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dafb3d-7810-406a-be9e-fe9a6e636725",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd4decc-e7be-4999-b356-1a492b617386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764f6917-c777-4634-b456-1865abb7f72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005fc1e4-6afd-476a-ba43-96f1aa10c8ec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215ac4e0-678e-4df2-b940-2621337700df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed8fe29-7ff2-4ce2-9066-5bea0bc7eeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658012d4-441b-4333-9e46-0574d9613478",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b782da3e-8d87-4c2c-9c63-0e38b2646389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3a7444-f76a-49a3-8d01-b6a240d5ba52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f314ec-c4a9-4c52-b316-b8b371678914",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3248ee88-9048-450c-ae8d-6f6cfb09d703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b15c88e-9f0b-4a1f-9389-7c9ee4307cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ce6878-4d01-4393-94c8-56913c10b0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f540d375-0d35-4bec-a2c8-44450bb8ef69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8fe83b-bd5f-4d2d-aa53-b0ec8025f91a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e6df74-3d05-4e19-94d8-558c23c6fd8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae1dccb5-5326-402c-b91e-3bbae7db9605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a730c9-c2d7-4631-9bbd-b5b916f1704f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783550c9-9b7a-46c7-9e0c-8481a57e12dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530fe07f-1599-4f05-a1a7-1fed03f09289",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1d2a42-0355-46ab-a97a-b5d6e250ac4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6375ca34-aa33-4988-9b94-bc90fdba174e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa688be8-5e67-44c6-8026-d9b91e193475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dcb032-4a5d-416e-abb3-8635659584cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8214423d-5899-4710-b3e4-d4fc2d6440aa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae32f1e-0a99-4d63-bd90-9144a9425e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7e5d47-37d2-437f-912b-3c8e7aaa1923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c08727-8a2a-4394-9c17-73f42952759c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e93b82-088e-418c-866d-87dd47fbd22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bb5e6b-59a7-43e5-b4c9-1908cabcd995",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c81984-7b33-4dbe-8344-71593516f8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3df137-84c4-4488-83c1-f6dfec10d188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94d2edf-74dd-4c53-99b9-494225ad5558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cf4629-e36a-4ef3-918f-f05e2412f633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23fabfb-9957-4dca-b700-f9378e4c596a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77401148-340a-4705-82d8-ebee53780516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16834962-6e6b-48e7-b034-b885d6314759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0539f11a-37d1-479c-8d66-3159911e34ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd99c13-7035-4850-8b42-f9cbb03422f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385a60bc-2fe4-497d-bf54-07356bdb216d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b247cb4-1505-4b6d-9eab-eacf30c00255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07e8bbe5-4490-4a24-ba57-6bc51e111ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46138ac-a72e-4735-9371-aff9403d7629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468aa4ae-b88b-466c-94b9-74c3bd2d7d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58eaedb-9cb8-4f57-92b9-99c0c076f0e3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c4a2b4-006f-43a5-bb80-56584f5fb710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c54c18-34aa-4c21-92d3-3f369cbc2542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaa7f4e-4250-4abd-bb23-c7690b40cc63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c05439-1674-47e5-8ded-55707bfb55f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f3f0ff-0e94-4c94-85c5-5f79992cc0f3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5a993d-2eec-4375-a39e-7541890af4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8578eb74-edc2-4977-8ced-05ff4516f623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344b526d-3e2e-45ec-8c35-9d727d81fae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0ee0e0-cce7-45b0-ae06-359646cf08c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22939e0d-54ff-42f8-b077-6db3ead9b633",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a08eb1e-01cc-4d35-bec7-a7d90f2b4d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2dfb448-c028-4179-b190-e21192ba23bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887f4e3a-07d5-43ff-8544-bee7bd6d78b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3aa2bb-1461-418a-bccb-7e3dc8b1ec0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4818ffc-7b10-4c3e-a05c-078344f550d8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaa84ea-3805-473b-8134-27216114dd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188c475d-47f5-49c6-b07b-2d0fcc36528c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97534a2-55a3-4dd8-a35e-bf73fcec26fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd25dd2-536f-4f21-b0f3-9704d89725be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1b20f3-2e37-433d-b9d6-37687385d0cc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c2c8f3-400e-43e9-abc0-b3cacfdb3ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07067118-dcaf-4c6d-b6ed-28361880d66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14fd0cc-75f0-4eff-b6fb-caef21e0e64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209a0c05-a106-458b-aa68-09e35b8821db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ec29fa-f8f7-4fb3-aec3-89fcccd1dca5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a1b5c0-c82f-4f55-9159-020c9a562f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4afe17c-91b7-4df4-836a-f8398ee39ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f18ebd-4391-4387-a09a-eac3fddb4a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f6d1da-85a2-4f72-bc34-c46679e362c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5225e6e-8e1a-4ad8-8628-c526c9452e7c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbd46d6-61d3-4988-8ed7-5d9c3e5177ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20aa0792-6cb4-4ce2-b6c7-ef46ad3ac19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3af1985-d36b-45e9-98d2-152a38c45e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56eb0998-ee51-4f53-9fb3-0b31498c00c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840187df-fe62-456d-a361-a9cbdb060db3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b043df4-85fa-48d3-8568-e76e19add776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29040b51-a938-43e3-b69d-09433feef26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286585d0-85bc-473b-97f3-3a735fa7c47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3919a2b2-a184-4513-bfa0-eef015bb4928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89ba50b-0981-4fcb-94bd-51eb97a63025",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2db929-eaf6-4580-b407-4f783a18da4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f227776-02da-4f7f-a5f2-13bfe537e0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e613ae9-9d0b-4efd-8d9d-3c84a7554862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c415576-59e1-4bca-9d87-2bbbf4a887be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1873ad7-a6ba-4d79-af5d-ebbe1a8263f6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b8dbfb-516f-43ed-845e-f5ec2af41845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f25890-2844-4619-bd6f-1b9decb073bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3dd83a-4902-483b-81da-e8704688ecbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783dd310-ce15-4627-9996-1dd637698b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf1a55a-6976-4f2e-8323-267d9db83edc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2faeee9-d4ad-42c0-8bd0-b55c3ba5059d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e555928-75d2-4edf-a2bc-715c8f2103b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5b823c-432c-4023-8352-4dd7dd891508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3ea0ba-623d-491f-ae29-b7c0cdea16da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1ee478-345c-4a1a-bcd0-23c127a6d94c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef49eefc-fe80-4f15-8f09-9f567a052e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ab9ecc-730e-4bdc-a021-00ec92e76b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa955c2c-55b8-40ba-86e1-8ad583275165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6287be54-b89d-4d8e-baea-4d259954a769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c22a38-0ac7-4090-b651-c1465953bba7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c8d799-844e-44a7-bcb5-6d3c49b9a299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de655c62-3697-45ab-ac79-24315c5da722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eae02b2-368f-4485-8fc4-d9dca32526a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba5a100-9490-4a14-bf6a-5cf5ce9584dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752786fd-6f50-4124-8dad-8aeee988416d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddee4ad9-0349-4be8-8a6d-73f542fc2ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e551378b-5d1f-4ee9-9bdc-493f86044efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8407a6-4888-41c8-9302-96669bd7f575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c19c18-c07d-4933-bf95-8d642632fe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8c82f7-e268-4337-9be4-16dfd5c4e301",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ed2590-2031-4288-9f45-2ea02847a046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7e3e97-0e68-4f27-8483-dbe9fc3093ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adc3f71-45fc-4c60-8a2e-2b28ddf8b722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f274994b-96dc-4175-a186-428ed4f5c1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a86e1b-e119-45a4-be52-888f9ed64db5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75d68fb-4cec-4ecd-b01b-fff2b9ea4ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28762231-f531-48d7-847e-b7a6ee3f0a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b47f71-6d76-4d05-95dc-187be30f4009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12403ae1-2788-4e2e-aa87-5b1c50e65d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c43fca-4984-4d7a-91f5-7e7af14d04b0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db98648e-3c1e-409d-90f1-1d05d52ce66e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba4885f-819f-4660-904a-4c5403a7eab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c69232d-2682-4810-99fc-86834ff9e055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48fd75c-6a45-4da2-8f70-90e7f946ca8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d23088b-6419-4ae7-8a64-53d1d1a93761",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf5bf05-4e46-40af-96f8-ec9c4d61d3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0146d54e-6126-4a0b-9d5a-4941181beef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64ed7cc-3da6-4e6e-957d-5fafee7791d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b366d4de-0107-4524-bd94-19333484c215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1755e27c-7b2e-426a-99eb-7ec8c2e1084a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494a8a6f-d0ff-4e2c-a7e4-b1e33b000726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6c7791-dd4d-4a5b-9193-472fc7632065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6355666b-5903-4eb2-ac48-9cef96ca468e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b68e3b-04e5-4750-a9e8-8e5c3d3af915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc473fd-01d3-4e87-9122-b9eb0804ed67",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c300c0c1-27ba-499f-8dc8-c8ed95cdab35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f30ba0e5-4d03-467a-9135-2b03bcebc58a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb34761-e1ce-4ada-9421-033f433b7595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d18cf1-46c4-457f-8898-280b675c072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b57bb53-e3cf-45a9-9f38-570ad569947a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2497b4-7998-4666-991f-9915b1151451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377989d2-3ecf-45d5-8de4-cd693333fb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59745d9d-6c45-418e-8218-c30b503a6bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c522d7-d424-4d35-ad17-cf4bcba2db3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd125f2-7e47-4d17-8b57-756edc74bc32",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09b4c91-4bf3-4e93-aba3-d30c6f906d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e41ec5-4e52-48c7-adf3-1a5b67e498f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c866b02-9ac4-47b4-ab2a-74f04f1fee6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d82b5e4-0f14-4059-9d4b-08f9d59548d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa25ca6-1426-4de5-b66b-7aaffd3f9291",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f3c08d-3c6c-4466-aead-4128442f3e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc11a1e-b421-4444-8880-ae7733883d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696c1193-806a-4962-8c22-e51b04df608a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84281f36-21ec-463d-a880-7bda11d90f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5e803f-1e7c-4596-80ba-9c6c5dd03fb0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe3c117-a433-44d1-9053-ac9486c6c1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2155bbf2-9996-41e8-ac4f-48f2936cdc6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92136f30-7051-4c99-9424-fc250fab6158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9c3653-bef6-45de-98b7-0750eb6d99b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faff7a4c-c94e-43ee-ac42-544696bb154d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56401a11-974e-4e7d-8201-d34c2350ef3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35f82ab-3cd6-4ff4-847a-942d3d5b0edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36568ce1-0e11-4987-9d21-1c1ed777bf41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2726cc0-b92c-4f61-a52f-75da59d56487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ceb63e9-5d68-4893-aea0-4887d860fd89",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb4bbf7-9406-4259-b41b-56fb7b23eabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8faf71-9cc2-4220-b3fb-d2809b3153cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fd3d09-2916-4b0a-be82-b980181ef775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24c2b50-c87e-45c5-bf7a-01f6885db2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fe3f0b-3253-4159-85fe-8acd3151634a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3284b614-d016-433b-92e7-8b72ba4390ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6b6d77-0eeb-4afd-a50d-21614466d102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8215c3-b60c-43db-a01b-6a95ff36ead0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c892272-2d87-4389-826e-b4a6105255c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0fe930-74eb-4435-8205-f819d00e71e8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5e7064-7c1c-4fcb-9ba0-673d7987a1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b4ba74-6111-40b2-9881-b312bde33efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27930982-b00d-445e-9b86-0e3eb6d7f401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d924028-f7ec-4ebf-a021-86c616d0eeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19206ab4-c777-4d88-afa4-21a80c2fc440",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5e5bda-bab9-4443-943d-bc00f88b506f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2fc18b-c807-4341-89aa-db31a7bbba91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d0d02a-ac1e-4da1-af4d-01e9d86eedaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce899f49-5fc9-40f7-adb3-ff5f96a079e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd24f420-24d5-4751-871c-f0208cd11692",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd35c0d6-e722-4238-99b3-ca04fefed5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927ca38c-d6ae-4502-923e-45a9f2d02bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a0cd99-b039-4fef-b691-0af1ef87f935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b5e4e2-448b-4b4a-b3b9-50b9691a8c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db90078-262a-4ab7-8ac6-3868fc9c7074",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9f0e6f-014e-4d04-8b72-e5629b116b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3dbf9af-339a-495c-b1cb-8561a5432c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7b28d3-350d-4a15-ad00-794453fdcc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ce766f-3b66-4b27-83b6-3e02162a0789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331ae9e7-bec1-4197-83bd-66cc9e7834e8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb4f351-835c-4520-becd-46c5b0c228f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59f8d44-60d4-4885-a922-5c740dd94e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c11a46-99e8-4ee4-bce8-dab3c9a48b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf72af8-b33e-4287-b0b2-b2526f664017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f39247e-c653-4883-9a81-7a576e3b0438",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70cb039-d078-4d7f-be76-40252b76def5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1754e19-c796-468f-aa9b-8887bdea1e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833fa62c-0ea5-4dc5-9494-46b86a687132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668c5ea6-ca8a-4c92-9346-b6fc0de7d47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05f4e94-bd8d-4911-ad32-465017b35bed",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f19e5b-4cea-40d3-a24f-dcef13787485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8402a9-784f-4b58-a8cf-533353090d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a91668-749c-440e-a25e-5906f2727679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9b97ba-b2e8-4ee5-b6a2-f09447133ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9cc80c-782d-489c-9b32-6a2c5a5a6997",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac50f4b-2b65-4c79-89e4-7e2a0baf51e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add5ca4c-5234-4a1e-8194-2e699301eddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468637de-665b-4ca4-8033-d6bff9c9d6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a965b36-ad31-4dd9-97e3-6acb8bd65f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d39a53b-c17a-43fe-8395-bc863f150205",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e776cf01-a821-4f51-870e-3b5f265e214a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2018c161-ba68-4bfc-a432-024315f776cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8131a0-9175-4c67-b280-b1bdda55b1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b3df5f-4234-4ab0-aa4a-3ce6de1ed546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71875728-874d-4810-9607-07126f2c7d55",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06ac029-8791-46d7-b7fc-80682a81ca2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4d8c6c-0e10-4863-a6ce-8fe4deafb958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb9dde1-cf5e-4997-98e6-44f1c8bd6eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23376002-3b6d-4d17-8b82-66de837f217a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fc4932-b1a1-4dbb-a364-cbd4d39c0d5f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90fd7b6-c40e-4a91-91fe-e68c8bd3f244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db024c6-70eb-4c2f-a283-5b58ee097840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129b7b17-5123-4771-be86-6ab87030a432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c45e6d2-da61-46e5-bc3e-8d33a0cdcf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1c486f-d3be-4c22-9f04-b504473b6159",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c725f42-989d-403d-8773-164665ca8a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d893839-8152-47af-b4cd-fe4ab282098b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf82b7c1-f699-4778-98a4-6ef7951723c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3e9fa4-fd73-4e1a-86a1-22436ff5c77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbbbb7b-0b6d-40a0-9a7e-a2f52ebd323c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8279390-ca78-47a1-85c2-f168c0710bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e9ca21-70a8-4719-a2ac-94a6ee884ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22fe29a-a45e-4654-a833-d440efeae61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b66fee6-91b6-44e4-ae21-9cfe9a30941f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28171b42-1632-437f-a5b1-bf1af4e9b83e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbf3ce4-4162-4dc6-8b2d-010180fb9a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c131196-f935-444f-9738-7b532b944ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda891fd-7c3b-4464-ae43-58b0fcefc2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4797e61a-f623-4b14-9468-5b33c2c9bee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50f93a1-be1c-49de-aa58-c326c99fa7a3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99afcc2-dfde-4fa7-87a0-792c7ee91e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d477ce48-cfe5-468a-b8fb-2ad1198a04cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0d46d1-3a2e-4c2f-bdc1-64612a26407f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380517f6-95be-42a6-bffb-e81dd8472c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd5372d-7e69-482e-8307-4e5c12ee8f16",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58782a7d-2e06-4c9a-8482-eea3fa334f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b978137-39da-4f90-ba4e-e6a08d3d8911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292c8d9f-c543-4f3f-b46b-4fd885909bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3abc22a-34d2-461f-bd27-d19b7d911eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acaa4a3-b935-4d98-a6ee-c0ad2d6088f8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d001039c-b470-41fe-ac49-cd63eda7bbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55553700-c783-4066-8094-c6dbdb04bd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a925799-3554-4913-b270-ee81eca1a61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2198ee-6da6-42e8-b524-163c42008786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022b163c-0ff5-47eb-a738-5ab9ee1851a4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e02f53-70b4-4229-a3ff-a83c2953e26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69a4391-0965-4f7a-9d00-e61d218406fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ac6386-a353-43fd-973e-f9641c1e351f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4a367d-6dfe-4e53-9cef-e4e42687fde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4f353b-1680-4bec-a9a3-6691a35fbdd4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fefdff-c654-4bc5-9708-5c5cfcb42958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1046fa99-ffdc-402d-94c9-acaaff7144b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5dbf3e-91ad-4c91-b35f-ecf8859240d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8873ca71-ddf1-4c6b-ae37-a61be1333a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b11f7f-253f-42a6-b537-2b259cf5be4a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73220c6-efdd-458a-93ee-ef6b7b3c03f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bb5b54-b9f9-4f04-a922-005b6999e171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d72e04a-c4e8-4ff6-9f03-f3e592f5f298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea059d9-6f5c-4c1d-a6c2-5c6e49fdb15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a433ac-039d-4093-8927-9fe0da791759",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25d5599-df73-4c17-8767-14f49d051e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca8000a-0f67-4058-8bf6-d3cc5f6626e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687fa6d2-8af4-43e2-8a04-c664d2d2f11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c28c1ad-191b-45ed-ad75-90cdc6b61f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce241ac-7621-4a9a-b11f-60804b290180",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659bc3f7-1973-4fd8-86de-652375dff7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476e592b-8e67-4195-b2c4-7f9129216693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192e08b2-7e21-4e3b-92f0-34340ccf97da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345d7c08-c6d5-4cd8-953e-9a75e36279b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac67fa73-b5c3-4344-9db6-b842a5839bf9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819eda5c-121b-44a9-8806-0c185028f78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f55f81-00a6-471d-a44f-8104b99ef84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c7a0e0-a842-4e07-8a20-1d3556bfb535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ff4345-1ece-46e9-ae4d-25847222c191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47cd20b-d7ac-4eb8-aa10-d851cb5cc637",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44efad98-5e46-48f5-a83c-7fc04ac771b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34db5943-d03b-4df5-af58-5e88fb57035d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e3920a-2e09-4c55-8d92-3a0449e72ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7c9a03-5df6-4fb2-92ac-4328b28b93fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b5e467-07c5-4d03-b30d-f990023c7912",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7bacc1-08e3-494f-b59e-0939cd567e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e72b3b37-6ea2-40e4-98f6-3fea3113720a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f388f709-dfce-415a-b64e-978f2a4b920d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796bf0e6-132f-4d28-b499-f1f22ff8b373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bed027-2fc6-4acc-9c6f-eb741b3db4c7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33a9171-bd84-41fd-967a-abc2ea3d48d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c41e789-03b7-464a-bc1b-9ce167046565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b341197-6145-4af1-8f15-ddddcff38bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc79ec66-5bf8-4146-a5dd-6e00e96b87a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c2aa47-a077-41e4-bd6d-146d941ef9c4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1240af4-a8d0-4efd-83d3-93e7539a0088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "125642cd-0d7f-4fe7-bc5a-8b7ef7bc6f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a6c954-3196-4e41-be81-681e2662e1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98bec17-9a61-4042-a073-2d08ba15675f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4778ef3-24d1-4cde-9a0a-1f4f742dfe12",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d62802d-c9ab-4837-ae46-b805cc4692c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bde14d3-be46-4cd4-a9ee-46b4915d3da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd354a54-2a0e-43ee-84c8-62764a06ead3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a04cec-1a30-4add-ba1d-869101df1cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cd8260-ac37-4d37-ba91-22b064c3cce7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a82632-38dd-4259-a952-3cfdb3a01fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9430dc3e-7fe3-41c6-8113-2bb85a62562d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc76bc83-0669-443b-8b54-4ec6a83403c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d469c48-d11f-4d65-b0ff-a5bba0c092e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6fae1d-f111-4626-a0b5-49c97d846cfd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80eef9e4-8fa8-492d-bd2e-286806202cd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03a2763-8f48-4702-97a2-1180f589991c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ca9190-2357-4744-b2c6-929e28d578de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4811f8ac-1e7a-4323-a7ca-56b10fd4ed6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dff168c-f7e8-42ab-970a-c4cfeee7e6d1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26640108-03d6-4c3b-9f4e-3c49cc94c272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5963d84e-49d6-427f-8f85-723413c97e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de545717-3826-4966-b616-d77be2b4237e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba9f4d0-fc5d-4a95-9048-5b3705d592a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d88ff6-1c5b-4703-b939-4344b3399e7e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9485790d-1bbb-42de-916b-a417788d1f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581d75a9-d443-452c-adb5-c8bfb27fb2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195ac9a9-17c5-47d8-bf57-0f4fbecd1f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9a0a6d-38fb-45db-acb6-477ddb009e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36273ddf-ffde-45e9-a7ed-16b9fd229248",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a147d161-a136-4d0c-bc74-ee710a725d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa2f871-6640-430a-9156-c22e8d94e6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "958692bb-efd4-4a17-afa8-5c75aa223a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f42e65-e25b-471c-a942-fea62ccff273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7d1210-ab1e-4754-8b0c-f2a2032c609f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e016af-45f8-4ae3-8f64-5170eb4beb91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a3bb8bd-2acb-47cf-8991-b4d7f5c53783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85368aa6-b988-4768-8bc5-6d77cc5f9362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e69ad98-8290-48fe-af38-132b4ef8e827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c0d064-6915-44dd-80a8-27fdfbb74478",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f33c80-9450-48de-b61b-ae21e18e4b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7699f2bf-ec52-44ff-9828-180845e9a4da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3e91cd-cf25-4ffb-ac94-cbc95e1d5373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe3647a-177a-4241-9699-6fd5c189c737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7814e5ff-276f-4d99-a139-0b8a15750cea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f7b52a-5eda-4ff8-90df-f6d36e8852ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17f33a04-1c9b-4eb7-9e18-791943783dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a184220-de1e-435d-8651-cde95e4ae1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97de889-6c56-4d78-83c6-e427610f4c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db700a6-c5fd-4aab-a804-f256e5d48b90",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcf54ad-93a5-4fdb-a95c-bec5e7a001ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "748a6632-0923-4cd0-925f-ec635ebf14ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "750b238f-ada3-4ccd-9d84-7b0ba1f69cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66035ebe-d471-43b6-a780-7ae15b5614b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34296637-2cfe-4147-8e11-0f09d9ecdef4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1496d1f9-349c-4f46-bf3e-691afb86427a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c70e68-e437-4531-a68f-3974f4f86b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250ac9c9-32ba-4f4d-8c7e-9ed80350ef4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54a79f0-3019-4d2e-9a05-a0008d122fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a65d2f-081f-41ad-af00-69c5a084639a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312334cf-38f2-4391-8af0-5fd3019c9c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a699052d-fabc-4c6a-a501-af20f39fc74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23365804-baf1-49cb-ae35-79e7d0832d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be379360-48cb-4b2f-8084-132c249c3649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ad4e4e-88e1-4900-bbeb-7a088d2cd05b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6951a17-4d05-4777-a347-3e1a3471f33e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84a18d5b-31e8-4838-860b-f7c029df1ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b92b46d-2898-4ee5-8a1e-fad8e3b38d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712897f2-5d09-4b87-9eaf-27a878dbd8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b0e85b-2ef7-4040-b5b8-5117855b8a6c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0946b4-c595-452b-aa45-046a002a3bcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93859ea-9c9c-4c9d-bbea-5fdb7b2c12be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab70048-f3fd-49e2-85d2-1124d9f9e94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089b8314-8223-4e83-a352-c80b0de4e863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0e3c14-3d9c-458f-bb91-cbd51dca19ab",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad68aa4-e43e-4a8d-818c-ce5e3accfabe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78ed761-146d-4629-a071-fe9f32a7ca6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca8767b-ce14-4a7e-a186-426f324797eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a846925c-d491-44b7-8148-48dd797dcb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9e5ac4-46a0-477d-b162-37bc05d59a4f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108bdde0-f748-4301-81e5-5bf42d846c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02795acb-07ad-4d19-81cd-aa5d92fab86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83035b27-6399-4e59-9462-4c832cc9f454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758988fd-3c07-4b17-9f2b-aa10ffc189f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a4282a-9596-4d9b-bb9f-60b716558e55",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd78369e-5968-4cab-aa84-44d747903833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b408311-3fe3-4343-8442-c75665a7049e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4707ab1-b29c-44ff-a67a-22e274213508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49377d5-4658-404c-a459-e34f40f2dcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0f1f51-c040-4d7b-bce2-b0f4cbe4b503",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075db25f-c26d-4d72-8a3b-83bf484eeacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a13d437c-bd98-4672-a1e1-4e86f5a75602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d47d9e8-18d0-444c-9f19-54fd152c0a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e56d0d2-236b-44f5-a545-5a5d67c85be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb34f03c-4f3d-4528-8d9f-e0e82ca1f855",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8248279-478d-4a23-87e4-e830c9025e39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8938f72e-a959-42a0-8e3f-3f7cf6138e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f80f52-5275-42a9-8246-c96cb9eee796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8be142-09a1-4af7-b503-75289a77c9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eba30b4-bef9-4c07-82b5-594869c0845d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea11412-aecc-4bef-b6e1-bf233049b36d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f08dd71-aa88-4e7e-bd05-e3c3cd900d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecc8a0a-1bc9-434d-807c-70671811050b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca0cba4-c825-474f-b6b7-041172ad892a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c213425-7f9f-47fb-bca9-13edd6af19f3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c52e95-df3b-44f1-99b5-74d425d353b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed38ed8-c28f-4e04-817b-b97ebb954720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cc9966-9bad-4862-b97e-d1102021e4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716df61e-a303-4d40-b54d-b66d9da9a710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469aa22b-9178-4f5b-85e2-710299afef6c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9abb30c-9533-4d1a-9cb7-1c967f0dc9d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2330c8c3-1d1a-4b5d-bbb0-d77ab364056d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f182f5f3-e3ec-4283-8eee-10ce080b02a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dcee7e-ef05-4299-910d-b583b06c8293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245b3e96-cd34-4d1c-9390-2f267382b841",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ffba52-8e55-4206-8a6e-bcb409622fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88685006-5ea4-47d9-8853-db5ee88424e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ae230d-0b30-4117-9fea-dd2b31a9090c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac81cf33-532b-4601-b5e6-55ce657b633a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916275e5-922b-4522-8a54-09338e2c78f0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05649b99-5825-4393-8541-810621577c3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "795ebe77-a2c3-4ce3-85fb-d253ab958147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57138683-55d0-4b06-9cda-f3266ff4845d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ef1bed-f5b4-408a-8dab-6130b2ad7f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5693ed-082d-41c6-8b31-a03ab9faf183",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3984dd-2ad4-4513-b680-0bf643edd557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "239f6cb1-2340-44cb-ad54-d3720323aab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d936573-7b5c-4eeb-bc2f-58b0201a5db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f6b9b5-4ce7-4b99-b40d-67f033b4dfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633af0fd-db3a-4095-b442-397e3f53b81b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbaa7d84-f4df-40cc-bb35-9e58dd1d77a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "affad626-ed67-495f-b955-f55bd5b0162e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efcfadb-0593-4d88-bbcb-223448344484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1162e11c-0861-43b2-814d-ae140908f5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec96b8f-dca3-4030-99e1-208651ad424e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fa9937-dc10-4631-93aa-df0ea5c2990c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377ebe50-1b30-473b-aa72-c1bd04d65b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3518a18e-44dc-494a-a315-eda4f7838c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e39b33-10c3-4112-9cc9-20d361369493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1561b5-f455-482b-a77e-7b6ddda3a70b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a3ad59-27b4-457d-829b-6aa33622f0a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c02ba5b8-de74-426d-ae23-13c85b845549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776a9471-e49f-4a6a-8747-c12f1aac6bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c565736f-b7b7-42af-a25e-0073a0e4dd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734bca9e-1f13-4c3b-ac5c-b6047a811297",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6735be93-f28e-4d9a-8cc4-ad4b4d963546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cde8b43-5dfa-4a2b-9090-8b2d84628814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf1365b-754d-4bd7-8e71-f69b78e132a6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf85065d-96d0-4e37-8749-becdd61b335c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bc546b-098d-43f2-807b-0902a7028e8a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fddb54-c8a7-4b35-8ee3-9e864e518aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "493e27cb-f407-4f07-ada5-9320864f407d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dc8e3b-3836-41e2-ae43-7b9523acfa66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6a6e5a-2834-46bf-98ad-4807bb207509"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af53d828-3869-4d89-9e0a-e5908150b40a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7106e049-fac8-42e0-a9f4-8315cea8ca72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71836feb-5e17-47c6-a8b9-8685a37011d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c073621b-a0e7-472d-a4b1-aba346154e8d"
                    }
                  }
                ]
              },
              {
                "id": "0aa3f4b2-5197-423e-a5be-a16f91d0fbab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7d1a5ea-1ccb-4537-a864-28f940375fd1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa77546d-3cba-4f9e-92d1-a24c0dd5855e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "321d143d-074e-4a82-8e7c-de3a87699c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4099f96-10c8-4e4d-b23b-dfeee6111bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf2cc9df-5cdf-41b1-8d31-779b1420be0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8f25317-3a0b-4f3e-9bd0-650c1df5b34a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45f9b235-d1b9-48f2-be1a-dc74570e47db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28a3cbf9-f552-499b-a6b0-2e5420073cc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eff774d-9fb9-4efc-97c4-b3ae06c4e9cb"
                    }
                  }
                ]
              },
              {
                "id": "b90e283d-52b5-44ec-85e6-6a90d4130aae",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fb10432e-7bb2-4b61-84f3-3680d51598bd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a41e01-e978-49c3-9b43-a06aa317ac1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "13d026ca-b30a-4f3c-b00d-553733af2bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a131ef05-8e90-4141-be58-eea594e484c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9683fef0-1ca7-4383-8894-bfe64d245ef3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ccee093c-14c1-416b-8613-57173b60579c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f50954d7-2c48-4493-8198-afde46a9bdbf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f9f0220-60d3-485c-8480-b766edb3122b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b02b6748-b089-4a16-9000-9c54968c870d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ea89e1c-3707-480f-9e61-9598b5ac24bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89df330d-4471-482b-9059-b0a6427471f0"
                    }
                  }
                ]
              },
              {
                "id": "0fe26f77-3cdf-49bc-b41f-c3e678f43eb0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1b39a77-70f4-454b-bfb5-1549e32fe9a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a03b2aa0-ab89-44b2-b847-3d588a3d901a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed9935b9-dacd-42ca-8c99-dd3437b2d4a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38907274-2d47-4249-b4a1-ab80e676dadd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "949f19c5-b5da-4ed4-8a2d-7760be6016c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a7b780d0-d1ee-40a7-a747-c03a2df27205"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8b30bd6-6232-49e9-9508-d841727d84d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fb4ffac-ff25-4c50-b186-01e67f42e3cc"
            }
          }
        ]
      },
      {
        "id": "72a34d4d-d005-4557-a752-fdd51f698a71",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "32bd58db-786e-45a4-b06c-45569ceabd3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff91d479-28ae-4ee2-b880-daeac6159cc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03608560-8823-4f07-9753-2eaf16c27b8b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9cc49a-db54-45e1-ad64-198e964b7317",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cef3e2c8-d23b-4435-8c05-aa5cca84c478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981e6ace-106b-486c-969b-685e223aaff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdb6a167-e0a2-46c0-8f6d-58a3ea5c8346"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66c324a5-b673-4d1d-aad3-e4fb7218ac7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ceca3be1-43e4-4bfd-a0f7-9960da8a2e08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eb218b1-d989-48e5-a932-d71fd16fad96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc52ed9a-4c0e-49fb-8185-78c276c0a86b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf1d4846-ca32-4ea9-b7e4-ddd2f7f18a67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ad53a83b-8285-41aa-b8e1-5de29679098d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57372b4b-4557-4af4-9a89-d6f0164ee7c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3002c4ef-5266-49c3-814f-7cf87e161488"
            }
          }
        ]
      },
      {
        "id": "0a87d564-5ebe-426d-ba9a-51d86ec15b4c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3d065414-31b1-4ad3-ba4e-d280b101afe8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05a77294-4ca6-41bb-a8a6-1c16f8befaa5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8128306-13aa-4916-bc92-7b753dd3a95b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49359f62-4c1a-457b-ad95-1344a6de598e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc23ea82-e57a-4037-80c4-3fb6917d11e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00661c14-9813-4354-a35c-99fe50998905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1333e187-9848-4753-b4f3-b53016d867cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "309b243c-5b08-4fdb-a87e-beacd0f50dd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6d3d4ca-daa1-44ab-b058-00f041d19372"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e05f0e8-1aef-43d3-b0c1-d5deac553dfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95647104-4073-447e-9d67-dbb82953a18a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd1fad55-d879-43e9-b4d0-ed05a87f73e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d64150a-058b-40bb-bf90-50808185b907"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54775e07-384d-4b80-89b7-df73e6234c19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cecfe28b-b9a2-4c62-bdab-a34fb69f12ac"
            }
          }
        ]
      },
      {
        "id": "24b4672a-66e5-401f-966a-a2b2e8c2ed83",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "21ea6583-6143-4051-b81b-3d68b083ef5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23987a40-9eaa-432f-b695-33e04d60e4c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "427df65c-aa14-46af-9b68-96430cfc7567",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d5058c-0f01-415f-b566-4cdfa63a3603",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aa9aadd-6435-4035-9171-db679b269555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d407a0a8-f105-438d-8792-4147d651d21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "461e553e-3b18-424a-a8f0-52e5e65b98a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c84d2dd-1c3b-4a86-9bef-b4a81071fbd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bc2aab6-093c-4b3f-b1c2-668ad3d252ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "157f091e-49c3-4896-9d7e-a5e14344666a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a49860b-4a46-4d06-9a36-c5fd557946eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3cc2bf3-2925-43dc-812e-50f59e03ac19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "77d9c47f-7362-4429-8a30-208a87290043"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8732742f-bb3b-4250-8bde-6473c817f9f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b06f7422-db3d-4129-ae6b-89f6a9b08655"
            }
          }
        ]
      },
      {
        "id": "e3edab3b-af97-42e3-8e32-ca21fe138a25",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9201d92-18c4-41e8-9cb3-a0c9fb564bcf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a0dd06d-34dd-4520-bebc-b81297b28ca9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3feaada2-a37d-4d1b-a670-eca1ed39c8c3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4a0ea00-f4f5-4d9b-a349-2f0e11553008",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52e469a4-ccaf-49be-8d1f-24c4c82453ff",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 145.42857142857147,
      "responseMin": 7,
      "responseMax": 10538,
      "responseSd": 702.6927846931846,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723423335668,
      "completed": 1723423380734
    },
    "executions": [
      {
        "id": "a7968e7a-419d-4245-9d06-e35a950548a7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "142b873b-1f04-4a08-922a-5ff147774d3a",
          "httpRequestId": "5ba1373a-aa14-40da-9a23-28ac6e111164"
        },
        "item": {
          "id": "a7968e7a-419d-4245-9d06-e35a950548a7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "41c44cf4-2065-4844-a794-3c86de26d8dc",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "235c7040-fc07-4126-b2f0-8d8f5739a582",
        "cursor": {
          "ref": "6adc2f2b-0094-4b7f-8c58-149dca759a97",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c415ba85-5a45-4460-b64e-d3cd12df8ef4"
        },
        "item": {
          "id": "235c7040-fc07-4126-b2f0-8d8f5739a582",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d4ba5dfc-ebb6-499f-b795-6a65b1b2492a",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "30903bad-5472-4207-ac11-4a5da3215b9b",
        "cursor": {
          "ref": "a1710db7-60cf-4c55-9f6c-433f3c2c860e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f772b111-d933-4168-b70b-7ba64f97752c"
        },
        "item": {
          "id": "30903bad-5472-4207-ac11-4a5da3215b9b",
          "name": "did_json"
        },
        "response": {
          "id": "920270ba-7d5f-4f56-b19e-4c6af543c56a",
          "status": "OK",
          "code": 200,
          "responseTime": 413,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af884eca-619f-4969-9601-691955931528",
        "cursor": {
          "ref": "0548cda0-6b1b-487a-9f5f-bd30dcbec702",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2011bc11-d985-40d6-b647-c4331d21196a"
        },
        "item": {
          "id": "af884eca-619f-4969-9601-691955931528",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bfa7149-ff05-4945-bb56-72fb83b15486",
          "status": "Not Found",
          "code": 404,
          "responseTime": 602,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af884eca-619f-4969-9601-691955931528",
        "cursor": {
          "ref": "0548cda0-6b1b-487a-9f5f-bd30dcbec702",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2011bc11-d985-40d6-b647-c4331d21196a"
        },
        "item": {
          "id": "af884eca-619f-4969-9601-691955931528",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bfa7149-ff05-4945-bb56-72fb83b15486",
          "status": "Not Found",
          "code": 404,
          "responseTime": 602,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de11b67-7858-4bbe-9194-115db2dbcd1a",
        "cursor": {
          "ref": "6b7836b4-d17d-489c-a1fa-9da8a3595bc6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "76f2f736-2e28-45e3-8067-f4458b3ecf24"
        },
        "item": {
          "id": "7de11b67-7858-4bbe-9194-115db2dbcd1a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "036b3d72-84ff-4dfa-abf6-40d37ef7d949",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8d722e-3c39-4fac-82a8-5aa33cf30510",
        "cursor": {
          "ref": "8faefab1-73fb-4141-b298-48748a2fbc08",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7f7ab856-18bb-45ed-b2a7-117aae501d95"
        },
        "item": {
          "id": "ef8d722e-3c39-4fac-82a8-5aa33cf30510",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b0a84966-693d-4b87-9a67-0fb8c8482f92",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccbc7dc-d0ff-4602-9026-ba6fac20513a",
        "cursor": {
          "ref": "77b51084-c49d-48a2-ac3f-17253c6dd2ca",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fc440ae3-9529-400b-a0ca-53781721cd87"
        },
        "item": {
          "id": "5ccbc7dc-d0ff-4602-9026-ba6fac20513a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "684f6450-d5dc-4fad-830f-b255726be674",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 118,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a311932-4981-4fb4-9a8f-c5b46f64d630",
        "cursor": {
          "ref": "9a8f624a-a6e8-46f3-9bb0-4eec0c6991a3",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "791fbeee-28c4-4cd4-b046-d9deb29c03f3"
        },
        "item": {
          "id": "7a311932-4981-4fb4-9a8f-c5b46f64d630",
          "name": "identifiers"
        },
        "response": {
          "id": "a5f0b1c2-ed01-4db7-b4dc-79de04f1e24f",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbcf5ef-3a01-44c8-8ac1-46d61e6c863b",
        "cursor": {
          "ref": "4864519c-8817-40ef-87b4-53c778a2b335",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5d9bda5f-9caf-4188-82ae-d0f799532219"
        },
        "item": {
          "id": "1fbcf5ef-3a01-44c8-8ac1-46d61e6c863b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "23c05db7-1269-4277-8800-ba5fd96b4a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cbaafd-3e99-4778-817e-18fd9c416b4e",
        "cursor": {
          "ref": "c4aee14a-e347-4ce2-9766-920f28c73c39",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bfda6bc1-c759-4981-8041-0be37ab111f3"
        },
        "item": {
          "id": "30cbaafd-3e99-4778-817e-18fd9c416b4e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ebea50e5-1cf9-4d3c-b4ec-eb1306dbf415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04cb6c1-c227-48ca-83cf-2eaa8a2dd5e0",
        "cursor": {
          "ref": "26bcb5d8-82b1-410a-81ae-588295eba454",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e4675fcf-92ff-4668-aec4-1c94e2ca370b"
        },
        "item": {
          "id": "e04cb6c1-c227-48ca-83cf-2eaa8a2dd5e0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "daee692f-fcf5-4baf-b208-863d3a232949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d1aed7-0ba7-460a-8926-ba65640e7bfc",
        "cursor": {
          "ref": "c57dcfb0-d337-4a83-94bf-84373f6b83c1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5c434305-0aca-49f9-90cc-26813fd53f7d"
        },
        "item": {
          "id": "41d1aed7-0ba7-460a-8926-ba65640e7bfc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "55b1e52d-153b-4744-a5cf-c3d91eea7e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d43c12-8fc9-4461-a2f8-674d849839e9",
        "cursor": {
          "ref": "05b0d36b-fb04-4175-9350-df573dcd86ee",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "588d3834-e6a4-48ca-a7b1-47fd488ffd68"
        },
        "item": {
          "id": "c7d43c12-8fc9-4461-a2f8-674d849839e9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bde80f80-3fbd-436f-a913-47efca538963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fa4525-5f04-4e3d-902d-48b33fafcd7e",
        "cursor": {
          "ref": "363effc6-f014-4a83-85e0-eb892699f395",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7a874349-11e2-469c-8cea-a99e6272b66b"
        },
        "item": {
          "id": "43fa4525-5f04-4e3d-902d-48b33fafcd7e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7d4580ec-8f8c-4576-b5b5-99b447201c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee4e45a-135a-41b5-bba5-394ed7985b47",
        "cursor": {
          "ref": "7a591562-3dc5-4a00-b585-a6241a29d296",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9fa75324-861f-4b6a-8872-e7eee5c5b439"
        },
        "item": {
          "id": "3ee4e45a-135a-41b5-bba5-394ed7985b47",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8a81914d-eff6-4e03-a17f-b77c890337b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917c31b3-5c64-4c44-9a74-cd1c077f216e",
        "cursor": {
          "ref": "92623f47-ebaa-4d02-97db-1b9655d4d515",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "12376020-4b54-4f6f-8417-2acb02af2ccd"
        },
        "item": {
          "id": "917c31b3-5c64-4c44-9a74-cd1c077f216e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1d9c8f1f-b421-4e31-8b0c-376c464a9f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1269f60c-1dd7-4299-bc21-ad5d6fc908ef",
        "cursor": {
          "ref": "09731de8-c82d-4fe4-ad3d-10fdf7a2490b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c5ed29bd-35b3-4415-8715-321f739072f5"
        },
        "item": {
          "id": "1269f60c-1dd7-4299-bc21-ad5d6fc908ef",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e454696c-d28e-45f7-b276-d1ba732fc2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cd8705-7ab1-4c2f-8583-74a201928cd9",
        "cursor": {
          "ref": "3feba715-852c-4f33-98d9-29e3464d4994",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "71ed8c62-dbeb-4e0d-be44-72a29f8157a4"
        },
        "item": {
          "id": "14cd8705-7ab1-4c2f-8583-74a201928cd9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e0940b1c-be5a-40ad-92c7-b9d7c622f743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c256fbff-dcb7-4560-81a7-28ff6508a2a9",
        "cursor": {
          "ref": "a14a30ac-3058-4ddf-a03e-5bb927a5f6f5",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cf454a4e-5caf-4445-aae4-234157d79452"
        },
        "item": {
          "id": "c256fbff-dcb7-4560-81a7-28ff6508a2a9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d08acde7-8a25-407e-9a82-89a6651e0b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08f5ae9-51b2-4948-85ff-087532b706f8",
        "cursor": {
          "ref": "63223f18-a60c-40f0-98e4-a4605bb3534f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c91b6445-8972-422e-93a5-11e2c80f32fd"
        },
        "item": {
          "id": "c08f5ae9-51b2-4948-85ff-087532b706f8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "487671c5-141d-4caf-9de9-a9693cbfad2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75eb5333-b66e-4124-92fb-15dceaa9dbb7",
        "cursor": {
          "ref": "760655c1-8a29-4611-b753-39d2029ca25d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "20c9d5f8-f1af-4519-b524-8fb03a519ed7"
        },
        "item": {
          "id": "75eb5333-b66e-4124-92fb-15dceaa9dbb7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f18cc532-581d-4cb3-883b-2559ec4246df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f6c18b-2142-4fbc-b9f7-309ca13ed1e6",
        "cursor": {
          "ref": "5e5ec065-d078-4f09-89df-8a40f2b36add",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "042c4762-87f0-458f-8f31-b28898a29e6b"
        },
        "item": {
          "id": "e2f6c18b-2142-4fbc-b9f7-309ca13ed1e6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "14b51303-771c-4b6c-aa7b-6fff4727f025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4eb7a2-d933-45f5-93bd-7202b02eaa10",
        "cursor": {
          "ref": "8a2d724a-f054-4c6e-ba04-9556141b329b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f199a2e4-6c66-4d68-aba0-5b1947c06baf"
        },
        "item": {
          "id": "3c4eb7a2-d933-45f5-93bd-7202b02eaa10",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dc1f6919-0502-4695-b1a0-a8a2d1ee3c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb7a6e1-4533-4e52-80fe-71f163235060",
        "cursor": {
          "ref": "653719a2-a832-42a6-b3b7-87e17c61b16b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "888880f4-71bb-46f3-afd4-f36824e47554"
        },
        "item": {
          "id": "ebb7a6e1-4533-4e52-80fe-71f163235060",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "db414035-f207-4c27-a6f2-778a22f16587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ddbecc-eaac-4912-93c7-75884b4c6373",
        "cursor": {
          "ref": "6ca5c681-008f-44e8-9c95-b79a59a35f44",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "959858cc-5b7a-4217-96ab-f632f66bd5c7"
        },
        "item": {
          "id": "38ddbecc-eaac-4912-93c7-75884b4c6373",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b65b600b-c8ec-4c80-b0b2-c26b77e4a57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250f1533-fb0a-46d1-b746-a92803300288",
        "cursor": {
          "ref": "d06e6eaa-c686-4b3e-bfda-e7e888e1705d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0c182b5c-79a0-4d71-8add-3c49c6a0c509"
        },
        "item": {
          "id": "250f1533-fb0a-46d1-b746-a92803300288",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bfdb574c-d0ab-4597-94c7-2eed9ba598a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4703ec-0d9c-4a16-a7a6-1949ab66d1e8",
        "cursor": {
          "ref": "7e6262e1-c788-486d-97ba-9306af55b089",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9ae192b0-e3d5-4f0a-8580-f3df8a20c83d"
        },
        "item": {
          "id": "df4703ec-0d9c-4a16-a7a6-1949ab66d1e8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ecdbcf9a-c9df-4e66-bf2b-f8c1954c868e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044c85a4-4896-4d16-bd97-0b8f2ff632fa",
        "cursor": {
          "ref": "0873cb04-f094-47f3-b508-71dde9f12f92",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "43bc55f0-21ec-4cee-8703-850a259c9947"
        },
        "item": {
          "id": "044c85a4-4896-4d16-bd97-0b8f2ff632fa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5e498b49-0786-4e39-8b9e-3b592098cfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c28163f-f9df-4bff-80b6-fbd1c1101309",
        "cursor": {
          "ref": "a632e226-491d-4bb0-9819-04d16e1b1426",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "51572d2c-6107-4dc6-9a26-324a094758f4"
        },
        "item": {
          "id": "2c28163f-f9df-4bff-80b6-fbd1c1101309",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3a786c26-e156-45c6-8070-50f5e7049eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a12381-bee9-46c9-b65a-f4e725e59fcd",
        "cursor": {
          "ref": "4a1a8e03-40f1-47ba-8cce-c04b8988de57",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a379f140-47af-4373-a071-065c2c5c674d"
        },
        "item": {
          "id": "37a12381-bee9-46c9-b65a-f4e725e59fcd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "55e92825-144b-4a8d-8ddb-9f90c7bb5bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d422521-7c65-4971-8f8d-fc10b2e1b971",
        "cursor": {
          "ref": "4750d0bf-5acc-4c10-8a2c-9c23fe0e75f7",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1b3ecc16-3509-4f6e-aa7d-ce238cf0c143"
        },
        "item": {
          "id": "7d422521-7c65-4971-8f8d-fc10b2e1b971",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9695e409-5ed1-48bc-8319-116982694cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb32a55-e4f2-4a00-a5f7-567632bc27d7",
        "cursor": {
          "ref": "380e7089-1c10-4906-ae3e-0d2c43b76a02",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a212d8a4-b229-4ea0-8ce5-da9aafd34860"
        },
        "item": {
          "id": "bfb32a55-e4f2-4a00-a5f7-567632bc27d7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c333501c-c8ce-44c2-9d8e-3766b12efc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a08362-d5d5-4f07-8ae6-6ac5d66f7e5d",
        "cursor": {
          "ref": "a4bbbdee-058e-4838-aa34-a95e492d237d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "219d795c-d0f9-4130-a0ee-cfdd1be13fc2"
        },
        "item": {
          "id": "85a08362-d5d5-4f07-8ae6-6ac5d66f7e5d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0627d282-4bcc-45e0-8ea9-7e88bd37f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda98e90-835a-42ed-a58d-26395b3b74c6",
        "cursor": {
          "ref": "bce78459-52b3-4994-8d30-d074ea86c994",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a2be2727-0188-4876-a72f-97a1d5cfac97"
        },
        "item": {
          "id": "eda98e90-835a-42ed-a58d-26395b3b74c6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "554fd395-8339-4c2d-8e28-36f611e33d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be225dd7-422c-43db-a1ad-8d6ab5796446",
        "cursor": {
          "ref": "e327bd2c-addc-4fe4-828d-7958d25cf660",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e5703ce5-cdcf-4a58-8e98-d7f9f9258e53"
        },
        "item": {
          "id": "be225dd7-422c-43db-a1ad-8d6ab5796446",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "82d9c63f-8bde-4356-a2b6-542d867ac4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dde6036-7a42-45fd-9563-a078841e0d09",
        "cursor": {
          "ref": "235a155c-c3fb-46b1-99ea-60091d1c4619",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5d3b2c0f-afcf-4354-80a5-1ec05ddd6245"
        },
        "item": {
          "id": "2dde6036-7a42-45fd-9563-a078841e0d09",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7ea0ecee-3a87-4834-af88-ca4f1c2d0ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce310cc-7b37-4c0a-98cd-35380761ec43",
        "cursor": {
          "ref": "d88fd64f-3267-4ca7-9f3c-32bc7697bd70",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d3537666-752a-4ac3-8503-e508e2ed4f90"
        },
        "item": {
          "id": "0ce310cc-7b37-4c0a-98cd-35380761ec43",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0ad81cc1-c31d-4887-bccd-16c6a64056c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9005eb24-6721-4558-bf3a-77d5eed028d1",
        "cursor": {
          "ref": "1af476be-aa3a-48f9-ae14-9b410a79cad7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "db1b1a6e-6a06-4428-9579-01515c012472"
        },
        "item": {
          "id": "9005eb24-6721-4558-bf3a-77d5eed028d1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e6afc0b5-c830-4d9d-91f2-507812985704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d38a6ad-b3d8-4469-b342-d8798936ce9d",
        "cursor": {
          "ref": "5750690f-781e-4ca9-afb5-33f48d03bc0d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6e85f0dc-9367-4f1a-9e28-39e1011683f0"
        },
        "item": {
          "id": "4d38a6ad-b3d8-4469-b342-d8798936ce9d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7d3e7525-af60-4ea7-a110-8948cf79edb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f970cac-6435-4032-83e0-541310b60d96",
        "cursor": {
          "ref": "3bbeb1d9-7a0b-4612-af61-e84b71d2780a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7ec50034-f227-47d2-b2ba-c13c7264d3b3"
        },
        "item": {
          "id": "0f970cac-6435-4032-83e0-541310b60d96",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ef94c0c8-be73-4260-bf11-ce5a002dc140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0694cc1f-50f2-492b-b154-78ab6ba708ad",
        "cursor": {
          "ref": "00cec65a-44a1-4268-a216-01b25b44e557",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2056fa8a-849a-4f08-96b4-fd9f91e8c5fa"
        },
        "item": {
          "id": "0694cc1f-50f2-492b-b154-78ab6ba708ad",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0c79f620-d917-4b34-9845-22990e6a8f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01485f8c-92d7-436d-978b-e7f5ecf3a298",
        "cursor": {
          "ref": "b90b8ec9-2cbb-47da-9afb-b19bed64b0ed",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d3686c49-a85a-4c96-a844-413359df4238"
        },
        "item": {
          "id": "01485f8c-92d7-436d-978b-e7f5ecf3a298",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6c1402ea-bbe9-47de-b897-da775889cd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa0a82f-6043-4900-b097-ceffaad87d83",
        "cursor": {
          "ref": "c0debe80-9b66-4e69-ac25-3b2197a3927e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "25afce2b-25b0-4b2b-acba-ca135f97157a"
        },
        "item": {
          "id": "1aa0a82f-6043-4900-b097-ceffaad87d83",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "122aa1fe-8bfb-447a-9c88-d8262d078abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3009eed-f65a-4a0a-bc94-de7b7c1f27fd",
        "cursor": {
          "ref": "adec1568-10e2-435f-8bfd-bf71bf33e3df",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8c160345-7cfc-4db7-b444-ad5bc098edf1"
        },
        "item": {
          "id": "f3009eed-f65a-4a0a-bc94-de7b7c1f27fd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a0db0e63-7a12-4720-b7bb-a9ce4b15300e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dc65df-2189-4712-b09b-e504aaff54b6",
        "cursor": {
          "ref": "63265ddf-ea84-457d-91de-c2ee12280190",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3a1779e3-258d-4912-b399-3c42bdb18564"
        },
        "item": {
          "id": "04dc65df-2189-4712-b09b-e504aaff54b6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bd31c4a6-2ed0-4cb0-84a2-0c1196a5ab8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9420a3ce-9911-4d46-b6b1-5fd09adb358f",
        "cursor": {
          "ref": "1ee0af27-56f4-4f2e-ba5c-605fc9d5c636",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "935e22f9-732a-4258-8ffb-2bf33bb44826"
        },
        "item": {
          "id": "9420a3ce-9911-4d46-b6b1-5fd09adb358f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8381c496-238c-4448-af70-a6bf738f448b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb4a1f2-aa1e-4334-9cdc-f1ed0de03858",
        "cursor": {
          "ref": "4f75c2a6-53f5-48d4-b09c-13871b85b41c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "abc33218-26fc-4415-85ad-35eec51b5806"
        },
        "item": {
          "id": "5fb4a1f2-aa1e-4334-9cdc-f1ed0de03858",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "88db7941-57ec-42a4-a12f-107101293043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a182824-7f4c-4851-9a75-5ba96281f448",
        "cursor": {
          "ref": "7a78fac8-8f7b-4889-80ca-1eb167245197",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4f1cd9c6-b1c8-478d-a86c-07211ad71e84"
        },
        "item": {
          "id": "4a182824-7f4c-4851-9a75-5ba96281f448",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d0c578fe-852d-4fdf-9392-40212eef3694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ec87df-0052-4d9e-8ccd-68f963e5147c",
        "cursor": {
          "ref": "cd2d72e0-5e84-4e8e-9809-5c7698ef779a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ed379663-f8c8-4880-9ab0-da4770482ffd"
        },
        "item": {
          "id": "17ec87df-0052-4d9e-8ccd-68f963e5147c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a05d6622-b6bb-4117-ba97-835f22a8e51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a9334c-f132-42d9-aaa1-209ee71194ab",
        "cursor": {
          "ref": "a593b0db-1209-4926-8a4b-f408df13476b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "485eb71e-e0d4-4989-84bc-8f57e6953002"
        },
        "item": {
          "id": "d1a9334c-f132-42d9-aaa1-209ee71194ab",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b404cbd7-2f62-45d5-8fd4-62673ea2b9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0344880d-74a6-4c42-8e07-c055185f6471",
        "cursor": {
          "ref": "f1a43342-b1b1-49eb-84de-8840bf45e235",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "733adab9-936f-4c8c-a17a-46759b407454"
        },
        "item": {
          "id": "0344880d-74a6-4c42-8e07-c055185f6471",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5b1a8e01-4ebd-4f12-8415-04f9572ceae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5778d89-af1d-420b-b00e-34870a96a8f7",
        "cursor": {
          "ref": "8707b0bc-ae52-4be3-b33e-3ff4ff0a9528",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a1b42d6d-8cc9-47f2-bd17-3d2165bd6211"
        },
        "item": {
          "id": "e5778d89-af1d-420b-b00e-34870a96a8f7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2591d94d-7ffa-4c67-8049-81639d990fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155b1a04-c44f-4376-96c3-e98ec078e0ac",
        "cursor": {
          "ref": "5ec049b3-257d-4c58-b4d3-a68bcfa1fbe9",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1ed82d1c-53e4-4520-95dc-46f7e6c2880a"
        },
        "item": {
          "id": "155b1a04-c44f-4376-96c3-e98ec078e0ac",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d6c260fa-9bec-4e05-b11c-d20f82f55ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849fea39-ac86-4223-bd02-4b7fe06405ac",
        "cursor": {
          "ref": "bf4ba3a5-7153-4cf9-9fd7-c21aca974655",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cc98e6b4-4384-40df-aff1-a93b395b99ec"
        },
        "item": {
          "id": "849fea39-ac86-4223-bd02-4b7fe06405ac",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c5bc76e8-1b82-40bd-9ce2-c1ad9e4ee5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf822892-cfc2-406f-bd76-6e01c1996308",
        "cursor": {
          "ref": "07869479-a1c0-4baf-b6d3-35ebec1390f5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "15353a76-af27-44d3-a420-7af66df767e7"
        },
        "item": {
          "id": "bf822892-cfc2-406f-bd76-6e01c1996308",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f0a40b2b-018c-4127-9b93-3d6f02f2a4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ce7809-e776-468b-bd13-8108e6035247",
        "cursor": {
          "ref": "eb4b9353-8b45-434e-a835-379d05599ba2",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e6346f67-f2fb-436f-9f21-8dfec3ed0305"
        },
        "item": {
          "id": "66ce7809-e776-468b-bd13-8108e6035247",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "890d5fea-fa77-43c7-807c-85689fc105b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0908758-a6cb-4591-bff0-f3be82fe6eb1",
        "cursor": {
          "ref": "3ca1f53c-d749-4401-98b6-dec22c1d7669",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "11eb5135-1179-41a9-a745-9ea45799b9bb"
        },
        "item": {
          "id": "c0908758-a6cb-4591-bff0-f3be82fe6eb1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7252aa66-edb4-4fd6-ad24-d4fbd5bff5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c156e53b-8830-426c-b953-54bc246946a0",
        "cursor": {
          "ref": "e0ea82db-649b-4598-a90a-b35aa38db2dd",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5f097cc8-30d0-4008-a657-06b95edd65fd"
        },
        "item": {
          "id": "c156e53b-8830-426c-b953-54bc246946a0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cd6743f6-1853-4b9e-81c5-ffb77d3ceb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5953e9-69f6-4840-bbef-db44bec0e0fb",
        "cursor": {
          "ref": "fec16abb-188c-4b8c-b666-fc5e5d2cd6a1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "41af7820-e147-4ad5-84be-d3893a0b492e"
        },
        "item": {
          "id": "bb5953e9-69f6-4840-bbef-db44bec0e0fb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d397e7a0-88ed-4097-a361-55093b515316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d101dd-1ef0-4bcd-a00c-51789d6e9226",
        "cursor": {
          "ref": "238f44f2-ac89-4831-9815-3ea49f3d3b54",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fbc9ab20-e7f5-4e35-9d47-78b95e96855c"
        },
        "item": {
          "id": "39d101dd-1ef0-4bcd-a00c-51789d6e9226",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1a67aec3-8f31-4d6a-922a-b84006e7413a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb84ab99-cb3f-4095-868f-e9f12952ab3a",
        "cursor": {
          "ref": "9119f285-aed3-41c5-acb2-5d3c3ef95a41",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4611e577-e8ea-4d0d-932b-c9a3b2b1fe26"
        },
        "item": {
          "id": "cb84ab99-cb3f-4095-868f-e9f12952ab3a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "686f933c-98b9-46ec-b81b-9ef3d799672c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c78d8d6-31f9-4c11-a1f6-0eb1a4c2a441",
        "cursor": {
          "ref": "954a210d-25a1-46c0-a149-19238df5eeaf",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "db7d9f49-b88e-4aae-86bc-2539e2e0978b"
        },
        "item": {
          "id": "0c78d8d6-31f9-4c11-a1f6-0eb1a4c2a441",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "aa9676be-3340-40e1-8b56-d1bf62f9337b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8165324c-bf4c-492e-9390-6a47caf02a1a",
        "cursor": {
          "ref": "84eff870-bd22-414e-8f59-2fc20c6a9508",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5ef8f8a2-179d-4f1e-b2b7-ac1d53571959"
        },
        "item": {
          "id": "8165324c-bf4c-492e-9390-6a47caf02a1a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d05fc416-5b0c-480f-9e29-0dc23713a915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d93405-25db-4288-b4ea-64a17e04b1c0",
        "cursor": {
          "ref": "93d61783-f5a7-422b-9931-a37ae0be8279",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5e63e5bd-c689-4b03-b479-e04f6c78b73c"
        },
        "item": {
          "id": "70d93405-25db-4288-b4ea-64a17e04b1c0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5494d5ba-2f8f-43eb-a339-9f6a17747492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbedeaa-e76f-44bc-b6bb-5b545c258788",
        "cursor": {
          "ref": "645fd643-7d75-4b8d-b4e3-ec11abf5dd84",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9fcba3cc-64bf-4605-85ac-920474fa5464"
        },
        "item": {
          "id": "5fbedeaa-e76f-44bc-b6bb-5b545c258788",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "01b3d19d-cdd1-41ec-a174-6106757b8706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c066f4d7-c102-433a-b484-d8b837471096",
        "cursor": {
          "ref": "8bdb14aa-2290-4fde-8bd0-055b36bcaa87",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "272efe68-2b53-413d-b74f-ea0a2b39dec5"
        },
        "item": {
          "id": "c066f4d7-c102-433a-b484-d8b837471096",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e737503f-fe05-4667-8db7-7750348e59b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88fa837-dfdf-4c82-b78e-28eb76c60f43",
        "cursor": {
          "ref": "f5c0cac3-48cf-4b11-bf6c-909bd89c76c8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9e3f4fba-cb00-4682-81b3-1896937c6dbf"
        },
        "item": {
          "id": "c88fa837-dfdf-4c82-b78e-28eb76c60f43",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "352eb505-6096-4815-be44-7a2f99d8b4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4153fdab-2aad-4ac9-88ed-d079bf6326ce",
        "cursor": {
          "ref": "fda9d260-9337-43fe-be20-fe9f19703a84",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e738cef0-2a5f-4989-bdd5-7ca2e465ead6"
        },
        "item": {
          "id": "4153fdab-2aad-4ac9-88ed-d079bf6326ce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9777afba-31c8-4569-9ef4-a1b859890523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944b71c2-7045-4871-a2ba-a1abc04dc944",
        "cursor": {
          "ref": "5ec45c73-ab96-4787-9de7-c808c3c84f30",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1a62985f-e9eb-44b1-92c6-3515c9468f0a"
        },
        "item": {
          "id": "944b71c2-7045-4871-a2ba-a1abc04dc944",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6142f05a-3b98-4c41-a2b4-69f0d6ee9cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eb1fe1-f796-4006-a60e-7ae68ddb10d8",
        "cursor": {
          "ref": "18444106-34b8-4873-9790-42585c00cabd",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "380e5497-ba46-4c9a-9c26-071551b257b5"
        },
        "item": {
          "id": "01eb1fe1-f796-4006-a60e-7ae68ddb10d8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1310be54-46ac-457b-9807-82b111f5b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf20da1-a0c8-4d14-be1f-4531991405f9",
        "cursor": {
          "ref": "955dcd23-72f1-4b87-bcbc-f647add3cdcf",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f1f4d7b3-ee7c-4d27-9307-a67c2d20470c"
        },
        "item": {
          "id": "1cf20da1-a0c8-4d14-be1f-4531991405f9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c70cdce0-0521-484c-95ba-a194c1b5f297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56489321-92e5-46c1-8025-3f78158e67e9",
        "cursor": {
          "ref": "d1b3de75-ceda-4c29-89bf-0417f05cee93",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0b434977-ac64-49b3-8e43-135945f091e2"
        },
        "item": {
          "id": "56489321-92e5-46c1-8025-3f78158e67e9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "082e7ff6-6a6b-4945-ba0c-3d0e839b38d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cd5160-c85f-43c1-a3e1-4670f75fbe26",
        "cursor": {
          "ref": "e7327950-595a-4662-b557-80a7420ec677",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f00fc491-382a-4216-b9f9-fc0201cca2fd"
        },
        "item": {
          "id": "15cd5160-c85f-43c1-a3e1-4670f75fbe26",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "58c71b04-986e-40fc-a03e-0ae4b9eae4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979fd708-9969-48f1-ab57-cf9c8eef2af9",
        "cursor": {
          "ref": "dc921376-4421-4c99-a292-0e5bf46ebfa8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0a35987c-edb9-429a-b21c-ffa00a43677f"
        },
        "item": {
          "id": "979fd708-9969-48f1-ab57-cf9c8eef2af9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d96435a4-a3cb-4ba4-b45e-74bc7ce8faf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a3446d-02b7-4896-9c1d-a7e68dadb372",
        "cursor": {
          "ref": "84145796-b941-4cce-ba17-aeb9b5c8400e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8dee61c1-4819-4265-bf3d-d11f496a1094"
        },
        "item": {
          "id": "98a3446d-02b7-4896-9c1d-a7e68dadb372",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fde76043-d9fc-4c24-a47d-f5fdc4005d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3241abf1-40d4-4d57-85b9-f7e8a16282e3",
        "cursor": {
          "ref": "5514ac7c-66f0-498a-92eb-81cb9fb1bed7",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8a00157a-943b-4b81-a3b2-59348b29b2b7"
        },
        "item": {
          "id": "3241abf1-40d4-4d57-85b9-f7e8a16282e3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "18cf538b-9952-46fb-bac9-c82767340a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7280526d-6d73-468e-a1ff-456470509779",
        "cursor": {
          "ref": "adf1ca8f-ba4f-466c-8a85-707eb7fda954",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dcfa6434-f03f-410f-b418-af620c33ef71"
        },
        "item": {
          "id": "7280526d-6d73-468e-a1ff-456470509779",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3b78bed3-aa1b-4b61-8fd7-4e9840c932d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9896bd8-dd2f-436e-9e0d-32e8a0026dcc",
        "cursor": {
          "ref": "2bc57913-068a-4931-9030-3712b3ceb779",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d72cf9d1-1d9f-4126-be0e-95b5590fd762"
        },
        "item": {
          "id": "f9896bd8-dd2f-436e-9e0d-32e8a0026dcc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "30c5dd40-251a-4b90-a51e-2c20dc94ff4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239c931e-f8d8-42b7-af4f-d2b685444afe",
        "cursor": {
          "ref": "d41826f3-2ead-4dd6-8b1d-3200686a73b8",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "abfe0123-af67-4ec7-a48d-f1682ec33103"
        },
        "item": {
          "id": "239c931e-f8d8-42b7-af4f-d2b685444afe",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "45625035-f8a7-44b0-b195-ca513e0b62d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaacc45d-a76d-44ba-88f0-350aa468558e",
        "cursor": {
          "ref": "7eb9f040-c319-4eb4-9b88-292256cf7305",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "aee3010f-9981-4b20-b5b7-eb5c226a06b8"
        },
        "item": {
          "id": "aaacc45d-a76d-44ba-88f0-350aa468558e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "21127871-303d-4006-8da2-7e6b88467c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef843227-9f96-480b-ad5e-7e601797f1e3",
        "cursor": {
          "ref": "ee1e3703-a389-44c2-984f-1c3e5c699c41",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8d49da70-8e0d-41c3-a53f-5ca88bc3ae75"
        },
        "item": {
          "id": "ef843227-9f96-480b-ad5e-7e601797f1e3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "efa0aec6-bd01-4819-a585-8b28d36d74dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33680a74-d722-45f4-bbcf-88149036df4d",
        "cursor": {
          "ref": "8cd442bc-8665-4922-9f42-a277411224c2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "024941a7-52f0-460a-a4f6-0a93112c6b1d"
        },
        "item": {
          "id": "33680a74-d722-45f4-bbcf-88149036df4d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ffb46b76-b4ea-4dc7-8b05-924f0d440c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d109f0-3a80-4c81-b92a-334b47d3ded6",
        "cursor": {
          "ref": "303c1941-f7ec-464d-ad28-53ef121ce6ee",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ceed9929-f83b-4de0-ae38-7a447ff34dea"
        },
        "item": {
          "id": "67d109f0-3a80-4c81-b92a-334b47d3ded6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "76096d77-c99d-4b25-868a-f5561bf8fc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbff0422-4098-46f2-9b05-322b613ed115",
        "cursor": {
          "ref": "4d0e0b18-ba86-49d1-8393-b5eaf6229555",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ce607443-fcd9-4c6a-85ac-ec9017b961c7"
        },
        "item": {
          "id": "bbff0422-4098-46f2-9b05-322b613ed115",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b220d6ce-f5e9-4412-8b60-2d1c3017e8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38274f1b-12b4-41ee-a747-78dee4683319",
        "cursor": {
          "ref": "5d38205c-522f-48a8-8a18-75b9b67906af",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6645ff09-68f0-467e-a07a-284808a2b0cf"
        },
        "item": {
          "id": "38274f1b-12b4-41ee-a747-78dee4683319",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "98fcdbe9-3e08-4c47-8cfa-768eb196485f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827a0b15-8745-48a0-8e05-e618c92bf7ad",
        "cursor": {
          "ref": "d2ee35e2-f610-4f66-ba03-ec4807dafd63",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3397eb45-5bbc-4da7-93fb-8c4e827d4426"
        },
        "item": {
          "id": "827a0b15-8745-48a0-8e05-e618c92bf7ad",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4389295a-de34-477d-971a-e52a13a76695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7e0cc4-0596-4729-a6ac-6aa0256ab8f8",
        "cursor": {
          "ref": "3d44ca13-b023-4932-bdf5-01e5cbbab51e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2854773c-0604-4cc7-a9fb-5b69f0ab8bbd"
        },
        "item": {
          "id": "9b7e0cc4-0596-4729-a6ac-6aa0256ab8f8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "474f1fdc-a25a-4c71-b387-36aa13e209f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89972aae-255d-4c0c-ab63-0cec3ffe9e11",
        "cursor": {
          "ref": "41c759e0-1cda-4dc8-97fd-61aef83b74be",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cb885a0e-9069-480c-bb07-538110b65839"
        },
        "item": {
          "id": "89972aae-255d-4c0c-ab63-0cec3ffe9e11",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5a743add-e841-4d27-bc57-9d5c632e9385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8e1d27-a3c7-4df7-a226-454f75f17806",
        "cursor": {
          "ref": "024b8213-de34-4bd9-9f84-ba5adf21411d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ec671483-418d-4b21-9a9b-311db5499c3f"
        },
        "item": {
          "id": "7a8e1d27-a3c7-4df7-a226-454f75f17806",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4acf38ab-fa1d-4616-be3e-148ac28a27e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595e7e13-8b09-4e3a-ba96-352fe551c877",
        "cursor": {
          "ref": "50523d41-bfc9-4aae-9496-b62bb8e3d5a0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "75587f87-f4e3-4931-aaf6-cca25df87c70"
        },
        "item": {
          "id": "595e7e13-8b09-4e3a-ba96-352fe551c877",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d8653d31-b90f-4797-b0ee-db3174635c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2257ac47-8aa5-4aba-907e-f95bff020847",
        "cursor": {
          "ref": "063511bf-6259-43a9-a702-295ea4a46c86",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b4d2aefd-902e-4a3d-a556-21fd11f85c3b"
        },
        "item": {
          "id": "2257ac47-8aa5-4aba-907e-f95bff020847",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f84cd887-cdaf-42d2-af63-1cfb4e54c7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd95942-c6d3-44b8-8198-47507d930d03",
        "cursor": {
          "ref": "6c5dc23c-083d-43d1-95c0-777fbdc6a3ef",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d4498109-701d-4516-851c-ed02cfcc6249"
        },
        "item": {
          "id": "cdd95942-c6d3-44b8-8198-47507d930d03",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "19a5ac2a-ce0a-4380-b549-85a562637ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689ce3f7-c571-4250-8080-276fc0e14fcc",
        "cursor": {
          "ref": "053a9bdb-54cf-407f-97c2-606bb17d835e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1ccd100f-c48a-4f2b-ac51-df55ea5ec05b"
        },
        "item": {
          "id": "689ce3f7-c571-4250-8080-276fc0e14fcc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5563095f-748d-47e6-bb02-264e743c7c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ba927a-81f5-4e27-ab96-ebee3ea526fb",
        "cursor": {
          "ref": "b4909438-17f8-4c18-8671-3cca88258ee5",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "13a6fbc7-cf44-4173-8883-c1fde643e34e"
        },
        "item": {
          "id": "75ba927a-81f5-4e27-ab96-ebee3ea526fb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c6fad073-65e3-4eb2-b8f7-a780bee1f399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15ca2dd-efc6-4c1c-b0a1-728ee6469c4c",
        "cursor": {
          "ref": "f8ade25f-132f-44fa-9933-96b8f4edcda5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7cdbf11b-d704-4720-b0fb-93b96e422074"
        },
        "item": {
          "id": "d15ca2dd-efc6-4c1c-b0a1-728ee6469c4c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e62198f8-7ac3-43dd-845c-7299f99a7360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dba232-47d3-4c15-8812-319ef29f1d13",
        "cursor": {
          "ref": "55b04f3d-d345-4910-9edc-5c11336a5765",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a25bc5d1-c8c8-4aa7-9114-e370507786f5"
        },
        "item": {
          "id": "63dba232-47d3-4c15-8812-319ef29f1d13",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "103f0c0b-3dcf-4fa3-8396-5ab670463554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407cf7be-e735-4436-b052-0f6bac160ad0",
        "cursor": {
          "ref": "f90e172e-00a7-4e02-801d-cb4497dc1b5f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "226a878d-ff50-41b9-b0df-89625f183844"
        },
        "item": {
          "id": "407cf7be-e735-4436-b052-0f6bac160ad0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c0e62571-5b6b-4818-b1d8-4f5801c2cfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978af362-fa80-496b-81c7-685db351b6ff",
        "cursor": {
          "ref": "34b3de2b-6863-471a-906a-95cfc961b02a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "266c15f5-847f-415f-ae88-c319854dd240"
        },
        "item": {
          "id": "978af362-fa80-496b-81c7-685db351b6ff",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3d72192b-b789-4534-b5d6-c6ff3d2794f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e601ab38-db5a-4a19-9c6e-3543762ccaec",
        "cursor": {
          "ref": "79e96a98-25bb-4b8b-b588-95ff354c6dda",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "de9c6a4d-a64e-4dbc-9024-0cb86e9a56ad"
        },
        "item": {
          "id": "e601ab38-db5a-4a19-9c6e-3543762ccaec",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7e18bea6-d530-40b6-806d-eec1cf2273f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf519867-40a5-4391-93ea-f25a4fac5b7a",
        "cursor": {
          "ref": "ae039bd4-78f9-4a9a-9d59-7a279b6b58c2",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7824b060-902c-4a6d-aed8-596f59f875df"
        },
        "item": {
          "id": "cf519867-40a5-4391-93ea-f25a4fac5b7a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5f644d13-6e29-42ac-af3f-ea67bacff891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50201596-afc2-42fb-a412-fe8099464fba",
        "cursor": {
          "ref": "eac0ffb3-4c7b-4a79-ac0d-77a89b800b5e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6092ab7e-75c2-420c-aa22-fb95c76e02cd"
        },
        "item": {
          "id": "50201596-afc2-42fb-a412-fe8099464fba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f81933d1-48b5-4185-bdba-4d4509ce96ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8396f142-cfac-4346-af97-855ecce33b6a",
        "cursor": {
          "ref": "9e0e59c9-6f54-48ed-a9bf-580f11da02d5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8df48db3-288e-451f-b9bf-62a0bdaa4c7e"
        },
        "item": {
          "id": "8396f142-cfac-4346-af97-855ecce33b6a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9c7c0916-7131-4349-a097-9ab297e2b3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c5081281-cef8-4d53-9791-4fb0cbaf583b",
        "cursor": {
          "ref": "9ca2c777-2233-44cb-925a-a594d8b8a139",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "524443e0-8d45-49a2-b60b-5077901c0821"
        },
        "item": {
          "id": "c5081281-cef8-4d53-9791-4fb0cbaf583b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c5cf4c3c-2dc1-45ed-9df2-efb14fa43509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "2b4a5fef-5423-4e1e-91ac-892540d5b3f1",
        "cursor": {
          "ref": "8f44f1dc-7c3f-4747-afc0-dec6307bd4be",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e234466f-a8bf-4a7c-b433-f2a62da90357"
        },
        "item": {
          "id": "2b4a5fef-5423-4e1e-91ac-892540d5b3f1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "da9d3629-3602-4c76-93dd-77dd5a987c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d5b1f7a6-b07f-4f0b-aaed-4667ffead21b",
        "cursor": {
          "ref": "25ec650e-246c-4be0-ab3c-2e56327769b5",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d685118e-02db-4ae1-af55-82f8b148e6f5"
        },
        "item": {
          "id": "d5b1f7a6-b07f-4f0b-aaed-4667ffead21b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fed313e4-0f45-453f-a59c-a215b44cf8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4a888ba4-9d2e-4393-b4ce-a0a70df4a922",
        "cursor": {
          "ref": "f4bec35e-677d-45c7-945b-213195226c2a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "64463637-57b8-4c63-9c80-17ac69cba1ec"
        },
        "item": {
          "id": "4a888ba4-9d2e-4393-b4ce-a0a70df4a922",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "358903fc-e478-4292-9358-b3b80afd033c",
          "status": "Created",
          "code": 201,
          "responseTime": 10538,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f094b258-f91b-4de5-8314-7a575a3739fd",
        "cursor": {
          "ref": "7ba6051d-fbe0-4b8a-8b4d-9c74f50b3dfb",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "841e6bd5-1378-4204-be56-babc49222d37"
        },
        "item": {
          "id": "f094b258-f91b-4de5-8314-7a575a3739fd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ff7d706a-3ad1-46eb-8b75-2ac4de5d8228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4172502b-b1ae-457d-91be-94574b89ddb8",
        "cursor": {
          "ref": "fd0b541f-8a1e-4753-a018-44a65de26e76",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "623fa4ce-912e-485e-87a1-7104da35853f"
        },
        "item": {
          "id": "4172502b-b1ae-457d-91be-94574b89ddb8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ce59401a-690b-4d6d-9b64-b082e3c5aa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "963f5d5a-d3cc-43d7-9f98-68645a518f31",
        "cursor": {
          "ref": "7c238c84-8c9f-4735-b55c-73049f719e4c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f47f7422-e606-4d8f-870b-b7248d1c5cd1"
        },
        "item": {
          "id": "963f5d5a-d3cc-43d7-9f98-68645a518f31",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "631fbc1c-9da2-49cd-ac36-bcd2c7763461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63ad073-1e9d-4a65-8b5a-c46712c874b3",
        "cursor": {
          "ref": "0a5bfa73-f0ab-465f-85b8-ff5a770c7896",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "081d2fcd-e074-4272-bb7e-0ebc21bc76d7"
        },
        "item": {
          "id": "a63ad073-1e9d-4a65-8b5a-c46712c874b3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "009f43a3-cacd-475e-a5f4-c168c8825a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d08ad8-00c0-418b-87ac-918b3ed690c0",
        "cursor": {
          "ref": "b237c1a2-50f0-44aa-97df-64ab900e2825",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "af124e85-3c5f-4a37-9f6e-2023023be556"
        },
        "item": {
          "id": "92d08ad8-00c0-418b-87ac-918b3ed690c0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c00bc9d2-c1fc-4e5d-aa53-5c9e78e4b5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8f1049-415a-4cec-8621-88ca8f52dd67",
        "cursor": {
          "ref": "31f9cd6d-0dd1-4b10-bae4-d4c5fb5ab5f6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "270735ef-e636-4b34-8995-ec1256948954"
        },
        "item": {
          "id": "7a8f1049-415a-4cec-8621-88ca8f52dd67",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b6522ba2-4376-47d3-b48b-7b0684c05ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3bd4a8-c953-435d-ab30-08468990f222",
        "cursor": {
          "ref": "30c826e7-1073-4fcd-86d7-7d356719c2ec",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ae08cd41-aabb-4958-a088-02a1b2e72483"
        },
        "item": {
          "id": "5e3bd4a8-c953-435d-ab30-08468990f222",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9370ea99-2d93-4872-8970-fbb155b3da4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12576cc3-b219-4352-882c-a31e993ba854",
        "cursor": {
          "ref": "8e4a2af9-06fd-49f1-9cd2-08e874fb70a3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b105cce8-c62b-4979-9e6d-dac81c22f8bf"
        },
        "item": {
          "id": "12576cc3-b219-4352-882c-a31e993ba854",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3009706f-c624-42e6-ab7d-8084f497b604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037fa3ea-ec11-4aac-a934-809adf84d008",
        "cursor": {
          "ref": "6ce7e4a0-caed-495a-8eba-46d2a6db38e8",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "26633986-afa6-4f66-b052-a8bb22fc32d8"
        },
        "item": {
          "id": "037fa3ea-ec11-4aac-a934-809adf84d008",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5c295abf-c24a-42d9-8bf6-9d1398233a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ccafd1-14b9-49cb-9d61-f0955624288a",
        "cursor": {
          "ref": "a3d770fb-193c-4e8d-a2ad-d6136d8b30e7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bc385af7-d19a-4b2f-b1be-51de2d97b04e"
        },
        "item": {
          "id": "00ccafd1-14b9-49cb-9d61-f0955624288a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f321db38-8207-4db7-ac33-802998805316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4097c6e8-5978-4999-a162-b2ed5378c0cb",
        "cursor": {
          "ref": "afcfe1ef-7bd3-4e92-9c4b-6b9e2e20691b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1070f981-3904-4442-8363-d8941f801365"
        },
        "item": {
          "id": "4097c6e8-5978-4999-a162-b2ed5378c0cb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "57d25a80-8760-488d-86d4-af068314ee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cca039-46f1-4617-b41a-624cfa2a901c",
        "cursor": {
          "ref": "32d4b2cb-606b-40b8-888e-8f1a2274ed5b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3f265cec-bca8-4144-8fc2-a79ad745be82"
        },
        "item": {
          "id": "22cca039-46f1-4617-b41a-624cfa2a901c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "337efd1d-50f7-4ea1-9787-c234bff5e628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2766e4-dd7e-4177-ba52-87d9c05afacc",
        "cursor": {
          "ref": "c35add32-eba7-4416-b7ad-79eb1df3c3fe",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "077f6749-0757-400e-aa2d-7060f79943a6"
        },
        "item": {
          "id": "0e2766e4-dd7e-4177-ba52-87d9c05afacc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "807a0698-a2a4-43b6-9f8f-ef58316f586c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38786206-438b-47ec-9fec-388515476a7c",
        "cursor": {
          "ref": "db2301b9-be2c-4778-b139-af8d7cf29036",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9b000106-0147-40fe-83e6-115222985725"
        },
        "item": {
          "id": "38786206-438b-47ec-9fec-388515476a7c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3083a914-93d8-43e5-9cf9-7cf2b80a979d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e388a561-0d85-41a4-afd3-4d12dbea9851",
        "cursor": {
          "ref": "a108ebf1-cc41-47de-935c-4fa110568a1e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "34755d8a-f6e6-42e5-b893-b878945ff8c0"
        },
        "item": {
          "id": "e388a561-0d85-41a4-afd3-4d12dbea9851",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8307f5a5-c8ee-460e-9ea5-347f9bc42267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40269d06-7948-4f90-9f10-b0a860cc5ec2",
        "cursor": {
          "ref": "0cb1dbbc-2172-4160-9f45-71b477118886",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c1dd7c6f-fda7-455f-9e51-0f2bdafcd2da"
        },
        "item": {
          "id": "40269d06-7948-4f90-9f10-b0a860cc5ec2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "72a6826f-eb85-4de6-a2bf-a5f4f6ea1455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010df5d0-b721-4027-b826-cd0fd2331e57",
        "cursor": {
          "ref": "c8f073c3-2baf-41e2-8f1e-22fd9511db84",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2bb4bdef-27ac-4a7b-a95a-9b6f1b3281dc"
        },
        "item": {
          "id": "010df5d0-b721-4027-b826-cd0fd2331e57",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "53df4e7c-8be7-456e-b39e-40efcd11233f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421de1b5-3771-4d95-8e5a-e24dbd67d238",
        "cursor": {
          "ref": "6f9b345a-8e0e-4bc0-ab21-37d96772e01e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1ce156a4-a7b9-460e-87c9-4755b4e09743"
        },
        "item": {
          "id": "421de1b5-3771-4d95-8e5a-e24dbd67d238",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3064ca43-a40b-4e8f-b262-73daf1af0f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffd6ec5-87e3-4878-919d-e7eb258a5f17",
        "cursor": {
          "ref": "7cf17577-3e1f-49a0-89a8-e678f66dfc93",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e31b5e0b-3ceb-478d-b27a-358d65ada9f4"
        },
        "item": {
          "id": "2ffd6ec5-87e3-4878-919d-e7eb258a5f17",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b6187cfa-4027-48d9-8a75-1a673eccd866",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 100,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ba922219-eed8-48cf-be66-7798bc5bd2ed",
        "cursor": {
          "ref": "8a271bc8-ee03-4748-8fc5-8583f2fb71c5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "07163863-6f25-414f-a66e-b3883a66b843"
        },
        "item": {
          "id": "ba922219-eed8-48cf-be66-7798bc5bd2ed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "212c8cb5-11cc-44d5-b5c1-ff0174befe62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5074aa2-e3f2-46a6-bfb2-d8c3dfa823b0",
        "cursor": {
          "ref": "a35ff45b-a337-49f8-af12-611f125e59d8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fdc300bf-5e34-4be3-a981-f8545a857ec9"
        },
        "item": {
          "id": "a5074aa2-e3f2-46a6-bfb2-d8c3dfa823b0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d417b774-dbc7-4c12-8e41-9f3d62862fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de156f6c-f073-43f5-b952-6a168018144c",
        "cursor": {
          "ref": "db5cb1ea-e36c-4712-8738-e4f9748e19f4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c9e90942-d283-4ac1-b037-1bac2c888d3a"
        },
        "item": {
          "id": "de156f6c-f073-43f5-b952-6a168018144c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7aed7966-bbb9-44d2-b161-504e349b8f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4aed6e-0723-4555-a1b1-57cff3db4060",
        "cursor": {
          "ref": "830719ea-ad7f-42ad-9866-a716a4be3e92",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f7cae4ea-0419-463b-8a4b-5a83c4ceac08"
        },
        "item": {
          "id": "fb4aed6e-0723-4555-a1b1-57cff3db4060",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8f45ebd1-5237-465f-b7a9-42317ffee7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9525cf1-452c-4205-950a-f4a987910eb7",
        "cursor": {
          "ref": "25564059-2053-416b-aad0-3124ef4c3833",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0cf276be-28d8-4950-8617-667eba612cac"
        },
        "item": {
          "id": "f9525cf1-452c-4205-950a-f4a987910eb7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c51846b2-fe42-4c42-a233-90ffe4c4850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b872af-f661-4e0d-99f6-2d65e93e2b84",
        "cursor": {
          "ref": "85a8c458-0609-432e-acc8-96550a27f5d7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "791dac7f-dd9a-4a7e-ab6b-6beb638f302b"
        },
        "item": {
          "id": "56b872af-f661-4e0d-99f6-2d65e93e2b84",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0f082834-b8eb-4729-96ac-5ec855e5d017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044d18b0-f349-4808-af73-7a5a4528bf18",
        "cursor": {
          "ref": "2d5a4e58-83f6-4754-bca7-bbb2e23a91f1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "17422399-cddf-415d-aa02-7fa932a64e2c"
        },
        "item": {
          "id": "044d18b0-f349-4808-af73-7a5a4528bf18",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea6db8e4-42d7-4452-94fb-070b53e74f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e962ef-070f-449f-aee0-39dc938939fd",
        "cursor": {
          "ref": "2fed1b17-7581-4903-80e6-07419c99c041",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9859e4f2-ed24-445d-b6bb-40e84ff1254f"
        },
        "item": {
          "id": "b9e962ef-070f-449f-aee0-39dc938939fd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f94f838e-aa52-4827-9a1c-a383a9eabd66",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "ea05ca14-63cf-4e56-8848-9a66b040f438",
        "cursor": {
          "ref": "78898bc0-c2b0-471b-ad84-1fb682f97586",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2f72fe88-1bc0-4e07-9cb7-46a398a2f5ba"
        },
        "item": {
          "id": "ea05ca14-63cf-4e56-8848-9a66b040f438",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d40396bd-129b-4958-b33c-876e57f661db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4452506f-6c0a-4a64-9c56-6a8960afb9a5",
        "cursor": {
          "ref": "3e8e7d3a-a1f0-4536-b253-c7b83c6d74de",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "16f66f90-4dc7-415b-bfd2-64eae2c6a439"
        },
        "item": {
          "id": "4452506f-6c0a-4a64-9c56-6a8960afb9a5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "881037de-5fb1-42fe-9010-61111891f0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f274262-3d4d-4ff7-9ced-de881e9ad82f",
        "cursor": {
          "ref": "739dc157-07a0-4258-91ca-ca8c1d2dd99b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "db56cd84-9504-4494-8b4f-4901c2860fdc"
        },
        "item": {
          "id": "3f274262-3d4d-4ff7-9ced-de881e9ad82f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "36194262-0987-484a-bb79-b6e99b0a31d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ef6c2b-6d97-478f-8742-768d7b4df313",
        "cursor": {
          "ref": "8f08c1b7-e7de-451c-b626-101b2c7b391b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2259ad92-ec5c-452d-8738-d4fe88a65198"
        },
        "item": {
          "id": "81ef6c2b-6d97-478f-8742-768d7b4df313",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b7292e78-f61a-4459-a3a4-fc7a037ad669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a38bf2-7074-4490-9f8d-db384815a2ec",
        "cursor": {
          "ref": "e73eb791-d55b-47da-8f99-fbad0f6e68e8",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0bbbcd6b-9b0d-4f0c-96b0-d9e6329e3a39"
        },
        "item": {
          "id": "a2a38bf2-7074-4490-9f8d-db384815a2ec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "04111432-c89c-44f2-8962-55aad3b5f058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484a707b-b080-4e20-bafe-f08939fadb9d",
        "cursor": {
          "ref": "d552b021-0c5d-496e-9fb7-0d1935da1371",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ee52068e-6741-4419-95f6-7ab2e1ea7f29"
        },
        "item": {
          "id": "484a707b-b080-4e20-bafe-f08939fadb9d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "985f1f8c-c47f-4087-b284-709a80694175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20544782-e312-47ec-bdb8-4f0ca9d04d6b",
        "cursor": {
          "ref": "6a302596-f6ed-4457-9d6e-9246f2613bf7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e044d117-c545-487c-aab5-c6725ad2e803"
        },
        "item": {
          "id": "20544782-e312-47ec-bdb8-4f0ca9d04d6b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d2de8dac-fd74-4977-9276-04cb97a78b9f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "5b5bf76b-21f7-4cef-a037-5883023989a3",
        "cursor": {
          "ref": "5ec1c3fe-5232-4e69-816d-6c42ef10d24b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "32ffae6b-830f-4ff4-a90c-d190dce059c0"
        },
        "item": {
          "id": "5b5bf76b-21f7-4cef-a037-5883023989a3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "eee2c08d-fbc8-49f5-8987-290a17c5d3e4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "5b615d12-9816-428a-b1ae-182659806d2f",
        "cursor": {
          "ref": "f67a32ef-6ca2-4985-b834-969a6a6bc4ff",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e2a97c1c-b26a-4d80-9c7a-c2ed0ec91d3c"
        },
        "item": {
          "id": "5b615d12-9816-428a-b1ae-182659806d2f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d2b1b102-dd4d-4f9c-9296-b2b3c495b88a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "8901548f-fa73-4089-a844-79a6ba1d8831",
        "cursor": {
          "ref": "59cfb73c-54ae-4b45-ad55-c861228477b4",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2130f1ef-4dbc-4abc-a343-8fbc8eeda739"
        },
        "item": {
          "id": "8901548f-fa73-4089-a844-79a6ba1d8831",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e90377e6-3432-4cd3-bf8c-3170598bbbe4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "e8b9a2ae-676d-4ad3-82b6-e8bb1f2f077b",
        "cursor": {
          "ref": "daf1f9f8-054d-49fd-b39f-1f32c3c76e1a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "03537f9e-26f2-47bd-84a5-6c1a41b80144"
        },
        "item": {
          "id": "e8b9a2ae-676d-4ad3-82b6-e8bb1f2f077b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f3f9be54-7a62-44cb-bb75-a8ade7f311c1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "6cd346ad-ae38-441c-a8bc-b4a68bacaeab",
        "cursor": {
          "ref": "468c57e7-ba12-4fbe-a6bf-4d4edf02c324",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "18e7a716-7e3c-462d-b58c-82d1d0dd8e78"
        },
        "item": {
          "id": "6cd346ad-ae38-441c-a8bc-b4a68bacaeab",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "606a1db0-362d-4fcd-abe1-83fb3e63f214",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "ffc08609-70c9-4454-9eab-c577862b43f3",
        "cursor": {
          "ref": "39002c50-95b8-4eef-94ba-9dc8d71d6eb5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3ec68035-19d2-47a3-97af-bc2429ff68ae"
        },
        "item": {
          "id": "ffc08609-70c9-4454-9eab-c577862b43f3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d34db6dd-911c-47a0-8cb2-96ffa8f8a9b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546a8233-7592-44f2-a53c-bcc15f76bbdc",
        "cursor": {
          "ref": "03ae6b56-f99c-4b42-a57a-8c41148f98d2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "68e96251-2e47-4b9f-b070-13b2ce8534cd"
        },
        "item": {
          "id": "546a8233-7592-44f2-a53c-bcc15f76bbdc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "86a43b55-d874-46a3-9f84-002b1ea2bfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba1a0a3-b23d-4bc4-84d1-12750344159a",
        "cursor": {
          "ref": "bfb7554c-2385-4d6b-956d-112615ba1a1f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "add33c6c-62f3-4e0a-b393-d05bd4a359d9"
        },
        "item": {
          "id": "7ba1a0a3-b23d-4bc4-84d1-12750344159a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8dc3d2f7-9125-4251-a137-616364ad9f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a53292-3f8e-4db7-8efe-b5ef65607b26",
        "cursor": {
          "ref": "79768af2-de7a-4e48-865e-a50e6ea0fcb7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4120c898-bcee-4689-80ce-96b011442418"
        },
        "item": {
          "id": "62a53292-3f8e-4db7-8efe-b5ef65607b26",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f7d33982-f699-4ca1-b6e4-501d97ec4216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dafb3d-7810-406a-be9e-fe9a6e636725",
        "cursor": {
          "ref": "f9fc7241-8fae-497a-b5fd-2f39f5ff4f1e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5d23534f-67f1-45b6-96df-e4ca2544f344"
        },
        "item": {
          "id": "49dafb3d-7810-406a-be9e-fe9a6e636725",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "749bfa54-f077-4e3b-984b-a630dc61f358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005fc1e4-6afd-476a-ba43-96f1aa10c8ec",
        "cursor": {
          "ref": "9f620c3d-15e6-495d-b421-dced3c3c0896",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "53959461-d4e8-4cfd-9d35-105e640a0d99"
        },
        "item": {
          "id": "005fc1e4-6afd-476a-ba43-96f1aa10c8ec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "94151e33-10e9-4813-9d63-3132bb070b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658012d4-441b-4333-9e46-0574d9613478",
        "cursor": {
          "ref": "69d8a28d-95fb-4045-9885-52632c0c3911",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c0a46a04-9135-4f13-8b82-6621117a640a"
        },
        "item": {
          "id": "658012d4-441b-4333-9e46-0574d9613478",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bf1ba943-d934-42d6-9cfc-001cdb9e0473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f314ec-c4a9-4c52-b316-b8b371678914",
        "cursor": {
          "ref": "efb035ea-2ab7-4fd3-9ea6-6b29c3725a15",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0018eba7-6a3b-41ae-8848-b323fd20b31f"
        },
        "item": {
          "id": "69f314ec-c4a9-4c52-b316-b8b371678914",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "660df8e7-ef66-4b0c-984d-879e3207bd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8fe83b-bd5f-4d2d-aa53-b0ec8025f91a",
        "cursor": {
          "ref": "bfae193c-1e0a-486d-8eb9-6b8bc0257160",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e0801fdb-5626-4990-ba19-c2378bb03410"
        },
        "item": {
          "id": "dd8fe83b-bd5f-4d2d-aa53-b0ec8025f91a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2abcb1e6-a900-4ad9-84d0-06ff236517f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530fe07f-1599-4f05-a1a7-1fed03f09289",
        "cursor": {
          "ref": "d5715b96-6c08-43e9-a6cf-b6a2092515da",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "23c8d4f6-8915-4c34-8c7e-58ae888b896c"
        },
        "item": {
          "id": "530fe07f-1599-4f05-a1a7-1fed03f09289",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c83feaf6-8138-4c19-97dd-1a075311c9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8214423d-5899-4710-b3e4-d4fc2d6440aa",
        "cursor": {
          "ref": "f12aff88-fb24-4add-9d9f-8dd2f2a8b3c0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a284f580-d997-4d05-89f7-4c549dfbd62d"
        },
        "item": {
          "id": "8214423d-5899-4710-b3e4-d4fc2d6440aa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9aa801ee-ade8-4c0a-8d15-f784986cb051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bb5e6b-59a7-43e5-b4c9-1908cabcd995",
        "cursor": {
          "ref": "6ed54d6a-381c-40cf-83ee-adff2e08322a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3d949c3e-6de0-4330-8780-266e5578df29"
        },
        "item": {
          "id": "a3bb5e6b-59a7-43e5-b4c9-1908cabcd995",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "84276be6-975a-462e-8d83-60d0c26bb58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23fabfb-9957-4dca-b700-f9378e4c596a",
        "cursor": {
          "ref": "e1dd70f9-919c-4983-8cb3-74855d28288d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e7870f79-6b51-4eb3-b13b-51274e2ad40e"
        },
        "item": {
          "id": "f23fabfb-9957-4dca-b700-f9378e4c596a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a7f94984-4ba3-4b98-89ad-77499999919f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385a60bc-2fe4-497d-bf54-07356bdb216d",
        "cursor": {
          "ref": "6c6875dd-d516-42b6-be51-78556806ce48",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f3aea355-d907-4b59-bee0-bd4aab132436"
        },
        "item": {
          "id": "385a60bc-2fe4-497d-bf54-07356bdb216d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "812175ac-26a2-495a-8e9c-b0c30d907885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58eaedb-9cb8-4f57-92b9-99c0c076f0e3",
        "cursor": {
          "ref": "4ffc6a6d-cef6-4b19-9a5f-f7b21399843b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4f94b8b5-6234-4617-acfe-b21982f7678a"
        },
        "item": {
          "id": "a58eaedb-9cb8-4f57-92b9-99c0c076f0e3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cd2c4521-b9d7-4168-8573-dcda9c84179e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f3f0ff-0e94-4c94-85c5-5f79992cc0f3",
        "cursor": {
          "ref": "37c12f81-b25e-45db-8bf8-c9811282f064",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "df152ddd-8777-4de4-b71a-d9d854bb0ad8"
        },
        "item": {
          "id": "f5f3f0ff-0e94-4c94-85c5-5f79992cc0f3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "08cd4104-3fd6-4b03-8919-5b7979496b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22939e0d-54ff-42f8-b077-6db3ead9b633",
        "cursor": {
          "ref": "3816b30b-0cf6-429d-a3f5-89840063f29c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8f2ee07a-9a4e-4af1-b01c-e6b489ecf16b"
        },
        "item": {
          "id": "22939e0d-54ff-42f8-b077-6db3ead9b633",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "23db5f67-c35f-4e8d-9368-c891d3f3ff00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4818ffc-7b10-4c3e-a05c-078344f550d8",
        "cursor": {
          "ref": "846f052e-b657-4936-ade2-e993fbc7b1be",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3273da03-0960-40bc-a82e-6ff07a580d60"
        },
        "item": {
          "id": "e4818ffc-7b10-4c3e-a05c-078344f550d8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8aaecf33-4ab3-4d43-8437-05c17f48e7f0",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "2f1b20f3-2e37-433d-b9d6-37687385d0cc",
        "cursor": {
          "ref": "90e25878-224c-4458-81b1-c89682b99a4f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6ceffdc8-f920-4c2f-9253-855ef8f69beb"
        },
        "item": {
          "id": "2f1b20f3-2e37-433d-b9d6-37687385d0cc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4f50238c-9674-4f4e-813d-0dcdd660c143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ec29fa-f8f7-4fb3-aec3-89fcccd1dca5",
        "cursor": {
          "ref": "32d46652-4074-478d-aea5-bda305256031",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0f979706-20a3-4d60-a383-3f053561e9ca"
        },
        "item": {
          "id": "b2ec29fa-f8f7-4fb3-aec3-89fcccd1dca5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ccb0cc26-3f68-4f41-bf7e-abf474fafd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5225e6e-8e1a-4ad8-8628-c526c9452e7c",
        "cursor": {
          "ref": "239b642f-56ad-4302-a130-60be349a90db",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a42bb7ea-7745-49c5-a4c8-9e96bba92dfc"
        },
        "item": {
          "id": "d5225e6e-8e1a-4ad8-8628-c526c9452e7c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e5b33ba4-28bf-4bd7-b461-59d8dc47486a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840187df-fe62-456d-a361-a9cbdb060db3",
        "cursor": {
          "ref": "037cd768-1d3d-4279-8806-78d366d733c9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "365a4b9e-3878-4903-bbb1-2d0c968979b4"
        },
        "item": {
          "id": "840187df-fe62-456d-a361-a9cbdb060db3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e4d8342d-b7cd-4475-afca-46b4280cfd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89ba50b-0981-4fcb-94bd-51eb97a63025",
        "cursor": {
          "ref": "1ad57eca-8ce4-4323-bd6e-a8e7b1a0e705",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d36e5ec1-38da-4212-a5ce-533d5fc2b08b"
        },
        "item": {
          "id": "e89ba50b-0981-4fcb-94bd-51eb97a63025",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "43663818-0f48-41ac-82a6-8cce1714d861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1873ad7-a6ba-4d79-af5d-ebbe1a8263f6",
        "cursor": {
          "ref": "ca14816c-2f32-47fc-b7c7-7e3434d01259",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f83dedac-a9a7-4591-bfc2-657137338f79"
        },
        "item": {
          "id": "a1873ad7-a6ba-4d79-af5d-ebbe1a8263f6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "916996dc-dda9-4905-9fc0-7215050ca354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf1a55a-6976-4f2e-8323-267d9db83edc",
        "cursor": {
          "ref": "c8e0039a-b4f9-445e-b556-6af80f5b6c14",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "64d400f3-fe07-4b53-8d49-59636c586958"
        },
        "item": {
          "id": "dcf1a55a-6976-4f2e-8323-267d9db83edc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "03d59e5c-6984-4a58-bcfd-874ef7ea1104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1ee478-345c-4a1a-bcd0-23c127a6d94c",
        "cursor": {
          "ref": "ada4bbd6-b727-4077-b3dc-c40b78383257",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f602ae66-2a42-4ed2-936b-98d5beff0c3e"
        },
        "item": {
          "id": "3b1ee478-345c-4a1a-bcd0-23c127a6d94c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "42cf4efc-12e2-44c3-83c1-9750bd8497a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c22a38-0ac7-4090-b651-c1465953bba7",
        "cursor": {
          "ref": "abb137ed-f715-4ad6-87ab-069805d44f17",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "70a2042c-e5b6-423c-ab90-5a014947a22c"
        },
        "item": {
          "id": "32c22a38-0ac7-4090-b651-c1465953bba7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "242a74fd-b193-4f78-b3b1-adbc52f0bbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752786fd-6f50-4124-8dad-8aeee988416d",
        "cursor": {
          "ref": "75a74331-9830-4640-b6b3-b1d07b7ab5a5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6f1cff5b-7ed2-49f3-8c21-c1a7896cd743"
        },
        "item": {
          "id": "752786fd-6f50-4124-8dad-8aeee988416d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6c06635b-2545-43f2-8b79-5c76827d7d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8c82f7-e268-4337-9be4-16dfd5c4e301",
        "cursor": {
          "ref": "b2a462ec-db64-4b13-888b-6a61317f790a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ee7f01e9-2ec1-4d3e-b530-89c2957b4580"
        },
        "item": {
          "id": "da8c82f7-e268-4337-9be4-16dfd5c4e301",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d143f29b-460d-4db5-b93b-d09995dca304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a86e1b-e119-45a4-be52-888f9ed64db5",
        "cursor": {
          "ref": "11ace614-91e2-49d8-9d02-d178a7fc8ad7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e82b75d5-e1c9-4d55-850e-7cec08f87c67"
        },
        "item": {
          "id": "84a86e1b-e119-45a4-be52-888f9ed64db5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ed5ed31a-678c-421b-8e46-8ab7e8732123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c43fca-4984-4d7a-91f5-7e7af14d04b0",
        "cursor": {
          "ref": "e89d7012-6f67-4550-8b1c-7aa4dfdbb659",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d71065fe-22ae-4745-b197-8244141820dc"
        },
        "item": {
          "id": "75c43fca-4984-4d7a-91f5-7e7af14d04b0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f4a808b6-6bb1-42cf-9ccb-f328ec381fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d23088b-6419-4ae7-8a64-53d1d1a93761",
        "cursor": {
          "ref": "8a67d13c-9ad7-4cf8-b8e3-509ee3ffdf9f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c147d3ed-a096-42c2-b9fc-a067e877d05f"
        },
        "item": {
          "id": "3d23088b-6419-4ae7-8a64-53d1d1a93761",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2422c465-55c7-4aa3-8941-43afa075f34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1755e27c-7b2e-426a-99eb-7ec8c2e1084a",
        "cursor": {
          "ref": "dfc2ac9f-ff28-4c4f-8b2c-74eeeea7f276",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ccc7035f-5257-495b-b737-f751eeb6b32c"
        },
        "item": {
          "id": "1755e27c-7b2e-426a-99eb-7ec8c2e1084a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3023cf11-2e66-4b2d-afbd-372601802675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc473fd-01d3-4e87-9122-b9eb0804ed67",
        "cursor": {
          "ref": "3e64736d-bbd8-440b-8498-5c92e2db6c8a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3a5494f7-fbcf-45f1-812a-17377681407a"
        },
        "item": {
          "id": "bfc473fd-01d3-4e87-9122-b9eb0804ed67",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c22c4a81-1efa-492d-bb44-00b1ad59a40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b57bb53-e3cf-45a9-9f38-570ad569947a",
        "cursor": {
          "ref": "83fb100b-ed4d-4fd8-afd5-7d9c4b33d181",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c5c8ba67-17ad-40bb-a5ad-f6bd54a872c8"
        },
        "item": {
          "id": "0b57bb53-e3cf-45a9-9f38-570ad569947a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "95002abe-94a1-4505-8cdb-50df18746420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd125f2-7e47-4d17-8b57-756edc74bc32",
        "cursor": {
          "ref": "a2b48bc2-bcbb-48da-baa3-770a5346da08",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "513b8f00-7925-4635-a6c1-33470d39d30a"
        },
        "item": {
          "id": "3dd125f2-7e47-4d17-8b57-756edc74bc32",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9d64c580-dbd3-48d7-a3a5-25fb9e862217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa25ca6-1426-4de5-b66b-7aaffd3f9291",
        "cursor": {
          "ref": "1b7a1a6e-0710-42a9-827b-9d041248e87a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8a4e143e-cd15-456f-874b-0f79c23b4e1b"
        },
        "item": {
          "id": "dfa25ca6-1426-4de5-b66b-7aaffd3f9291",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4edb439e-16b3-48df-ae34-920709a77632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5e803f-1e7c-4596-80ba-9c6c5dd03fb0",
        "cursor": {
          "ref": "a257265e-1216-420d-bea3-c10b0a820b87",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7ae63f3c-551f-4b5e-8ab6-efe92b3eec86"
        },
        "item": {
          "id": "9e5e803f-1e7c-4596-80ba-9c6c5dd03fb0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "756c2ffc-298c-4162-b17f-004e48216b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faff7a4c-c94e-43ee-ac42-544696bb154d",
        "cursor": {
          "ref": "e9b342a4-5667-445c-8563-fc91a7ac520b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d4afb9a2-ac9a-438e-9065-3946846fa2ae"
        },
        "item": {
          "id": "faff7a4c-c94e-43ee-ac42-544696bb154d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5a703cee-dd82-454c-bb65-16e58b9a35f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ceb63e9-5d68-4893-aea0-4887d860fd89",
        "cursor": {
          "ref": "e414719c-7a3e-47ab-8d28-e14a67322c75",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b5a30056-a6be-4fa3-a97a-848f0e989900"
        },
        "item": {
          "id": "5ceb63e9-5d68-4893-aea0-4887d860fd89",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bf867772-8bfb-4396-86db-f543c4c6ae38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fe3f0b-3253-4159-85fe-8acd3151634a",
        "cursor": {
          "ref": "aa03dfdb-4802-4db2-be74-d2be39cd18d5",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9c83385c-35ea-4750-a9b3-c1ab7dc2e537"
        },
        "item": {
          "id": "b9fe3f0b-3253-4159-85fe-8acd3151634a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5faefb83-029f-4ca3-b86e-f10039d10bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0fe930-74eb-4435-8205-f819d00e71e8",
        "cursor": {
          "ref": "8971c6b1-9d10-4ef9-9d95-1b2e43b379fd",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e8b0ec33-7760-4908-90eb-9802aaf3c4a0"
        },
        "item": {
          "id": "ec0fe930-74eb-4435-8205-f819d00e71e8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "605ccf91-5124-4da8-88d5-e5db5c0a978f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19206ab4-c777-4d88-afa4-21a80c2fc440",
        "cursor": {
          "ref": "455e3147-c18a-463f-a71c-8979cb62b47d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "052e43e7-f6af-4cf8-9636-3b623b2f4841"
        },
        "item": {
          "id": "19206ab4-c777-4d88-afa4-21a80c2fc440",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "750fdf94-66a4-4ccf-bb1b-722433d0a65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd24f420-24d5-4751-871c-f0208cd11692",
        "cursor": {
          "ref": "5a4ed6dc-4986-4e81-956d-32dcfaef14c7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "36de401b-a469-41c6-b0fb-9c7b23c5901a"
        },
        "item": {
          "id": "bd24f420-24d5-4751-871c-f0208cd11692",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dff683cb-bd9b-4701-acd3-ce0f5bc915a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db90078-262a-4ab7-8ac6-3868fc9c7074",
        "cursor": {
          "ref": "6d80e51c-5451-460a-9ef5-d67d2c1b1507",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f2c6a186-7eec-4158-9f4d-a3485a7cceff"
        },
        "item": {
          "id": "0db90078-262a-4ab7-8ac6-3868fc9c7074",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "990b778e-0201-470b-bcfc-2e2657d504ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331ae9e7-bec1-4197-83bd-66cc9e7834e8",
        "cursor": {
          "ref": "9ace0964-947e-4d4a-bc70-2a59b7007282",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e01468fd-2d39-4dbb-bab4-1d6dc75bae29"
        },
        "item": {
          "id": "331ae9e7-bec1-4197-83bd-66cc9e7834e8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c93bd001-e8e7-49be-86ff-b0b895c34994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f39247e-c653-4883-9a81-7a576e3b0438",
        "cursor": {
          "ref": "b431456f-2db0-45a7-950b-59cbd839b0ab",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "640ccd13-8c8f-49d5-9e6b-1956f2a24d52"
        },
        "item": {
          "id": "7f39247e-c653-4883-9a81-7a576e3b0438",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "02dc915c-6111-479d-a274-b699601ac59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05f4e94-bd8d-4911-ad32-465017b35bed",
        "cursor": {
          "ref": "73e1c2c0-7c2d-4fed-aefa-4d404b7024f3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c48e3cd2-2d15-4c31-bb65-dc4cbeb37864"
        },
        "item": {
          "id": "c05f4e94-bd8d-4911-ad32-465017b35bed",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8ce3595a-282b-4d3d-ad6b-d0d6bf93341e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9cc80c-782d-489c-9b32-6a2c5a5a6997",
        "cursor": {
          "ref": "f363244f-a6e1-4260-98a8-225bb08bd2a8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bea8074c-e7a3-4196-8e28-947b2e2b5f3a"
        },
        "item": {
          "id": "8e9cc80c-782d-489c-9b32-6a2c5a5a6997",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "91d975ba-4932-468d-94b3-ba54bfb754f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d39a53b-c17a-43fe-8395-bc863f150205",
        "cursor": {
          "ref": "8e5086f6-bab7-4708-b9af-57da3c22d93a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "068128f2-2860-4cec-b722-ceb6275c1894"
        },
        "item": {
          "id": "0d39a53b-c17a-43fe-8395-bc863f150205",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "78ae191a-b35c-4aaf-ba55-08cc411e614f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71875728-874d-4810-9607-07126f2c7d55",
        "cursor": {
          "ref": "26e42207-893e-4688-88ec-7372c0e48e9b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2d53b799-f7ff-4ed2-86a1-3370ffe01d2b"
        },
        "item": {
          "id": "71875728-874d-4810-9607-07126f2c7d55",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b5e939b2-791a-40d1-be5f-d3108269b212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fc4932-b1a1-4dbb-a364-cbd4d39c0d5f",
        "cursor": {
          "ref": "66b95d48-dab7-45dc-9621-bfaba0cc1d8a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1831dbb7-cc6b-4548-a879-9e2cd9ef7e6c"
        },
        "item": {
          "id": "25fc4932-b1a1-4dbb-a364-cbd4d39c0d5f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9534907a-f056-4945-8acf-46434ea020c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1c486f-d3be-4c22-9f04-b504473b6159",
        "cursor": {
          "ref": "4455c607-3c76-4871-9365-537e13591b46",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "412ed608-f9ab-44a9-a577-ed054fba7677"
        },
        "item": {
          "id": "1f1c486f-d3be-4c22-9f04-b504473b6159",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3e422ddb-1e93-40fa-b3d7-d7c0feec1452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbbbb7b-0b6d-40a0-9a7e-a2f52ebd323c",
        "cursor": {
          "ref": "c10a3894-b937-4a84-8012-46cd86ed49f6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2bd99ced-4d4d-43d5-b9c3-75e2e2a740ac"
        },
        "item": {
          "id": "2bbbbb7b-0b6d-40a0-9a7e-a2f52ebd323c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c4284d9c-14f7-4be0-b6f6-abc178a32dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28171b42-1632-437f-a5b1-bf1af4e9b83e",
        "cursor": {
          "ref": "9474abb6-934a-462d-b5a2-bf7cc840772f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ba7066fb-435e-4c47-b993-2da84f6249e1"
        },
        "item": {
          "id": "28171b42-1632-437f-a5b1-bf1af4e9b83e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "94df5704-6955-40ee-90e3-48d874c18049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50f93a1-be1c-49de-aa58-c326c99fa7a3",
        "cursor": {
          "ref": "d16c0bd4-ded7-4bc6-9b47-79a5061f55f8",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f9d461af-f6ed-4802-836d-e64ec9eaa05d"
        },
        "item": {
          "id": "a50f93a1-be1c-49de-aa58-c326c99fa7a3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "436c48b8-a538-4803-89ac-845c0fd362ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd5372d-7e69-482e-8307-4e5c12ee8f16",
        "cursor": {
          "ref": "537b5ce6-0a8d-466d-9d6f-765777ef0341",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "30b7f682-6c03-422c-8513-3336e078ca0d"
        },
        "item": {
          "id": "3dd5372d-7e69-482e-8307-4e5c12ee8f16",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "33dbf4f8-8e0a-4db1-9dbf-1a8c256ae0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acaa4a3-b935-4d98-a6ee-c0ad2d6088f8",
        "cursor": {
          "ref": "f4bdac4d-18d4-4ba0-a3c7-82f0c51d33c9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0207e78f-0665-423b-96bf-de6e37de0c7d"
        },
        "item": {
          "id": "9acaa4a3-b935-4d98-a6ee-c0ad2d6088f8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f0c60133-df1d-4ff2-9d40-145682463b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022b163c-0ff5-47eb-a738-5ab9ee1851a4",
        "cursor": {
          "ref": "2f265a9c-2f83-4d2d-ba20-6f5008b33c60",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2943a4dc-29ca-4d63-89b8-ddde740ae40b"
        },
        "item": {
          "id": "022b163c-0ff5-47eb-a738-5ab9ee1851a4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "01612bf4-afd4-4f0f-8bf7-bf7d73886a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4f353b-1680-4bec-a9a3-6691a35fbdd4",
        "cursor": {
          "ref": "191aad98-040f-4ddb-9225-931c383ee56c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "065afd3f-310a-4865-98bc-db626c26fc96"
        },
        "item": {
          "id": "ec4f353b-1680-4bec-a9a3-6691a35fbdd4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "03da1d2c-6d89-48c5-acfc-25f6cd0938b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b11f7f-253f-42a6-b537-2b259cf5be4a",
        "cursor": {
          "ref": "c4e20862-d9e2-41c1-a42c-ce572c6cc2e1",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a9e45009-be19-4e3f-9abb-59bce1047ce6"
        },
        "item": {
          "id": "00b11f7f-253f-42a6-b537-2b259cf5be4a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d65aae0b-e1b0-4147-b1f4-01e9b2432d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a433ac-039d-4093-8927-9fe0da791759",
        "cursor": {
          "ref": "8d70c6ed-4a9e-49cb-bdf1-e2f6d6b1ee2c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6b1a7d2d-4429-4e57-bdca-7a2db47b29b9"
        },
        "item": {
          "id": "40a433ac-039d-4093-8927-9fe0da791759",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bf1788a4-b8e6-410d-96a7-1d58eb6c20fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce241ac-7621-4a9a-b11f-60804b290180",
        "cursor": {
          "ref": "e6dfe032-8750-4442-b560-ab5ff1a3c197",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "33f5a059-7797-4559-9d39-d4df51d42225"
        },
        "item": {
          "id": "7ce241ac-7621-4a9a-b11f-60804b290180",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "019c39f8-c54e-40ba-a1c9-d8494b5ded56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac67fa73-b5c3-4344-9db6-b842a5839bf9",
        "cursor": {
          "ref": "74edac4e-2b74-4d30-9dca-e8bb79ba384f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7099ffe5-852b-4096-af3c-5115166f5495"
        },
        "item": {
          "id": "ac67fa73-b5c3-4344-9db6-b842a5839bf9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cc89d5b3-ec15-4a23-93bb-a17b478b2623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47cd20b-d7ac-4eb8-aa10-d851cb5cc637",
        "cursor": {
          "ref": "a3e9cc91-23e1-4f62-8be8-ddbb41443586",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b390bf36-03d8-4d8c-8db2-6f68a6492e77"
        },
        "item": {
          "id": "a47cd20b-d7ac-4eb8-aa10-d851cb5cc637",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "38b5ae5d-ba68-40d1-b4b1-bcafa341cc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b5e467-07c5-4d03-b30d-f990023c7912",
        "cursor": {
          "ref": "492ff368-2b95-4db7-9e9a-e39e1ce2bb6e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "149529c5-7b17-406f-b568-e2dcc0832ed4"
        },
        "item": {
          "id": "46b5e467-07c5-4d03-b30d-f990023c7912",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "642ec546-6551-4b6f-aac6-383982463693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bed027-2fc6-4acc-9c6f-eb741b3db4c7",
        "cursor": {
          "ref": "390b3a62-ae3d-4d70-9ae2-0fe422afdcb2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2fd99fff-9b89-4a65-8b46-e81375292b4a"
        },
        "item": {
          "id": "38bed027-2fc6-4acc-9c6f-eb741b3db4c7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "df0d46c8-5cd4-4626-84ed-75670d9bd9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c2aa47-a077-41e4-bd6d-146d941ef9c4",
        "cursor": {
          "ref": "e807de52-0fd2-4d9b-a019-35c23e36d52b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b507740c-dde2-4746-9130-3706c16c2894"
        },
        "item": {
          "id": "44c2aa47-a077-41e4-bd6d-146d941ef9c4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1c05b370-ce69-48a6-b245-8def3f20d64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4778ef3-24d1-4cde-9a0a-1f4f742dfe12",
        "cursor": {
          "ref": "bafdf4c1-aab6-49d5-b80c-4da26b75cd44",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "af218826-668b-4fe9-9803-839183caba07"
        },
        "item": {
          "id": "f4778ef3-24d1-4cde-9a0a-1f4f742dfe12",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8e6f2b2a-7a5b-4bb5-8fba-79e9e2ce8e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cd8260-ac37-4d37-ba91-22b064c3cce7",
        "cursor": {
          "ref": "97d7e346-27d7-418b-9e2b-447bd2317035",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bda09c8d-95c9-4da1-b398-eee3e30e39b4"
        },
        "item": {
          "id": "f5cd8260-ac37-4d37-ba91-22b064c3cce7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ace28038-44f9-4cf8-9aac-52ccd5d9fe42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6fae1d-f111-4626-a0b5-49c97d846cfd",
        "cursor": {
          "ref": "82b19164-f983-4f5d-aa40-9f4878af9c94",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0a621f6b-0415-46c0-b083-158db16b5649"
        },
        "item": {
          "id": "ed6fae1d-f111-4626-a0b5-49c97d846cfd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ed2f2ca5-e252-4a5d-8dc5-2d1da94d81db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dff168c-f7e8-42ab-970a-c4cfeee7e6d1",
        "cursor": {
          "ref": "81e190f6-0e78-4f0a-ac3d-dbd79bcc16b2",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3f709b2f-7da0-4271-9fa1-fe534f9ef96a"
        },
        "item": {
          "id": "8dff168c-f7e8-42ab-970a-c4cfeee7e6d1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1ea3b234-0cfb-4da3-9173-ed69f4751cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d88ff6-1c5b-4703-b939-4344b3399e7e",
        "cursor": {
          "ref": "d8f3e1ac-286c-4ab7-b70a-b44807f752f3",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9a1be2d3-58fa-4e3a-949d-f05435abd6ef"
        },
        "item": {
          "id": "11d88ff6-1c5b-4703-b939-4344b3399e7e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d83220f8-3497-440f-a8df-74822fe6102e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36273ddf-ffde-45e9-a7ed-16b9fd229248",
        "cursor": {
          "ref": "eb331749-b25a-4fde-8a0f-88ff4411c5fe",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1e293d4b-1d0b-4b67-9206-a3e0c5080cb1"
        },
        "item": {
          "id": "36273ddf-ffde-45e9-a7ed-16b9fd229248",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3c510ce0-07f4-4061-ab91-d85adfd89d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7d1210-ab1e-4754-8b0c-f2a2032c609f",
        "cursor": {
          "ref": "97cbd503-ce7b-4d4a-9678-9594368420c2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6c2c5b2b-0894-4c75-97e0-f62975577b3b"
        },
        "item": {
          "id": "ee7d1210-ab1e-4754-8b0c-f2a2032c609f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "303b5662-e65e-4b38-b0fb-73432ec75e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c0d064-6915-44dd-80a8-27fdfbb74478",
        "cursor": {
          "ref": "bac7fa75-15f9-4f29-a0f6-a2fd38a0308e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b46306cf-84b2-497b-9772-9f40cfd1e4de"
        },
        "item": {
          "id": "25c0d064-6915-44dd-80a8-27fdfbb74478",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "db3d0f6d-0628-4c32-8290-b9e05afacae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7814e5ff-276f-4d99-a139-0b8a15750cea",
        "cursor": {
          "ref": "66878f01-bc71-4a65-a202-9f670988d363",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "864bff90-34b7-48eb-bb12-fca98bcd3905"
        },
        "item": {
          "id": "7814e5ff-276f-4d99-a139-0b8a15750cea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3bf86889-e864-46c8-b35d-0ee4ea646849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db700a6-c5fd-4aab-a804-f256e5d48b90",
        "cursor": {
          "ref": "00b7b458-db42-4cdb-a3ab-3c1482d6674e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3e86728b-4d53-4517-bc60-ee7f9a40801a"
        },
        "item": {
          "id": "5db700a6-c5fd-4aab-a804-f256e5d48b90",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "539d7508-740a-440e-a83d-930aca752ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34296637-2cfe-4147-8e11-0f09d9ecdef4",
        "cursor": {
          "ref": "d228822e-9417-41e2-b3e1-67b7ced51851",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "edd073a9-47ef-42e3-a2e5-2c66b8ebea93"
        },
        "item": {
          "id": "34296637-2cfe-4147-8e11-0f09d9ecdef4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4b803657-2401-4768-aa7b-b2d5868e1e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a65d2f-081f-41ad-af00-69c5a084639a",
        "cursor": {
          "ref": "ba421df6-d965-45d2-b5b1-610ee2b15268",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "15607f8b-e3a8-4ddd-924f-c3ff0b4ac773"
        },
        "item": {
          "id": "66a65d2f-081f-41ad-af00-69c5a084639a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0097fa85-95cd-42c0-85f6-75a6e6f1c76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ad4e4e-88e1-4900-bbeb-7a088d2cd05b",
        "cursor": {
          "ref": "660d5035-d5e6-4aef-aa07-bf3c79824cd5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fcc433a7-c603-4501-b550-ca3b38d8a9fd"
        },
        "item": {
          "id": "a1ad4e4e-88e1-4900-bbeb-7a088d2cd05b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bc22290c-5eee-4520-84e1-af092030df58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b0e85b-2ef7-4040-b5b8-5117855b8a6c",
        "cursor": {
          "ref": "b749c58e-703b-42c2-8b98-b0039255d5a1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "950a39a5-134d-4572-9de8-223904b6c1e8"
        },
        "item": {
          "id": "12b0e85b-2ef7-4040-b5b8-5117855b8a6c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bd7942c8-85d4-4e67-939a-ed54c121b4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0e3c14-3d9c-458f-bb91-cbd51dca19ab",
        "cursor": {
          "ref": "49bd636f-7030-4759-a5d0-2c499e4669f0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3878697e-6516-4aa0-aa13-10617727e530"
        },
        "item": {
          "id": "da0e3c14-3d9c-458f-bb91-cbd51dca19ab",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5d3ce157-dd4f-49e3-a6ad-bc268ed70460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9e5ac4-46a0-477d-b162-37bc05d59a4f",
        "cursor": {
          "ref": "fb741911-76a8-40d9-bc5d-df2f2251db55",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f3141c31-4f96-4846-826e-efa012f91df8"
        },
        "item": {
          "id": "5d9e5ac4-46a0-477d-b162-37bc05d59a4f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "919c15fc-456d-4831-9077-35034a800d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a4282a-9596-4d9b-bb9f-60b716558e55",
        "cursor": {
          "ref": "8d6cfe6d-43d7-48f6-afeb-b3cb471d3e07",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "562c9a3d-8713-4c7e-8dbb-0d40b8435d43"
        },
        "item": {
          "id": "16a4282a-9596-4d9b-bb9f-60b716558e55",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "00f8a11f-e9ff-48f7-afc1-3b0c93ba1749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0f1f51-c040-4d7b-bce2-b0f4cbe4b503",
        "cursor": {
          "ref": "65e46c9e-ed0f-43c8-95ff-c566954cd339",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a8e95b69-77aa-4587-a3ee-4a349677edfc"
        },
        "item": {
          "id": "4d0f1f51-c040-4d7b-bce2-b0f4cbe4b503",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f074da3d-2ff7-4c2e-8d35-cd8cc3e0b7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb34f03c-4f3d-4528-8d9f-e0e82ca1f855",
        "cursor": {
          "ref": "c56e7d7d-c72f-46bb-895a-895641619ae1",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1e60890f-3e68-47ef-812e-efa80e33ab59"
        },
        "item": {
          "id": "eb34f03c-4f3d-4528-8d9f-e0e82ca1f855",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "760ae891-8460-4930-9852-5a54c1f64a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eba30b4-bef9-4c07-82b5-594869c0845d",
        "cursor": {
          "ref": "cd01a06c-6aa2-425b-b7f8-05021e997c3f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4985641f-9148-41ea-9da9-b37e40885fe0"
        },
        "item": {
          "id": "5eba30b4-bef9-4c07-82b5-594869c0845d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "641d5bac-85f6-4679-aa98-f129d0b8f64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c213425-7f9f-47fb-bca9-13edd6af19f3",
        "cursor": {
          "ref": "f60a78c3-aafd-446e-be09-133374de6339",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "413c8e6b-d4ba-410e-b7d6-0ab4724c176c"
        },
        "item": {
          "id": "6c213425-7f9f-47fb-bca9-13edd6af19f3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fb0ef159-b927-490c-b074-46d9cffb0f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469aa22b-9178-4f5b-85e2-710299afef6c",
        "cursor": {
          "ref": "74d270cf-b994-4cf9-8395-3c2054fe9fc7",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c0b07849-9db3-4b05-9fbc-5ad751b206ae"
        },
        "item": {
          "id": "469aa22b-9178-4f5b-85e2-710299afef6c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b40dcf52-24cb-4886-b725-f410fd92db47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245b3e96-cd34-4d1c-9390-2f267382b841",
        "cursor": {
          "ref": "33423622-7ee0-48d0-aea3-e2ec7e50223e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fe167cc1-b1e0-460f-960c-4feec47d9157"
        },
        "item": {
          "id": "245b3e96-cd34-4d1c-9390-2f267382b841",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4fcc741f-55a6-4be5-8fb6-4503baec7ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916275e5-922b-4522-8a54-09338e2c78f0",
        "cursor": {
          "ref": "304dbfc6-866e-4613-9b35-b270989472ca",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9e75e3ba-ba24-4be5-8872-1f4c2afe98c0"
        },
        "item": {
          "id": "916275e5-922b-4522-8a54-09338e2c78f0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6eb1f41a-2afb-4a42-b2b8-46e978bb842d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5693ed-082d-41c6-8b31-a03ab9faf183",
        "cursor": {
          "ref": "b48b96aa-7dea-4b8c-a901-0d7e44b265fb",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fc8605bb-b463-418d-8e58-232f197dbe06"
        },
        "item": {
          "id": "4e5693ed-082d-41c6-8b31-a03ab9faf183",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "36cbbf8f-d01e-4095-b74a-3afcc76cc3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633af0fd-db3a-4095-b442-397e3f53b81b",
        "cursor": {
          "ref": "fd09302e-e2e2-40a6-844a-3b524077ffd9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "213d2a9f-c9a8-4faa-8611-89a29814f41a"
        },
        "item": {
          "id": "633af0fd-db3a-4095-b442-397e3f53b81b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8d72c800-cf53-4dab-b991-58409d06c10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec96b8f-dca3-4030-99e1-208651ad424e",
        "cursor": {
          "ref": "bb0a8c2f-6524-467c-b295-ec191dbeba43",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c3b4533d-05fe-4f55-9205-b16501b92604"
        },
        "item": {
          "id": "8ec96b8f-dca3-4030-99e1-208651ad424e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f2ebf01a-5566-4c71-839c-e0d80c5c3e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1561b5-f455-482b-a77e-7b6ddda3a70b",
        "cursor": {
          "ref": "6f6c0d09-548b-403e-9629-d3f981055508",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3d6c306e-c176-4ea5-8e6b-00d42148c47f"
        },
        "item": {
          "id": "6c1561b5-f455-482b-a77e-7b6ddda3a70b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "07e33bae-f0ea-4013-8649-c573a55ba2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734bca9e-1f13-4c3b-ac5c-b6047a811297",
        "cursor": {
          "ref": "8320f13b-18a6-4260-a86e-bc69be8f4530",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fa1119f6-f718-4bb5-9807-c3a2b105593e"
        },
        "item": {
          "id": "734bca9e-1f13-4c3b-ac5c-b6047a811297",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a0fc1b5a-e999-4360-8b96-cc880e314ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bc546b-098d-43f2-807b-0902a7028e8a",
        "cursor": {
          "ref": "56e71dcf-bb46-4444-a255-87d224a5794e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6f0ae70b-5152-437e-9d6e-702eb1f8c789"
        },
        "item": {
          "id": "14bc546b-098d-43f2-807b-0902a7028e8a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "29ae04ff-4995-4d42-9e84-d219000bf9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d1a5ea-1ccb-4537-a864-28f940375fd1",
        "cursor": {
          "ref": "b3224521-41a5-4765-9a6c-d87768b34152",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e800d083-0db5-4d08-a0be-d51fb50b21ab"
        },
        "item": {
          "id": "a7d1a5ea-1ccb-4537-a864-28f940375fd1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5e2898cf-1dbc-4d8a-b949-5bd2c55005f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb10432e-7bb2-4b61-84f3-3680d51598bd",
        "cursor": {
          "ref": "90fd7630-5bcc-4660-ad51-91fdb82f1685",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fd1509bc-96b2-4f10-b3ad-ffcb1a7625bf"
        },
        "item": {
          "id": "fb10432e-7bb2-4b61-84f3-3680d51598bd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "38a0afa7-507a-414c-a287-00d9e8eae45e",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50954d7-2c48-4493-8198-afde46a9bdbf",
        "cursor": {
          "ref": "6641d194-e7f1-417e-b058-7cb7db58532b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "03fd32ba-b47a-4f89-b12d-88fce4919319"
        },
        "item": {
          "id": "f50954d7-2c48-4493-8198-afde46a9bdbf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7cb56c25-540b-45ec-87b4-aaaba7dc51cd",
          "status": "OK",
          "code": 200,
          "responseTime": 1797,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe26f77-3cdf-49bc-b41f-c3e678f43eb0",
        "cursor": {
          "ref": "f01241ae-5ec5-46d4-a5c9-d2b27054b027",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "91434565-fbe9-4239-87ec-6ac66c1a15fd"
        },
        "item": {
          "id": "0fe26f77-3cdf-49bc-b41f-c3e678f43eb0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "74855e26-74bc-4e6a-9df3-580249b2de0d",
          "status": "OK",
          "code": 200,
          "responseTime": 2636,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "03608560-8823-4f07-9753-2eaf16c27b8b",
        "cursor": {
          "ref": "b2641732-311c-4d7e-b467-bc52adaf7df7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6143223f-39bc-4401-b706-018c2ff19666"
        },
        "item": {
          "id": "03608560-8823-4f07-9753-2eaf16c27b8b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d76556d5-ae97-4adb-b15b-148f03052060",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03608560-8823-4f07-9753-2eaf16c27b8b",
        "cursor": {
          "ref": "b2641732-311c-4d7e-b467-bc52adaf7df7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6143223f-39bc-4401-b706-018c2ff19666"
        },
        "item": {
          "id": "03608560-8823-4f07-9753-2eaf16c27b8b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d76556d5-ae97-4adb-b15b-148f03052060",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8128306-13aa-4916-bc92-7b753dd3a95b",
        "cursor": {
          "ref": "0dac3c0a-d38e-49f9-a190-2d0e3526b187",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6d39cc3c-1f29-474d-aefa-144c22ab8acd"
        },
        "item": {
          "id": "e8128306-13aa-4916-bc92-7b753dd3a95b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e585c61c-5c29-4114-bb30-84484302a9e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427df65c-aa14-46af-9b68-96430cfc7567",
        "cursor": {
          "ref": "a6f98184-dd35-4fda-9226-b029111720a7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8b4286d5-09ff-4039-a54d-21721abb0eef"
        },
        "item": {
          "id": "427df65c-aa14-46af-9b68-96430cfc7567",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9bb962eb-e642-4cc3-88b0-b8a81e092ed4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}