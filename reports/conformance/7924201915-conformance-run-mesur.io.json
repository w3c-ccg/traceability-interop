{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9cb45372-ed90-4761-96d7-ec8cd866c970",
        "name": "Clear Cache",
        "item": [
          {
            "id": "57e641a5-23cb-4465-a4ae-8f64b186c850",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c7d3284-351f-4889-af9e-7256864fe050",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3fe4e216-5cb0-4422-9283-7cb5d08a74d3"
                }
              }
            ]
          },
          {
            "id": "c79234f1-a252-4fab-bda5-386fea48777f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c64d0db-af8b-4841-b03a-d98a1eb56082",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7260f50e-cbde-4ecb-b03b-03a775538977"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "df379666-4e02-4986-a49a-b98cf54c961c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c1061293-7ef6-4d1c-af20-764c9e27a844",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9068d55d-6847-4933-8198-f29363db0b35",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11c2a278-3f45-48e0-bbb7-67005a4a3107",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b706a6a4-00b9-4b68-95ad-d6d4919d156a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3eff6007-0651-4f4d-ae87-86050fc4893e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60c0b01d-7ecf-4c33-b64a-4ef58a95e587"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e1d18c5a-604d-4e7d-9e00-ebe69e44225d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44dbb5b8-d433-4ae7-96fe-21cc08104878"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c19d16b-b4ea-4d2c-9046-53430bf51f4e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4e859e07-23a4-475d-b9ae-da3eb510d0d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be2c5992-2f29-4c0e-a0b7-f2064b5b5464",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a0fb2b5-cff3-4e74-abc8-9cdb08130c66"
            }
          }
        ]
      },
      {
        "id": "66dac060-1002-4490-a8f6-38133b508295",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1e7dada7-58bc-4d73-a2f9-8d7e03aad2cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb450c7a-ff3c-4e15-a2cd-aef9d71c3486",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a4f467e-b91d-4678-8a6a-01a464dd4c9c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f2c73d-40e2-4a7d-96f1-185a4b0415c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cec55545-164c-45ca-bcae-c8d9837563a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aea1200-646a-4ef6-85c5-6f9c85cb7e70",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154337a7-7e43-482f-9f3c-f2893e5eae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4e44b59-76bc-4a1f-b503-2ac04a62e0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a60402-f09a-4828-b3c3-2195206a6e25",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e308ed3b-94d4-4631-bf68-426497063cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e943c9a-94d9-49ee-95e6-384abb5e89d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2127a1b-3f94-4ce2-9f04-66ee24d39992",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71466a22-7c92-4a5a-8597-fe6843380e46",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def4056c-6785-4c09-bd4b-6fbe0d895eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "684b9b4a-c7ac-4e62-b5c3-db8adcd7510e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534ff10c-50eb-4ef0-b99a-f1ff3bc3b881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718ca789-808a-4eb9-8e04-524b7a241cec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ea88b226-0bb1-4092-9b41-094cf772cdf9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1c78394-86ed-4d7a-93b4-08512d7f8b75",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a010fea6-4b7f-4b24-8b0e-0417082e7950",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fe12fb01-a4b0-4e3a-a2d9-a3a39704ec37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b41efcdc-40dc-4186-8f18-e23b8c2ac857",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "487cd7c1-1219-4376-8049-a65d23d3ebb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f29d0e0e-07fb-433c-92a9-c145ce07a2ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53507b4a-4f6c-43bf-b513-0a8ac0310b02"
            }
          }
        ]
      },
      {
        "id": "9bf9d320-9edd-40a2-b220-83d3c38baa86",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "269fa094-a106-4af5-9925-49814f3e03a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "860af354-8363-43ae-96d9-14959ef51b16",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "044427e9-789e-4e2f-bd25-4bef4fd65eda",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187580b2-a721-43e6-9fe1-e195643513c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08a4f97-4cd5-47a8-928c-b56d18521113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1f0375-d2de-4d3d-936d-4c7e5f5ec5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68de2dc4-f81c-4bd8-8ef6-14d66cf9832b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765adacb-ee7f-4bc6-a459-8db481346395",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb41e2b-166d-4a60-befd-409ad13f44a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50be107b-2d88-47b0-b418-56d7c388a777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cb87cc-66a4-4500-8306-36843d15ca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbda285a-a8d1-4401-85cf-a5f4674ad7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6457380b-47f7-4f4b-9dd5-5e37c39285aa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f82cb5-46c7-4a42-a6af-ee4bd60bf77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f0957e-8455-4a6c-992b-d14021a54420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08651a7-8add-4986-b900-c8b0e58e4ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c81a714-e3ef-4024-b2d7-b1afdfd7e0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0751f01d-f4cd-4a07-94d6-9a81a974b35b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18114cb9-ca84-46f1-9536-b72bf07fcaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db37a16-5098-400c-b5a1-8d8ffe6e23ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36371455-64f5-4a06-a638-78e86501e82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4673af3-5ee8-45b7-9944-261f3d7ce76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72aa67e-2a65-4735-b981-ad6075b3ad9d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3a792c-f907-4d75-a65a-59ded88cb0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27455a2a-654e-4600-8eec-ce188b1635f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcae68e8-5627-4063-8892-5776a65d800f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75d7b276-196b-4523-bf25-d9fd74cc849c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d267d8-96d6-4294-aa2d-ae0650d076c5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f9af7a-ebc9-4b75-91c3-5a65a99cbf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8484cafe-4812-47ba-b148-62657e4ff628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2bf80a-91fc-48e2-b971-871affa426c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d099c79a-2693-40bc-9632-997cd57a64e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc01a1bf-70ea-46fc-8125-43e405c2c87e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e121ae-e5ab-4ad6-9995-02f14846cabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cc9df4-dc7d-4a4e-8a4f-05880c17a635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb4a6cb-9f51-461c-9ba6-043d2e0ceab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a42b7470-29e1-49a5-b28b-0a6391fc5ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d074f971-14d3-44f8-babc-ca909956ad92",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9895e73-6bc5-41b7-baab-f2183abfd3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f2d31c-c1f8-4d13-8a69-014738790d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1e03ed-1df1-4a30-ac51-76dc33cac573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "212735b2-c5ae-43b4-bfa8-44daf9db8350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55039324-4cc8-4389-9fc3-c09871f74d2d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815b709e-d714-4b91-826e-43a0180d9a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60745fac-4f41-4448-bf2e-ab8fe00ada33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc496b2-1873-4ef8-ba71-11bd708a1f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18de17dc-2112-4a08-91c8-bfece69cb83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad87742-3a22-46a3-a8fb-55dc7753fb0b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acba497b-2d82-4690-90d3-b606566a93aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f2af01-d3ec-4957-8ba4-18f0f06438d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3cdfe2-7b27-4055-bb97-750a1e54662b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ee62267-a930-4203-9dba-f75636145c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0756dfe2-8ae5-422b-bcb9-484be53712d0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f097cb87-3bfa-4f3e-b7bc-7cd794f761a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2b756c-add1-4c3c-a050-4d99eb3b1788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecd08ae-216a-4ce0-b9b6-440d419d5cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a327a89f-9198-4c02-9231-0e091faaa705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f7b0a8-4952-4813-92fe-984815b73c46",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a50cc6-89ef-47fe-a68d-74ee9eb2dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07bab0e-de8d-4859-9e85-f56d541df218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8852c39e-c0fa-40be-b6b4-6829df51c3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69009497-4de2-4b3a-a9ec-8411206741c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ca0647-24c2-4527-a02f-c1efa037c536",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0645ec35-b87c-43f2-ab8a-d47e1f73d6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b692da-d231-430c-a76f-cc13cd279760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cd1cb8-5c24-4383-9371-cd617395abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca297220-2d45-4a33-82cb-b2541bc76859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2156cf01-57a8-4ae9-adcd-988aa9f17410",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c3bb31-84c8-4257-a865-f9b9dc11071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163be4e9-99c0-413c-88c2-52cf65ca879e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb0aeda-e351-448d-87e4-1f8446bd4dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "713241f1-3cc3-4f5e-900a-a850211cbe81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b164c2-4671-4c95-86eb-b48aa2a07496",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5ca724-aa86-4f84-ada5-0c4a8c056f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6224b7-947b-4719-9f04-ea086af76078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73394def-f7eb-4739-ba4e-dbc799b3fd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30a2292a-4ba2-42cf-8361-9db69a5840b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62597a98-13e8-4759-b7fc-8ca4eaeb2ed2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2efe5f9-1c4b-4c99-bcd7-8cde24bd7032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e11921-1a1f-4d1e-9b53-5bc85a1e9424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23c103a-27f3-4262-9906-e1e48ba81e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26331b65-ee11-4e4e-80f1-9aad2dd3ea45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5912158-f386-429d-a5f4-a674d4b71ec5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22bd79c-9182-474d-9e03-0569b877ecfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8809ef8e-940c-4a17-87c3-7392be7b4e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c94640e-c538-431d-bbc9-c98c050ffa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65244169-df7b-4264-800a-67a7eee514e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b981332-b8d9-43c7-998a-44007dab411d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5d0b06-42d8-46bf-acd6-ed5080ccde47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067c99a2-8527-40bf-8720-98327d7c1d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9ea532-0267-469b-8e65-c97008d71ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da99c7c-d2e1-4bf7-89c1-1926a7eb0dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304c878e-2ed3-4bb3-8ba9-7f500216fe2c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4828ae48-6976-4e4c-ade2-325a3e5b720c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1037770c-8cd9-456a-be33-4527beefcbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fec5916-f038-42e2-ac72-74b61bebcb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85c283b9-f4d7-4d7c-8d9c-a9b3d21847ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fd5837-e382-486a-80b3-47589594b464",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994ce546-8ad8-4a02-828d-8952994c0f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a29be93-033f-46c4-b5a4-3facdb9f7ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30fdfa8-7d3b-4d59-a6d7-b4b06f0b641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e2137d-8eb7-4887-bd60-1455d587e296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae74679-7924-48d6-ae6f-47fd1f328e5f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a0af84-da2f-4948-9f6f-3f82c20039e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610d5b66-92d5-4e5f-83b8-4e353a94207d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8342065-0910-4b1d-aa3f-1bd246d3ab7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b1cd43-7197-4338-8217-723f43590371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8e7530-60f4-4266-a83d-821549a90ab6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efbecc7-9165-4af4-b5fd-a27ecb49fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b5dd01-fe64-4b40-be43-3d158c97babe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e93edc7-eaae-4224-9a75-6b18046e0ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6712dbf-be2b-4456-bc7f-284f88fe06ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f1d856-fcbb-4ea0-aef5-c9289419bbad",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2573b082-3a03-4406-90c2-916dcdc9988f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825c5a4e-a3a3-48e6-947c-917ebe89e51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bc3713-662c-4a36-9578-e906f06b3b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ac2ce5-f3f0-4e94-aa71-2f32ef3abbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c1678f-8a09-4eb2-8404-6b20e931dbc3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7210b3-4d64-4f64-a52c-81edc2d2a805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cbafea-23a2-4f20-ad2b-ed3361b00baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea0265a-b433-42a5-a504-7bbad3baeb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0339be7-33d9-4579-a7fd-b84ced1b3388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1396701f-acdb-449f-a799-4fd12c44f453",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e6fa6d-db8e-4cb9-beeb-5d75ec7d0dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4576669b-d6f2-4a5a-99c7-aa699c6a2c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caf57fe-cef0-43c0-be28-384cae6058c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d656f380-7751-430d-bc76-3c6d5723767c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52edbea-5ba6-4afc-a206-fff0a752da80",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2b4e65-e1c2-44f5-b29e-e95cf5ec61e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a023d7b0-8928-4d55-b220-f69bb619faeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f47555c-0d51-4d27-b92f-3a66320ec282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4586b0-65b8-449a-b3a4-ac73fec65849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc565dc-e0bb-427e-bdd3-9bb454f81998",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d4ace0-f892-49b5-a766-812415440293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d1e044-8b33-4699-bbd8-056275d02c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7920117-1263-42ba-b870-24be47524455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4880cdb-840d-4c10-b6ac-5f475277a3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0d60ca-2845-49be-af9f-ea86c3689d9a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9498eae3-4d50-4d9d-b39c-8d702eadbb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfee841-cb39-4f4c-b832-c8dc2a4dfa13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47d56df-7751-40d4-9591-ce747ae6b33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75bcd7d2-dc87-4954-8cf2-24385c23cfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82134f8-c0ba-4464-a980-96174b76e5a5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4099ed-da1f-473f-8bbe-aa233b59da36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3c6f8f-ed47-43c6-9cd4-8291eebfe846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582b7732-de82-451b-b38c-046f58d527d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "faee80c9-5cfb-4259-847a-ccd217f8535a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4a10a3-6a96-42ec-aae3-8e7b9cbe33ad",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3080316-ac8d-4c02-a247-b771b3e85486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbb5e16-a605-42d2-a346-6af2c47e9d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111218ee-8df0-43c4-a260-2ba49cde048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "300da64c-d0e5-4920-b94a-cb629ad0accf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13638b91-b89d-4f1d-98ab-c950b8696a80",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300ca4c9-74a5-4636-86fb-23fa3fb6fd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840f44f9-7220-4d44-9833-2df2664b9787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b372321b-ad7f-4ace-9a78-37f6217322a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6076b2f-137d-4d04-984f-c5aecdb6ed15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243eaaed-a596-4b56-94ac-c3e5f58fe774",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f18274-723a-494b-914c-310bcfe751b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2f8e60-0556-4c7c-8ef6-2f6d6d4f8d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cc78fc-dd96-4b03-a7b8-0db1a1c19271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b554963-bfbe-45d4-ad0c-8e8bb2c2e791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaf7739-168e-4c9a-96dc-5e55840020b1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f842d0df-d949-46e9-bbd3-005a34fb1c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486acb69-8a3b-4962-bdaa-bd159a35aaed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c58cf3-4a1c-493a-aa12-8317d001e1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5491490-9e0f-4e7c-9146-fd791e210401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee3ac05-1f71-4476-a794-dc271ecae1f5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c814c37-f9e9-45d0-9552-c6b92f074132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6a16f1-bb43-4a75-b17e-8988885b5b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae35263-83b5-4285-b038-d2c4381c58c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fbfca1-11cc-4cc5-8e56-0f219d32dcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29906f0a-fb7c-484a-818d-bb4b80ec0aad",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237b3861-9c83-45e3-be2e-47f8f6869e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f039aff8-77aa-49f9-abf7-1f6dd8d54101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a39413-265f-4fad-94a4-350af56c834a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8e5f9e-cbf1-49f9-81eb-8be436b7967f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01eb92c-c1e9-4624-ae2c-e485260d4996",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6941d85-4423-4618-b24c-d2841f324efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29aeec29-e6d4-40e1-ad4b-0470a31ec6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243df4ef-0d52-4ecc-9a1f-e82463c3abee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0f55c3-8714-4819-ac49-66c27aed976e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8d9ef2-0a05-4ecf-9901-23b9fbf407c3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a760fad1-b026-45c6-b8ed-9f8d2ae47b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64877774-f252-4fcd-962a-d108baeb5ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9e3365-e7a7-49ea-a337-0d78c6d55794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a343e97b-40fa-4cdf-8d73-6aa860c62681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0960ef88-4bdb-4ac3-adf3-70a9ce308524",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe549ee0-6a0a-4975-b2fd-ac2938182c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e397df2-8dad-4049-90df-7d81a212ed6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4787b940-e955-44d2-b104-09a8e521e597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "abbd719b-ca5b-406f-a369-aa7da02d8226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb74c3e8-8d73-468f-be19-60018d733139",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cf2b42-3b78-4d48-a811-0014c1145f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b1a6d2-02b6-404a-bcbd-f15038b7cb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0747d5-b803-4758-b96b-64a1d800d25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8690cc-228e-4b12-bce3-bd255725d3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a123633-b6df-4adf-a999-f16501186fb0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c15a6a-1cde-4f37-8de8-d8a3650019eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a20b37-b03d-4870-aa11-e15e04230f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75501c29-8754-438c-8577-6efb6ec7f8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0fc102-3d63-4e38-ac96-72f3573b0e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423517b5-5b9d-4066-9b52-2c297b14c8cf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06aab286-60f1-466e-9af0-f3ea9f235fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254e983e-661d-45a4-b81d-bd0089c06bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962e5aec-3d74-4f33-8ce4-2b9c1c1052b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51bc19bf-7b92-4d22-855f-2c093bea61cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33f7681-6ca9-4b37-8df7-18348d429800",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e5dfb9-a68c-44a2-9d57-4b501d975b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f153a1d-5a8b-491b-bde1-43ac2d73c31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b9ae76-46f1-44f8-b64f-c6e55800d7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "52efa50e-1df9-4fce-b7d4-8c391893a085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221df756-e36e-45e0-862a-717ace99cc53",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b266bbd3-01d2-4f2c-ae3e-74fe4d02e268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20267b8-38d0-44b1-8d99-57132ed89afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ef04c0-2d39-498a-ba8a-05fca407f159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa53731-5e6f-479c-869a-0a9f0469ce43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a39de7f-e85a-4448-b9bf-e8fd225df59a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456dc6fe-fe07-42b0-b995-9ada11cc6509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2c991a-bcac-4afc-8cda-9fe7b63d0505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaccbaf-5e90-470a-b30b-4ef29f628e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4b4b6b-d3d2-4265-b8d9-7d78512a456b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045116cb-a90a-4242-8f38-e2b9c6676ac5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09dbb6c-4194-4428-b0e3-79727fce0c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c397714c-0f0d-4302-97b3-8255f033166f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736c172a-a2b0-4a09-9ed7-f290267ecd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "047bdb51-0a81-46cf-a839-7f2f2ace90c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd595556-a2ba-461a-b3a9-de55e6fc37d7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdc09a8-c797-4fc9-87fb-5a71b95f8681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31e7667-a35a-431b-8b69-ae6728e4ada2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fe821a-6d6e-4aa6-857a-ed256be96830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "071f451a-3ade-4188-9c01-0b07183162bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a87b233-2294-4547-8be1-4bb3be309064",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d65568-1f99-41ec-8a11-64854ae8cf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d547e81b-26ae-4db4-8976-528e3aaaa43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d045bc49-b2e9-4113-8e22-f4b8c63fb185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "641cd269-a8e8-48e6-a521-9ad516721097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59ba599-292f-4021-b5c5-17268f90917b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eab78e-8083-4cf9-b6e9-cca6d76183f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c144503-b240-4074-b7d6-f15e7fe1450b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928ce25e-b3fe-4bd9-a650-380c5d825a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3431746-6e92-49a2-8744-1263b0d64985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37db3191-d74d-457f-be12-7ae31cccabd5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66325b9-59a5-4f37-b926-623bb8a7de77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f171b09-61d7-4e8c-aed8-af45a7357e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc84acfb-d4ca-4819-8c75-b875dc838666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99dabcfc-d720-49ca-aa5f-f8b90144bf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288d8e71-340e-44a6-ac76-64e58460d4c4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ad0f13-0e29-4779-95dc-80f193b5bf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def6de9c-b239-4a9f-9e60-14171388741d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a4a02b-ea3c-423a-81fc-e1fedd8e5c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7aae11c2-9272-4990-953d-537661a001fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9037a5e-c3b4-4a07-a935-08ff1b36677b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab150fb-bc79-459c-924a-546e2b47c9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165cd7b6-19bd-4aea-80d0-98845a2c71cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9633bb03-949f-4968-9205-857010845bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8226dbeb-70ce-4e22-ba08-6a4b1885551b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95235b56-b8dd-48ee-b9de-dc193f927d7c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54455884-095d-4047-8c26-fc9bfaa50141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ac9fef-7a98-42ce-9197-9ebb382b7a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8720b68b-de31-47b0-99a4-59f0b2dc07f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4e50c7-65a4-4149-9a68-a9d544c6f92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f40063-85de-4e5a-a8e0-c149f39913bd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209069e4-c6ca-4c42-a58c-f79dcc627d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d04f18f-64f9-4094-b037-8b9e55920d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8825ee72-15f0-42b3-9b83-336ef217fb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43e9fc9-02e4-484b-beef-ae1860ae3a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ca1c79-582f-4aad-add5-0c9e7eda5a2a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21806dd-417f-4fe2-9e76-a7863a7542d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e415f12-e88e-4e28-be5f-e24f9086770b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a7494f-5f07-4f4b-8a61-0ed94742e005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0015d108-54ca-49ed-a1a6-763000add7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d38e2a-f541-4b82-b5d5-2c6111fc8dcf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbd3d7b-231c-4af4-b7f7-9d93130c9ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0c3fb2-2a09-43a9-a880-2fd954fd4b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552444ab-3be0-48aa-bae7-d265e7710529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91c7d927-bf57-4b8a-82ad-48d3a63a5759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7747e778-d22c-46cc-a332-21f66e4db734",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6cb535-9556-42cf-9551-0715430115bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a019b628-87b8-40b6-b212-dd3a4d4d894a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e673e995-edd8-4500-a8c3-88dc9457aeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "90ef97dd-b0ef-4fba-8803-e22dd61362e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc0b587-5ada-4a30-a6fc-b3a4223fc230",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da297a7b-3565-4858-bbdb-47d4e0033490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c07f90c-1f1b-4a7f-9c14-0ae0a151c7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9219193a-44fe-43e7-91b7-49a7def6c779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f94f7a-ec53-48fd-9f90-8bc6ff881a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03517ba1-0288-4665-9080-2621a2a42b77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0619cb9f-d93b-4cf2-b237-539bbd51f47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986b0911-3121-4346-b616-729d4b41b34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bff3a2-ebb6-4dd1-a48a-6f18ea869856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b69eba-b03c-489e-b910-7630d7ea9526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b9452b-8598-4b37-a48f-1465d5aaa35c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8990fc9-997c-487a-b6d7-d0a32dff1c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6cc378-016c-4e12-909e-47eff0b1e256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8f3dfc-c295-46f1-9d48-c1776276d0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "311daaf4-92df-4588-b079-2b01b40c8adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6add47f-d7f0-4cd4-beb6-7cf30aeb2404",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6040cbd2-ff8c-49a2-8cad-d609d69f79da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6d8d60-5ecb-4cb0-9448-e38549b6ea4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b18cfc-7968-4e4b-b3f9-a832d2d8cd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "106d9f75-ec2a-440c-9e28-e19d42e11e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e59906-c42b-4eb3-ae50-5548f6709d16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543460a1-3146-4af5-a58c-40aabfa0a79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0ff2bb-5476-4e2d-ba5c-2b4576f1d120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdab7dae-8de0-422a-8cdf-afe6513117d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a95b2e3-cf8b-41e6-aa6c-eab46bb22002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201e5823-c7d5-4d6e-bdd8-07dc606fc37c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02dad87-85ae-4b94-953c-d2ea7755c123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1bb87c3-9360-426d-b3d4-6e397707da17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce75dd4-e5c5-4523-9b96-45ec1250349c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dd2527-0045-41eb-98fd-807e0a787a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafcc2fc-6e8b-4d9a-86fb-52dc1bbc3780",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d37ede-b5fc-4543-8356-254c89b14f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f47dd58-f5bc-4e8b-98c9-d9b90b214f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bda6367-2d7d-44b2-b965-5510ae3ac8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "232e06d6-e93b-40a0-9771-3418fac0d164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8170d1-09e1-4d6d-872c-2776f461a365",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ce1900-512d-4c62-b024-d7ec3d3fb380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e615209-0f2e-43ae-92fc-9fb75e6f99a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77703f0-3026-45eb-a164-3106f24b55d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eac50441-b371-4ba3-89c6-ad008ad8eaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f1ed33-1379-4044-b2db-213d1680a798",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebc4065-3865-482b-add4-eaa17edfea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a17de5a-b328-46ee-8c64-1def1a7144ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1977ddd-eb0e-453f-a890-40dfbf75a19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7708d481-8bc4-4e04-900c-155f9cd7b314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e940257c-aa95-4cce-9f7b-29777e1114ef",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c31e04-0537-415a-8fc5-75d4f8680a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc1dec9-b759-48e1-a78b-30cada49007d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6d22d9-baac-4885-86d1-065749c4fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7f24ff-ae92-467a-867d-4d10aefd7f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de1b2fb-5e1a-4a0d-89ab-b496bc62ad4f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d386f1f-cbb0-44a8-89e9-7b4e653e8ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce141019-eb31-46ca-8ede-21352ec9920b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bd4fa9-82ae-4ca4-a99f-ba3ae148e2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29b5f35f-7fd8-46ff-b158-7dbb8b524bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7729ad4d-f38b-4bdf-b120-10762eb96221",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54c093b-3cab-45c6-85ff-b46749bad4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d501f5b-eea4-42d4-8e15-082f9d210951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ab7e61-56f7-4998-b7f8-9a88e23eda96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1283190-6217-4793-82e8-9b38a872bcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc87f6a-76b5-434d-8d00-a07b3a3f0057",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62110ed-a2cc-4177-8416-596aa3d6811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2367ebc0-0a52-4cb1-b9d9-f78eb4b35d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2d079a-5628-457e-b8e0-edd01e29650c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7bc5b9-cd24-45be-8d23-1933f40d0c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393396f2-49df-4c6d-9644-db37f0e8c796",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f09dcc-79c8-441e-897e-29a7c6a74ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5febe440-a8d9-4c6c-ad39-a369d19b6832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f77616-8a1b-4d60-b06a-027e156c7989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be07b55c-1af2-4963-8186-417b4b4682e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b875fb-d01e-4eed-995c-e0ec5be8a7af",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36956441-cbbb-402e-9357-a52e1183f475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd3fac1-9f92-40ca-908b-95203acba4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e8ac50-251a-47f1-8bf2-8c2e6044f6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc08fe3f-cec9-4a88-b4e4-cf58c4c4824a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71696069-8042-4393-b841-1c843021d3bc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5342b954-6155-48b3-a5e5-dee600d052b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d965004-3363-4d9d-89fd-ca1710580d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bd96ad-04c1-477a-b028-a7951b2801b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecc58c1-5209-4c89-b9ca-92e2770b221b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9809dbc-a8b9-42fa-9887-b2d30ad46d6e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abea05e1-df25-4601-8ee3-7bdb2a8849df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546b6229-1a5b-4c49-8ddf-5e1c9cb58ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f660f1-46cd-4592-a625-37fa10a7309d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "995e6ba3-ae97-46c9-a2c9-5606e463ac08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fdeb25-2d18-47d1-93c4-3c8ab0f523a9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31b1b58-658e-4555-85b6-b98f4106ac5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7863e71a-47ee-489f-856a-deb1f5d37da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefc2f6d-c883-4842-8153-53d69acc3a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab30cfc1-987f-49f5-80c4-44d5f5b67b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1d9b85-2c96-4d35-bce5-371f7e310f59",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9328fbe7-4b91-4944-8fbf-7aef44bcd209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0910f8-a0ac-4fba-8dd5-9cee8cefbd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4d7c68-5d03-4b2b-b208-7369023952ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d369b76-235b-4595-9978-c9eacd42353d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815e8241-f3d5-4ed8-b15b-4eca175b58f5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfcf88c-e43d-47e2-9be1-da16abc28705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f7c239-b041-4a3a-a7c3-d0d444648f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322c7d2a-82c9-4f0e-9e18-ed0874b0a011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98f19609-b64e-49e2-99cc-c6d625ef1f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff668e8-3b37-45bb-b00c-a6608ae7680f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f20d9f2-350e-442e-8bbf-132d06c1c480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c567c8-336a-44b9-be43-b89cc1809191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2531a9-ae2e-4ac8-bbae-90d23d4f0bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "784dde3e-f04f-4b44-8f93-f9ac1a0c845e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe69a50a-d4f2-432d-8f2a-6741184ce1e0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e529837-0eaf-4fef-bb57-aace0df4b2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c26d495-bae7-4fea-a968-b5a1ab9e6d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43904a5d-1db1-4a47-bcb2-0fac363d399d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a18cb14-16c0-4262-ac8d-95f0d2d109e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b79f621-fab3-43c6-9f43-6a2be6f1d1f7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dba1513-1dce-43f4-afe8-97dead1d087f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfddd06-a493-4e85-b3da-976d2e3aea97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e5967d-68bf-4467-8fcb-969d6e6c99de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61356baa-0054-4ad6-82ab-4a0f758621ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a851ea-8ad8-4176-af7e-711f3f353a05",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e350e52a-6b88-479a-bb9b-6f8480e36603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516561e0-17a3-4042-9e5e-3dc632b9ef72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533a1b9e-b1ce-4818-a6af-2b131789f998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d4a00e-0de1-4ac5-bbbd-97c277c5185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d352d6-966d-42a4-b9b8-209e4e905d63",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae009852-62e6-40ed-aa22-057ff365345e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efe2f15-3092-40a5-a13e-815cdb53a8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe708e8-261e-439f-aa82-64478a8c35c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "82246ec1-d098-43ef-99bf-64b322f165f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b893eb-d36a-4320-8f95-df1fae8e81e6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f607cd-4181-4f7c-be7c-385bae94e0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8135759c-ca3a-4053-b6c1-5f3b93261df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa296fb-3c30-478d-9bce-0df85b270516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af65145-23cf-44d1-b033-d95a83c8ce0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a171a536-a47b-4a3a-9b18-a7d9da7996e3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b63ae4-a46d-4e6a-82e6-243288f0525d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21f6c89-27b0-4435-8864-d56f86a5e60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef92099-5ccd-4f3b-a74a-f28ddd07609b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44484b9e-59e8-45f0-bd87-c608ea7101dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a7c7ac-880a-4382-bb45-05135ac32a55",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c70192-bfbd-406d-9063-50c3a77980f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a741e26d-cc7b-418b-8750-75550f3e0888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74f5570-c2ff-42f8-a1e6-ff7ed568bf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc2c527-4d63-431f-8d77-34baa3dde23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b5b721-234f-413d-bdec-46b7f3989892",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b3fa1a-3f37-43cc-888b-44509c7c7e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef11ff6-47e5-4358-8534-fcaba9e8bfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fb0685-08cc-4afa-a6c8-a95a81911bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7894ce3a-97b8-4e35-9bc7-7d42b8a947d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8b6b10-2f10-4240-8dfd-efc273718f65",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21898a0e-38e6-441b-929f-20b289929091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f24386-1c16-4613-9733-7027c3d94e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d838614-0b5f-400f-a466-38563c032807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a9a2eb-dbc7-48fe-978a-ecff80d9dee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f88d47-6d1d-4550-baaf-734a0e917987",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971f1c24-25d5-40aa-82e6-521a84d6095b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db757f0-cbeb-45d0-a307-cc4de03b6084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c080fb83-5d92-49c4-8072-8682618d7a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9176cacf-2df3-41ce-910e-eadcdcc8526b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc56a38-d5d0-489a-bfed-663daa2cac1f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c21b647-3011-481c-8393-4d97c3e9697d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb14e7c-c1b9-4624-8a8f-34ceb19ba786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698b2b8a-8a28-40c2-a03a-c616be61e9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "428bd4df-8676-40c7-a191-2457b508c8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ac69f1-4db8-40e1-81a3-026753dbedd6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f211188-12d4-4a00-8ec0-b0762e62138b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20d76a0-4280-421f-8b4c-1197c6dcad31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9764329a-15ac-4713-a59f-ba638b09337b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "10bfbd96-adcd-49fb-99b3-212874f435b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2945ff7-1b9a-41b9-8335-84216828f427",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9614ec9-9e44-48b9-842d-4dd18f530d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1964b914-ace4-46dd-8cb3-6582241db21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052a5938-1a6d-447c-82c3-3bf3f71b1921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "289246ba-73c9-4fe9-9446-5bd6719493df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409a527e-450b-4123-bb1b-dc459a2b115f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0557dca7-6eb9-4e5e-a7cc-325e14125d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5eaf57f-70a8-4953-84c6-73761beed197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b5f94d-6985-4971-aa01-1872a92b9d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f87519d9-8a0f-4b47-91e2-4d2a9c133568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebcdd46-db82-4d8e-97c1-87af1172c543",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1684662-9572-4122-b38d-a3ca536ff9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a315c085-f341-40ad-9416-0b7c9f559590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42d1599-0351-4333-b765-44c04d49b23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5c6a6a-b5ff-46bb-b1ab-f49c63003f5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f933d2ba-ac61-486c-8565-ebe8d1ae6937",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9961a2c-9486-4d87-91a5-689f0a4498be",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3b21c8-6464-4e8c-b9ad-8cff680da192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f499f127-506e-4571-8adc-53547e98b822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d811011b-e7ad-458f-879e-10994aae8772",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fec7718f-82df-42b5-9607-f9ceb7ef96e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4aa9bac-2508-4bea-8c4b-62a8b13fe91b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1dc0d73-d0dd-42cb-b319-bd87baaf1c42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba619c9e-478a-48ea-a3bc-e672da388cb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff913f41-9af0-4660-b24e-1b9343f60886"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13015f34-a578-4f49-8490-10eea7b9a427",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a4ed2e4-5c2d-4a43-a79a-021e936ed63c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c404ecd8-6046-4b47-8a5b-a51e851e0421",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b537bab5-d93f-45e5-8f08-16de730b5839"
                }
              }
            ]
          },
          {
            "id": "d93c86b9-7a0a-4eca-b27a-0f44a6ce9d16",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8633fa2a-15a0-45d2-84d7-d8a963693bce",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7fb9881a-4e24-492d-983b-e283c5ff5c51",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94034b4c-b3f7-499f-b4f9-05c4abc9ce10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5a1ef4d9-9310-4bb0-b71a-3d26361af783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d26753a-305f-4086-95cd-3e6f6ea88375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f529f08c-8725-46b3-a3be-59b920ebe541"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d79dafa4-8285-4140-b5cf-ffca943c7d15",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3514f120-fc92-4372-8a9b-33b58656e506",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e6e1add-bf72-44b7-aea2-f8d08638d1ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93972acf-021b-4cbd-83ef-7221ab44eff9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e4209d7b-4e2c-4d0c-959e-1478cf85bad3"
                    }
                  }
                ]
              },
              {
                "id": "e7872aa9-e32d-414c-959a-52139b2a5db4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaac1f09-45c5-4bac-82e0-27ca6d9682c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a402c466-7911-44b5-8edf-521151aa6216"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4900fde6-4738-4549-a2a2-8cb8bd276e4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5cda541-fadb-4ddc-b16a-4f6392d6ba0b"
                    }
                  }
                ]
              },
              {
                "id": "8ac25a5c-5339-4853-b550-06d1c2afc3da",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd44031a-f910-4a61-8c76-c7560ca55ba7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74efdb81-90e7-4982-bdbc-384f37a284ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c341706-b2ed-4eff-81e8-b2d9a3fc995f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fe58ea22-5c13-4162-8b23-531f67a16de1"
                    }
                  }
                ]
              },
              {
                "id": "c6a828b1-1f81-4e5c-92f9-9bb44e4ad885",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15a497a0-d2b5-4ea0-ab49-94d3276a653f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "189e376a-5ec9-422f-ad4e-877416ce1469"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3701b189-f03a-4480-84a1-dd51c2391c9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3c3576cf-f400-4a98-b826-629335c282a9"
                    }
                  }
                ]
              },
              {
                "id": "f3281a6f-43f8-4786-b74b-e56c4685497c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd157810-8055-4758-a517-9fc00e311138",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7724a5b7-cb2d-4958-a59e-49fd5988b410"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "916174b4-5741-455e-87ce-8fa8be679416",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fbc69dbb-ec9d-445a-86f0-234fb8e16b63"
                    }
                  }
                ]
              },
              {
                "id": "eef30792-fcb8-41f7-b34a-9a01d9711fcc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4e8f541-da7f-43e6-a790-6f74a92e1067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d9e15d0-780d-457f-ae18-aff47ea7a7ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "064031e3-9d98-4799-9410-8ebddaafa816",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8269e691-ec38-40cf-9a0d-a0a2d62232ac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2f67035-049d-4c75-8ff5-517292d96884",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e511acfd-9032-44e9-8702-7026fcb98483"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3597d5fb-a659-4c8a-af49-d9799c15cd49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f9da14c-6b44-4623-98d2-8b88b13de905"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3883014b-f00d-4eb5-866e-6c0ddfb786b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "525a0121-d23d-461f-a158-9fb27ec30c6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fff708bc-18a1-41be-bfdd-b3024640f62f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "393a4c64-b7e5-44fb-a065-13e7b450e7fb"
            }
          }
        ]
      },
      {
        "id": "b82a4be0-4aef-4b67-8147-413d2bc8d368",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4d7387af-176b-4c35-b96a-f4682e7f2c91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3adbe0a5-7142-40f2-90c8-825218e45ae4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "249cded3-c7ee-406d-987d-685b342d85f4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b634986b-d1b2-4824-8131-c66e1c900d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3176356-50d7-49ce-922e-97867dbf8984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84445e19-c0fc-43dc-823c-e9c7b9ebd48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d829984-7310-43cc-a4df-5bebfc8ff95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5df900f-b5eb-495a-adfa-14f959ebb56b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3966c9c0-2b76-4e01-9cc6-2a3dcb1b0a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cf195e-4045-41a7-851f-a54ecc0a9777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f668ea78-a64c-436b-a306-a81cd051e247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3408409-b31a-44b9-9ac1-aa64fc3ae317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740e9381-5455-4180-9862-5386e5a7c018",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4b0af2-99d3-42f5-b16b-d2bbd92bcb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d431d9d5-fa9b-4140-b08b-3923a0345a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd902bff-28b1-4f11-a632-66805592d1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9775dae-edcc-4695-bad0-9b6fbef9dada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5d41e2-7d77-47ce-a739-24b38f3edd1c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b474ec0-4389-4160-80c0-1863aaaa3920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0eb9be-47ba-4970-a897-3cc26bf11c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7486c56a-bc7e-4d18-83ae-0f8c706bb9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7aee83-9764-4b8b-9dc5-2ebc081b2309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55f6bb5-8795-42fc-af6e-731804be5d0d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38785b32-6261-42b4-aa5d-b516ca6335bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1382ec0-3ecc-4c7b-8b9e-423a6d346623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc28234-a83e-40c7-ba5d-5be032e3b0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60f393e6-e347-469a-b031-f6f119ac60b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3105bd-201b-4d71-b947-c7923eeb3134",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb3ca03-25f6-4055-ba47-4c4b573e514e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f6f882-c060-43d3-ae90-bfe4adea1927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589bce87-a176-4c6f-beb5-520f5c6a54bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "984f3001-cd48-4d2c-9eff-20f96f856d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f8e368-c00f-4165-9fca-733d0f822644",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f6de8d-5245-43a1-b27a-f711b91e4155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d146d1b-e673-4acb-bbf1-ab68a4dd0f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1524ed1c-3e0a-4a67-8d74-da4829d08455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "79eabd12-5fdc-4f24-b0de-b25aabf3ae55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552957d7-5a79-478d-abe5-4ad508d95f64",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5cf177-b098-4f81-848c-3e1ab92556c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e9df8b-7586-43c2-9db7-c76e86f51b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5614966-5ad2-48c4-862c-26eb820c1458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b23cf83f-f141-4b32-86b7-310325117028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e04457-9d9b-426b-a2c0-871379e5a77e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bf6520-6393-4096-98c2-3b5d9dda5bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b5b71b-3753-4455-ba55-703a80610fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9793c4dd-8804-4268-ad24-57b21007f823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0137c5e4-d0a4-4ff1-97d7-d55d8c4f3459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe6208d-7887-4a6b-b4b4-fdfba2e42bc2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d26488-5f40-4b8d-8231-b176c10832a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5656225-9e9a-4522-ac8e-a0e6f692a799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be7f3d0-cfb6-48af-ad03-928e7625d1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6229d8ff-6ec9-4cbc-b51d-c463a5823052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530ac6b5-df38-4990-add2-6f2f9fe4daa6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60db039d-342f-4768-a1ed-33647546e681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b556328c-c57b-4be2-9d6d-942a520f3aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccdacd0-ab45-4019-adb9-253671f45e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "edf1d7c9-b358-4d26-9c23-84227b08f289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb6da6c-4536-46ea-bdf3-d5b3c5a29b5b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7127b8-4363-4e16-9eab-fd7e9eca4d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370d30e4-2aaa-47ae-a16b-80cbd54ac137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d4a08b-ee0e-4310-b56e-2aded8600221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3113bbe-2248-4bb4-811c-a696d82a0029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1869e1-1ef7-41e5-8e9f-4d092f1fa466",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133a86cd-d05f-47ef-a60d-43119bcf0ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011883d9-480a-4257-801b-106e9ecfe7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1966a45-9bf3-49ca-85fa-aa42285ef2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "850ad5ac-5012-4eca-9060-d28e8c7226fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bcb354-0cb8-4aa5-963d-f1b6510ad4e7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2da3fae-6e20-4587-ad24-7e0a40cd18ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05027511-7510-4af7-ad96-73aad4f9e10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05365789-94fc-47f2-82f0-9a1224d40dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e309a024-ac7b-4812-8cbe-8070a8e261f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a45ae6-6635-4f1e-8a02-e601c116c4b7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a94115-593a-40d3-a36b-be6e70e2bfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1523fc36-e32d-4d02-8800-dc8c4dbb9a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa034d5b-8d6f-4de0-8e41-3c4f9497bfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece446fc-83f7-402c-8e95-26cf24f22ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7f19a7-33a7-49c3-aa3f-bcd8e077b22a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b860d21-ab8b-4839-a5c3-a88197201300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e3ac9d-cf7a-4b24-beb0-9b58bff40f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0da012c-dfd5-4c92-89ea-bfb5d292014a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "889f9487-8f16-4387-811d-f3236f459868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d2f9fd-d1af-4f3e-8046-3566f2b8e513",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf0a3b7-9888-47ab-a99b-8ea3d719041c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed06952-83fe-4f71-a750-3a2cd15b1f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c6ab92-314d-430b-96d7-ba95cdd8c267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d35d19ae-8bd1-4465-806f-de5c20c1c884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62382450-9c11-463c-b454-a7d8d45ff7e7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f455c2e9-46d8-4d90-946e-ddaa8de30c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d0a535-74bf-4c65-9ce0-3d9de49bd40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae960e1-d1f6-4a09-90f1-ef990bbdeb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a115ee8b-367d-470d-95b0-0b10519967c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5f2fb4-b925-4e14-a8fc-ec4223789fa6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dbcb2d-d89f-401a-bd7f-b936eee9a063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fadd12-2667-451c-b76e-8e5bddc3f528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acf7a4f-7256-4e1b-88c4-1b508c979d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a4b755-b17e-4b68-a045-6f994fe13fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12107d20-f116-4eab-bc9d-c8f7bd79f906",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c92cb35-1697-4df8-81a0-a974ae4dfaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2952c54c-1d4d-4776-bb01-6f5c43f76a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb866bc-4cad-46da-b8a3-6952694fff3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca0ac24-58ab-4795-9c32-bf05f298cbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a83240-964f-4caa-a3c3-930487196fa0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23e9961-b283-4881-a411-7c66abb2bf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd500ba-88e1-4bac-ad44-6cf2d7e813da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735a2af5-5a25-4ec5-b5c0-9763aebb079a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7da81503-59fe-400c-8bb0-80b35c110a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3369ee21-f14f-407e-b2ba-97459e3a5a5a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6f37f9-9a1b-4212-a80b-8a7e850e6f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b3dc57-8aa6-4997-a82d-eb71ff2bba10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570fcfed-358d-4543-a937-946853a5a936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c85d7c-67e6-450a-abb4-3d055905588a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7631df4-6c0c-45ae-9148-f5f5f5f30349",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da014723-897b-41c9-a7f1-57d5353a2328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8fd592-a3d7-48f9-826e-4ff7cf1beed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c4c1a1-71cf-4fea-a01a-09c2886acb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "104fbf5b-f6d6-4cad-99c3-d78a8569a57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42882e1-010f-4063-9f3e-78cb1d793421",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93b9faa-689b-4464-a41b-ea45e5463882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be58f90f-c75b-416c-be96-69c7f563bf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa61577a-f2bf-4edf-b9d1-76d236fec338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88959b75-1634-4a60-ae9b-4a262cc479fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43655f50-85f0-4672-bc6e-2a022cd1cfaf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0a24a1-4f72-4d5f-8256-9b00d40cdfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3db051-02f2-4336-ad32-97b233da4239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdf12cf-75d6-4198-ac8d-aa19d6c16406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "726c2eaf-b94f-4452-8f46-6bdfada8a564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925c930b-01ae-4c51-8968-df308e2f9aad",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18958ba-9d63-4583-b742-316d866c7a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dec0f31-6668-48d7-974d-f660e48a0bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1acb025-93ab-47ae-8eb6-baead5e0709d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee896bb-3ff4-4064-a02f-a8811b6646de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea22d0a9-f451-48c3-ad7d-a61027e53d9a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2472f9d0-228f-43d8-9ee6-96c6f63f5cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed1bbf9-0559-49ab-baec-ef55ec203ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feba0190-f216-4553-8f63-90e2dff2eef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6beb246a-b384-4e5e-b4af-58866aa1631c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e652ddc-8dac-4da3-9a71-643a474a8c83",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8552edc5-bba7-4d16-a2b7-a866f5d757a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a240b6f2-2850-459d-86c2-a7c3357852de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4733bd9-78d1-45e8-8e4e-d186a07fd0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5402f4f-14c4-475b-85c5-48154f2fa31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0831b7e-db5f-4f57-b077-d0481fed5c87",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9be4dd3-368c-4786-8f12-706d76dc6aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf5be52-eb4e-4c6a-b326-d03d236e8746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3600d48-22f1-426b-bed3-221cf60982ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1db202-6f31-4703-b691-22bcef67a266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd04bcaa-6f82-4972-ab58-47bc829cf825",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138693fe-ad74-4e34-8f38-228ab34f96be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbc1486-7f38-413d-9f9b-f1a4b82d3129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae2372d-96ad-4a65-8f12-eb050d8684dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f32fff2-2f4f-42e6-a273-fa71fbe80493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf7bfb5-626b-4b39-836d-85bbcab1ae2f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e67944a-5384-4c88-9449-90cf596537d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d811289c-028a-4981-932a-8694e638fc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3abfc4-e6a5-4f35-9a12-080c5dbe8c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02a826f1-4a00-4d42-bdd8-f1b67766fe47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795bb0d4-f572-4b8c-b5ea-7f9c96a8c9b3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b90ac82-2148-48bd-bbd4-74a2af5a4751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb8c8f0-e8db-4914-a9ff-6847576557ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d9f315-8d18-46bf-bdb4-21fd41d8584e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcfa217-5e9d-4d31-89b3-f32ec1ce5e51"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8f79eba0-e366-4a34-8fe2-21be93ed6169",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "deee1427-acbd-4ffa-bc8b-a4466176794b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba70225-4379-4b58-957b-0adcd5d67576",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4fb6c2-00e5-4557-bf20-246ebb49e9d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470d447c-a7e4-40b4-87df-b272875d6304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2d50aed-8497-42bb-a24e-7a955a906e82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65d0d1e3-f10a-4746-b325-cab122c5f0a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8340ec4-a9a7-4ec7-a6d3-86f3c1c447d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a8d7247-6e91-47b3-a2e7-1731db5a0658",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85629080-4621-427e-93bf-74d2bd7344d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4bca6bb-003f-4452-a736-b81aed475f2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b600148-377b-48a5-bdbe-960d60404e69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "341e42e5-6dd6-4545-82e6-4d42c8477da6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa1911b6-9d11-4164-b77d-7b04ff5e206f"
            }
          }
        ]
      },
      {
        "id": "bd7d82fb-f903-4aae-9b2e-fcdccb325523",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "74f7db01-145f-4e3d-8802-badc45b1127a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0d581a6-21c0-42f9-876a-be9642ebbf54",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be37e220-0400-4071-8082-24717b6678ea",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab0bf0a-8a6f-4305-9a97-81694c050199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db47fd59-aa49-4687-8938-1652e12691e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b59f253-fbc6-4c7d-a0b1-d228df0a2a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c62b54c-0351-4f29-b0fb-aeb425110726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213305e9-003a-44b1-8026-5c33b56bb9f8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048f7aec-f7bf-4ac7-8fd9-e3fc72949441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5350ed00-b064-4820-acf5-e414fbb690bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101babfb-a31d-4673-94b2-3b4e1390bb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d4e7b2-af6e-475e-b2a0-09eb23612f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afefd00-3e49-41f1-8708-60c511d7c295",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8848a015-4189-4c7f-96e1-897929341142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f9eed2-e13d-4d36-8ab4-45e818d57a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d726db-ab9b-47ef-8144-bd4d13ebf3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6440872b-ec0e-4148-a999-8a309eb0ee3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96538881-a0b7-4596-b3c7-32b92277f576",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6648914c-0ee7-4cbc-bf31-11f972e36351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c47efb1-c5ee-46a1-ade9-19e39066aed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ee2516-b078-4042-abc8-ea3018ee6597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6972cb5c-4044-4dd8-8170-885c6d4b60db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e37c98-c791-4e6e-9463-42b87788c88f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6821abc0-426f-452d-8dfa-902dc71cdf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa089583-8a31-4eec-91aa-f13d41fe2aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1857dc2a-91e1-450c-9558-10cd5529ce4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff93bdb9-d838-4020-bc47-f7977c6b0d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0cd2dd-3541-4286-a82c-ecfd6f022f85",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e73ad4-a12c-4763-a4b7-238bf3d6a5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f60ab5e-688f-43cd-8646-a89b37495e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe9d11e-e7b5-4e91-b63d-f417abaec51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a446aa55-0fe2-4303-aceb-2e51817cf100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0935be-9f35-4772-97b1-206ddc23f5e4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c2589c-3298-4d92-9e63-1ba4f53b1c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab79eb57-d0f1-4e1a-a1e8-9f2cc92be059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f611ea91-edcd-4898-8b4c-d59d4204674b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "61d86a7e-7528-49ed-8226-2b63eeff0cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385b1af6-5771-407d-9ef3-df0f75c4ee82",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b659a5e1-87fa-4b04-a1fc-d0214101c9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9861aff5-81fa-48bc-9826-5117dae2f25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efd9254-6967-489a-a587-09a53e44e8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14bae246-4a97-40b5-a6f2-6fbbac1048c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cd713a-d184-43b4-a376-c470d7681ed6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c98e20a-b87b-47b3-8bae-a2caba291915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cf7926-8284-4f27-ab69-f22936b5baa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7894e9b1-fe48-40cb-a5b5-861828a26a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "407217e1-ccd5-44cf-9c37-b3fc9cd81f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1dab85-0f82-4aa5-95e3-73c385ab2a4b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda51091-30e8-4a71-83c2-c1fb79334536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541174bc-8a6e-4bf6-9bfa-2d9885cf1f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf1b8c2-527c-4558-a0d5-ba5419ae481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "832c2cb8-3b11-4f8a-8c0f-c3244704d597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2175f2fe-7b11-4fd2-b275-a05b243230f1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1848a6-4d76-4346-9d29-45dbb002f990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b8a5f1-0f7c-46da-9e6f-e8bfab103328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66d9e25-fb4a-4baa-8fe9-26154a6e4ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "196b6945-7ca3-4870-b062-3ba9b18292f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed7ada7-e883-4888-acd0-abe099cfc49e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad355fa4-0d0a-4011-a81d-c3f920b4f41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577e6d64-232d-4178-af0d-abe5220eaeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a46a68c-aeed-4151-9c0e-601391cafb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44c5b556-99a6-4d4c-b281-50260409580c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1919587a-8c70-4860-921f-b93d3431047c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76f9037-3f51-4e6d-bae1-75aa10b096a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04d3b05-cdfe-4dfd-8ddd-b8f571f4838c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e9ec28-8664-4724-8417-9e82ab2c8c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bb4d22-a830-4446-bcd9-48601e02ffea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e967cd4c-5915-4a47-bf1b-90f70826521c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c093fe-cd72-4111-bf05-8950cf0eb48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1278c7cc-917f-4d57-a01f-aab71441b59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dbe02d-b963-4159-b9f7-9f0b1e8fff67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6f2fe8-814b-482d-97f5-576c28c52535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17717903-a42c-47d9-8e96-c1b1efe3212f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353471ef-b78f-429b-8bb0-0a7c363699b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3593916d-ce19-4690-a0d8-ed3e8f846dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6302921-c574-4152-ab24-06bab9ed8b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "909ed90e-b1bb-4978-a86b-9c052606d192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c84f80-098c-4f0a-a839-322e0c29b579",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a165814c-b510-4764-9758-b0d7a4d09269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3d2e24-90e3-46d9-9195-7ca759bdb3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1766f089-fb79-4c13-ba3b-155164d6298f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ace5b232-7ede-4145-a35e-2285a2eff06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c0552d-d65d-47c3-b7ec-4cd76e66a5da",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373e98a9-c5df-450b-b010-7b147b9d7c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e25ec7d-bf40-4b2f-98e7-65450cfdc40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f904329-413e-4700-bb2d-c434480708d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "843de2ed-2288-415e-b9f8-86538d76f783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f02677-e098-49fe-8cd4-a12c6b6387c8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbcc8e7-f8e5-41dd-a846-9621fe0fd129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e536f27e-fa93-4f48-90da-d4f850a8d618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58bdec0-292a-467a-9f02-b0a5189dc398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d563011-324f-46cf-9de2-612a950eb265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe15127d-fcc0-4d21-b38e-91a676fe46a7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5971b1-c7d0-47b4-87c1-e835850f17d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66272a7b-8c75-4244-9dd6-8b40ea419244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2262710f-a471-41bd-b78f-73b2662ecb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc24395a-01ce-48df-b47c-3ca6c2dd4217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272aed56-d5c6-4601-8157-b90f3ce22748",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d51c4aa-b135-438c-823b-eaa67589fcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a1ee01-4430-4b86-8efa-2843c720dc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409fdbba-c54e-43bd-9d67-6c84d7b94f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "284868db-ff4f-4b40-88cb-275996a2a6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7509a3-fffc-4d57-9359-c36fcb7fd495",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bbeef3-f6a6-4300-a372-996a45573738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e6872b-9a92-400d-aada-20d0eefdf031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324c22ff-8b3a-40b3-9f69-92e4e7fe4767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8b5145-c882-4d82-bb7b-0aceac6a91ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fb5792-16aa-4e5c-8dc2-c4c696e0b9a4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410582aa-19a6-4e1d-9082-77b04f311b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b839904-b247-4602-9341-3dfd6b29c72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613199b6-8e73-43a0-8922-6a82cc9bfc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df807b0a-10df-454a-8bd6-a3adc5d8937d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680ff671-9f3e-4956-b7de-3c26e664d97a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3509ed91-ecae-48ce-8a8c-2774d98cd042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1109f206-abb1-4948-b4cc-353e32e1ef65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fbeb3b-e418-4d23-8ac9-e3e60f51db4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9aa88d5-1634-4ebf-a4ff-54b3e56a270b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c148f78-bb20-4884-8206-4d672b14f31f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89b3ca7-9ef6-43d4-a3ef-10e900367587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3c973e-9462-45f9-9ffc-6413da75b5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81076e2-7669-4ed9-95a6-6e179694edee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c876515-94a5-4b4d-b727-d108466b09be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da81a087-ae49-4430-a3be-6aeee38b63b6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fc3d8d-f084-4aa6-b027-d8783879e63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b914a2d5-7c91-4540-a97d-fec78c034eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f255b7e7-d87d-417d-bd48-d497dbabd10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c58397c7-2795-4bf3-9d63-fcd8487e5d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a07969-aed4-43b4-a1be-b4c88d1890af",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25bd1d0-6b61-4c99-b27f-c211994cd49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a172cc-68f3-486d-b7eb-b9692b174361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678af0bb-cd78-477f-a35c-c41b7704d7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc11933-e96e-4aa4-beab-3f08730c885a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea2f2a0-5abd-41ee-a01a-274aa912404d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49f28a4-8091-40d5-acee-452715b3cdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757e9da6-756d-415a-b5a0-5070ba323a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5ac39f-b138-419b-add5-9260b8817ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16707be5-7645-45f5-9d83-7ff528460931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5531898-3961-4571-9160-a16383f40f9d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe153f7-01c2-4e82-85bd-e024192dbb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ec5c59-f756-495d-8f92-ffa0160d6249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9938924d-8752-4566-a63d-d06fdf3d9237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9e271f-54da-4ff7-9caa-c8b28d917b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2365b730-1703-4d0a-939d-0d373307b279",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04509fc5-e3e4-4d4d-bd5e-4b20e9122ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548aacfa-20b8-4fdb-a1e4-a0ff5d12041a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5bad79-fb47-4726-87f9-3b233e5e6450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66aa74af-b41f-463b-ad9a-0762eddc2e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d24a925-fc77-4768-a825-a273395aedbf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749ce003-18d0-493b-9d85-6a5e8eabda2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19db57a-24d0-483b-a857-8d81e2a72a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc8ed86-d7a3-4eeb-a75a-5cbf8967b4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "388d9476-8161-4700-b028-7bf94e193f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd649fa-428e-445d-af49-72577d639e76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d77d9d6-9320-41a7-9116-db8a4ff2a719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e317c31-4efb-42f1-a307-f7f4594b45d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f13ecc4-1117-4251-912a-ffb7ec5f9b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f128162a-1736-45b5-8b02-dc0af118b0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2eed6b-4374-4ee7-b847-0ffa779ae9d2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c1e10f-f243-4be8-89fb-29800b0b08c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b82905-4d9e-4d16-9218-382f88119959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ff75f9-c5cd-4ea8-bf57-70befa089a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f00f218e-a7f0-482c-ab31-2a151616e6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635121ed-b608-4af0-90f9-f9231fdb4d98",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809ee174-c0f6-4add-bb6f-43a85b21b34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ef0981-1892-40c0-af37-5ffc1787c7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec88b84-e98a-445e-85b9-f43aaae3077a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a03c5a8-6479-42a4-bd2c-125bbada857a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69e6ebf-0bdf-415e-9e80-4663439c79f9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52207ba5-4a23-43ef-a9f2-218b20392759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c38836f-383c-4466-b6a9-b82fa9e4af4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088ab0b3-9f79-41ae-8574-7673bff4015f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60dc590-dc82-4fa8-90c3-1de3a7126520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783fcf47-cdb3-4e09-bd0b-9d41f7409ab9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0a8155-66a9-404b-a053-591457dffc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135b00ed-8426-4f0f-83a3-7203ffe37ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675e73f2-e3cc-4386-bff0-2733b7857e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a6c7c1-5505-46e4-823f-3ab943f70caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bedc29d-3ace-4bba-ae60-926e68bca918",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d0f351-65f6-4782-ad02-d09507e97dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daed34b7-db05-4cec-a293-cbbb90799ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588eeb5b-a932-42fe-9a08-0dc94760a9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2525f38d-87b3-4eb8-b10f-5bacbe0f0c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf20d8e-421f-4713-9209-c4b4d0a6859c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca384d3-88a0-4669-92da-b694ede6f83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7f0ad9-efb4-4921-839d-78129d387bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d450c7-cd66-497a-b8f1-8489827b0266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4961ff-133e-42d8-9ab5-e8d6dc6320d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5779aaa1-e2be-4b53-a2f9-547545aa2f8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fb663d9-d307-4dfc-bca7-b77e6b82ebb2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d28b1fa-ce3f-45f6-9c08-69afc05c349a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "df195726-661d-46fc-bb3c-81d83ded2fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb54837-880f-415f-9853-b1f4b475ea16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "412d98de-b556-42ee-a253-7ded41647306"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc707939-f49a-42f6-b6e7-df14ac1d6074",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54b08b66-a504-4fb3-b0cd-0fbd1f4d918b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e642388b-eef5-43a2-910d-220e8a215c28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcf22cfe-09f6-4145-baa8-37c11c25deb2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b954405-7ef7-4254-9ae1-d9685feee245",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "05bc37f7-5408-4680-af75-3c6c4979b734"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9709882a-68c8-4c6b-b9b7-8421be6516e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "792ca092-3d98-490a-a510-c4bb02d5cca8"
            }
          }
        ]
      },
      {
        "id": "b52a2e19-f3f7-416b-8912-0947fe41a51d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bee5fd92-d6bb-4d1b-802e-bdba1d7b891a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22054fa8-d4c2-4abe-88ce-f44ddf9ddec4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4867203f-be6d-4dc8-a704-00736c305373",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556a067c-b2af-4a06-a681-f694242f2ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3641bc-a448-4a48-94c6-05c351977b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1f06b1-8648-4e14-a902-f08a103d1370",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dea2b8-d608-4e23-91a2-3d6b25a7af77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5ab720-153b-4215-92ee-51ba761ad656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b700b7e3-a972-4cb7-b135-291b6789a592",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a151e5-44b2-4b43-92d6-28d185c98252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0b48ab-8c91-448d-8025-4cab7cd30048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229ea612-35b2-4a42-8d1a-1ce1609e0ebf",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fdc4be-39dd-41af-8485-3ff8bd6fbf05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968667f5-068b-4d19-8412-7ea4d6064fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be579357-d373-41d6-9652-9530d9a7f689",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d42d8b-d2fb-4044-813b-07397615219a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4041d13-a0cd-4820-853c-fa5cd1989bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe69872-54dd-478a-b521-391a41be5240",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e938a3-3c50-4577-a5bc-b1224ccdaaff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb430e7-05d7-42ac-97b3-1cbad92a5c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0cc687-6afb-4a4b-84de-83dd7fb25a73",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae25295-918b-4f93-bda1-c7128e905d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cebfe08-4d09-4f7d-9ad4-6b3fc6b5679a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65452002-91c6-4646-aa77-724b1efe0491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c54d3f-db34-40d1-8978-da97dbcdd185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38700115-433c-400d-895f-0c9fdd654725",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09671673-46c8-4793-acf7-7bdc1b4533e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb86883-57f9-4542-a0b6-32793f7f12c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7ab8d4-1d42-4fca-aa91-6cc2b8d410fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a8fe95-c0bc-4dfc-a5d5-8fc8ace17ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412ea8b6-7770-445e-9954-8b349a7f9f43",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593613c9-aaac-4d97-8005-90963c589337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e62b69aa-b9a0-4dc7-ae14-619a4eb13790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7d9869-5891-4002-91d3-e6100ebadce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e011f80-451f-49d4-9152-737e797036df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4d5144-c5be-46c0-b5be-6978eb947402",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fce84c2-8a7e-4ead-ad2d-1477effb15f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a9df05-166c-4d71-94b9-edcea3891333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ce8565-cc68-4e6d-86b1-a385a224b6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fe700f-043f-46bb-adbb-e18932583e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74441258-dbbb-4c29-9e3a-c571119da5af",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb63de4-fd0e-4f53-92b6-c66fdacc9145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060ef1a8-ff49-4d2b-9dc9-e3c9a9d941e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45940f48-6e14-4a10-a83a-91165211aa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d95496-33c6-481d-b72c-7eca0b0e5125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494f510e-499c-4d80-9afd-e7fe9db60277",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823cbd6c-237e-4844-8cc7-f5c82d4dc3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b80ae92-7a24-4137-aa82-e9f8ccee9144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408118b3-8317-4a4a-af26-7840f52fc191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb9e630-e390-4d47-ab1d-a2020f8af840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e71326-6567-4cd1-a7af-9998f59da9a5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1365a951-ad0b-47d6-989c-598da771ded6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d666e5a-ef61-4476-85fc-d353a0bf56fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725dbf67-2041-4a1a-93c7-4439bdb0cdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595f4b0f-2e95-4abd-aae5-a0b7b8d166ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13602b43-8ed4-48b8-866d-6b4b9d865cc3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360a1301-a8cf-41cd-aa79-1ba59d3dd15b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c463bf4-2ab3-4436-b6ab-e4334c3115b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5711f31-9cfb-41f6-b250-373a9b42cf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f1179d-b17e-41b5-948a-ba3ec8977280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6270beb7-bf86-47ec-85dc-16690f734ca8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bebd61-03b9-4562-b594-ad36fdae23b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fae16c9-ae88-4cdb-b947-15b283a0f27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3156e2-7fc6-4378-b99f-aadf5cda8ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3512627-bdcc-41ce-94be-0ae0f4f880bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7a5227-56b3-407e-a9c4-9849144897aa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea9428d-0e79-45e9-962a-ef1f06ff90c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "174e438b-ae1c-4001-a46d-2107c40640d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f734ee-25df-42b5-b36d-653e4623af8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e8a254-86de-44c6-8595-33155f0f0123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dbc1a0-6066-487d-83ac-6b8b49cfe43b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354adde0-f3d2-4a35-a445-16bf39d71ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89f67b7-eae4-4e06-b96f-49003235d503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d4bd91-f037-4246-bf12-bd9697bd4b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e4cf95-edf7-4706-9845-5613308673dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb764ac-b1fb-4fdd-8922-7580205a2917",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35795cf2-acfc-4036-9af9-400fc9f8de5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20a3272-af33-4a5f-852d-0f125436353d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f261e819-2551-4175-9e3f-6cdc9212a65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70910e4f-e273-4b39-b9cb-b5d33ee5d7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a9ced9-f61a-435f-a459-5bbcfbca1054",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f183b5-1609-4d81-9ac0-000ce8b2dbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71edb9c3-c0cb-43fe-ac6a-c3dc5c805875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05f07a5-3c36-4a4c-97af-50cb3e97ed20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee497bf-a425-4d19-90a1-07331a332843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff31a9a-4968-4b49-9d7e-4e4001444c05",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911cf3de-f549-46d9-9fb3-91d50eb3873c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf7bb6d-30c6-44c3-8cca-0d67db2ac289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1ee08d-8b21-4b68-a49f-f4f40303391c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249a976f-9eda-4e35-b21a-b6838ad36750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d80a8ec-e869-450c-ac0a-2becfd7cf026",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d375c2-b37c-44a3-b735-f000efacf539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0083cc-f9e6-4df0-b106-cc4d3a9b0541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748f9bed-44eb-4ba8-87b8-a16dc9fb41f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f506f59d-31cb-457c-9da7-36bd7c0aa486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7883ed-5c2f-454b-bb98-f914da74b388",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cbe0af-6f33-496f-951d-89748380bfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2126fc38-91a1-45bf-a70a-5ab221bdbfeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffc5976-b9c1-4fb1-987e-3eef8f285812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c4a101-cb89-410f-8795-9564395b55d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9249aa4f-0056-469e-9507-cad60990f65f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2721a847-149c-4bd2-8229-0071464a3f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1d3ed2-ae57-4601-9733-a59e9327f3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a57066-1a98-4290-83c1-a200c3bb9a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746177ce-e8f2-4f49-b8d8-60a9325cf9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e4620b-2caf-443b-a7a3-9faa98e3314c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03355d4c-0149-423f-9eb8-7349b69b72a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a0cc11-0bc3-48f1-a3eb-147931ee6dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35cb260-0166-41d4-b5bb-8239d8012bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f23a1cc-5a8f-413d-b850-5c0a16cb42d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0b0264-67b1-433c-8a46-c711416d4e51",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823dc228-ad3a-44f6-817a-0a21b6b6eadc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b3f4ca-5e3b-4407-a518-2fd6c9883247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f647aa3-c36d-46ad-9dbd-e11b535ccd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b3e895-e63a-45e9-9cbd-aab8bdb2d1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4d4ac4-b74e-4d43-b3ab-f5c582091922",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061b3cfd-81d9-4b27-92f1-c059a9b4a077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a42a8cf-69ab-44aa-9202-bbce00d385d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7b9615-7962-45de-84ed-bbdb05669387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad358393-d435-4cd9-a515-1b9d288a7ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312172ce-6649-4c2b-9ebe-684f08ea4b82",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de66e13-7390-456f-adee-cf745fe29642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28deb293-f959-4671-b582-5ce5a56ea1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e45afc-1ddb-445e-8c48-784e7e17e92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cd7ddd-1f1b-4a13-8ba8-c5b3b4e8920b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfc94e9-e92f-4870-a660-56e8a21d55da",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a44d5b-0424-46f8-bd7c-7f2637079160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e9203e-a1c1-4dcb-bc4e-bce4804d1155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2215b747-cbcb-4310-9b9a-b774e9af361f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfb8fd3-5b5a-4e72-9c86-c7eada6e8882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b92378-4b13-4e55-9ca6-e13f8ef23d0c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a296c7-ca61-4468-b2f6-67b91b31198c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "631dcaa7-3628-4f4c-9aeb-ef46583d3c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5278e73-8352-43c0-bcb9-590a7b6c766b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406e1756-4b47-4edd-a0d0-eb9116ce80a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1568f8b1-9b6c-4171-b6ad-bc15074984fe",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1d2369-46db-436a-b0f9-ad40ed5ac880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0d5dc2-2fe1-4431-a7ce-d463a0a54cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a050eb35-d9ef-4baa-804d-19e33a916356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4965d626-3dd9-4308-95f8-3aa01228ee94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24efdb44-ec99-4784-bd9e-4092da681ebc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08da2a9-c6b2-43dd-a255-5eb8c1614584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74055531-9f5e-49b2-80a4-9f97190eb6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e19c411-30ed-41cc-a2c7-f9009d3f2e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81207f2f-7e39-4a3a-a98e-9ef2ae6555a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dec0dd6-3e9c-47df-a4a5-277c0feec571",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4feda90-a683-47e1-8672-b25b758dc3f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aae3cce-56c6-42dd-a754-aecb0a413c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58558d5-1b69-4f9b-9712-6f118e9af486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df24854-a78c-4c4a-861a-62e07dc0b07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2e303a-5b5c-43cd-b2bf-852fbde33860",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40b66da-c637-4b9e-9639-528c528592e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6958066c-5d46-4daa-9cc7-ad9ee9a5d365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d2b638-2da8-485c-ae7a-cc76fc084cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ef9d2c-0970-465a-a639-617379a518f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c91a8bd-21f8-4b2f-ae3d-5c82d611e5c1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2170557b-a363-4ed2-b2c5-e3789ebd89bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c9d5790-f5d8-46ab-aa97-c426d333f295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405af96d-06b5-4c2b-a427-4f1e01c2de2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397ce39f-714b-4632-9c4b-6513f20f58c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00724ce-9c47-45f4-91ef-519be603a121",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7b55af-ef49-4a98-9a59-2f3628abf3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b01928e-9fa4-40f1-9044-88570dcf2ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd5a593-0d68-4b73-9f04-018212ed43f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e130776-d47e-4561-a0b8-38a062000ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bbb007-a218-4057-a875-32efac6a5051",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b26dc5-1e92-4a8d-af3e-2b4555bbdc53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257811b5-d688-4049-afa8-1f025b876a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec21740a-7361-45e4-a541-155d488401d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e92e6bd-49cf-47ba-8d53-47b4c171d3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5b0dbf-e202-40dd-9974-148042a5d1bb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c834f379-d8dd-4f23-8bd8-9f331404bb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ceabba-c61b-4f56-9278-68f8df310119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae11cd91-9bbf-4974-8ad0-07fa470efe29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e8cbf2-97ed-481c-a601-4fc8f29f143c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0d1ada-1a14-4d38-99e3-56661fe3c886",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bf2937-f722-467a-a24f-e9567434cb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608d22d1-e314-46a7-9de9-4f4a5f821f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ec2ae9-f556-49e6-8d5d-3c2e8fcb9c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545c87a0-d4d4-465e-8fd9-042df4871af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d63223-66b1-4da9-b9ba-652e3b30daa3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93d28f2-8ac1-4277-9ad4-fbf253aa53ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29452483-fe43-435a-937f-aa7320ba8f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae439a10-3a6c-4a00-9e89-379d9258147b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03de6e95-c967-4bfd-b836-a96241e683af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a52f134-2c49-474e-93ab-f2df425edcdb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbba7367-c25b-455b-aac1-5b8338ab5991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f99ce63-8db5-4b43-9a5e-659571ee4723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff3c191-d0b7-45d7-904a-e761239d2c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e36277-58aa-4fff-8bcb-474ed47cbc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539c602e-2c61-4b06-9c10-a90ddffeb889",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a38373-f720-43d1-add0-0939367fbc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1abec6d-6e77-4b38-a5b3-d2ddc1d8654b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d4ce84-c522-4b3b-8a9e-387ec586081c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbddb33-aded-4e92-b427-3004ff717b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a492e1b-3a7f-45e9-b51d-46bb378daa80",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36b8035-0a35-4905-b920-fe423f0c5787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbc8c60-3d96-4c94-b0a0-a26ce4dcd904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc3ce44-23de-4a12-828e-8f7b4458420d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cc01dd-2559-4e9d-95b6-491feab0aa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22813b34-1763-49c5-84d5-d220141be849",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46e2d84-6b6b-403c-a248-14382d12198b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afed4b6-7a03-4e61-9787-adbbd3d2b7d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acc0671-bf6b-4f64-aee5-5c43e0a5cbe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3db098-ac0d-43a1-9823-1ceaa30b0042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c123bbb-3571-4386-ab22-a62e4e1dadb3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc61690-6091-435f-a862-7f4a27c818b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14af828e-6719-47ea-a07f-45246e6d9489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b56581-9e99-4692-98bb-8f1f48412d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c114430-4b7b-4456-adf2-1139d5732825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d503d3-e86b-425a-bd27-8e9b1bd528d8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af04198-f9a6-44b8-a02c-498d9b8191ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3496a8e-17da-4034-b29f-680ff1fdd4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb40142-a5a6-4f92-a596-779d46763672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1aa959-62fc-4890-80b6-924dab039339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf96e314-6b5c-4816-bb7d-15dc0d5c7f89",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c204ea-f63f-493c-bb26-06a5759c3c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d6a290-c0c9-4877-8678-f89d7b64d981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2239f704-3554-49c1-9c11-e0c5474a1960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b09773-59c7-40f9-8cb8-aeeb32b6299d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f628983f-ccdb-45d7-aae9-db13fe8d1772",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95698ab-50f2-4524-9f26-286a81bde0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5e643b-2591-4da8-8b08-57cfe0f4a2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c6af78-7dd1-44fa-b0c7-6984d0ed0809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc6fca8-ddf3-4ebe-963f-2a3957bd8f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04246ef6-e074-4075-9f9e-c81d7e634685",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbc14b6-3933-4977-9882-442bafcd0f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14824c07-cf65-428d-a5af-f4f28c8acec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc19fe15-a8e8-4783-a094-523730e16f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90eb0007-b09f-49e4-bee9-c627af6620dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7fbe3b-7463-4d4d-bb78-5661ad276dc0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d84613f-e67e-4ab8-a9fd-03a9c01629dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541d25e7-1aa0-4170-83a3-c81b40292e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad361dc1-8a82-4540-b1f5-58b47ad46073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab299850-4ea1-4c53-b149-8a6b40edcb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dcc888-f1ab-4c30-93e2-be30462583c1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64057feb-8243-4b62-a9da-9a89b2d73a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f8674b-a86b-4e6e-ad06-b70d80a18472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f044ba-580b-4385-a982-ef0474b3e3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0077fe-7768-4576-9486-b21ed8689046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a9ebd4-4bd9-4f18-8abd-191b51f0052a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2305f2cc-328a-4819-a93c-bcbea531c316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1237366f-4424-4337-9622-989f25ab2f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3913c98d-92dd-4f8c-9d7d-d59e29dccb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bbc8cf-2e84-42c3-9a56-94469b3efa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7256fcd3-2a9c-4783-afb1-250188178667",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fe3566-9ee6-4893-8932-4b74b28f03a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecefa377-9940-4779-8e25-d9593ee590dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e030f3c2-f04b-4013-b0fa-74571bff51df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44df479-1563-4ad3-b866-8d3352099c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1067dcc1-93e9-4391-94c2-c957387e9c10",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5d6ffa-6273-4174-97b9-11889ad7eb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626002ce-29b1-44a7-952e-9d00eb528ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bdf92c-f6c1-497a-9c82-a66f20d9d355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353ae92e-0330-418e-bc53-cb67c4e123bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbc4cb6-f086-4429-b27b-2df1d69b18de",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d9151e-b871-4cd4-a846-84af45b31a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff740988-9103-49ef-8fa7-ca28e3ecb9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca29c3cb-d6db-4620-8bf2-02662964c0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639026e6-0f0f-404b-953c-4a35159f4de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1e6603-7631-4fe6-b190-76aab803cdb4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1445ea32-c8d1-4778-b51c-7d481a5d2adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19066f8f-f555-4e02-aebd-83a9bd63e634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c1da84-9cc1-48d1-8f7c-a29066f382b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9a17e4-6b1b-4943-b8a0-d951dd017650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83784f1-17ac-4d92-a020-56fc356407d9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1458a6-3197-4d7f-83ff-a18a9b11dcaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132537f4-f03d-46e4-85b8-8d21b742dfb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6260182-2809-414d-81de-34ebba73707a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490ca257-a70e-4eb5-b41b-3222c4511d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571cbe7a-580d-4e31-83f5-822d1a1ba41d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6599b5ac-a416-4fca-bff6-889831bce11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a44452d-45da-4976-b54e-1d6f8773438c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00fb86d-482a-440d-99d8-75f0ca54fc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b86666-68f3-48a8-b90d-174d46050847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029fb13c-8585-486d-84e1-5a165d601ca3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c42e84e-71a2-4a43-8581-c093dc07e8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28c7822-0636-4e70-93f8-4cebb7ce8111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e9d4ad-6efc-4c0e-a583-2c66163dfe4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffed0df2-7995-4b4e-bfce-a16d71231e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a5fbaa-c7fa-4675-a26f-b4788397948a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd78bb3-3567-4429-b318-25937523b08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8d8f8f-52f9-4035-9304-b5f0640b9534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c03caf8-df6c-466d-860c-6ba379ec4185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d97e77f-b36c-40bf-80b4-338309f92a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cc91fd-71fa-4940-a52a-1456250b1266",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775f3f88-037b-4577-b4e4-10789b98b389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7af489a-18b8-412c-8592-101feb524f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2aa19f-3e5b-4e04-bd7a-7613aa97a88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d275a857-e8f9-4f9c-b885-8f86fdec160f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827e5e90-cd38-4fd9-9604-83b3aa97a774",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414c0d31-7468-46a3-8a54-fc98c46b3d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5047efdd-b044-41d2-9d16-354709d43c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e06d8a-1fc3-40a0-a259-2c01a556b579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3bd571d-ae7a-4aba-8ac1-472878d4afe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5549e71d-6e2b-437c-9fff-dd7d68dbfa25",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a575e2-8521-436b-ad18-c84dc40bb9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cda3eb0-6630-47a6-8327-8ad7a5ce2ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9975aad-4e7e-4ad8-8df9-892a188f91dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ae6723-6642-4d19-94a6-47e2160d32ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10da9cc8-b13a-474e-8cbe-c80052ccdea8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef61e4b3-6116-41f0-b5df-9a771c595f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb8079f-90ef-49c7-834d-07835977943b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f378176-c72d-4f14-87dd-c883fa9dad52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e954bde-4dcc-4222-8f7a-753f811b87f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8debf0-9ac9-45ff-a2a2-5fd1fda28fbe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01cb5a8-1535-42ec-9496-94738ce60900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74352672-6b9f-42eb-877c-7bf505929665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76f72b8-6ea2-4777-abc6-ba621cb4c43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0fdd7d-ba61-46b6-848f-bcad5951c2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0310982-f735-486e-b599-3c1246b18a1b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3383119-ae2e-4e1a-b48a-b559226ae670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "751df534-106b-4709-b2e4-3d406c74454f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9427e316-a51c-429b-be2c-e8573ddc7a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a47cfe-7b86-4f3a-912e-43833cf9a487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a2d39f-8f8f-48c4-ad01-fdd9ede211d6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716aa5be-76e4-470f-a71e-42d1b341fa2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb110f29-06ec-42b0-83d6-f075db7d98c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb763eb-c830-4346-a10f-07a46ce08645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e28403-8e72-4554-a37d-e4afef5b3ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d8ffcc-2c8d-4c9b-b1b8-5641137e46fb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d50c6c-cc15-4f79-89df-675bf0fd2724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfff7b2d-17d5-4ab9-a5ab-c85ae11177cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc20333-056e-4832-b6a4-5e41283eb828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914efdb6-4d4d-45a0-81a3-f418ed8fa7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3753339-6b05-44ed-9c6c-c1aea1bc08f1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d20494-eb62-411b-85da-7fd36a7c4713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eff147b7-db4e-4289-adec-08729f3e9a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07673a30-b1fd-44d3-99b4-c17444ce3550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75827b0a-e83f-4b79-9d82-b77abcb50ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbb851e-fa9b-4d1a-9e2e-caa61d5a336f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96df6215-25f3-42b8-8f94-487aef346ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e415d4-3639-4651-8e86-c2965b87399d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77df20f-819c-42be-976b-3048ad9b0457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba63663-890b-4418-a52a-f9896516dcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac378b80-4a4a-4c11-a530-89f1f2c78a2e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1227bc13-a922-4f32-8da9-c12f67a0d148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf44c8e-792e-42c2-a746-6363869613d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bfaaed-9245-4461-8e8d-a20ed6af4d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec2cc5c-e2bd-431e-adf7-4e9588b3c402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2148fcaa-49a6-4bc0-9ed9-3ceb173925aa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4227efbf-3c0a-489a-bc6f-258906a82760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e3273e-6579-4280-b734-967e727eb808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb50506-6e38-4364-b68b-8c26585f291c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ddb325-0c2c-40f1-823c-5afa0a635d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac97bf3d-422f-4cd4-bf87-333ccb4e303d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a09aba1-8a05-4c21-9e36-cf53a812dff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c8a69a-4c65-4266-ae07-9670c6448b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4a1101-3938-48af-8f75-6dc84142a08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc794a7c-690c-489d-b612-2643c6a1fa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cf84ca-59d4-4ef9-ae3f-b1dbb806dfd6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd338fd-97ce-49df-900a-26707c6a6fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca50d8e-ec74-4a67-adea-e3773fe8efa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7983b027-471c-484d-8eae-43a76a74ef5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca751685-e6c1-45bc-bd1a-c1126582594d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507d024e-75bb-4445-939b-a72d42d5b639",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fae9eda-a920-47c0-b7d3-7d41671a4eb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd9989f-4d7b-42f4-a44d-599cd8b4c5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4a7e1c-9b3b-4b7b-8773-d4e637b0c097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646062e0-e469-43b4-a817-dcf4d0943ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c92ea9d-7237-4ee9-82f7-f39a5551a506",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bda6c1-2071-4d1c-9290-532efb70f67a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f285d96-47a4-4be0-82e0-68ab437692c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2e9dc3-1169-41af-a314-eed394e62cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9556a4-5fac-44d9-baba-e7152ecc8f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8e75bb-7424-451f-905a-43da0ff211c0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41045a1e-21de-4909-b050-6bb365360e03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd180ff6-d84a-4e78-b60f-8b9abfc49d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1f24ab-9fce-44df-9505-b597c6897336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14978628-2a83-4d78-821c-3ed4477482f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0251c8-c70e-4ccd-9cf6-175d92a9a19a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30b6c66-b2b8-4821-a70c-3e9d2b69e759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be1ed0b6-e67a-485d-81f8-f982a15987a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52de1c1-66ac-4b28-9115-d1dc2ff83c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebe0fef-ca60-4e10-8f38-e7cf73f6a0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a51642b-9aa6-4312-8da4-42e67e76cfdb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7d7bac-1e6b-47b6-8475-0d44295c5b88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8236d1ff-cb83-4e26-995c-07b23de9612b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878fef78-3ae8-4778-893b-3f7d823fcac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806d0bd8-1055-4cf4-a4d0-e4e06d5f28e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6373dd44-80da-4514-a7de-6db116c2477b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d598f1-30a7-4e6c-986e-f676c3567735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9c68e54-86ea-473c-8b60-87208032f0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc99de3-518f-4c96-9650-f613ffe54730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c77871e-791c-4080-a4ea-c7ec0e62cde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8de5cb-679e-4ed5-96f4-70283e5a1cfd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb7de29-f789-42e2-9864-46256a90bda0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a6b713-aa97-4fe3-b055-9c781bbfa66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ecc765-8a10-4461-9f09-0e943a932d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d225afdc-c306-4bd2-b7f7-159174f06663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cb2393-f6c2-417f-b5c5-dff857d014d7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61235132-90e0-46ea-a2d0-02ca3ae52f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdf8f3a6-410a-48c7-be0d-f5a5a145d196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6ab41a-621e-4c54-8e76-3302c07490df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65418ca4-1009-4d47-a564-af194f6a2c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6b2e61-ed62-4091-92ba-f831faeacc07",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7acfc8d-b7aa-4fc4-9ab3-9362f77c32db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11807fa-9553-4ae0-a67c-54897c4808bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfe9e95-c1f1-4550-9b86-c6a371fc2aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93778413-dda4-4b3f-ae28-505c5857055b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a8107e-1d67-44fd-aa76-39fbef2bce90",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189536eb-86a6-4a8e-aa3c-06c4fe87d037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04648377-df28-46ad-bb22-775505aea61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8535d257-2164-430d-855a-23732ecab8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481e2d6c-c3df-4318-8b52-bfc802e05695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f5b825-d807-41bc-a23f-a99df836c665",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f47d75-d146-4429-ac3b-33706b014635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b48dfbd-ffb9-4cdb-9e4a-5b48264df9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377172d2-1b03-4205-9e3c-89469ca520c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd2185c-782c-4c91-a768-1bc4bc015780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8468ba5f-6e01-4cbb-883c-911f3165d405",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1957cf-6c85-4196-90e7-de958d01d385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ebfff7-f962-4c83-92be-e2bf41094405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6481592b-e42b-4f3d-9a7f-717a651056c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019fbf99-fb1d-4fe8-a77d-a36262a9a53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7256d1ac-84f5-451a-820d-158012a731e3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d868561-be11-4415-9f76-7c67b318c909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99701e3e-f83f-499d-b125-daf743b373b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5cdfde-32d4-4c9b-b854-8854b5d3b566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cc7649-f4e1-422a-8991-d14f0d8fd60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fea3b91-fff0-4bdd-a17f-ee45ca60974c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6badfa2e-140e-4524-97af-6c3f9468ef7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a82ce37-cd6e-4988-919c-ffa4cbc6e07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757ed890-c51f-421c-a2a0-e6f2afdb387f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a980c18-80ba-4783-a334-d3f4aa54a0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733f2be5-bb7f-4df8-9e60-5ab0fc29d9cf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48fe45c-8852-4e14-bb93-381f1f0bf659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6200407f-c512-4925-b345-af39734feb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac87d16-e874-426e-bc3e-199210a03193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae6ee1b-a5bf-445b-a82d-d88fd222f0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50baff6-25c3-4832-a74d-ba54e3dbe630",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0268f9-704a-4d35-8f1a-0b5f42029b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cec7fe8b-429e-442c-9d41-acc68dea38fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13da1157-6080-4b05-a41c-38a6e573657a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41af186-4e62-43ac-ac1d-4d09192ea753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce7250f-1e88-433d-ab86-0b20363daeac",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981671ec-dd13-4a53-af3a-cf0856ca0243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e847a7e-2aaf-4976-9fbf-348c7521a1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03db778c-2f70-45ac-b4c3-b4d54cedf126",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fe6c1d-e746-4f11-b0eb-6f8e88d95a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9644a42b-c332-40a7-9eb9-ff3a12432a8e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0299cf5-efe8-46a6-8add-b246eb0cd50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7b9b001-62f3-491e-9f26-74a5f6363bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee9c54b-f024-4ead-b920-f4041730baf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734fc329-f7c0-4905-ba0b-fedf359d37ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f46ed8-281f-45fb-92dc-4c59bda6afb3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f3eece-5a5f-4642-a724-39f4717d3b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d82c712-61a7-46f0-93f2-fee7fbfeb642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24e0e3a-cec9-454b-8630-fae8699685b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f69b7eb-ab79-49a8-af03-86498bc9adbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27370c1-7283-4ef6-8fce-dff40782f8ae",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc4f780-5521-443d-8807-7af6ae069c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "626cc640-3019-44c4-9745-ccfbc1799727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabfb69d-d803-415d-bfe0-049f12e939ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24876eb-458c-49da-bcfc-5115230479e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fd2394-2dda-4669-8d5b-65a6e11dca3c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfadecd-7fda-4bcf-b8ff-41c81131720b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7969d40-5414-44aa-bdbb-247b51912734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edecb607-2f87-485b-b27f-61b35aeaa0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e43c66f-9ead-4d61-bbaf-6eb832344e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54707e4-0e70-4c6d-acb0-bb5b1948872c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d49f9c2-0a4e-4e69-96f7-585d1196d948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d370a7e-df4c-451b-89a8-80b0ae04d1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63829ab3-b05f-4ee1-ac18-9bc7cc840fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded28871-0470-4b21-9ff4-85001e436f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b9087d-a83b-4645-adba-a2d3019515ba",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bac0b0b-9050-4748-90a0-8989db4c6cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c30ca46-b183-4779-a770-4b19576e5b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235a669f-0d1d-4d70-8145-bf415f5a7cac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f4d021-4d82-44d3-b120-c458f6d96f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76eca42-da04-414b-8b27-6188d4a1cd0b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1861a1-2dce-4298-bdbe-385a343656f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "776f18a4-3096-4f2c-a7a2-71b2613575d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bafd6f-17e9-4e22-a4bb-48e1140baa77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2841bb76-673f-45c5-8ab1-85063194e8ea"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dce84f8-7d1e-4b4c-85ce-37f5bf1ffa62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6ab0af8-abc3-4a07-80a9-b50a029da437"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e68bab17-3059-4536-807f-54d8797e0552",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f40e9bd0-7d8d-43cf-99bf-e5203550382b"
                    }
                  }
                ]
              },
              {
                "id": "1f51e8dc-c278-47fe-b5c6-04d3d606c5c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5ff18e9-59da-4ae7-bbd6-e29f80ce1067",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbee0723-480e-4123-81e9-0aeb18a7d165",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9cecf3f3-442a-4346-a7ff-3e6cb91fbf16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669d4b71-b73c-4e25-a534-c7ca9aaff03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13c9cf76-9b6e-4559-83dd-11bf6e6bc412"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68443c0c-58ea-4a2b-95b7-70f860cbc22d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50d3ec4d-8f2d-4464-a251-a043dfdf3a2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed255fd4-000d-40b3-bf2c-02aff66c6dca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "521751f9-9f84-4669-86d8-1a19e6f39778"
                    }
                  }
                ]
              },
              {
                "id": "832e55d1-459c-4a63-b2b9-990e4c6c9950",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fcee4f61-0200-4f8d-b7a8-c48779c05491",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6efa67e-f992-4d62-ac87-cd2b7045396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b93682b5-2c90-4ed2-bfb8-025c83d2ec9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abd949d-e338-4d51-a65a-80f2bff2fb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8e4a04-a89e-4579-a92b-daea761aa4ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3c5704e9-89ec-4a65-9783-868d07c28d72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "548b6c32-a43b-4d34-9029-08979a4ff9b6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb470c7d-ed08-4ccf-ac8f-668531385981",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2aa52fe1-6323-4630-8a2b-89400bb7d4a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8741a37f-bf86-4a1d-9b38-307ec2134e6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc62a73e-b1fb-4da9-8a8f-e645fa4a54e9"
                    }
                  }
                ]
              },
              {
                "id": "0914a993-ba16-48e5-8b0c-e5047a33771c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4f39155-bbfa-484e-9536-adf2d54652e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f209d0bf-c370-4434-9276-1307f63474d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7d8e0eb-451c-4e91-a912-d81183affbc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abba61a2-ee3b-441d-b945-5e567ea08729"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14e3c02a-b623-4018-9d8e-957eafe2c0fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "233aba14-3aad-49b1-8957-f22a049a6576"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "501a1096-3cc4-4b67-a858-1c7134bd4b1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41059239-ddb8-4a62-b952-eb4c50bfb865"
            }
          }
        ]
      },
      {
        "id": "f06c1c30-1325-417f-846d-3bd4fe17182b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1a8f57d6-14be-4604-a210-c4a8207d4122",
            "name": "Negative Testing",
            "item": [
              {
                "id": "196cb4cd-0c42-4ee9-8dd0-54ac4c8f4f16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64a1b915-53af-4122-bec0-75d481fc6729",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c4ed0a-e089-4f86-b9d5-f76eabfe5c1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "160e1f9a-1ddd-48d3-bfef-508965d4211e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31768528-b249-4d76-9a46-3dd28eddc20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfc377c8-0522-4351-b830-3981055a9f53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "576b155f-d0ac-4ed3-b2c8-6d5691a5710a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5466515-0c44-4631-a24e-1caaab5998cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abaaae60-5089-4bfd-a190-b291e8f9a0b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7e6024d-3c66-413e-96b5-eea1d1536d3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20d62ab8-ee8a-4108-9283-6ece485efab3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c22126e6-312c-411f-8661-023788b8f4b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1606b74-f534-42cc-a5f7-cbe6706ca002",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3417041e-eeee-44a3-9fc5-2b0acc727be6"
            }
          }
        ]
      },
      {
        "id": "e1a3ef8c-ee74-43e2-a751-cd8aa48b2116",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "21d81447-9b3e-4bac-8191-a53d5c21134b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de9f3bec-895f-498e-a318-fc7a9d3d4826",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8b8aea1-7776-481b-9cb4-1899ab0ac75a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98ce42b-eba8-42ff-b59a-cf8348d77889",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d46254-7b31-4d9a-98ae-d5aedeb6ca03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb5e6a0-b54a-4333-9e5c-b40739c42d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1046c71-e67d-480e-86f3-41d73f48efda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ac46765-85d6-4348-9f40-999eb4a94d30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4085395-eb2a-4d26-a07e-ec2fd50a988c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07164315-5a6e-4f0f-9a58-db959968d4e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41fb1d67-46fb-4267-85e0-2e76a6452582"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "222fb7af-2943-43d4-bdf1-a0664c6f5501",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c746eb6e-2971-415e-a205-e0e3a55c950a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c019b21-5dc6-4368-9f18-266f75cfb62e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4cd4ef0-f579-4d7a-be69-1d824864c096"
            }
          }
        ]
      },
      {
        "id": "35855e91-68a7-4e6a-af4e-99b002611090",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e8b55b79-6c9f-4b69-9bda-d67399867576",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d9dfe02-d647-4ca0-bcb6-672806fe7d64",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c268182-0769-4b4c-89d6-1f55f9d4dd16",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e45790-cffe-48c8-85cd-6df2da67bcb9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9a762d5-fbc1-48dc-bdf5-5381c7d71f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619abef9-12c3-4a19-8b24-80027e02962f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "746411ec-4b8d-48aa-8b46-9267c0a72d57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a9b67b7-0d32-4fb2-b50f-f328121ccd29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5691e283-0455-45b8-b3b8-c1b716d3750d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e4777a7-b1cd-4ee1-a6cd-0d5a1e5c19c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d8083c0-f175-4e72-aa85-a8f8f59f953e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8cfa336-3e89-4b48-bc32-4d4dad682eb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fac02dfd-506a-40cc-8aa8-d4ebd3e9ccc1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7f10f6f-f64f-45e5-9ff2-e5e5f14ef92a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e65f376c-fae8-4908-98c6-7d5d34e85fe3"
            }
          }
        ]
      },
      {
        "id": "484dff53-b6a4-477b-8b27-e500636a5a81",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbe42206-1c34-4adf-8461-44e60934fcce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d6d1389-a1dc-48ba-b0bc-890527d17c0b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fb04a6d0-4e80-4e18-8c2e-9462fe6461f4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e4f18f0-69e6-458d-9ec3-171f3dd41bcd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa59bc5f-cc71-4091-be7c-4237ea9eeb47",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 53.512280701754385,
      "responseMin": 20,
      "responseMax": 311,
      "responseSd": 22.754618348851942,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708043615781,
      "completed": 1708043640003
    },
    "executions": [
      {
        "id": "57e641a5-23cb-4465-a4ae-8f64b186c850",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f268939d-d249-483e-bffd-ec06c7512d3a",
          "httpRequestId": "8adabc1c-64c4-4118-b69c-c0d04272e373"
        },
        "item": {
          "id": "57e641a5-23cb-4465-a4ae-8f64b186c850",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "efee763a-ea7b-4c68-a8d4-4a906ec4fabc",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 0
        }
      },
      {
        "id": "c79234f1-a252-4fab-bda5-386fea48777f",
        "cursor": {
          "ref": "7aa7116b-ac12-4d68-bc6b-063c91ea645b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c5aed001-071c-4980-9f50-6d044f17e281"
        },
        "item": {
          "id": "c79234f1-a252-4fab-bda5-386fea48777f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "726812ee-ecf1-494e-af91-554ba0410267",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "9068d55d-6847-4933-8198-f29363db0b35",
        "cursor": {
          "ref": "8dc50d84-b24e-4774-9cdf-6bc56d4043c1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bc312636-5e13-4e83-9fd7-5319d9d38a41"
        },
        "item": {
          "id": "9068d55d-6847-4933-8198-f29363db0b35",
          "name": "did_json"
        },
        "response": {
          "id": "15c787da-93d7-4345-911e-be61653ce256",
          "status": "OK",
          "code": 200,
          "responseTime": 194,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4f467e-b91d-4678-8a6a-01a464dd4c9c",
        "cursor": {
          "ref": "8e1dcbec-ee47-4d52-89ac-0f0527f36891",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9081517c-43f0-4d63-957e-dcf0d2433ddc"
        },
        "item": {
          "id": "6a4f467e-b91d-4678-8a6a-01a464dd4c9c",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d6285fa-01f9-4cac-b3cd-4e33fcbe1a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4f467e-b91d-4678-8a6a-01a464dd4c9c",
        "cursor": {
          "ref": "8e1dcbec-ee47-4d52-89ac-0f0527f36891",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9081517c-43f0-4d63-957e-dcf0d2433ddc"
        },
        "item": {
          "id": "6a4f467e-b91d-4678-8a6a-01a464dd4c9c",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d6285fa-01f9-4cac-b3cd-4e33fcbe1a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aea1200-646a-4ef6-85c5-6f9c85cb7e70",
        "cursor": {
          "ref": "3a8c96de-693c-4bdf-94a1-55ac28176c7b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "62e05894-ba1d-450b-b503-612b8bbe072e"
        },
        "item": {
          "id": "8aea1200-646a-4ef6-85c5-6f9c85cb7e70",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a82e6b84-4786-4e75-ad7d-607d879d0bf8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a60402-f09a-4828-b3c3-2195206a6e25",
        "cursor": {
          "ref": "7910202b-4074-42ef-8e00-0c29e9003f3e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "65a75310-2dc2-4b1f-a895-c38e32e873f5"
        },
        "item": {
          "id": "20a60402-f09a-4828-b3c3-2195206a6e25",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3c390861-1857-4ee4-a86a-69c8f97ee683",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71466a22-7c92-4a5a-8597-fe6843380e46",
        "cursor": {
          "ref": "96d74f00-ccbf-44ba-b16e-e25d086828de",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9933f381-66c2-422d-af10-1fdf2a126186"
        },
        "item": {
          "id": "71466a22-7c92-4a5a-8597-fe6843380e46",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6653e160-bdc4-47b9-a3a1-a844988668d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c78394-86ed-4d7a-93b4-08512d7f8b75",
        "cursor": {
          "ref": "4a359015-935f-4860-9058-4861ab963706",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8145496b-b428-4feb-9ce6-ee120e73546e"
        },
        "item": {
          "id": "f1c78394-86ed-4d7a-93b4-08512d7f8b75",
          "name": "identifiers"
        },
        "response": {
          "id": "ac400a08-14f9-46b8-ba8a-bd5e7063257b",
          "status": "OK",
          "code": 200,
          "responseTime": 121,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044427e9-789e-4e2f-bd25-4bef4fd65eda",
        "cursor": {
          "ref": "2063fdd6-c9a7-4f9c-90e3-b23409026e48",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1dbc0c61-8fc4-4730-8285-f26b28e2a391"
        },
        "item": {
          "id": "044427e9-789e-4e2f-bd25-4bef4fd65eda",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4589ae84-680c-4bc8-bf8f-256895aac6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765adacb-ee7f-4bc6-a459-8db481346395",
        "cursor": {
          "ref": "2813f12f-98b0-404d-9286-2b7a5f9442b3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3e09aee8-4090-4a59-af3e-3438155a91d9"
        },
        "item": {
          "id": "765adacb-ee7f-4bc6-a459-8db481346395",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "60a58ce1-2dc4-4534-87ea-a879f0d06ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6457380b-47f7-4f4b-9dd5-5e37c39285aa",
        "cursor": {
          "ref": "9cfe14d2-432a-4721-a399-5d21eea2d64d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "02edbad3-d15e-43b6-8adb-ad48c2d61820"
        },
        "item": {
          "id": "6457380b-47f7-4f4b-9dd5-5e37c39285aa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e6971562-336a-4c39-8ecc-4116a1f3777c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0751f01d-f4cd-4a07-94d6-9a81a974b35b",
        "cursor": {
          "ref": "b89d2a41-b364-4242-98e3-e4f027d3f2cc",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "76417a0e-3303-41ad-82c8-87135a36f34e"
        },
        "item": {
          "id": "0751f01d-f4cd-4a07-94d6-9a81a974b35b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2b52ed5d-df93-4718-bce5-c5e1f407840f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72aa67e-2a65-4735-b981-ad6075b3ad9d",
        "cursor": {
          "ref": "9c861031-afda-4207-8bb0-64a2c52c4ae9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "54bf57da-d667-4e36-a405-f46c85963a8e"
        },
        "item": {
          "id": "b72aa67e-2a65-4735-b981-ad6075b3ad9d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "74dc8fd5-d694-40e5-887b-9efc3b939f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d267d8-96d6-4294-aa2d-ae0650d076c5",
        "cursor": {
          "ref": "5f618d71-1524-486e-8cba-8743a8f3ae54",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0da64beb-7da5-4656-b9e3-9264c91bf44e"
        },
        "item": {
          "id": "05d267d8-96d6-4294-aa2d-ae0650d076c5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "971f4a60-0021-4893-be29-442d13b53d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc01a1bf-70ea-46fc-8125-43e405c2c87e",
        "cursor": {
          "ref": "51837aee-0c3c-4571-9039-69ee202e2866",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1d668859-b9d2-4b2a-a739-25760e79f300"
        },
        "item": {
          "id": "cc01a1bf-70ea-46fc-8125-43e405c2c87e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8b7154aa-8e71-4c40-a17c-22a3791b8253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d074f971-14d3-44f8-babc-ca909956ad92",
        "cursor": {
          "ref": "624ee53e-e172-46a9-8f8a-965274cd0bf2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7d242e04-d22d-4f24-9c95-0996a2a2d604"
        },
        "item": {
          "id": "d074f971-14d3-44f8-babc-ca909956ad92",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0b1563d5-a06b-489b-8b48-3fcc55c8af1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55039324-4cc8-4389-9fc3-c09871f74d2d",
        "cursor": {
          "ref": "a194a5ee-b160-4803-8594-5a709e92c807",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "06633a66-2822-4f4e-b5c2-61860d09efac"
        },
        "item": {
          "id": "55039324-4cc8-4389-9fc3-c09871f74d2d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "954ceeb7-6fd7-4990-a50d-789d4c0fce94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad87742-3a22-46a3-a8fb-55dc7753fb0b",
        "cursor": {
          "ref": "2e671a0d-fe13-42dc-be68-e4d88c8a06da",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "99625393-ef94-45e5-8480-a8dfcb2180c0"
        },
        "item": {
          "id": "1ad87742-3a22-46a3-a8fb-55dc7753fb0b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "87a7677a-a7c8-4c27-b99e-5566e8957d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0756dfe2-8ae5-422b-bcb9-484be53712d0",
        "cursor": {
          "ref": "ee660720-e465-435a-94ce-85689ec0aa67",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bd3f69f1-e688-4192-bf99-0bb9da70ffd1"
        },
        "item": {
          "id": "0756dfe2-8ae5-422b-bcb9-484be53712d0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b56c1d4d-926c-4572-98fa-a255794ce7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f7b0a8-4952-4813-92fe-984815b73c46",
        "cursor": {
          "ref": "b806cedb-b1ee-4478-9527-ef579ff8b60a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "74f57e2c-ab98-44df-95ab-16001d4779a6"
        },
        "item": {
          "id": "d4f7b0a8-4952-4813-92fe-984815b73c46",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2b9a756c-5cda-45da-94c7-b3280b42d02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ca0647-24c2-4527-a02f-c1efa037c536",
        "cursor": {
          "ref": "bb99371c-d210-49e4-8961-2a38999fdfc1",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d5f78622-455b-47b3-889a-f54c507cf779"
        },
        "item": {
          "id": "f3ca0647-24c2-4527-a02f-c1efa037c536",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2b051e9a-f371-426b-8f75-4eebc5bea41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2156cf01-57a8-4ae9-adcd-988aa9f17410",
        "cursor": {
          "ref": "57aff190-7692-4d2c-935e-f25cb8409e53",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "47da2b61-554b-4a9d-af5f-3c946e91688f"
        },
        "item": {
          "id": "2156cf01-57a8-4ae9-adcd-988aa9f17410",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "24091f2d-e0a0-4115-8b24-7fb8c36469c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b164c2-4671-4c95-86eb-b48aa2a07496",
        "cursor": {
          "ref": "c0de2d6a-bbbe-4549-afbe-07792d84018c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cdc83d99-7f48-4c52-a93c-c8c811b05b4f"
        },
        "item": {
          "id": "47b164c2-4671-4c95-86eb-b48aa2a07496",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3706b644-241b-417b-9340-42f2aeadd8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62597a98-13e8-4759-b7fc-8ca4eaeb2ed2",
        "cursor": {
          "ref": "bc61af0d-1a8e-4fd4-8f87-dce24fff18a8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9b65e6af-96c2-4d38-8b29-242ab971f8b6"
        },
        "item": {
          "id": "62597a98-13e8-4759-b7fc-8ca4eaeb2ed2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8644e8a1-6fe0-461c-bdd8-5351a5b13abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5912158-f386-429d-a5f4-a674d4b71ec5",
        "cursor": {
          "ref": "5fe54309-c5e7-46a4-a7e0-f60337746035",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "46b14ed0-c200-4990-b181-5816e589faa6"
        },
        "item": {
          "id": "e5912158-f386-429d-a5f4-a674d4b71ec5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "208e8310-8de4-4be8-9d4b-e26ec989b426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b981332-b8d9-43c7-998a-44007dab411d",
        "cursor": {
          "ref": "b40de337-b6cf-49b7-b98f-cc65b65cd150",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3eec8128-da38-4c48-b6bf-42a704e7cc12"
        },
        "item": {
          "id": "4b981332-b8d9-43c7-998a-44007dab411d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ec3a0001-fd3d-4096-b148-d0a3427e2aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304c878e-2ed3-4bb3-8ba9-7f500216fe2c",
        "cursor": {
          "ref": "986960a0-d34e-40ed-86f9-2628f8bad771",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5165540a-2cca-48ce-a08c-b370e5e48179"
        },
        "item": {
          "id": "304c878e-2ed3-4bb3-8ba9-7f500216fe2c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "20c43c5f-cad0-43d7-bb9f-87a175d36fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fd5837-e382-486a-80b3-47589594b464",
        "cursor": {
          "ref": "30db4201-0a47-402b-a739-5b1309cb860c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "36ed6c9f-fd60-4355-bfa1-b25daad267ce"
        },
        "item": {
          "id": "d3fd5837-e382-486a-80b3-47589594b464",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d98ebfe0-ff07-472a-b966-071ca8b33bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae74679-7924-48d6-ae6f-47fd1f328e5f",
        "cursor": {
          "ref": "ed3f2bc3-a5c0-4fd7-8950-b85d6b7a439c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a252ff62-78b1-42b4-b983-43a5dfb58de4"
        },
        "item": {
          "id": "8ae74679-7924-48d6-ae6f-47fd1f328e5f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fd5bdba2-f449-4b66-bf86-087a06fc40cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8e7530-60f4-4266-a83d-821549a90ab6",
        "cursor": {
          "ref": "2ca84e3d-3938-46af-9b97-7a6eadbcf76e",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "66e48fe7-bd73-467b-9509-bb50172cf317"
        },
        "item": {
          "id": "0d8e7530-60f4-4266-a83d-821549a90ab6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a03aaa1c-e457-4517-9344-6e7f097f4c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f1d856-fcbb-4ea0-aef5-c9289419bbad",
        "cursor": {
          "ref": "981408fd-d660-4fab-8335-391df3e9e580",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1b5b3370-456e-4d27-83e7-ea772422c537"
        },
        "item": {
          "id": "10f1d856-fcbb-4ea0-aef5-c9289419bbad",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b7c74e28-46b6-470a-a029-5399bfdae894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c1678f-8a09-4eb2-8404-6b20e931dbc3",
        "cursor": {
          "ref": "5cb16548-2577-4474-9b77-6458af56b571",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a0fa8282-6c8e-4432-941f-38c588eb95e6"
        },
        "item": {
          "id": "08c1678f-8a09-4eb2-8404-6b20e931dbc3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d7bbfffc-96a0-4de8-ab24-a42652a11215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1396701f-acdb-449f-a799-4fd12c44f453",
        "cursor": {
          "ref": "22a866ae-9cd3-408d-97ca-6dcef00e0455",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fe81d529-b495-474d-8f7f-c3e1d9adf92f"
        },
        "item": {
          "id": "1396701f-acdb-449f-a799-4fd12c44f453",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "163da08f-a765-4443-a777-c68c1aa70dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52edbea-5ba6-4afc-a206-fff0a752da80",
        "cursor": {
          "ref": "47b342bf-e80f-4a55-9d83-9593002393eb",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "31de307c-12a6-4def-b7bd-15f39f08c12e"
        },
        "item": {
          "id": "d52edbea-5ba6-4afc-a206-fff0a752da80",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1f957d71-c1ca-41c9-a25f-30ecdda6786b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc565dc-e0bb-427e-bdd3-9bb454f81998",
        "cursor": {
          "ref": "8bfd386e-aeec-4147-a4ce-1ecbd5b51462",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e78635e2-5754-4328-a6a4-0b1d2702a5a8"
        },
        "item": {
          "id": "0cc565dc-e0bb-427e-bdd3-9bb454f81998",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a404713a-9b3b-4446-8cd8-852c893f3ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0d60ca-2845-49be-af9f-ea86c3689d9a",
        "cursor": {
          "ref": "d6d0ab9d-fa64-4b88-a7ec-b9fa57679339",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ec5c6253-0801-49cf-af11-c12ac680cdb7"
        },
        "item": {
          "id": "8e0d60ca-2845-49be-af9f-ea86c3689d9a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0a12ff91-2460-44a1-89b2-9cc8f4e6e8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82134f8-c0ba-4464-a980-96174b76e5a5",
        "cursor": {
          "ref": "2212aa53-df2f-49f9-9c95-e3d98bc43f50",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "86b61900-4648-4e46-b703-565a10ab7645"
        },
        "item": {
          "id": "e82134f8-c0ba-4464-a980-96174b76e5a5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7a7cef62-b8b5-420a-878b-9b1bfbf53f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4a10a3-6a96-42ec-aae3-8e7b9cbe33ad",
        "cursor": {
          "ref": "15c60690-c8f2-419f-bc13-9a6e57be5b0c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "88f78d1d-20dd-490b-966b-538b7b75aa07"
        },
        "item": {
          "id": "fd4a10a3-6a96-42ec-aae3-8e7b9cbe33ad",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "01fa3e51-922d-437d-8b16-3396c7d3df9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13638b91-b89d-4f1d-98ab-c950b8696a80",
        "cursor": {
          "ref": "4db1e890-caf9-4528-9777-96a97c31fc86",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "418c387e-92b1-4aac-af42-80843b3ddb16"
        },
        "item": {
          "id": "13638b91-b89d-4f1d-98ab-c950b8696a80",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4d4367db-cb06-4d54-8ab1-458469117e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243eaaed-a596-4b56-94ac-c3e5f58fe774",
        "cursor": {
          "ref": "4e3a40ad-01a3-48ed-9811-5afde32862d7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7eddccb3-ff90-45a5-a653-385182adbff6"
        },
        "item": {
          "id": "243eaaed-a596-4b56-94ac-c3e5f58fe774",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2cc8be17-1daa-4168-9059-844682c96b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaf7739-168e-4c9a-96dc-5e55840020b1",
        "cursor": {
          "ref": "19ee6308-96b4-4b39-b89d-c9ff4fb084cf",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a00d410d-26bc-4499-9386-531a809bcc3e"
        },
        "item": {
          "id": "acaf7739-168e-4c9a-96dc-5e55840020b1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e1f2ca89-60db-4d8c-9caf-78ad16b0e035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee3ac05-1f71-4476-a794-dc271ecae1f5",
        "cursor": {
          "ref": "4543d448-b544-4426-b0ea-fd8706923a60",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cb84fee3-2c15-4763-b2ba-c79983d443eb"
        },
        "item": {
          "id": "eee3ac05-1f71-4476-a794-dc271ecae1f5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f47a6f9b-475a-47b0-9baf-f944c60179f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29906f0a-fb7c-484a-818d-bb4b80ec0aad",
        "cursor": {
          "ref": "ff8dcf81-ff2a-4cbe-bf6a-b76629e3b35c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8f15f2e2-590a-4611-9b8a-e44a1ff7b04e"
        },
        "item": {
          "id": "29906f0a-fb7c-484a-818d-bb4b80ec0aad",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "550a1fcc-b29c-4d70-818c-5aacbabfc8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01eb92c-c1e9-4624-ae2c-e485260d4996",
        "cursor": {
          "ref": "8c2207ac-71b3-4555-9a8d-ed85211480ee",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7eed7cd0-a940-4a0d-8184-6ff042c11c40"
        },
        "item": {
          "id": "f01eb92c-c1e9-4624-ae2c-e485260d4996",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a611c783-8f04-4cde-bf67-4ed4cc2454ef",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8d9ef2-0a05-4ecf-9901-23b9fbf407c3",
        "cursor": {
          "ref": "33cce368-4456-49ab-8366-0a6a0c7de1fa",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aa34163a-7733-435b-ba6a-269ecf86c665"
        },
        "item": {
          "id": "3e8d9ef2-0a05-4ecf-9901-23b9fbf407c3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "79af0adb-31b3-4e12-99e9-b4d5e80489f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0960ef88-4bdb-4ac3-adf3-70a9ce308524",
        "cursor": {
          "ref": "8c6a8ef6-a474-4fa3-aab5-480e98e6c99f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "da4601bc-901f-4587-be5e-d2689fbec719"
        },
        "item": {
          "id": "0960ef88-4bdb-4ac3-adf3-70a9ce308524",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1ec7e71e-8f81-49ac-ae11-77f15b7b6da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb74c3e8-8d73-468f-be19-60018d733139",
        "cursor": {
          "ref": "e6580c12-bfdf-4474-b491-fd73a55c83a2",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eeaaa282-0ded-4884-b13d-d4aeecdcdbf3"
        },
        "item": {
          "id": "bb74c3e8-8d73-468f-be19-60018d733139",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0cd1a38a-86a4-4d08-aa2d-96190481157a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a123633-b6df-4adf-a999-f16501186fb0",
        "cursor": {
          "ref": "0462219e-eedb-4e67-88c2-2da796fd91b8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "404f567f-2ca1-4e6d-a335-fedcca125e52"
        },
        "item": {
          "id": "3a123633-b6df-4adf-a999-f16501186fb0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a7b8f932-4fa6-43b1-acf9-5a7248e86526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423517b5-5b9d-4066-9b52-2c297b14c8cf",
        "cursor": {
          "ref": "f6537c19-5fd4-4d82-ae7b-6fc3f1b17151",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d3785ef3-f9d7-405f-a331-a4cd51895ada"
        },
        "item": {
          "id": "423517b5-5b9d-4066-9b52-2c297b14c8cf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8fb95cc7-7c77-47f9-89aa-6459cfbabdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33f7681-6ca9-4b37-8df7-18348d429800",
        "cursor": {
          "ref": "7a798eb5-6bd6-48eb-948f-03ab34179253",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8e2f7fc1-db5f-4d3c-8f05-d93480471024"
        },
        "item": {
          "id": "e33f7681-6ca9-4b37-8df7-18348d429800",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c90c4a79-fd0e-4ea2-af00-b034e2965583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221df756-e36e-45e0-862a-717ace99cc53",
        "cursor": {
          "ref": "b92088c4-6631-4177-9fe6-7c9f0821c524",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d2776a9e-3ce7-4724-b778-2ef07ffd9fa5"
        },
        "item": {
          "id": "221df756-e36e-45e0-862a-717ace99cc53",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6eca1806-23a8-43fe-a997-7a58e7513123",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 70,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a39de7f-e85a-4448-b9bf-e8fd225df59a",
        "cursor": {
          "ref": "f47f7ae4-aa36-4c33-86c4-26482abee777",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0cb8d7ee-1941-445a-a55e-3f66e780e113"
        },
        "item": {
          "id": "7a39de7f-e85a-4448-b9bf-e8fd225df59a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f158f795-6415-4d4a-b6eb-7c145b2e8d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045116cb-a90a-4242-8f38-e2b9c6676ac5",
        "cursor": {
          "ref": "765504ea-0fc6-4dd0-bd1e-d92b750b3d9b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1ec4a617-8234-43f6-8e81-a3595fc13354"
        },
        "item": {
          "id": "045116cb-a90a-4242-8f38-e2b9c6676ac5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae5541a0-1720-4917-84ba-1cb2a9170aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd595556-a2ba-461a-b3a9-de55e6fc37d7",
        "cursor": {
          "ref": "7746099e-f7d6-4365-95f6-647f2f761037",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e0bf7795-8e93-473e-b334-5e8c3b78c977"
        },
        "item": {
          "id": "bd595556-a2ba-461a-b3a9-de55e6fc37d7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c6818ce4-3bd2-4e61-811a-16284a96e21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a87b233-2294-4547-8be1-4bb3be309064",
        "cursor": {
          "ref": "3cdb9158-94f4-4a07-986c-b1176e336e42",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1ad15b99-a048-4740-9e9b-9b5ae5b6e5b8"
        },
        "item": {
          "id": "4a87b233-2294-4547-8be1-4bb3be309064",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "98c3b8bb-bb07-420d-93b2-7be4874d5699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59ba599-292f-4021-b5c5-17268f90917b",
        "cursor": {
          "ref": "017087dd-2c59-4492-bc68-debb0cd1c035",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "decff0af-f419-411d-b726-310642fbc49f"
        },
        "item": {
          "id": "c59ba599-292f-4021-b5c5-17268f90917b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "20376ac1-5d72-4b39-a672-a9bb95e7101f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37db3191-d74d-457f-be12-7ae31cccabd5",
        "cursor": {
          "ref": "cb04a018-f705-4c7e-a43b-00194a723881",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "79644a1b-b330-43c0-9941-ea7bdf766ad3"
        },
        "item": {
          "id": "37db3191-d74d-457f-be12-7ae31cccabd5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a5d64c90-9739-4952-a2e9-d5420609c831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288d8e71-340e-44a6-ac76-64e58460d4c4",
        "cursor": {
          "ref": "25bce575-6801-4508-90cc-81b9cd17e352",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5e02862d-b9af-48a8-9ee4-65d7a475bb90"
        },
        "item": {
          "id": "288d8e71-340e-44a6-ac76-64e58460d4c4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b8d09429-4d4c-437c-bb22-53923ac59794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9037a5e-c3b4-4a07-a935-08ff1b36677b",
        "cursor": {
          "ref": "4025549e-702f-45ef-8c4f-92cf0877c58c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "467ac85f-5a99-4afb-92e6-baff50aaa7de"
        },
        "item": {
          "id": "d9037a5e-c3b4-4a07-a935-08ff1b36677b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "74cc309f-5a54-4659-a71b-2e35822e50f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95235b56-b8dd-48ee-b9de-dc193f927d7c",
        "cursor": {
          "ref": "d1f8e25a-3c69-459e-9710-39112d03e274",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e9ab133d-f9a0-4617-9288-038c15e6c16e"
        },
        "item": {
          "id": "95235b56-b8dd-48ee-b9de-dc193f927d7c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "735dea2d-f062-4114-8f1d-88fcd9ec1e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f40063-85de-4e5a-a8e0-c149f39913bd",
        "cursor": {
          "ref": "3c00fb51-8361-4c68-8512-4f578675767f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f5c26c80-eec4-42e3-93e9-e04984616ac8"
        },
        "item": {
          "id": "a0f40063-85de-4e5a-a8e0-c149f39913bd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "86a10395-4962-4ca7-8d4c-3b7a81b31774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ca1c79-582f-4aad-add5-0c9e7eda5a2a",
        "cursor": {
          "ref": "4b57100a-7f3e-4e88-9380-0a6cb2c0ba74",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b227e523-e1a1-4282-b67a-e1e14b194a42"
        },
        "item": {
          "id": "32ca1c79-582f-4aad-add5-0c9e7eda5a2a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0e792bf8-75e6-4414-9661-e727da25656a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d38e2a-f541-4b82-b5d5-2c6111fc8dcf",
        "cursor": {
          "ref": "7ab19bb5-5558-4fcf-bf84-7b1c502ce268",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9eb7df7e-7b11-407a-9d39-e50662da2b93"
        },
        "item": {
          "id": "18d38e2a-f541-4b82-b5d5-2c6111fc8dcf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "79eb3d80-d0f2-419c-a2b9-2a78d77c386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7747e778-d22c-46cc-a332-21f66e4db734",
        "cursor": {
          "ref": "71ac1d08-c4f8-4666-a469-214f06dcb4ed",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b8ca4c42-33b9-4cec-b1d3-d63a85ee93e0"
        },
        "item": {
          "id": "7747e778-d22c-46cc-a332-21f66e4db734",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "42a1b6af-a36d-4cd1-8319-5944c8c4c0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc0b587-5ada-4a30-a6fc-b3a4223fc230",
        "cursor": {
          "ref": "1e8dc904-121b-4c6d-8530-929d50cbb0c7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "53b0d4b7-2ace-4611-936c-5db0c7a7e529"
        },
        "item": {
          "id": "edc0b587-5ada-4a30-a6fc-b3a4223fc230",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5424fb43-0850-4a67-b203-e5bac195388c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03517ba1-0288-4665-9080-2621a2a42b77",
        "cursor": {
          "ref": "9fe67776-8c3e-4236-966f-6558e4f3d26f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bcbe62a5-ee43-412c-acc1-178b0656a033"
        },
        "item": {
          "id": "03517ba1-0288-4665-9080-2621a2a42b77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "62c773b1-2a57-4940-80f0-9ee362c6721c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b9452b-8598-4b37-a48f-1465d5aaa35c",
        "cursor": {
          "ref": "bd1c4512-4974-4a79-800e-ec4765526066",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "db6f6151-1592-4041-bbac-8d636478160b"
        },
        "item": {
          "id": "19b9452b-8598-4b37-a48f-1465d5aaa35c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a05c82f8-b168-49ad-b65f-d8627871f267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6add47f-d7f0-4cd4-beb6-7cf30aeb2404",
        "cursor": {
          "ref": "32f0b179-1225-4c68-bd45-6e66ffe61519",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "95634fc7-2039-4735-9aba-7757008781da"
        },
        "item": {
          "id": "b6add47f-d7f0-4cd4-beb6-7cf30aeb2404",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bd464ca7-1571-4132-bbf9-525137c8c5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e59906-c42b-4eb3-ae50-5548f6709d16",
        "cursor": {
          "ref": "0030a34b-e7de-4d16-9b35-fb8bbf636d38",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "caa34f37-401e-4cad-b6f1-13cfe366b69d"
        },
        "item": {
          "id": "00e59906-c42b-4eb3-ae50-5548f6709d16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e6cad6b3-207d-4f57-91a6-0aec5f92cd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201e5823-c7d5-4d6e-bdd8-07dc606fc37c",
        "cursor": {
          "ref": "a6e62ab3-9788-44f2-a097-55211693da4e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ed09acfa-6ccc-4c9b-8103-6324fb44707c"
        },
        "item": {
          "id": "201e5823-c7d5-4d6e-bdd8-07dc606fc37c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "05242c6f-6d75-4f06-b5e8-e778495126cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafcc2fc-6e8b-4d9a-86fb-52dc1bbc3780",
        "cursor": {
          "ref": "5edffaea-9c78-4d6f-a1e8-19e3143b66cd",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4bc3c68d-c6a8-4766-8dc3-caa764dfe936"
        },
        "item": {
          "id": "aafcc2fc-6e8b-4d9a-86fb-52dc1bbc3780",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1b6cfcfc-f754-4bef-ab74-1dffc3308126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8170d1-09e1-4d6d-872c-2776f461a365",
        "cursor": {
          "ref": "9961b9a7-b2e2-4cdd-830e-39e3c82f92eb",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a9ac5718-a351-4ea7-a074-25d36e4bdf6c"
        },
        "item": {
          "id": "fd8170d1-09e1-4d6d-872c-2776f461a365",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "830237e1-1f66-4490-b4af-24da4f19942b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f1ed33-1379-4044-b2db-213d1680a798",
        "cursor": {
          "ref": "d18ac26f-473d-43b2-ba90-77f7ba4c9aed",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0ace0b74-1ca9-4867-a89f-3e1c51cc6d37"
        },
        "item": {
          "id": "c8f1ed33-1379-4044-b2db-213d1680a798",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ae457b8f-c14f-4f95-897a-e952127dea27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e940257c-aa95-4cce-9f7b-29777e1114ef",
        "cursor": {
          "ref": "87b4a24d-1688-41ee-9418-cac06f0c7ef5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1f8617c8-9d4a-4969-ab4d-3e5de719c453"
        },
        "item": {
          "id": "e940257c-aa95-4cce-9f7b-29777e1114ef",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b99b3070-f82d-4480-977d-38b8762751dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de1b2fb-5e1a-4a0d-89ab-b496bc62ad4f",
        "cursor": {
          "ref": "48fe86ad-01a0-4caa-8e8e-f3349bcec1e6",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "55692a3d-17fa-4a5a-ac07-f3a2f8c55064"
        },
        "item": {
          "id": "9de1b2fb-5e1a-4a0d-89ab-b496bc62ad4f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "108c40fc-3a66-462e-94a2-353e13642f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7729ad4d-f38b-4bdf-b120-10762eb96221",
        "cursor": {
          "ref": "06b55020-a256-4f40-b047-5596dfdc64b3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4ae9a2cd-1b32-4f9d-8d7c-d1a8fd80fd07"
        },
        "item": {
          "id": "7729ad4d-f38b-4bdf-b120-10762eb96221",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d7f5657e-a5f5-4f1c-a499-4bc5bf03db60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc87f6a-76b5-434d-8d00-a07b3a3f0057",
        "cursor": {
          "ref": "d4b88af5-75b1-4bf6-97c1-15f67702e29a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d217356c-83e4-4402-b470-1e803d58a465"
        },
        "item": {
          "id": "5bc87f6a-76b5-434d-8d00-a07b3a3f0057",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2e731012-31d8-4cb2-9b46-e54b8ee5c0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393396f2-49df-4c6d-9644-db37f0e8c796",
        "cursor": {
          "ref": "67518474-4279-4b8c-97d5-2bfc96185d1e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "343ba857-0f89-4521-a388-fe8e0c0eb5c0"
        },
        "item": {
          "id": "393396f2-49df-4c6d-9644-db37f0e8c796",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "876b418d-b0b9-47cd-99e5-a2354320361d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b875fb-d01e-4eed-995c-e0ec5be8a7af",
        "cursor": {
          "ref": "ccbcb24a-f276-4a48-bc21-81eb1287c852",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cbab76b0-ec00-4970-9e6e-39038dfe0704"
        },
        "item": {
          "id": "a2b875fb-d01e-4eed-995c-e0ec5be8a7af",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "99896a55-01fe-4218-9eac-7d51481b203c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71696069-8042-4393-b841-1c843021d3bc",
        "cursor": {
          "ref": "21c16e90-57be-466d-8564-8b84bb62c28f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bd21908f-d6ba-41db-a19e-77734c7fde52"
        },
        "item": {
          "id": "71696069-8042-4393-b841-1c843021d3bc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "535651d3-890c-4207-9612-951d75228d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9809dbc-a8b9-42fa-9887-b2d30ad46d6e",
        "cursor": {
          "ref": "72e1add1-7769-4e6e-a21b-589ae0722ae5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8e3cafbb-3d1a-4488-abc3-2278b6d951a4"
        },
        "item": {
          "id": "b9809dbc-a8b9-42fa-9887-b2d30ad46d6e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ec505f4c-d6b3-4544-9c92-49d3f231d7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fdeb25-2d18-47d1-93c4-3c8ab0f523a9",
        "cursor": {
          "ref": "d25791b4-22aa-4caa-b1b9-8afb7c4e8f87",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "af48f7a8-0f89-40b5-8965-fa913c8efdeb"
        },
        "item": {
          "id": "12fdeb25-2d18-47d1-93c4-3c8ab0f523a9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "97da944d-e277-40bb-baef-59d4f4d2ef35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1d9b85-2c96-4d35-bce5-371f7e310f59",
        "cursor": {
          "ref": "3535f99d-a3c6-4080-8054-a06034965788",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5a9443bf-b3f6-49d9-89d9-06e0b4c7b55b"
        },
        "item": {
          "id": "df1d9b85-2c96-4d35-bce5-371f7e310f59",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "330db185-0ac4-4a8e-b799-3dd55d3e09e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815e8241-f3d5-4ed8-b15b-4eca175b58f5",
        "cursor": {
          "ref": "cde27003-b8f1-410c-b191-f49c8ad47c6e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4d412597-ade7-47a0-b90c-6fe60d74697c"
        },
        "item": {
          "id": "815e8241-f3d5-4ed8-b15b-4eca175b58f5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6fa379e0-23e1-4109-a764-22b30aef5ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff668e8-3b37-45bb-b00c-a6608ae7680f",
        "cursor": {
          "ref": "8fb04c2d-b5c7-472c-9efa-b0964069f584",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fc8385e7-6bd0-4d05-a344-169de184e147"
        },
        "item": {
          "id": "3ff668e8-3b37-45bb-b00c-a6608ae7680f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d8fb0fe8-b1c1-43d6-a2ff-dac49ef3a677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe69a50a-d4f2-432d-8f2a-6741184ce1e0",
        "cursor": {
          "ref": "ffac9e9d-a1ec-4982-82e2-93991856cf2f",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b4f0a7a0-3c7d-4270-9a71-b75f577fb500"
        },
        "item": {
          "id": "fe69a50a-d4f2-432d-8f2a-6741184ce1e0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "39e97b6d-2733-40f8-9d86-fbda739467ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b79f621-fab3-43c6-9f43-6a2be6f1d1f7",
        "cursor": {
          "ref": "43d31d24-4b5b-4a15-8fca-64ef41d05b9a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "92f66dab-b58a-4d26-b55e-0e69a0688404"
        },
        "item": {
          "id": "8b79f621-fab3-43c6-9f43-6a2be6f1d1f7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "97ab8b6e-26a8-41d1-804f-09c4ae3fb215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a851ea-8ad8-4176-af7e-711f3f353a05",
        "cursor": {
          "ref": "4b142191-4745-4ce5-ae92-a284acb2b471",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7fc6ed5c-01d6-4ac6-aabb-515542948ab2"
        },
        "item": {
          "id": "a7a851ea-8ad8-4176-af7e-711f3f353a05",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9b01b132-2a39-4cec-8da5-6b533279f95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d352d6-966d-42a4-b9b8-209e4e905d63",
        "cursor": {
          "ref": "f1e271cc-2c6f-4db4-818d-25f08807b307",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "98150403-b42d-4321-b508-9ad4f5e30755"
        },
        "item": {
          "id": "23d352d6-966d-42a4-b9b8-209e4e905d63",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9f2f2314-13ba-497a-bfca-7eadab4362df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b893eb-d36a-4320-8f95-df1fae8e81e6",
        "cursor": {
          "ref": "20d5b844-588e-463d-a869-541a921cc85d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "43e4c127-e8eb-4024-9c60-c61371466488"
        },
        "item": {
          "id": "69b893eb-d36a-4320-8f95-df1fae8e81e6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "046dc39c-5354-42ae-8afc-0268513ed298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a171a536-a47b-4a3a-9b18-a7d9da7996e3",
        "cursor": {
          "ref": "ad9d8aa0-9990-4d25-b1c8-1659d3e96d46",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d60285b8-7231-4f1d-8a1e-dfcd202b60fe"
        },
        "item": {
          "id": "a171a536-a47b-4a3a-9b18-a7d9da7996e3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b32bb08d-6543-4754-b514-d2925ce91c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a7c7ac-880a-4382-bb45-05135ac32a55",
        "cursor": {
          "ref": "72ac4085-551d-4919-af19-5a217c4bb621",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e9307c95-b12e-4248-8e75-f526a1d162c0"
        },
        "item": {
          "id": "38a7c7ac-880a-4382-bb45-05135ac32a55",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "31ba86f6-dae9-4f13-998d-a0b8ba23f6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b5b721-234f-413d-bdec-46b7f3989892",
        "cursor": {
          "ref": "bf57ec96-bb17-4e8f-a96c-cf50640392d7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5998ab0a-ca6b-43d7-adde-12b1a06c9518"
        },
        "item": {
          "id": "f6b5b721-234f-413d-bdec-46b7f3989892",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "816d7688-1d77-405a-be11-d583d34ec856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8b6b10-2f10-4240-8dfd-efc273718f65",
        "cursor": {
          "ref": "ad6cdc7f-7418-4aba-ad33-aeea939fd8f0",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8da8c93c-1093-4f80-a4c6-ae41582e1701"
        },
        "item": {
          "id": "5c8b6b10-2f10-4240-8dfd-efc273718f65",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f6f0f9a4-5f7d-4326-a1a4-2dfa5b7d06b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f88d47-6d1d-4550-baaf-734a0e917987",
        "cursor": {
          "ref": "a1bf6580-5741-40ce-964d-46e5d68e3f06",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bc180750-9408-4cef-aab8-3290238afed6"
        },
        "item": {
          "id": "03f88d47-6d1d-4550-baaf-734a0e917987",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ab20dfce-ef6a-4fc7-96c1-dae569d19be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc56a38-d5d0-489a-bfed-663daa2cac1f",
        "cursor": {
          "ref": "fa99c372-056b-4c76-b1a8-d4cef825c0cc",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2bfccf72-9049-4541-801d-5d7352331166"
        },
        "item": {
          "id": "8dc56a38-d5d0-489a-bfed-663daa2cac1f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "15b60295-a9b0-449f-934d-432b7c8ca29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ac69f1-4db8-40e1-81a3-026753dbedd6",
        "cursor": {
          "ref": "4c766c1d-1ca9-4cf0-b144-e63d99406c88",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e7ae1506-2a2f-47fc-b051-96fa8937d6b6"
        },
        "item": {
          "id": "f5ac69f1-4db8-40e1-81a3-026753dbedd6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4b0cada-76fd-417a-8198-522c52cac0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2945ff7-1b9a-41b9-8335-84216828f427",
        "cursor": {
          "ref": "455ea888-6cfe-4693-9e01-c3b830e406ff",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "13f2d41e-639e-4031-a6c7-2ea1b535af3e"
        },
        "item": {
          "id": "d2945ff7-1b9a-41b9-8335-84216828f427",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4de43da7-9431-453f-90f3-60fb3c7fc248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409a527e-450b-4123-bb1b-dc459a2b115f",
        "cursor": {
          "ref": "43f8aa97-194b-4cf8-828c-b1221f05ff80",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "02eb474f-4d70-4501-a2d5-75c3098da069"
        },
        "item": {
          "id": "409a527e-450b-4123-bb1b-dc459a2b115f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "69140cd8-7b2f-491a-bbf0-19470a3452e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebcdd46-db82-4d8e-97c1-87af1172c543",
        "cursor": {
          "ref": "49ca8c2d-e5e7-4a2b-848f-cfc40f9dc469",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2290fc19-dc5f-436e-a294-51d5df2748bc"
        },
        "item": {
          "id": "1ebcdd46-db82-4d8e-97c1-87af1172c543",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7538f862-73da-4485-a867-2b1dc855ce0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9961a2c-9486-4d87-91a5-689f0a4498be",
        "cursor": {
          "ref": "9b13e5c0-b06d-43f4-9529-f5c3651ca2bb",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1a76f7a8-58c4-44b7-b2f6-fcabbdb62835"
        },
        "item": {
          "id": "e9961a2c-9486-4d87-91a5-689f0a4498be",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b788afc5-b589-46c9-b003-796fb970abe0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb9881a-4e24-492d-983b-e283c5ff5c51",
        "cursor": {
          "ref": "791a183b-074e-44fe-9e3f-ae465272b41c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "98bb9102-7a19-4c2d-bdb5-3f35b08a2e37"
        },
        "item": {
          "id": "7fb9881a-4e24-492d-983b-e283c5ff5c51",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2aef838d-4043-4cad-bd86-26072844874a",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79dafa4-8285-4140-b5cf-ffca943c7d15",
        "cursor": {
          "ref": "be1eba7a-5707-4716-95cd-b54dba6532f0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "637b4e5b-44b1-4d9d-98fc-45ccd196ca24"
        },
        "item": {
          "id": "d79dafa4-8285-4140-b5cf-ffca943c7d15",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5f8e0867-a24d-4dce-aae9-1a5afda72df2",
          "status": "Created",
          "code": 201,
          "responseTime": 203,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7872aa9-e32d-414c-959a-52139b2a5db4",
        "cursor": {
          "ref": "394f3354-13b4-456f-995c-948c5ada9a47",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "99bebf6e-cdee-4690-9927-6e6c9213f343"
        },
        "item": {
          "id": "e7872aa9-e32d-414c-959a-52139b2a5db4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fbae97fb-8c5f-42c9-a419-665cd16bbbd2",
          "status": "Created",
          "code": 201,
          "responseTime": 155,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac25a5c-5339-4853-b550-06d1c2afc3da",
        "cursor": {
          "ref": "b9ecefe1-7a26-4dc7-ad91-6c136fff19da",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9127f311-de92-483a-b764-e4b119204110"
        },
        "item": {
          "id": "8ac25a5c-5339-4853-b550-06d1c2afc3da",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1aafc6c8-284b-49b7-b9e4-85cf43e901e5",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a828b1-1f81-4e5c-92f9-9bb44e4ad885",
        "cursor": {
          "ref": "a6ab2d66-838e-411f-8d91-66375e703af4",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "58fabf10-63e8-4bc2-b36f-01e150974bbc"
        },
        "item": {
          "id": "c6a828b1-1f81-4e5c-92f9-9bb44e4ad885",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "398b6246-3b0c-4d00-8772-3280af6bce87",
          "status": "Created",
          "code": 201,
          "responseTime": 76,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3281a6f-43f8-4786-b74b-e56c4685497c",
        "cursor": {
          "ref": "51028091-d1d6-4352-9663-68814452a47a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6be42fde-5bbf-4434-990c-f929246e0769"
        },
        "item": {
          "id": "f3281a6f-43f8-4786-b74b-e56c4685497c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "04a7df7f-7d7e-4adb-addd-364735358eea",
          "status": "Created",
          "code": 201,
          "responseTime": 72,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef30792-fcb8-41f7-b34a-9a01d9711fcc",
        "cursor": {
          "ref": "71f3b151-de0a-4229-914d-da47d33fef0b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "666ca663-8fb8-4388-9fc6-5d1445cd8f16"
        },
        "item": {
          "id": "eef30792-fcb8-41f7-b34a-9a01d9711fcc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7c76173d-40cb-4f4d-b3a1-898602a29169",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249cded3-c7ee-406d-987d-685b342d85f4",
        "cursor": {
          "ref": "09a71c92-7551-4369-9fe7-fdd714b7a046",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "782e1185-f17f-4609-9bc5-c001928e5a7a"
        },
        "item": {
          "id": "249cded3-c7ee-406d-987d-685b342d85f4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bf5141ef-6ef2-4038-86dd-8fdffa0e6a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5df900f-b5eb-495a-adfa-14f959ebb56b",
        "cursor": {
          "ref": "82cca34d-4bf3-4fd4-8c61-97f52199867b",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ef6654e5-129e-4b91-bdcf-a135add91b62"
        },
        "item": {
          "id": "b5df900f-b5eb-495a-adfa-14f959ebb56b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "228381b0-9e38-4c5f-b662-afc34e0d8fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e9381-5455-4180-9862-5386e5a7c018",
        "cursor": {
          "ref": "afdf716b-87f6-4f78-ae74-7dda47398c86",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2cfaf49a-4307-4cc8-a552-cee77760d576"
        },
        "item": {
          "id": "740e9381-5455-4180-9862-5386e5a7c018",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "26591a43-aa5a-4a03-a8ac-729f3c5673bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5d41e2-7d77-47ce-a739-24b38f3edd1c",
        "cursor": {
          "ref": "1c691f22-7e14-45ae-9427-4445aa1dbb81",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ee28e7be-a61b-4a07-a9e8-ab38e996374d"
        },
        "item": {
          "id": "8d5d41e2-7d77-47ce-a739-24b38f3edd1c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "baf6f99c-28de-4a22-a898-64c16621efd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55f6bb5-8795-42fc-af6e-731804be5d0d",
        "cursor": {
          "ref": "07d5763d-c0d5-4b34-bf2d-de19db51026a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7f68274a-0177-4ea9-950c-22a95473d589"
        },
        "item": {
          "id": "b55f6bb5-8795-42fc-af6e-731804be5d0d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "db7f955e-e26e-4005-a8dc-259217dcb011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3105bd-201b-4d71-b947-c7923eeb3134",
        "cursor": {
          "ref": "34b945ca-407e-4795-a3d5-ec1e9ac2cbb5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cc992259-4a0b-4b55-bd83-be8fc8ab7c8d"
        },
        "item": {
          "id": "1c3105bd-201b-4d71-b947-c7923eeb3134",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ac1c2a88-59c6-4c7d-a1a9-82855d6ee970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f8e368-c00f-4165-9fca-733d0f822644",
        "cursor": {
          "ref": "a8d063bb-b14f-4bc8-8669-a7a90c6b326c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6d3d0833-a18a-4b10-9f4c-88c48fb05f34"
        },
        "item": {
          "id": "e0f8e368-c00f-4165-9fca-733d0f822644",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9471b833-b958-408e-abc4-80ccabd1001c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552957d7-5a79-478d-abe5-4ad508d95f64",
        "cursor": {
          "ref": "3452dae1-a81e-442f-846b-f00a30296967",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e20b2815-d566-42ad-8940-d83d25036f4a"
        },
        "item": {
          "id": "552957d7-5a79-478d-abe5-4ad508d95f64",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dbd5c56c-46c2-4e87-a0b4-29a5a46f7c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e04457-9d9b-426b-a2c0-871379e5a77e",
        "cursor": {
          "ref": "37ce1095-a2d6-4aa8-913f-bb15eab0b31f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "064d2a99-a38d-4835-8296-58aedecbd717"
        },
        "item": {
          "id": "98e04457-9d9b-426b-a2c0-871379e5a77e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9534f8a2-5480-486d-ba91-74fd1e4de72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe6208d-7887-4a6b-b4b4-fdfba2e42bc2",
        "cursor": {
          "ref": "651faaa3-54b7-4192-828a-7279176d8eba",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b305cd69-5054-492f-baf6-4534cc2f4aa3"
        },
        "item": {
          "id": "6fe6208d-7887-4a6b-b4b4-fdfba2e42bc2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "178b513c-c35a-4f4c-a432-0c7c0dcb6b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530ac6b5-df38-4990-add2-6f2f9fe4daa6",
        "cursor": {
          "ref": "4095fe91-b00b-4fb9-81c4-aadf3e67979e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2e3852f0-33f8-4569-916c-44b5c4d95481"
        },
        "item": {
          "id": "530ac6b5-df38-4990-add2-6f2f9fe4daa6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "00cd59b2-75eb-4c7b-bd70-fa3188141b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb6da6c-4536-46ea-bdf3-d5b3c5a29b5b",
        "cursor": {
          "ref": "a03189e2-824a-4f04-a146-dd84b80b07a7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "82bb49b1-18bb-4f1a-8e57-90592d0f003e"
        },
        "item": {
          "id": "aeb6da6c-4536-46ea-bdf3-d5b3c5a29b5b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4a89ab18-86e3-4ebc-a213-a2b0f5ba9dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1869e1-1ef7-41e5-8e9f-4d092f1fa466",
        "cursor": {
          "ref": "b69bf3b3-1521-4625-8a74-c53950b7871c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "921cf30a-0d38-4a32-b5b5-cfb88022d2c3"
        },
        "item": {
          "id": "5b1869e1-1ef7-41e5-8e9f-4d092f1fa466",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e219c7d2-060a-4d04-9640-41e20d269302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bcb354-0cb8-4aa5-963d-f1b6510ad4e7",
        "cursor": {
          "ref": "b87f5c9b-ecca-453c-9469-7ef170b3e3f4",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "22646e76-b133-4c04-a0e5-8af7492e8ab7"
        },
        "item": {
          "id": "b9bcb354-0cb8-4aa5-963d-f1b6510ad4e7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a113275b-daef-49e2-bc56-34121734e27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a45ae6-6635-4f1e-8a02-e601c116c4b7",
        "cursor": {
          "ref": "9ff2cfba-f862-4926-8b4b-d9f69fc8fc9d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "09195ae9-3dfa-45f2-8407-89dd7f462150"
        },
        "item": {
          "id": "26a45ae6-6635-4f1e-8a02-e601c116c4b7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "64f3d61e-ff35-4333-93ac-c060d8c54e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7f19a7-33a7-49c3-aa3f-bcd8e077b22a",
        "cursor": {
          "ref": "c706136e-7ae2-4f02-a4f8-0f5cfd95ea9b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "342b9a28-1939-4e61-86cb-f15c398260aa"
        },
        "item": {
          "id": "4a7f19a7-33a7-49c3-aa3f-bcd8e077b22a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e716d648-184c-4d79-80bb-2f343138766c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d2f9fd-d1af-4f3e-8046-3566f2b8e513",
        "cursor": {
          "ref": "f1f3e12c-f1d7-4b7e-96a4-507bd41abfd9",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a47e64e2-a7db-489b-ac9c-edf5fcbbdfd3"
        },
        "item": {
          "id": "b5d2f9fd-d1af-4f3e-8046-3566f2b8e513",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1189e8d7-aaea-47fb-85a0-b6256302a5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62382450-9c11-463c-b454-a7d8d45ff7e7",
        "cursor": {
          "ref": "1b5d856b-3cfc-45fd-bd24-5c12b80e43d1",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ed107b09-e39a-44a9-bda9-843f2e88b18a"
        },
        "item": {
          "id": "62382450-9c11-463c-b454-a7d8d45ff7e7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "74ed6e98-90ec-414f-b41b-c8fc6f3634d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5f2fb4-b925-4e14-a8fc-ec4223789fa6",
        "cursor": {
          "ref": "3f1ecee2-0675-4ba9-bc48-39e59767158b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1682a800-61ec-4e2b-9555-089092eafe2f"
        },
        "item": {
          "id": "3f5f2fb4-b925-4e14-a8fc-ec4223789fa6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce49ddd6-056e-45e8-8bc3-5cf4ef6ecf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12107d20-f116-4eab-bc9d-c8f7bd79f906",
        "cursor": {
          "ref": "d2f51c68-759b-419d-960d-e40da19e36d5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9b0f0436-17f1-4f90-ab8c-39e8ef278464"
        },
        "item": {
          "id": "12107d20-f116-4eab-bc9d-c8f7bd79f906",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "83f9f4a9-12c6-4a58-b6b0-910388b1853b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a83240-964f-4caa-a3c3-930487196fa0",
        "cursor": {
          "ref": "ea4664c6-c9d3-4729-9098-3dadff4434c7",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "553b9a6c-8848-421b-88cd-4e627fd08f39"
        },
        "item": {
          "id": "e9a83240-964f-4caa-a3c3-930487196fa0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "aa77e2a1-e527-4e93-8e4b-a21977787e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3369ee21-f14f-407e-b2ba-97459e3a5a5a",
        "cursor": {
          "ref": "a7824513-c6c3-477a-a36b-a76ba8ede6bc",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "059bf707-cbad-49ee-8b92-de2c58636bb3"
        },
        "item": {
          "id": "3369ee21-f14f-407e-b2ba-97459e3a5a5a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5dfd205e-ad89-4407-8c84-43de36b37bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7631df4-6c0c-45ae-9148-f5f5f5f30349",
        "cursor": {
          "ref": "1e16185f-4f7b-42d8-983f-41311eaf8ce0",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "268443e6-8659-4821-ac8d-08f2ff2b9f2e"
        },
        "item": {
          "id": "f7631df4-6c0c-45ae-9148-f5f5f5f30349",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0ada2dcd-17f6-4593-a4b5-84a4cd218345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42882e1-010f-4063-9f3e-78cb1d793421",
        "cursor": {
          "ref": "15941e04-77e8-43ef-8285-911e197012f6",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9f6415eb-0313-4779-9123-55d67309f4a4"
        },
        "item": {
          "id": "b42882e1-010f-4063-9f3e-78cb1d793421",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "94e4e615-81fe-41c7-ad91-a568f29a72c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43655f50-85f0-4672-bc6e-2a022cd1cfaf",
        "cursor": {
          "ref": "6a8726c1-dadf-4aef-bc07-56a03714d57e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d61b0e23-9a92-486f-b2a8-8982b718d062"
        },
        "item": {
          "id": "43655f50-85f0-4672-bc6e-2a022cd1cfaf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ac4a2e31-80cd-4d66-86ca-cdb2902a7927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925c930b-01ae-4c51-8968-df308e2f9aad",
        "cursor": {
          "ref": "f46c3839-738b-4481-8ce6-dbfd2b05165f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1ee17924-cc35-4557-86d2-da9461debe1f"
        },
        "item": {
          "id": "925c930b-01ae-4c51-8968-df308e2f9aad",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "39bbe9cf-8c96-4c2b-a4cb-c00cf326a588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea22d0a9-f451-48c3-ad7d-a61027e53d9a",
        "cursor": {
          "ref": "435680c6-2ec2-42cd-acc2-da13146ded63",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "24995107-ab75-450f-a519-dcd5168ec0f1"
        },
        "item": {
          "id": "ea22d0a9-f451-48c3-ad7d-a61027e53d9a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "12990e8a-875e-4175-9817-bbbbae24f94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e652ddc-8dac-4da3-9a71-643a474a8c83",
        "cursor": {
          "ref": "dca4fb0e-e6e0-4ce8-899f-629d684c81d4",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a9b92b69-cbe5-4664-a4b3-9ff4dc0042d5"
        },
        "item": {
          "id": "3e652ddc-8dac-4da3-9a71-643a474a8c83",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fd95c0e2-c61c-4e55-99fc-01333e52f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0831b7e-db5f-4f57-b077-d0481fed5c87",
        "cursor": {
          "ref": "6dd96889-a536-4bbc-87c5-7b8d2acf1c46",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f64cbae9-e9ba-432b-8691-9795d7e87a70"
        },
        "item": {
          "id": "f0831b7e-db5f-4f57-b077-d0481fed5c87",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "58fb0eb2-402b-4b5b-a3b0-928c4e24a4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd04bcaa-6f82-4972-ab58-47bc829cf825",
        "cursor": {
          "ref": "ec1e7015-f960-4d87-8753-9257b264d339",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e3273c21-b001-4c33-9cb0-ad6627f0c6e0"
        },
        "item": {
          "id": "bd04bcaa-6f82-4972-ab58-47bc829cf825",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "39f5be0d-5afa-45e1-b101-ebe7f864e066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf7bfb5-626b-4b39-836d-85bbcab1ae2f",
        "cursor": {
          "ref": "a14d647b-45a0-4f83-9173-1c49c9a3610e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6c79a4cf-c011-4163-ae10-ff232ffc80d3"
        },
        "item": {
          "id": "0bf7bfb5-626b-4b39-836d-85bbcab1ae2f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "67483c28-2d6c-4b02-9809-7d4a443e7780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795bb0d4-f572-4b8c-b5ea-7f9c96a8c9b3",
        "cursor": {
          "ref": "43df8ea6-b468-4027-97b4-fd04cadeac03",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "be5dc14b-d714-4661-b8b2-e1b7c524926d"
        },
        "item": {
          "id": "795bb0d4-f572-4b8c-b5ea-7f9c96a8c9b3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cb80329a-1fba-4110-9d75-9e1437f85bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deee1427-acbd-4ffa-bc8b-a4466176794b",
        "cursor": {
          "ref": "97f15b9a-f44b-497e-84bd-eae463f6263b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "16c54a9e-9ba5-4f09-852d-22a310691d12"
        },
        "item": {
          "id": "deee1427-acbd-4ffa-bc8b-a4466176794b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "55308500-b812-46d4-ac04-72d43fc529bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be37e220-0400-4071-8082-24717b6678ea",
        "cursor": {
          "ref": "dd21ce11-201a-4ece-9e76-867c34dd481b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "be6da23c-7c29-432e-a10d-c740c269857f"
        },
        "item": {
          "id": "be37e220-0400-4071-8082-24717b6678ea",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e1a6a302-8041-440b-8d26-ca22520b206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213305e9-003a-44b1-8026-5c33b56bb9f8",
        "cursor": {
          "ref": "76c0368e-7159-43b2-891f-6217881ce078",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "262632da-dedd-4544-8d3d-226f1730a98c"
        },
        "item": {
          "id": "213305e9-003a-44b1-8026-5c33b56bb9f8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f9a92f03-5659-4006-9759-a03bbf1afeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afefd00-3e49-41f1-8708-60c511d7c295",
        "cursor": {
          "ref": "6cbdbad2-e572-40b3-ab2d-4cdc43df1822",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "23e9232a-4be5-4792-b196-eb61f6d237ef"
        },
        "item": {
          "id": "8afefd00-3e49-41f1-8708-60c511d7c295",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c9021510-dcdc-4d15-80a1-17de12498c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96538881-a0b7-4596-b3c7-32b92277f576",
        "cursor": {
          "ref": "56f61ac9-c6df-4e04-a6bf-3fcbf20cfb8a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "363a06f6-a55a-41af-b0b0-8c74839297b0"
        },
        "item": {
          "id": "96538881-a0b7-4596-b3c7-32b92277f576",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0eade03-cd2f-44c9-8ff2-5262f894e796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e37c98-c791-4e6e-9463-42b87788c88f",
        "cursor": {
          "ref": "5197394f-87e1-4c2e-827a-7a5166f9a5aa",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3d8deb58-7575-4372-bc94-a10b9d1b9e2d"
        },
        "item": {
          "id": "74e37c98-c791-4e6e-9463-42b87788c88f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "abe5c590-629c-45d1-b814-bbb3bdb7f002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0cd2dd-3541-4286-a82c-ecfd6f022f85",
        "cursor": {
          "ref": "ad5a654c-b64a-4dcd-9c88-4a3da97cb6c9",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ea7783e8-7dcc-4119-aa8d-6e87ebb8636c"
        },
        "item": {
          "id": "ed0cd2dd-3541-4286-a82c-ecfd6f022f85",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a1585671-9bac-49fd-90ff-c7757a70cf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0935be-9f35-4772-97b1-206ddc23f5e4",
        "cursor": {
          "ref": "2e599a25-289b-4e7e-9763-93af2d2947c2",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9c5d9f60-9851-4782-ab05-cae65a47e16c"
        },
        "item": {
          "id": "3f0935be-9f35-4772-97b1-206ddc23f5e4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cbf5f407-3000-4480-812c-0ac19f65f04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385b1af6-5771-407d-9ef3-df0f75c4ee82",
        "cursor": {
          "ref": "ca4251b6-fa92-4e5a-8bc6-52aabc6de57d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "377587be-7243-4077-a94a-09b5c43491c5"
        },
        "item": {
          "id": "385b1af6-5771-407d-9ef3-df0f75c4ee82",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8ee4d6ab-83e8-4862-a665-9e4af32df8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cd713a-d184-43b4-a376-c470d7681ed6",
        "cursor": {
          "ref": "79f2a286-94ac-43f6-88f9-c0075186bf0e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "66dc6324-0204-489f-83e6-298bf5517726"
        },
        "item": {
          "id": "b7cd713a-d184-43b4-a376-c470d7681ed6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f341824c-2ecb-466e-a8d7-90e0d5377fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1dab85-0f82-4aa5-95e3-73c385ab2a4b",
        "cursor": {
          "ref": "363dc71e-0eb5-4b53-9cf6-7365bb969fab",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d4b10780-8ed9-48e8-84d7-63ddf517f258"
        },
        "item": {
          "id": "8d1dab85-0f82-4aa5-95e3-73c385ab2a4b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bbd4f515-3fbc-4da4-9a27-cd58facfa632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2175f2fe-7b11-4fd2-b275-a05b243230f1",
        "cursor": {
          "ref": "00a53d29-7075-4c60-81f7-bfc8c22a26f2",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "abfd92a0-7148-4a4d-8aad-7e187ff9363b"
        },
        "item": {
          "id": "2175f2fe-7b11-4fd2-b275-a05b243230f1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce74d48b-5c26-4d5a-b39c-82f1b6e71de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed7ada7-e883-4888-acd0-abe099cfc49e",
        "cursor": {
          "ref": "371442da-55a3-479d-a097-a34e84fca66d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "78c4b45a-b807-4aa6-9d7d-fc2f5ccdd9a4"
        },
        "item": {
          "id": "2ed7ada7-e883-4888-acd0-abe099cfc49e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4f81cd72-18d8-494b-a12c-1b24749ef8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1919587a-8c70-4860-921f-b93d3431047c",
        "cursor": {
          "ref": "9509115e-fcd8-4b52-8aba-c1076a28e72c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5cebd442-40cc-4155-a529-95af49e5d4e8"
        },
        "item": {
          "id": "1919587a-8c70-4860-921f-b93d3431047c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9958569d-7dae-4ad0-8c3b-5424237d6bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e967cd4c-5915-4a47-bf1b-90f70826521c",
        "cursor": {
          "ref": "ec9b433f-4eb2-459d-94df-236225868e94",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e8399994-cd07-41e0-ada5-4a57dfddcf5c"
        },
        "item": {
          "id": "e967cd4c-5915-4a47-bf1b-90f70826521c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6c7e6305-1ad5-4df6-9937-4b8e6b2741d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17717903-a42c-47d9-8e96-c1b1efe3212f",
        "cursor": {
          "ref": "c3c1ff3b-e948-4e15-8c9c-a76a3ad5abff",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9b490e5f-6db9-425d-9a37-e48974b202e5"
        },
        "item": {
          "id": "17717903-a42c-47d9-8e96-c1b1efe3212f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "576e201e-32c1-4ef5-a86b-2d7d083fbced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c84f80-098c-4f0a-a839-322e0c29b579",
        "cursor": {
          "ref": "1faa6ff6-69af-4388-a897-254ea2a58bd9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a145391d-5737-425c-beab-7778443a759b"
        },
        "item": {
          "id": "87c84f80-098c-4f0a-a839-322e0c29b579",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f13d70b8-0a68-4928-a5b5-4916b7361ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c0552d-d65d-47c3-b7ec-4cd76e66a5da",
        "cursor": {
          "ref": "a8e5913b-662d-4a2f-964c-9110bdaf65ff",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f8558dcd-e332-4d3e-8ed5-bf906709c7c6"
        },
        "item": {
          "id": "73c0552d-d65d-47c3-b7ec-4cd76e66a5da",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1fe77faa-6b7f-4b15-afd5-4a579ff2892e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f02677-e098-49fe-8cd4-a12c6b6387c8",
        "cursor": {
          "ref": "de517b93-61dd-4403-baee-bc1c77acb2e8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9785a121-0b02-4f61-8924-bb5638a87f7c"
        },
        "item": {
          "id": "45f02677-e098-49fe-8cd4-a12c6b6387c8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f5296525-183c-49d8-ace4-0b7576949653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe15127d-fcc0-4d21-b38e-91a676fe46a7",
        "cursor": {
          "ref": "747f7a45-f96a-4ca4-a291-ba27ab251431",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8e072a39-53a2-4d90-a3fc-34ad5d1cd5ff"
        },
        "item": {
          "id": "fe15127d-fcc0-4d21-b38e-91a676fe46a7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "df57f21d-4d45-4f55-b49e-3585f19ce946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272aed56-d5c6-4601-8157-b90f3ce22748",
        "cursor": {
          "ref": "dceef4d0-9632-427a-88a6-60b7b0dbe98e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d9afcaca-6ff4-46fe-8e31-4805a85d32d6"
        },
        "item": {
          "id": "272aed56-d5c6-4601-8157-b90f3ce22748",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "809d456b-b39a-4228-833f-0992ebb7491d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7509a3-fffc-4d57-9359-c36fcb7fd495",
        "cursor": {
          "ref": "ce603c2f-3822-4f43-8df8-b92da3270da1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "69fa3e87-5042-48e5-88c0-ad8cad85d7e0"
        },
        "item": {
          "id": "db7509a3-fffc-4d57-9359-c36fcb7fd495",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "26dac2b8-38bc-46ad-b658-69bdbad217e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fb5792-16aa-4e5c-8dc2-c4c696e0b9a4",
        "cursor": {
          "ref": "a0921008-1f78-45a9-9ca1-82e457c4f8a5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e398768b-fc62-4d64-a759-6adaecc7b7e3"
        },
        "item": {
          "id": "22fb5792-16aa-4e5c-8dc2-c4c696e0b9a4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2d87e239-bd4a-4d24-8bb6-9820d897013e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680ff671-9f3e-4956-b7de-3c26e664d97a",
        "cursor": {
          "ref": "e79db4ed-5057-441e-a827-b339ae4fafb6",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6e2e9f6b-8296-4638-9289-8212975eff27"
        },
        "item": {
          "id": "680ff671-9f3e-4956-b7de-3c26e664d97a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "27d46968-6aab-43ff-add5-fb2026376970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c148f78-bb20-4884-8206-4d672b14f31f",
        "cursor": {
          "ref": "583e3f31-6526-4f57-a4b9-305eb28476d3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fd9d7266-4162-4dfb-aaca-bcfd6332b067"
        },
        "item": {
          "id": "6c148f78-bb20-4884-8206-4d672b14f31f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a495d323-ae2c-4797-ae8f-035bddd448c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da81a087-ae49-4430-a3be-6aeee38b63b6",
        "cursor": {
          "ref": "6fa73fd6-f7de-493b-8a3c-a3879fb3f465",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "abf97114-aeb9-467c-bf94-e34d476136e4"
        },
        "item": {
          "id": "da81a087-ae49-4430-a3be-6aeee38b63b6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c0895b50-e211-427c-9e5d-14255b1256cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a07969-aed4-43b4-a1be-b4c88d1890af",
        "cursor": {
          "ref": "d3fb1bc3-f7b1-4b87-9d2b-342ce9c59af2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "45b2f296-7b0a-4d0d-9272-e08f04f9d90a"
        },
        "item": {
          "id": "09a07969-aed4-43b4-a1be-b4c88d1890af",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8ff10fc9-2b30-4652-8584-7c6a25b4ac99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea2f2a0-5abd-41ee-a01a-274aa912404d",
        "cursor": {
          "ref": "ffef46ab-6b2d-4518-826e-8fa311234e0e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1a5f2897-08d8-4132-a9f5-0093fd3b8fca"
        },
        "item": {
          "id": "5ea2f2a0-5abd-41ee-a01a-274aa912404d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "54310929-53e2-401d-9b21-aa95ae4c85d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5531898-3961-4571-9160-a16383f40f9d",
        "cursor": {
          "ref": "d01ff66d-ae0d-4a15-82da-7523fde0f89c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "68ce99b2-44e1-4ddd-9446-9e74e5ca0e6d"
        },
        "item": {
          "id": "b5531898-3961-4571-9160-a16383f40f9d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8694da92-26b3-4c02-8b84-01dad41083bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2365b730-1703-4d0a-939d-0d373307b279",
        "cursor": {
          "ref": "777333a6-bf91-4362-a32b-cb1bcf6acef0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "59a40133-e590-4f89-ac3e-d9876eb725d0"
        },
        "item": {
          "id": "2365b730-1703-4d0a-939d-0d373307b279",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3bec551f-5b44-44cd-84ad-5730f0c13293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d24a925-fc77-4768-a825-a273395aedbf",
        "cursor": {
          "ref": "ffdd6735-7b81-4faf-ba9e-b59d9bb79736",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1a16b86e-b686-48ce-8991-ddda1fddcb64"
        },
        "item": {
          "id": "8d24a925-fc77-4768-a825-a273395aedbf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5d73f8a3-8f5c-45dd-be2b-2a8242e8f23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd649fa-428e-445d-af49-72577d639e76",
        "cursor": {
          "ref": "91ed65dd-e7db-4129-8ab6-0be7a6d04d61",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8c3839a8-4ac7-4a8b-8b64-6dbeae5037bd"
        },
        "item": {
          "id": "0bd649fa-428e-445d-af49-72577d639e76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7750b289-3409-47b3-b043-f0f1de35dda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2eed6b-4374-4ee7-b847-0ffa779ae9d2",
        "cursor": {
          "ref": "32dbf6ae-eb4c-4efa-b7cc-b7f8b142d78f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "573d3eb9-859e-4775-bc49-7e96d2627125"
        },
        "item": {
          "id": "0c2eed6b-4374-4ee7-b847-0ffa779ae9d2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7d81b8cf-c2aa-4c0e-9c14-b5c5c10c0acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635121ed-b608-4af0-90f9-f9231fdb4d98",
        "cursor": {
          "ref": "bb2f8d09-a150-4974-b417-585be83f4507",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b54949ab-5593-477f-bcee-1e0bb05748c2"
        },
        "item": {
          "id": "635121ed-b608-4af0-90f9-f9231fdb4d98",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2c140003-82dd-4726-ad9e-e61865a144dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69e6ebf-0bdf-415e-9e80-4663439c79f9",
        "cursor": {
          "ref": "ad964705-d31a-43a3-a522-0c0b9cbecdab",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "28e0b42b-d9b4-4285-b7bd-9f7f71d69ddf"
        },
        "item": {
          "id": "f69e6ebf-0bdf-415e-9e80-4663439c79f9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b8ea8fad-1fd0-4b9f-990d-4700ef149465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783fcf47-cdb3-4e09-bd0b-9d41f7409ab9",
        "cursor": {
          "ref": "9884be13-1637-48af-a21c-ab223a13d632",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "183dc16f-32bf-414a-a0e4-ef3cb4d99377"
        },
        "item": {
          "id": "783fcf47-cdb3-4e09-bd0b-9d41f7409ab9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c52ae441-a6e5-4976-8c4c-c25cc1dbd488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bedc29d-3ace-4bba-ae60-926e68bca918",
        "cursor": {
          "ref": "363820db-ccfb-41b8-94b0-a027d7bf2538",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "127da21c-835e-4164-a581-910ec79840cb"
        },
        "item": {
          "id": "7bedc29d-3ace-4bba-ae60-926e68bca918",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "03be1258-4840-496c-b0af-f48b1f5b93b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf20d8e-421f-4713-9209-c4b4d0a6859c",
        "cursor": {
          "ref": "09fa5b9c-4e99-4477-bb7a-e3b89cc3cff4",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d11f3fee-901c-4c5e-8612-14bc4f30069b"
        },
        "item": {
          "id": "fdf20d8e-421f-4713-9209-c4b4d0a6859c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0c5b7708-f07a-4abe-83f0-c262cc7e5bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb663d9-d307-4dfc-bca7-b77e6b82ebb2",
        "cursor": {
          "ref": "d515b3bf-c806-4634-9ed1-c6a2b64267fd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3fdbcf59-892f-47b7-837a-16969f9e01cc"
        },
        "item": {
          "id": "5fb663d9-d307-4dfc-bca7-b77e6b82ebb2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0d6fc637-c021-4bfe-8a62-694da9509a68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4867203f-be6d-4dc8-a704-00736c305373",
        "cursor": {
          "ref": "a5e3d429-2c37-49ce-b112-d059b065043e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "78976d04-298e-4184-99d3-1dfee13b5ff6"
        },
        "item": {
          "id": "4867203f-be6d-4dc8-a704-00736c305373",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aa11913e-c771-4cb2-a2bf-e9fe3b0fdba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1f06b1-8648-4e14-a902-f08a103d1370",
        "cursor": {
          "ref": "f4b75c34-aed1-4711-b721-c72c26c79b20",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "55ec4067-98b2-4f6e-83c7-cd321c8b2136"
        },
        "item": {
          "id": "5f1f06b1-8648-4e14-a902-f08a103d1370",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2c3c6d20-50ec-44d2-9c9c-e4d1f05f6e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b700b7e3-a972-4cb7-b135-291b6789a592",
        "cursor": {
          "ref": "629ebebe-a363-4bb5-b73b-772ad4433474",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2812faaa-d007-4575-9be8-8e9a5c9503dd"
        },
        "item": {
          "id": "b700b7e3-a972-4cb7-b135-291b6789a592",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "76a2e20b-7f73-4be7-8e03-e7971e13aef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229ea612-35b2-4a42-8d1a-1ce1609e0ebf",
        "cursor": {
          "ref": "195e6645-05db-43d3-9c49-0efda38cceab",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "edad719e-f0d6-4596-863b-20a29840748a"
        },
        "item": {
          "id": "229ea612-35b2-4a42-8d1a-1ce1609e0ebf",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b2ed8fea-5c30-4579-8ed2-826b8edb8d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be579357-d373-41d6-9652-9530d9a7f689",
        "cursor": {
          "ref": "74a222e6-b1e4-417a-9af5-318995480dbe",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bc33dcfe-a2c0-4575-857c-24611339b2b0"
        },
        "item": {
          "id": "be579357-d373-41d6-9652-9530d9a7f689",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ffc8adf6-9542-4b4c-9ea3-3b7764c80128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe69872-54dd-478a-b521-391a41be5240",
        "cursor": {
          "ref": "a0d17598-c487-428b-afcd-be09134c6dd2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9869c4e3-63c3-4307-a977-3827c21108be"
        },
        "item": {
          "id": "1fe69872-54dd-478a-b521-391a41be5240",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cf45fb43-6246-4f0f-894f-bcd4b7f84ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0cc687-6afb-4a4b-84de-83dd7fb25a73",
        "cursor": {
          "ref": "7b3d88a8-dcd9-4aaa-b411-3cc5e4fccb7b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "268dc59b-99c5-49ac-9b6f-cc5a4ae535c2"
        },
        "item": {
          "id": "bf0cc687-6afb-4a4b-84de-83dd7fb25a73",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "05926dc8-fa9b-4689-8723-25cc41a56151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38700115-433c-400d-895f-0c9fdd654725",
        "cursor": {
          "ref": "90b63d36-7f56-4e02-9ec7-a7cb01cc29e8",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2e328a07-6d02-4392-8aa7-9ca4451b79ec"
        },
        "item": {
          "id": "38700115-433c-400d-895f-0c9fdd654725",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8c965224-335f-4087-8d74-1c138677391f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412ea8b6-7770-445e-9954-8b349a7f9f43",
        "cursor": {
          "ref": "9b566459-2ed4-48c5-a01e-eac500c600b1",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5abcdb1a-a56f-413a-b2c6-f31c2e62af58"
        },
        "item": {
          "id": "412ea8b6-7770-445e-9954-8b349a7f9f43",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e9d2b676-703f-42d3-abe6-840e628a4323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4d5144-c5be-46c0-b5be-6978eb947402",
        "cursor": {
          "ref": "a07687ab-ed61-4283-a57e-4ce00bddb63d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2a1a631f-ea73-4d1f-a48c-170ca8b1b96c"
        },
        "item": {
          "id": "2f4d5144-c5be-46c0-b5be-6978eb947402",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8ce1c320-1ea1-434e-8aff-1ad36bc0836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74441258-dbbb-4c29-9e3a-c571119da5af",
        "cursor": {
          "ref": "65c777a5-51ee-4e82-8ffa-a27c95261567",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e0eb990c-2859-4bf9-bc0e-98c28b7a5d3b"
        },
        "item": {
          "id": "74441258-dbbb-4c29-9e3a-c571119da5af",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "78265ee4-5c19-4702-8418-ccf4bdf42549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494f510e-499c-4d80-9afd-e7fe9db60277",
        "cursor": {
          "ref": "f05b99c4-a22f-4f3a-8a13-f429b209bedf",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "aff1a40d-ea0e-4f48-b85f-4ef0c09f4e1f"
        },
        "item": {
          "id": "494f510e-499c-4d80-9afd-e7fe9db60277",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4cf3856c-5f84-4bb7-b1fd-d30a274f5b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e71326-6567-4cd1-a7af-9998f59da9a5",
        "cursor": {
          "ref": "f1eca208-321d-4876-9659-71fa7c309643",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8c1bfb39-945c-4465-a75e-a6b949fc2e88"
        },
        "item": {
          "id": "10e71326-6567-4cd1-a7af-9998f59da9a5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c86ce414-d526-4fe5-9f50-415fd07231a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13602b43-8ed4-48b8-866d-6b4b9d865cc3",
        "cursor": {
          "ref": "11d37476-7e92-4ee9-a002-3e908da361d4",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2bc92435-d5dc-4876-849c-695a3b00a625"
        },
        "item": {
          "id": "13602b43-8ed4-48b8-866d-6b4b9d865cc3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "13472250-994c-4331-9f67-50856420d004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6270beb7-bf86-47ec-85dc-16690f734ca8",
        "cursor": {
          "ref": "6b950ea5-00e5-4cb5-9453-f63c5b1b04cb",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b5e2d20d-d263-404b-a9ef-4436eefe8d68"
        },
        "item": {
          "id": "6270beb7-bf86-47ec-85dc-16690f734ca8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e9410e65-9053-435d-b625-73fed51549ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7a5227-56b3-407e-a9c4-9849144897aa",
        "cursor": {
          "ref": "3fed8357-3e01-4dc1-af3b-ac4bdb557da4",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1c1407b6-e16b-4864-bb32-dd4af7513c19"
        },
        "item": {
          "id": "4f7a5227-56b3-407e-a9c4-9849144897aa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7172b849-927a-4010-a045-3d117de3ace8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dbc1a0-6066-487d-83ac-6b8b49cfe43b",
        "cursor": {
          "ref": "03ef99e5-3455-4721-b96e-bc61bf0ae2ce",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c2135e5c-1090-4595-8cf4-d5dd80b67ed9"
        },
        "item": {
          "id": "f9dbc1a0-6066-487d-83ac-6b8b49cfe43b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4dae6595-ee48-411f-828c-b6a10822e1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb764ac-b1fb-4fdd-8922-7580205a2917",
        "cursor": {
          "ref": "98d11ea0-016f-4f14-b89f-ffbda10c5903",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6f8cdfe7-a244-441d-9a19-638c0f453ec8"
        },
        "item": {
          "id": "cdb764ac-b1fb-4fdd-8922-7580205a2917",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1fe009f3-10cf-47e2-b9b6-23e8de371448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a9ced9-f61a-435f-a459-5bbcfbca1054",
        "cursor": {
          "ref": "33450418-e7c4-466b-844a-1389feef583e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "adf3e025-edd6-47df-83e9-1c7c101ff23a"
        },
        "item": {
          "id": "49a9ced9-f61a-435f-a459-5bbcfbca1054",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "002a3ccf-2b72-4644-90fb-21e17961d73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff31a9a-4968-4b49-9d7e-4e4001444c05",
        "cursor": {
          "ref": "578c47b4-0eee-4bb3-9789-84442c78c04f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bd786ef9-9235-4d38-8518-d2aaae20f5c4"
        },
        "item": {
          "id": "6ff31a9a-4968-4b49-9d7e-4e4001444c05",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e1a5f7cd-ce87-4e6a-9c8f-c4557ff7eff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d80a8ec-e869-450c-ac0a-2becfd7cf026",
        "cursor": {
          "ref": "2832f44e-f941-4db0-8cd6-a02b8dd32b83",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5ceeb8dc-6b5e-40ed-a48f-5f89dbda42f2"
        },
        "item": {
          "id": "0d80a8ec-e869-450c-ac0a-2becfd7cf026",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "424c8480-2d68-43ae-94b8-09e7d6e24d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7883ed-5c2f-454b-bb98-f914da74b388",
        "cursor": {
          "ref": "9d676921-d224-4e6f-a8f8-d570c76aa461",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dcf2d32c-e95f-4501-878d-1b1da809447f"
        },
        "item": {
          "id": "0e7883ed-5c2f-454b-bb98-f914da74b388",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "83906728-a0cc-46cd-8220-a6e6d4622821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9249aa4f-0056-469e-9507-cad60990f65f",
        "cursor": {
          "ref": "4754df1d-31c0-45ae-ae45-ef77d37d0b77",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "205340cd-3454-4901-92fc-8235374ed058"
        },
        "item": {
          "id": "9249aa4f-0056-469e-9507-cad60990f65f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "11021818-ee75-457f-8d3a-704caff20536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e4620b-2caf-443b-a7a3-9faa98e3314c",
        "cursor": {
          "ref": "ae2dc6d2-3c4f-41a0-8513-6e957b27baa2",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0bca2819-609d-4246-b53f-42fb067c8184"
        },
        "item": {
          "id": "a1e4620b-2caf-443b-a7a3-9faa98e3314c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9bb055f9-026f-4ca0-ac1a-f0689ee9f10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0b0264-67b1-433c-8a46-c711416d4e51",
        "cursor": {
          "ref": "5c4d8683-ffb3-4be0-9184-30a124fee24d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c2b29e99-a66a-4d17-acae-9afadba493d2"
        },
        "item": {
          "id": "2a0b0264-67b1-433c-8a46-c711416d4e51",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e2ae9617-fa16-4d04-8488-493adf253c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4d4ac4-b74e-4d43-b3ab-f5c582091922",
        "cursor": {
          "ref": "efb8faf7-df49-4204-a252-c1d9b64589bc",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5dbd9213-ae47-4aa8-ae12-014a44e3db29"
        },
        "item": {
          "id": "be4d4ac4-b74e-4d43-b3ab-f5c582091922",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "02dafa99-c58c-4b46-84fe-82a2279f11d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312172ce-6649-4c2b-9ebe-684f08ea4b82",
        "cursor": {
          "ref": "041a5876-2a77-4e3c-8cbc-ccf74c341b69",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "59ef4e1a-7878-402e-8cf4-825783c08af1"
        },
        "item": {
          "id": "312172ce-6649-4c2b-9ebe-684f08ea4b82",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "02625ee2-f74b-4e73-a09b-c6328c60e99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfc94e9-e92f-4870-a660-56e8a21d55da",
        "cursor": {
          "ref": "c9cc84e8-8c88-4bbc-9176-1912105d1a17",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "80c7bdfc-ca2b-4116-b525-7e12152d3c65"
        },
        "item": {
          "id": "5bfc94e9-e92f-4870-a660-56e8a21d55da",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "60471676-498d-4674-95ae-4591a672961c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b92378-4b13-4e55-9ca6-e13f8ef23d0c",
        "cursor": {
          "ref": "4dbab239-407b-4f4f-857e-e20917010635",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "668228f4-626e-4689-90d9-9aa00a17f881"
        },
        "item": {
          "id": "70b92378-4b13-4e55-9ca6-e13f8ef23d0c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "40edd219-b28f-41d0-8cc0-96e5cc0a1d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1568f8b1-9b6c-4171-b6ad-bc15074984fe",
        "cursor": {
          "ref": "9a152501-efbb-4ca3-acbb-4146b8aaf52e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "72e3fa4c-d7b9-4f93-9315-2124ddeafb96"
        },
        "item": {
          "id": "1568f8b1-9b6c-4171-b6ad-bc15074984fe",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f97b61d4-7e7d-49ca-a2f4-4b030b97710d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24efdb44-ec99-4784-bd9e-4092da681ebc",
        "cursor": {
          "ref": "445d39bc-f113-4dad-bb64-453f19ebd026",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "839caf28-2d8c-4b3f-af4d-311f2538199d"
        },
        "item": {
          "id": "24efdb44-ec99-4784-bd9e-4092da681ebc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ed2e0d10-2752-4c65-85e8-fd521463cf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dec0dd6-3e9c-47df-a4a5-277c0feec571",
        "cursor": {
          "ref": "ea5cac09-a5f4-43fe-8090-225671f5321f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a62573ec-bda4-4ea8-9754-9a90d5cf10a5"
        },
        "item": {
          "id": "6dec0dd6-3e9c-47df-a4a5-277c0feec571",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e7c18b6e-c02f-44ff-a230-903260ccb6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2e303a-5b5c-43cd-b2bf-852fbde33860",
        "cursor": {
          "ref": "cbb7f5e0-dc3c-4a8a-908b-d267794a6e83",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dfacae9a-29ba-4521-a936-9c6cb20a3b5e"
        },
        "item": {
          "id": "4f2e303a-5b5c-43cd-b2bf-852fbde33860",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2b4095a2-22d4-4f16-9d33-f29f7eb9b848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c91a8bd-21f8-4b2f-ae3d-5c82d611e5c1",
        "cursor": {
          "ref": "58a861ce-c47b-49f0-9dd5-ee1a90a96bd5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "32e53e3b-3d64-49e7-9ea6-63074b3239fa"
        },
        "item": {
          "id": "8c91a8bd-21f8-4b2f-ae3d-5c82d611e5c1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ba8f9fc8-c6d4-445c-be5d-5f9e51862361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00724ce-9c47-45f4-91ef-519be603a121",
        "cursor": {
          "ref": "7548d990-524f-4507-8c26-6ad9cdbeeb4b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "030dc193-23d6-46b6-8817-86bfddc3bea0"
        },
        "item": {
          "id": "e00724ce-9c47-45f4-91ef-519be603a121",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "84a1ba31-b755-4192-a52c-23e30d6965c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bbb007-a218-4057-a875-32efac6a5051",
        "cursor": {
          "ref": "8988f002-55d9-4beb-b61c-e2862577c1f9",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "faf75727-6e81-4b7e-ba4c-5eeac4d1deca"
        },
        "item": {
          "id": "12bbb007-a218-4057-a875-32efac6a5051",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "17976d7e-f832-4dd1-a60e-cf231783c432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5b0dbf-e202-40dd-9974-148042a5d1bb",
        "cursor": {
          "ref": "f6f4d9c3-6e0f-447f-b0cf-1f1ef16fbc64",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dfc04864-abbc-4567-b786-9d7a286fba42"
        },
        "item": {
          "id": "cb5b0dbf-e202-40dd-9974-148042a5d1bb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "40bb513e-3188-4ceb-9f2b-5f048c9f99e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0d1ada-1a14-4d38-99e3-56661fe3c886",
        "cursor": {
          "ref": "7ac7f0cf-f9e4-4b6f-a313-afb884fcf659",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b9aab733-eb73-4e5c-8f01-1d7c877371dc"
        },
        "item": {
          "id": "4c0d1ada-1a14-4d38-99e3-56661fe3c886",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b9604606-ba77-45a1-9645-e5449f6bd55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d63223-66b1-4da9-b9ba-652e3b30daa3",
        "cursor": {
          "ref": "342a2fb4-55a1-49bb-b5bb-c21619578b76",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5be8f329-fc2c-497d-a35a-8605f92a2d20"
        },
        "item": {
          "id": "01d63223-66b1-4da9-b9ba-652e3b30daa3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d4bdb92e-bd2b-4e6b-b8f1-841f5f498bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a52f134-2c49-474e-93ab-f2df425edcdb",
        "cursor": {
          "ref": "bfc3065f-9593-4e44-ae9f-471622eafaa3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0c828590-1822-477e-9ff3-bbdcda19c542"
        },
        "item": {
          "id": "9a52f134-2c49-474e-93ab-f2df425edcdb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2684c2d9-9244-4672-a2e9-11f6730ae559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539c602e-2c61-4b06-9c10-a90ddffeb889",
        "cursor": {
          "ref": "195bd42c-a50a-4671-905b-cd8ca1e64952",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6f65f9c7-0453-4556-9e22-348264121b55"
        },
        "item": {
          "id": "539c602e-2c61-4b06-9c10-a90ddffeb889",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a2c848a6-5bb9-4b49-9e9f-e77e4c70dce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a492e1b-3a7f-45e9-b51d-46bb378daa80",
        "cursor": {
          "ref": "339de413-0279-40a4-b181-4d24999f2985",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e9e3fef4-b153-40bc-8ebc-e3b3bc0eb6ae"
        },
        "item": {
          "id": "8a492e1b-3a7f-45e9-b51d-46bb378daa80",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6c35df1b-b158-4519-9c99-d94a3c1ec81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22813b34-1763-49c5-84d5-d220141be849",
        "cursor": {
          "ref": "b66adb53-715b-43d2-8802-9d5bef125624",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ea3521fc-8c29-4f5b-978d-abd33f95b1ec"
        },
        "item": {
          "id": "22813b34-1763-49c5-84d5-d220141be849",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "13012aad-cea9-4dbd-a7c1-7090aa9d38b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c123bbb-3571-4386-ab22-a62e4e1dadb3",
        "cursor": {
          "ref": "10e877f8-cfc2-45cf-b10f-6127dc769ca4",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "38b4f53c-494b-44eb-8cff-3372d237c3bb"
        },
        "item": {
          "id": "4c123bbb-3571-4386-ab22-a62e4e1dadb3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ac4505bf-a665-470d-b4f2-a49a81d4e352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d503d3-e86b-425a-bd27-8e9b1bd528d8",
        "cursor": {
          "ref": "2e951897-bef9-47e8-9629-abfbc48ee90e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "409040a6-2ed2-4e33-9862-3ea0bafd7fe5"
        },
        "item": {
          "id": "04d503d3-e86b-425a-bd27-8e9b1bd528d8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e1e48d0d-c088-430d-8662-68ee81f3bf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf96e314-6b5c-4816-bb7d-15dc0d5c7f89",
        "cursor": {
          "ref": "681c8bc2-ab17-4e8d-9c25-59e6278f15c3",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "69a56af7-c223-4e76-be1a-fd37ad48d057"
        },
        "item": {
          "id": "bf96e314-6b5c-4816-bb7d-15dc0d5c7f89",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "394724ba-6921-4c99-a1f5-bfbebdb4bcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f628983f-ccdb-45d7-aae9-db13fe8d1772",
        "cursor": {
          "ref": "223faa95-b146-415d-afb4-261fef8d2fd0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c6f6ed54-9a98-47ff-90d6-5ff3e4fa45a1"
        },
        "item": {
          "id": "f628983f-ccdb-45d7-aae9-db13fe8d1772",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "442a84c7-c9bb-428a-bc95-a6d2a709618e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04246ef6-e074-4075-9f9e-c81d7e634685",
        "cursor": {
          "ref": "767e000b-52d4-44a8-a584-a07348d30c4f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f0bd76b1-4024-4fe0-b285-e0e04a4d5a45"
        },
        "item": {
          "id": "04246ef6-e074-4075-9f9e-c81d7e634685",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f22b29f5-964c-4c24-b476-247dc4bb23d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7fbe3b-7463-4d4d-bb78-5661ad276dc0",
        "cursor": {
          "ref": "896d00cc-6965-41c3-900e-51bdb9d856bd",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3c11b772-6b2d-48ec-833a-7826e0a71a9e"
        },
        "item": {
          "id": "7a7fbe3b-7463-4d4d-bb78-5661ad276dc0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "813666ed-889a-47a7-90eb-9bbc366be8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dcc888-f1ab-4c30-93e2-be30462583c1",
        "cursor": {
          "ref": "4aa74351-e9a4-420e-a33e-d0cae5e72717",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "add8bae1-8897-48e6-b9f7-5c8904eddbee"
        },
        "item": {
          "id": "08dcc888-f1ab-4c30-93e2-be30462583c1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4bc022b4-da57-4a32-8fac-680bbcd935f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a9ebd4-4bd9-4f18-8abd-191b51f0052a",
        "cursor": {
          "ref": "4bdeb47d-e352-4645-832e-2b971e26e06b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bf5bfb57-cafb-4446-9b07-6c98de232298"
        },
        "item": {
          "id": "f3a9ebd4-4bd9-4f18-8abd-191b51f0052a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dd4ba941-b11d-4b7a-9a02-3c77d9e1e9f3",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "7256fcd3-2a9c-4783-afb1-250188178667",
        "cursor": {
          "ref": "6cf81a90-034b-4bad-bee2-b4576a626bad",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "df5f234e-2b13-4f63-8d73-9e61f12c2255"
        },
        "item": {
          "id": "7256fcd3-2a9c-4783-afb1-250188178667",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "333fbc52-947a-48d6-9b6c-5c787b6a96dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1067dcc1-93e9-4391-94c2-c957387e9c10",
        "cursor": {
          "ref": "bd3507c4-5592-4334-8832-1eaec6152f20",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dd37cafb-6256-4325-84d9-ea42756b6c89"
        },
        "item": {
          "id": "1067dcc1-93e9-4391-94c2-c957387e9c10",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eba3382e-e6c7-4847-bcfb-55a7a0630226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbc4cb6-f086-4429-b27b-2df1d69b18de",
        "cursor": {
          "ref": "d69fae98-4156-41bf-8cf3-49774075483f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "369f0d3d-9622-4d40-9ba5-527faee6ad56"
        },
        "item": {
          "id": "8fbc4cb6-f086-4429-b27b-2df1d69b18de",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "65edc21a-d70b-4ed3-b64a-6b5b62f538ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1e6603-7631-4fe6-b190-76aab803cdb4",
        "cursor": {
          "ref": "8fa21c6f-96d8-4b20-841c-59c2181c7e9c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ca078cf1-ff06-4a3b-b66d-76fcd84f8df9"
        },
        "item": {
          "id": "3b1e6603-7631-4fe6-b190-76aab803cdb4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4bd879f4-cd5e-4a62-9a4e-bec17661447d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83784f1-17ac-4d92-a020-56fc356407d9",
        "cursor": {
          "ref": "e6853950-294b-43f0-a276-eb4878303501",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a7802421-f53d-4541-95db-1f5419628cf0"
        },
        "item": {
          "id": "b83784f1-17ac-4d92-a020-56fc356407d9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "95e4e1e4-8a13-45e9-88fb-e673bda1bac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571cbe7a-580d-4e31-83f5-822d1a1ba41d",
        "cursor": {
          "ref": "72c8b0da-9b8f-4c81-83ad-e65834ee051b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1b551e8d-6801-4040-ade4-42fafff59712"
        },
        "item": {
          "id": "571cbe7a-580d-4e31-83f5-822d1a1ba41d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "624e8c1f-5ee7-47ff-b5cc-a545859f9e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029fb13c-8585-486d-84e1-5a165d601ca3",
        "cursor": {
          "ref": "1d2f5dd7-1068-42b8-a1fc-c812350f5b17",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "38cab9ec-54e4-49ef-9002-9b0ccd936655"
        },
        "item": {
          "id": "029fb13c-8585-486d-84e1-5a165d601ca3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cf93853e-0b3e-4562-bc5b-d0926095689e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a5fbaa-c7fa-4675-a26f-b4788397948a",
        "cursor": {
          "ref": "88a3b9b6-be72-46b2-8cca-6df37467379f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a7eb8ffc-7f1c-45b2-b04e-f19abb96b591"
        },
        "item": {
          "id": "73a5fbaa-c7fa-4675-a26f-b4788397948a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "036cf5a1-f112-4c33-9926-729adfa6e4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cc91fd-71fa-4940-a52a-1456250b1266",
        "cursor": {
          "ref": "a773e916-0a65-42e6-ace8-6d8ff28fe82a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1dadf06b-1238-4e04-8f3a-2a8b1f5c62a7"
        },
        "item": {
          "id": "94cc91fd-71fa-4940-a52a-1456250b1266",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a11eee26-fc2e-4b1a-aea0-e6826cf92c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827e5e90-cd38-4fd9-9604-83b3aa97a774",
        "cursor": {
          "ref": "01c07336-b4d3-4206-a202-186044b34e2d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "beee1b09-e766-46f7-bc09-be24b3a95977"
        },
        "item": {
          "id": "827e5e90-cd38-4fd9-9604-83b3aa97a774",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b8d8b6a8-fb84-4774-b43c-b33737665289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5549e71d-6e2b-437c-9fff-dd7d68dbfa25",
        "cursor": {
          "ref": "17135cab-3175-44ee-89b2-b99eeaaac91f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "43be6e38-6fab-4311-93f8-04fe482a0132"
        },
        "item": {
          "id": "5549e71d-6e2b-437c-9fff-dd7d68dbfa25",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3ea9321a-ad7e-4d23-bc14-c2318dc318e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10da9cc8-b13a-474e-8cbe-c80052ccdea8",
        "cursor": {
          "ref": "d018686c-aef2-4f79-875b-5dab8b47d4e5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1fa9466a-7c16-4c35-9fbc-891de3a4b6a8"
        },
        "item": {
          "id": "10da9cc8-b13a-474e-8cbe-c80052ccdea8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "06ceffbd-bbb8-4103-be28-eb960cae76e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8debf0-9ac9-45ff-a2a2-5fd1fda28fbe",
        "cursor": {
          "ref": "44dff811-2489-4170-8154-0b7d1c109555",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dd621a5e-f462-4bce-8940-c549317b5b03"
        },
        "item": {
          "id": "2f8debf0-9ac9-45ff-a2a2-5fd1fda28fbe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "67041207-8696-4e95-97ad-fde1c3a7aa00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0310982-f735-486e-b599-3c1246b18a1b",
        "cursor": {
          "ref": "2516b91c-6f50-4fb2-97b2-e7466110bfd0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6c3353df-eda4-4336-bdcd-d93d4a42250c"
        },
        "item": {
          "id": "f0310982-f735-486e-b599-3c1246b18a1b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f90faa59-ca35-46c3-91cc-dc6fe0ddaac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a2d39f-8f8f-48c4-ad01-fdd9ede211d6",
        "cursor": {
          "ref": "29d1e84f-dda8-4d2c-b0da-9178300ce696",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c0e9c9c2-2cb3-4ad2-8cab-87c63a946a5d"
        },
        "item": {
          "id": "e9a2d39f-8f8f-48c4-ad01-fdd9ede211d6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b720425b-7a45-4cfa-87f0-ed0634b20ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d8ffcc-2c8d-4c9b-b1b8-5641137e46fb",
        "cursor": {
          "ref": "d68c1f9c-5c21-464f-a2d1-a6562ac17f70",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d0be5460-1893-4d80-87aa-72d979ef8381"
        },
        "item": {
          "id": "18d8ffcc-2c8d-4c9b-b1b8-5641137e46fb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8838a7a4-963e-4853-9fa9-c92f5897a7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3753339-6b05-44ed-9c6c-c1aea1bc08f1",
        "cursor": {
          "ref": "97c0b42c-5b2f-40f2-ae62-bd3144231823",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0268a362-efd0-4a94-8de7-db51175981c7"
        },
        "item": {
          "id": "c3753339-6b05-44ed-9c6c-c1aea1bc08f1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "655302d7-ae94-4ce6-baa7-15a4f0a427df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbb851e-fa9b-4d1a-9e2e-caa61d5a336f",
        "cursor": {
          "ref": "ff86b420-9373-4b85-ada4-693472f31126",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "90440745-2998-4fe7-afb1-9dd98e14e6c4"
        },
        "item": {
          "id": "8bbb851e-fa9b-4d1a-9e2e-caa61d5a336f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "148628ae-fbec-42ed-9f48-31c308d9150e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac378b80-4a4a-4c11-a530-89f1f2c78a2e",
        "cursor": {
          "ref": "8c87dcce-c177-460f-8a4f-b02f78b1baa0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b44842e3-9627-49ab-ac9b-afd54de61ebb"
        },
        "item": {
          "id": "ac378b80-4a4a-4c11-a530-89f1f2c78a2e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bf4922e1-242e-4028-bfd1-363d8ae37514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2148fcaa-49a6-4bc0-9ed9-3ceb173925aa",
        "cursor": {
          "ref": "2764e46e-d0d7-4210-9814-dd48f8dbc403",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "21c90a41-3d53-4393-abfb-67b3f83280c7"
        },
        "item": {
          "id": "2148fcaa-49a6-4bc0-9ed9-3ceb173925aa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "40e57802-d348-4a76-9ad2-0e734a5a0c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac97bf3d-422f-4cd4-bf87-333ccb4e303d",
        "cursor": {
          "ref": "3112ea5b-e31d-4491-9f7c-768dc1009bb9",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dd04c915-0653-4035-82b2-87db87a4b2c8"
        },
        "item": {
          "id": "ac97bf3d-422f-4cd4-bf87-333ccb4e303d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0cfa5844-bdd0-450d-b85d-b72df170aea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cf84ca-59d4-4ef9-ae3f-b1dbb806dfd6",
        "cursor": {
          "ref": "706c60cf-ece4-41dc-8441-17e2421eea93",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "db7caa1a-9208-498d-bdcf-35f63b91f92e"
        },
        "item": {
          "id": "b4cf84ca-59d4-4ef9-ae3f-b1dbb806dfd6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6ddfdc65-c87d-4831-9f0e-cb425935ca84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507d024e-75bb-4445-939b-a72d42d5b639",
        "cursor": {
          "ref": "c49c745c-d232-4ce0-acd6-530c6c708c43",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "12cd4761-e4f9-48de-8326-a785315f51c9"
        },
        "item": {
          "id": "507d024e-75bb-4445-939b-a72d42d5b639",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d7f2b47e-4da9-4b66-918e-f7c746e52973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c92ea9d-7237-4ee9-82f7-f39a5551a506",
        "cursor": {
          "ref": "dc0dd8d7-a27e-4778-a590-df34d455c421",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7b3e5bb4-6abc-4d56-a33b-fd261c387e3c"
        },
        "item": {
          "id": "6c92ea9d-7237-4ee9-82f7-f39a5551a506",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bc1982e6-ea7d-42f7-9428-1715497e49ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8e75bb-7424-451f-905a-43da0ff211c0",
        "cursor": {
          "ref": "a507211b-134a-45ec-9557-87836c31429c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2ec59d78-bda9-40df-8a84-eb6f03775b39"
        },
        "item": {
          "id": "cd8e75bb-7424-451f-905a-43da0ff211c0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "298acf5a-be83-46b7-8b9a-5583e4637f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0251c8-c70e-4ccd-9cf6-175d92a9a19a",
        "cursor": {
          "ref": "6597827b-a59e-47dc-a6e2-261f87721584",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4e5cf315-8b4b-4c49-b615-522ab71b6d83"
        },
        "item": {
          "id": "ec0251c8-c70e-4ccd-9cf6-175d92a9a19a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "965c6ed1-6455-418b-8ca8-4d1c54e63e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a51642b-9aa6-4312-8da4-42e67e76cfdb",
        "cursor": {
          "ref": "c7ba83dc-ca4d-4ab6-8ee5-53900ff522ef",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8c4e3a53-7263-44b1-bc2a-f95adc529057"
        },
        "item": {
          "id": "3a51642b-9aa6-4312-8da4-42e67e76cfdb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e1649ad5-8e15-46ad-a646-6e1d5f8b111a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6373dd44-80da-4514-a7de-6db116c2477b",
        "cursor": {
          "ref": "4afac895-fe3e-462b-8588-1d139a1689a1",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3ea9a5e0-3dd9-4013-91ba-80f5ee278662"
        },
        "item": {
          "id": "6373dd44-80da-4514-a7de-6db116c2477b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c6260079-e111-4fe0-9a81-d3e86a91e025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8de5cb-679e-4ed5-96f4-70283e5a1cfd",
        "cursor": {
          "ref": "c2b90f73-c94f-4eec-9767-6fd8ba22d6de",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e3dface4-5097-47fa-9093-b2b0d9f1abe7"
        },
        "item": {
          "id": "fe8de5cb-679e-4ed5-96f4-70283e5a1cfd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1af31897-6bad-4377-bdab-d05fc827dbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cb2393-f6c2-417f-b5c5-dff857d014d7",
        "cursor": {
          "ref": "a406917c-8e9c-4dec-8b8d-28726f77cb47",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0d2154ee-2612-4d94-9ddb-e68e8f30dc65"
        },
        "item": {
          "id": "e4cb2393-f6c2-417f-b5c5-dff857d014d7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ad1f0601-1da8-41c8-8dd2-16564d5512c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6b2e61-ed62-4091-92ba-f831faeacc07",
        "cursor": {
          "ref": "0bf061f5-b75e-4960-aa17-156c9da64500",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2ba13295-73fe-4225-aafa-9df640fcca8a"
        },
        "item": {
          "id": "ad6b2e61-ed62-4091-92ba-f831faeacc07",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "82568216-b831-4318-83af-f3ba78f2f2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a8107e-1d67-44fd-aa76-39fbef2bce90",
        "cursor": {
          "ref": "da3f29d5-cda6-417f-98d1-f04e8961eaeb",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "34b20f8e-580a-4eb4-b2c3-2102457c9936"
        },
        "item": {
          "id": "f6a8107e-1d67-44fd-aa76-39fbef2bce90",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5f3f168e-463d-4f3d-9de8-791f3bdb2250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f5b825-d807-41bc-a23f-a99df836c665",
        "cursor": {
          "ref": "6fa33b68-9cf2-4a8e-8b64-29fbe89c4c0d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3452e7e7-37ca-41bc-803f-f6b6546995ed"
        },
        "item": {
          "id": "a1f5b825-d807-41bc-a23f-a99df836c665",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "562a3fad-8971-432c-8c23-c3367574f236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8468ba5f-6e01-4cbb-883c-911f3165d405",
        "cursor": {
          "ref": "58d72137-bdab-4c8a-9620-e52544045860",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "af0788b0-ef29-4ec7-b087-a0b21424cf06"
        },
        "item": {
          "id": "8468ba5f-6e01-4cbb-883c-911f3165d405",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2245bf5d-80f9-46aa-8d63-cb70bee5faf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7256d1ac-84f5-451a-820d-158012a731e3",
        "cursor": {
          "ref": "2c227c7e-6664-4b94-904c-f03bb23b4c00",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4e4c6b5d-602c-4670-b9b3-21f6096632e0"
        },
        "item": {
          "id": "7256d1ac-84f5-451a-820d-158012a731e3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d9aca783-78f9-405d-aaa6-d58bbf9dc203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fea3b91-fff0-4bdd-a17f-ee45ca60974c",
        "cursor": {
          "ref": "81847d09-d6e8-438e-a2fb-55634605a86d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6bb1547e-0e81-4417-9ac4-13a6acf21b93"
        },
        "item": {
          "id": "9fea3b91-fff0-4bdd-a17f-ee45ca60974c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7fdb84f1-2fc7-43cd-93f1-ce9b80466aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733f2be5-bb7f-4df8-9e60-5ab0fc29d9cf",
        "cursor": {
          "ref": "7e4e2265-2930-414d-905f-5a9b6453b708",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0867d1d1-7d7e-4af9-80fd-5e32ba292da6"
        },
        "item": {
          "id": "733f2be5-bb7f-4df8-9e60-5ab0fc29d9cf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2d9765c5-3ef0-4b16-b829-c0c1e4f1c97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50baff6-25c3-4832-a74d-ba54e3dbe630",
        "cursor": {
          "ref": "dd604420-d239-4089-a398-d3fdf2d508e1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bd3f2e4f-d825-42c3-bfed-8836a459e903"
        },
        "item": {
          "id": "a50baff6-25c3-4832-a74d-ba54e3dbe630",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a195571c-391d-4dc8-96b5-d939ec7d106c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce7250f-1e88-433d-ab86-0b20363daeac",
        "cursor": {
          "ref": "5d39c296-efb1-405f-a2df-f1fbce115efb",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8789ccee-6306-4624-870f-ce82598aaa41"
        },
        "item": {
          "id": "2ce7250f-1e88-433d-ab86-0b20363daeac",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "46d10f35-2802-4bdf-8d3e-f1c5124deefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9644a42b-c332-40a7-9eb9-ff3a12432a8e",
        "cursor": {
          "ref": "49983d63-c879-47b9-8a0a-d720a22df8c4",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ec5ab821-1df6-4d34-a1f2-f47b2ac770e5"
        },
        "item": {
          "id": "9644a42b-c332-40a7-9eb9-ff3a12432a8e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3089a25f-b043-4c93-a26d-0e82f6253e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f46ed8-281f-45fb-92dc-4c59bda6afb3",
        "cursor": {
          "ref": "ed2f9ca7-8bdb-465a-8010-b0bc56cd2630",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dd54a3fd-d0df-4d7e-bdf9-c63da5584e91"
        },
        "item": {
          "id": "94f46ed8-281f-45fb-92dc-4c59bda6afb3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ebd7d068-5158-417f-8811-079432aee3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27370c1-7283-4ef6-8fce-dff40782f8ae",
        "cursor": {
          "ref": "fb482231-c33e-405a-9d67-333e25841fea",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5df49366-994b-445f-8ad3-ae4a1154c21a"
        },
        "item": {
          "id": "b27370c1-7283-4ef6-8fce-dff40782f8ae",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ee83bb10-a050-4b96-a6bd-03e12e368f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fd2394-2dda-4669-8d5b-65a6e11dca3c",
        "cursor": {
          "ref": "ba9869db-9ce4-4269-b592-00009ee32e42",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "be822e2d-6278-46f1-908d-b3961f993fd1"
        },
        "item": {
          "id": "a3fd2394-2dda-4669-8d5b-65a6e11dca3c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3dc3204c-dabc-4256-8f89-006e796eda65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54707e4-0e70-4c6d-acb0-bb5b1948872c",
        "cursor": {
          "ref": "84a74997-465b-4493-ad06-f80fedd32103",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "795c1875-ce7c-4f3f-97b0-eb6d569a0743"
        },
        "item": {
          "id": "d54707e4-0e70-4c6d-acb0-bb5b1948872c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e1f2d798-a47b-476e-bbd9-0798212f287d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b9087d-a83b-4645-adba-a2d3019515ba",
        "cursor": {
          "ref": "2524ec31-d559-49b3-bb82-6a5f91335bdc",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4af1ea41-8a0f-4016-9f9a-3d0f73859305"
        },
        "item": {
          "id": "86b9087d-a83b-4645-adba-a2d3019515ba",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0f6935bd-5f8c-40a4-bfc1-c72e6b7101f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76eca42-da04-414b-8b27-6188d4a1cd0b",
        "cursor": {
          "ref": "fffbdba4-a86f-4fdd-9755-8a7d341094a6",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2810fc8e-3c6d-4c6b-adf2-7f4cb70e7d51"
        },
        "item": {
          "id": "b76eca42-da04-414b-8b27-6188d4a1cd0b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "13af6862-8706-4881-a8cb-b1959a57578d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ff18e9-59da-4ae7-bbd6-e29f80ce1067",
        "cursor": {
          "ref": "120a4258-f1d7-4675-92c1-a9ede6cf083f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d2a2e4cd-8ed5-4ea4-b10e-821b68aa3d96"
        },
        "item": {
          "id": "d5ff18e9-59da-4ae7-bbd6-e29f80ce1067",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "34d5563e-069b-49d9-a2da-ff6973b855c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcee4f61-0200-4f8d-b7a8-c48779c05491",
        "cursor": {
          "ref": "9502a700-278f-4103-9bcf-b57cda0f3c74",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8cf79c7b-8ea0-4f31-9de9-ee4f5a506c51"
        },
        "item": {
          "id": "fcee4f61-0200-4f8d-b7a8-c48779c05491",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dbd53752-ff9d-4113-97eb-47e00a5a46e7",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "548b6c32-a43b-4d34-9029-08979a4ff9b6",
        "cursor": {
          "ref": "71749530-f88b-46d9-bb42-b29e69e52282",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ea315a75-23ac-4956-a5af-796d0785cb9f"
        },
        "item": {
          "id": "548b6c32-a43b-4d34-9029-08979a4ff9b6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1b763663-e752-4836-9ed8-9bfe91982494",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0914a993-ba16-48e5-8b0c-e5047a33771c",
        "cursor": {
          "ref": "ba532040-e720-4f71-8e90-4a53d13b7b1c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "86929a59-93ea-4705-8a3d-d4d1cd18e7b8"
        },
        "item": {
          "id": "0914a993-ba16-48e5-8b0c-e5047a33771c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8996273e-cda6-4bc0-9140-78d1f76ba76f",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a1b915-53af-4122-bec0-75d481fc6729",
        "cursor": {
          "ref": "0bfb15d0-df51-45a7-a3f6-a9bba91724d5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2f75655f-be93-4bab-b917-232054a73bd1"
        },
        "item": {
          "id": "64a1b915-53af-4122-bec0-75d481fc6729",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6d7ca182-3aa4-4e50-8613-7167114b2608",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a1b915-53af-4122-bec0-75d481fc6729",
        "cursor": {
          "ref": "0bfb15d0-df51-45a7-a3f6-a9bba91724d5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2f75655f-be93-4bab-b917-232054a73bd1"
        },
        "item": {
          "id": "64a1b915-53af-4122-bec0-75d481fc6729",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6d7ca182-3aa4-4e50-8613-7167114b2608",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b8aea1-7776-481b-9cb4-1899ab0ac75a",
        "cursor": {
          "ref": "c09822a0-fd90-433b-9d9f-9ae92edf87a3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8c4b1b5f-6dab-4fb4-847e-fa7a82f8026d"
        },
        "item": {
          "id": "f8b8aea1-7776-481b-9cb4-1899ab0ac75a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f5f1bb49-9111-47b6-9c0f-63b8d189cd45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c268182-0769-4b4c-89d6-1f55f9d4dd16",
        "cursor": {
          "ref": "f8a5f63a-c454-440a-8945-1cdf08c4e15b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b6128371-ccb7-482e-a6b2-580ceafcd042"
        },
        "item": {
          "id": "8c268182-0769-4b4c-89d6-1f55f9d4dd16",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "52ee7d36-f335-408a-a819-bef59ab35c43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}