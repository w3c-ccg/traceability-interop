{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a8bf17e3-506d-4365-89e2-4e19aacb4b5e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d759f181-4da1-4f99-9304-f4f6c5ba587a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f864d5c7-1bcc-408d-8f48-d40d9278fda9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dc9d5f26-7343-4547-bbad-56936f6976de"
                }
              }
            ]
          },
          {
            "id": "a7fe05ba-4d89-4e1b-bcb6-9180abeebde2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e93a6f10-47fa-43de-b4cd-dd97fdb493fb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ddf4b072-9310-44c9-99f0-6dcf1f5d9ce7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e48c72bc-d817-4c4f-b8a9-eeadb4c8fdfa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "15f8bd19-8b8c-43f4-8264-348afd55def6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "56252d4e-97b1-4279-bf1b-f67264fa841c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3988f547-d818-4631-a3c3-3af4416da82e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9794d207-b39f-4b8a-813e-ba8d76e04087"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5037cc4-e6ca-457e-8001-dfcbdd681da0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65a3bd91-ad13-4656-aff6-ade40bba0d34"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "265330eb-fde9-41b0-a645-ca7ae5ce88bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30605292-aee8-4bd4-83d3-45f83eafb948"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3930b9b-5857-4d18-87fe-ac53bb5d22ec",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ead20f9f-888c-45bf-b2ae-613ba20939fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3123f24-0ae2-4ab3-bfd3-669cc44cf8ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fe0deff-f278-4d96-966e-de43ab30110e"
            }
          }
        ]
      },
      {
        "id": "6794fc41-0513-488a-8bf1-93f9a99ee370",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c6b5b51b-2974-4ffb-8c8c-603a547194c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "404830d2-af2c-45ff-a88e-8f14bf4eabde",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6bf93f6-15b2-4348-94e8-8c32b4f39733",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2501f085-1c9e-40bd-a00e-5013974bbdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07459222-dd80-4610-8d9a-626c4ac29813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ed111a-41a6-4be8-9f3c-666837f27b42",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357abead-9a1a-44e2-b565-040dc00a1bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8b0c767-80b5-4dda-be9a-d1ba991194ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626feb1b-dd23-4fc2-b7b6-c1f49a68e588",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ea5177-4dbf-481f-afc8-6fc4a050f3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00f8bcd6-cbea-475e-a43c-4c6cdd37046e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "121e0053-9474-4a20-84f9-f4efeeacf838",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a32c39e9-0b18-4c24-8afd-feeafea8306c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1b305d-d101-4dae-9e73-3f464a552ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28df76aa-7702-45a9-a3eb-418e41f355aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ed353d-a254-482a-8253-a2e3b89bb622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3203cfa9-4b62-49ea-9bee-c3d25622c8bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e08d9fc0-cf58-4e6a-b202-ab468553ce45",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f0fd9a17-b0e4-4486-89f6-d84f990b4c14",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71ed2692-6521-4379-8955-ea2d4c9a3912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3c99c8ac-24f9-4b1a-96f9-7aea9ee9a174"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "286af965-e285-4a78-ba8e-7990cba15ce2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bdf21adb-8c0f-41e6-9117-80a656a06785"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61f212b4-71a0-43bc-8aaa-5bdffd63cb5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b529321-5cfd-4ec3-ad6b-70794fd5d019"
            }
          }
        ]
      },
      {
        "id": "af249c96-cd63-40f3-a9bf-8108d83673d7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5a512cea-3577-4104-a250-84d4e8ebe5a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06018c6f-43ac-4721-bf29-0a8f98d52d17",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bb393049-9929-4acc-b01b-b2580d3a9186",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02e985e-43ab-4a4a-bb64-8fce90acecc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9aaa08c-3de5-4ad1-a4b0-e67ccb87e849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b45e837-30df-4f41-9ae4-76a8f99ba216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e9d2725-a918-4779-afa9-aa47afaf4121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae48edfe-5b2a-409e-9836-14a931d4aa98",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9681b1-c113-4ac1-9cad-0c25262968c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8924165b-0d00-4703-b3b9-2965444e54ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dbbfe4-b34f-43ad-96bf-2ae805962c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "556134b7-4be9-44e6-908a-eb2fb7c40171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c18707b-9f0a-403c-b827-38350d8206e1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a03800-caa7-45fe-9520-6d320c58683e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe87d238-1f9d-42b6-8ab0-e95d6cf24f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b3916f-ef61-440b-a8bc-b239d3546742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cacf768a-377c-4e31-abf0-9c021ed04dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01e30ad-9332-40b1-8de3-9ee6e9b2f0dc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a81e27f-abd6-446e-9ee5-87dcc1b4e13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cca15cd-1ece-4feb-b705-8613d2f07645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db23cdc0-f3ad-4f5e-91bc-b8e2f4ebce4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ab6c80d-8e05-4be7-9cca-c86a90afbb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fd3554-c349-4713-859b-24de18c8ce92",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd401aa-b967-4dae-844f-2c00d7c0a83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edacdc8b-314a-44f0-9867-bdd679ea11c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23257edb-f67f-4b9b-a543-e631ed0cdfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fc51b9b-0603-42dd-9958-cb8db3c536ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5f897f-43e4-4551-b6e5-cb7953bd3105",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c021fc7f-d216-408d-af53-30b9159e3508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6746b4-41f2-4b90-85eb-3932ff55f798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51cb045-3f2d-430f-bdcf-42af6b7c94a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbac4f12-fb79-47fa-9ee4-55b90de3e284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269beaf8-35ec-4835-8dbf-a4e587dd6dd8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dfccb1-a73a-437c-9905-39cb04c49ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda504eb-2ce7-4779-81c9-6039a9c5d20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedde2f5-1e23-4a40-8cab-1f581e20a0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f99e94e0-ddd4-46e5-8013-01a2ccd64319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4c7b0b-adf7-4dc7-bc6d-2d75a364d251",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bd7307-8163-4221-bc8f-3f6ba3cc9af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f230d6b6-cd01-4ffd-86e5-2b9f394d46a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5ec0ee-521b-40b7-9e02-7a415c6d4211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32e190b9-d33d-4959-b28c-bcc591417a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a11b269-524d-49ab-95a0-a212cc2033a9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5d4d12-de19-4a56-95ef-5a1c4014506f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18693683-60fb-4e7b-bdfe-30f0209ea8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ecde8f-881f-450e-bc0c-c3b349324a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8080fe8-0c77-4457-ba36-76c184619c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a7b957-835c-44de-aae0-24b9d8823107",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39792c0a-7c32-44a3-baf1-58e279f52f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a114bc-ac49-463c-9e9b-1f4f27bdcab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91158acf-6f5b-428a-a032-615990d3ce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f9fe881-718e-4dd4-94a1-320a1fe68aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20fd354-5740-47fd-8b48-f25fc44da806",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4901056f-bbd8-4156-9bf2-312e3ef7f181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca901270-661d-4bde-9885-0fbdd095027b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e00539-891d-4228-93f9-caa0cb31e847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce5d6a65-26ce-4740-a199-64c800c6c6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2acc99-56b5-4ebb-9fdc-4562c09b3a9e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd8b23a-6cda-46a9-a529-2f6117454e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0be0eda-735a-45a0-bdba-fe5c322cc24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056cd244-c934-424f-843b-19faef2b198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d05125d-ffbc-495d-842e-259aec83ccc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9acb23-1673-4bd4-b862-a0d4533d7e4f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cba40a-a79d-4a1e-aa60-3dd8165c16fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55283360-378e-49cf-ae83-29f577aa4051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e4dfa0-858d-4cbe-93e5-18ea6dee6c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "065032a7-2219-4b26-819d-a0ad9a99ecb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d65741-9bbe-4552-bf22-0b2c9d6c3524",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7414ad6e-994b-4795-bb0a-12e0776a585c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6ae7dc-dd36-46cd-bbc8-d9b0361dd278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2e2026-750d-4ac0-a207-cb35a49f2dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99a1e580-ba1d-4a02-a55e-97707c717bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaaba81-dfef-41ad-bd8f-25f4707a4f8e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983d39aa-367c-414a-a204-9b3b3f7977fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2726c354-5966-44be-813d-6dd13acb011c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2ab442-af83-45eb-9e6f-1d15bfbfddfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c436d963-80f2-4e04-8e11-a98d8e8ec3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe1c9e2-682b-4814-be5c-8f847c9a0eeb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdb25cc-9562-4128-b0e5-ac57e5e31d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc7707e-30a3-4a33-90ec-6f1fd226b6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806ec937-4cd4-42f7-be31-f3792bbaebd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "464b7e07-2178-41dd-b765-267a420bfb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36f0bf7-f195-4910-bf46-8b4f80e8ef13",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8787fd-31ed-4291-bb68-8d411ba4c937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefb3f1c-65a9-4dd4-940e-23c6abc5c907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3061b054-6095-4617-9e61-4853ed250884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf247bc2-d780-47cc-b734-38aeb5a35e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e70bb47-9abe-4a7c-ae36-f877cd543cb2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1a64d3-ec2e-4aae-82cc-cd8282800754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ca0e5f-2fa3-4828-b9ab-bf82856c265d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6d5483-319d-4fb2-b31a-011b23a2098a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56b1afa-1332-4bfb-8ace-8c9d0fd5a326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403040b2-38f5-408d-857c-53a4bfb15ebb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11387e67-11d8-4b57-bb4d-35dd79fdef4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe063566-b9ed-47c5-96e6-d831f123b940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0517123-e870-42c7-bd55-dd564f307700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f74a1418-5f58-47e9-a6e4-b56bfc99d7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b861fde5-24f6-47ad-b5f1-869450f5f492",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0522d9f7-4922-427f-8d00-5c12d81be118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b61b8ec-7e7d-40c9-aad6-adf2b044efb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732869cd-4eac-49e6-be29-cf9de3c86ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea694991-02bf-48be-bf74-311b950c4ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0affc66a-2ffb-49fb-8da3-e32d300e8298",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa60218-7844-4a7c-b399-4e0aa86784c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be8426f-fd67-4175-a8aa-2ce0636781fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cc254a-af0a-4ed6-83d4-a1343254e346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "858580a8-86fc-4742-b2c5-281ffff9e391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22539cf-4300-4ceb-8403-624b9748587d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daad9dab-6a46-4378-888d-9237aa6c9d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81192f41-8b55-49e8-aec4-4a052cbed65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc2d20c-2bb7-4da6-862f-e8cedc77d881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87d56017-6ce4-400d-bfee-c91a4d328cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5c05a4-c2b7-426b-8758-e10debac80d1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecc7dd9-5220-408d-9e03-7b743c9f0b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfc8b9c-b9d4-477a-a0b3-38b00445b963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3affa9-8957-4efc-b44c-685d3b396d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64f466cf-f251-417a-9f17-14826a7dbbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073aa848-7a75-4526-818a-a1a8dbced2f5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a70b58-4668-44df-8302-d6ca595789e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76e75f6-4e9a-43ad-a3c8-8015d12f9c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f92b01-abc4-4739-8d99-77e47f0c3ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e98aa78a-483d-49e8-86a1-bc14af3be1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721c413a-c30e-4fcb-9ba6-869afeddc414",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe4fedd-e8b5-4000-86e0-87fcaccefd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e597d1d-4df0-4740-b15d-18a7d7b856ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e508336-22b8-4d2e-83f0-6962e87267f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b1fdda-b899-4100-bc1c-4a6e9fa93c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cedbc7d-1262-4698-a4dd-63b985979fbf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff55cd6-ecc1-4cd6-b737-75b262af872a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f64132-2339-49d9-a6ad-43e9b54b39d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e046910d-90ba-448a-ad05-6d074b113a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53bc659e-1664-4051-b266-155826b2b532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3d005c-d6b2-4bd2-98fe-b19f1cfd3839",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cd827c-334c-489a-97c9-e7a94693682c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bb7e7b-3157-43f3-a781-9e3558a384b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d261479e-674d-4b8c-b3b4-27463573228e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c53c5ac4-3109-43b4-92b4-bee1005cabc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf40f95d-4523-4bc6-aa0a-3fd8f19c45b6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d264da-4250-4a84-9cfb-243f8fd004a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a8ce37-1f75-4dad-b970-e9dfdf9e56a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d0f572-3bfc-41e4-91a3-d966af78c520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44631294-d8af-4f85-adbb-f4566dda9e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9914788-c159-44da-b6a9-1dfed305fc77",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa3fa04-549b-42e2-90ad-fea71723f7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4322a9-0a67-47da-986c-02c406419caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95a91e7-a8cc-4545-ac73-1a2791ebf508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af811a7d-a81b-44fb-bf27-d3259cd17bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01acfde9-31f1-4deb-a3f9-b1197d5aa67a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d99e9a-a4c8-4fe6-aa30-19bf2a421f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a2cda5-350b-416c-9535-bebf5ab3ce64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138dee42-15c2-47f4-822d-8f905d1d17cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "75fb9343-c4c3-49c3-b3fb-9af0f1cc9462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbec37dd-eb5e-4c9c-8d29-85edd6a7c91f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c7e854-4819-4a55-beec-7fa66ba61566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44de1e75-d8fd-4a6c-8bb8-206158f6a594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73f824f-efcb-47c5-bf3a-6eb339c2b697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b971ad-56b2-45d9-a87c-d0a35cf34cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91b7917-1c65-4074-b492-536c24e8621f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bdbfc6-41cc-4a83-bf38-08bdb7e30dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79be041-300b-4878-b266-bda501cf81cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3f1913-4c84-4817-9a95-106ccc2e2d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f921d12d-74ea-4536-a1cb-b4819ceb4289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e581642-6b4d-4557-9c7e-e4e7be5c36ef",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab251e9c-d4b4-4b44-b572-54e6f0097d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945e0bee-699a-448e-8b84-7a6bf4aa0026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6d825d-80fd-4479-8329-1037d8137b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9576a600-3caa-4081-9279-063f7ee19ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5b922a-9117-4bbd-8272-99b5cf567a6f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b480463-d824-4d2d-817b-f3eea85c4391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b320cc-ee84-4261-98d4-d9d6c080b26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba649437-1eda-49c8-8e12-1e4270193f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c771756-d9d2-4935-94cb-fa607ab4726b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5a16f2-773c-452c-91e3-1eb81fbbe345",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc4b78d-c714-4fc3-83e5-11bf77d2fb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3206893f-2e91-4172-9379-491557a7dc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ff52cf-73e3-43ca-aac4-809b147b134d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c162ad-b6c1-499f-93f1-1a7c874acb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceccaf8c-d0ff-4bac-a588-5a28c72b05dd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54c5573-4707-407f-a434-497c87a4cd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e47282e-a57f-41aa-ba94-7a2b6b57dbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219742cc-1bf1-40b2-8ca0-cf89b496566b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9613bfdc-58a3-44be-9107-a8ba87df9eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81c2ba6-1b89-4605-88cd-d062ca881049",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0cc6fb-8cad-423d-9c6e-6253841c2d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baea9e6a-63a0-4c86-9ba0-9bbe350d8139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a0ad6f-0801-495f-9b29-42c56d43f96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7da80e3a-9abc-4518-a1ef-6ded32897e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10c22e0-0047-4f45-8b36-9a0b2f711bae",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e5e8ef-074c-4d1d-8033-5127de189398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dea54c9-200e-450d-ba20-4065ba7bcace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3088cb77-fd92-4d5b-bab5-f3a74fa561ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba723220-09af-4251-ad5b-9a12acff4506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eae146b-3c65-41fd-aba4-18dea43e434d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8b1361-6f1d-440b-b93e-40c9f8034882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17cb75e-8696-4bdc-8c9f-1029efaddc03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20006f86-f3ca-4104-bbb7-6523ed946cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "821771bb-ab65-4e4d-8245-b192268113d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76bb121-1bfb-4434-9310-80e85d841c11",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109db64f-3c80-457e-abb0-640f527e3dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a806d5f7-952d-4aa6-8dcb-19fdd1e11727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96f7e30-c4c4-4f4b-acba-e800409264bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b67c60f3-92de-4367-bc7f-e12f99d8a713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5dd6d4-a5a2-4597-b643-c99a853cb368",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960cb7fc-5a14-4132-9c5d-804441519456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee25b88-cc00-4d2c-b5f6-c382770af6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f74a99e-a4cb-4800-9198-775bdf801f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb20cab-1128-4b21-8c30-707a63bc3698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcac0fe-069f-4f50-9373-f7e52e120f5d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22321773-c7f4-4021-99ed-6fa05504bac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf6ca56-78b5-4444-8538-449abf93898b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b119321-fced-4d67-ad36-6b2cd456b3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "06c7e391-d91a-4336-a2e8-a1dec9474c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c68b2d-29cb-46e2-9ebd-f4e1f63c20b0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1e5c7a-7301-4003-b79f-093c10697bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fafad5-3899-4c08-a540-e4a436fe3c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7902c23-b68d-4eec-8882-d76399a4b335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "70aa41ee-f9fd-432a-8286-aa3e50da24d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6ca289-f0ea-45c4-a776-9130f1fd146d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafed318-9eb4-45c4-ab07-975950dad5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa1b6b5-8400-4799-a10f-504b4e443f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f4a0d9-61ad-4597-988d-ea9490fb99f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a584654-48f5-45a5-a7bb-da621cda2adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bed923c-9af8-4d4f-94c0-dd2ad66ee63f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe39ddfc-b30d-4e52-b5c0-b0893db99951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb24f9d-c3dc-4c9d-bbb3-eaccbb2933e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bb0a32-6ff4-4d2e-9a0c-d9d46fc3ae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6b7766-588e-4cc2-8b1f-8159891c4443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707031c6-86d5-4e7e-993f-f3d2c3af4a49",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd9be2f-1d3c-4b84-a45b-20345a088abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d3e88f-f909-464b-83bd-78e26c95ea43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab347059-5c96-43cb-bebd-80f3da06a047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb700c8-1d48-4623-b046-68f0be03d150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fd9c2e-c9e4-4f9a-844c-ff3acb666eaa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f26e79-115f-4e73-a5f9-cd1b01c6d9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c872eeaf-9f36-4cf3-ac32-52a5757ac124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a73750-e8a7-4f39-89f0-b19e1f88512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a262fe6b-56c8-4bfe-9e15-2581e9d40be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d316f0e4-7ad5-43af-805f-18530108dd30",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7865d025-c67e-4b5c-a183-e111b4b9a11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d08fc5b-9f9b-4e61-a8ad-52ef7b7dd426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee173e0-893d-45de-aa75-b0ec44ee398a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef388db4-560e-40c3-80db-80615930913d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfa27ef-a9b4-4542-aa73-9960758d1de5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc811a05-4ea9-4a88-8cdd-272b0df0c7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cd4941-3534-4f01-abbe-26b397643d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c429836c-1e53-413e-b1e4-80452928ad7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9296eba4-b52a-4e47-beb8-8b3a2d2f8757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7212075-4ab0-41e6-9e37-ede71ac3211e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f3198d-ff20-4406-ba75-37690db4f3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a30b54-ac23-4f08-9146-6fb4442922a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c813caf-c7e6-4ea5-a953-7002cedc27fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2437ac68-d885-499c-bd60-b63c1d6bb532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee03ad6-b0e4-4128-8e99-eb775c0645e8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852b407b-cdcb-40c8-859e-272c6284016b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4dfb25-1bbb-47a7-8ad6-43eaa4595614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a516efb-9ecb-4819-9187-72c1d6284924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0542f28-adc8-4d1c-9b6a-dfcd8f276ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d91da7e-c213-4b8f-ac64-00a999708c55",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db607b1-1ebe-4847-9fe0-6c98a8e98dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90c324b-3b96-4b19-84ce-ffb24af2de92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1154a027-9469-4c5a-b280-b22191c7922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "319f6cd1-f8ec-4946-8e7e-55f83c569504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904b79f2-362d-43e6-bb04-a6d579c4c983",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2197df-865c-4762-b317-55be9b1347ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72d3720-9b8d-475a-ba7e-cf24fdd8e149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9f4b34-89ea-43f7-a673-67f126f5a4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da8f0f1-d020-43b0-b2cc-b62a7b95c9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51113955-6dd4-42e6-be74-c84fa427a012",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd522ef-0966-4e43-b4f2-fac6cf1940a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2447f87f-d178-4839-bb41-f97fd49705ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8a1d8c-3276-42ff-92a4-e62487db2c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7588b760-e485-4f45-a580-52878b083bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c14fb50-53e0-44a0-8483-20d1df798b2a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679f0883-bcd2-4b75-b0c3-6f1a5ef09b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889a3348-830d-42a4-8048-02d0794c50c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38fb3c9-4f97-4488-8754-ad5914bc9cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5ad0dc-4089-4c63-a979-e7d312625fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd49b98a-a2a9-402d-8865-2d872bc970e5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73e67e3-f861-48af-a393-64cfb6f337a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835a8d6f-8dc8-4810-8459-d8f0fbab4e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfeb80e7-ee0b-41c7-9b79-c2e4b36e7ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4472d913-34a2-4c88-93b3-1ac37dbda402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62887323-32bf-4cfa-b285-3a8176877b54",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020dff33-f345-4dda-9ae4-47650520b7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8581a857-1b71-4a66-99cd-2429fe4aaca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03b9b9c-4851-4d05-8391-79f39deb804c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "98dcfd75-6606-4229-ba21-e1b70d737a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054a0a45-40b7-4fbd-b727-d420a75d0e46",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca47df78-8b4e-46c8-8342-ca5a70fc97b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4b8eae-c6e5-40be-aefd-8ed370a47b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d439a4-b61c-4d0d-98bc-fe509f52ae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b04ed972-ee50-430f-9483-daeeceb5012d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95ed5b9-d07b-4d69-8fad-cb24e0c1dbb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182cad09-8a45-4786-bbc2-7d463b3c85c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1257480-062c-4fbd-9329-f63c6f7a683d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46368099-af6f-4d95-ad5f-6685f2a0fd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "613ee4dd-3822-4a1e-8556-594fe8c347ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b33ae87-2ee0-4279-91c2-277c088213af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea8b92e-a55e-47c6-8665-ae8de422f15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863ebe41-14c2-4b5b-b169-eb24b0ee1da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92880310-a565-42df-ac3b-5f125f0e19e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "89a55f59-8584-4525-b019-2bbc78b2717d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85ac6a7-5b61-440e-b5b0-6e1ad57934bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c148b9bd-3eac-4a59-8d24-bd052d0d7627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a5455c-e2d3-441b-aa30-8af1c208f9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab9a14b-7a8e-4cfa-ac3c-d8d8e2aa0590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "79511a0b-2947-45e5-ac5c-022ccef5a791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f890bb08-c591-42de-9aa9-27b61e0435fc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf37bff-0e42-4802-bbe9-42d8971f1a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012cf835-e9c8-4516-a1df-11f01522e713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baebf46-32a6-4648-92a1-10f544a1b6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "701abf9a-200a-4d92-8c4b-fbffff2fdade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0681e352-a6c1-4198-8754-061a28ed4ce8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a114c9aa-2c59-42e9-9425-03f20298e481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ba4f77-0278-4fc6-a5cb-8fbdb16dffa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c89f73-d49b-4607-9625-0c20244ceaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed89007b-242e-4fd9-9818-8b263c8d4801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdce5a2-b607-40c5-9ca4-bd057bcd875a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7ef106-bfec-4ccf-8750-595edf9adadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82b23c6-c24b-4b03-ac7f-5db597d507ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ad213f-282a-4a36-a030-918857525b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce8320a-b05a-4993-9bae-6f6efd872708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb4eca0-ea83-4ac0-ae68-af16959fbdf8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b81f42f-fb75-4fcd-adbc-b6fcea7ac99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5d24b1-a087-4a43-9ded-3cd3db64e973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c210fa3-2b19-4b63-9467-bf2f795d5b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "854bb70a-e233-447d-98be-731c692c005e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac0f2ff-1106-410d-b0dc-0ebcda6b941c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9df2a4b-0f5c-444e-8cbf-34176ff3adc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec4e436-a6e5-4298-90ec-f1dd301d9771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22a9963-3833-4eaf-953f-aa0b8c909274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f77385b-63cd-4650-b8ec-5ba5c3f4ee2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a719cba-9c87-498f-ba46-d5fe9ab5c295",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30b896b-35eb-464f-99cd-76eadd9d9d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317d5be6-8308-4413-b4bb-c07fcfe8abd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de00be3e-345d-4b31-91ac-4db078bcf68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff728af-ca75-43ba-811a-34ce1ed1625a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdc3c39-4c20-4262-884e-b88147606da9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88689fbe-0ec2-46ec-9d1d-326caf93d5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799da612-3df0-4d33-a485-a7d6cb0b8178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346679c0-6434-42e1-88a6-7f1bc6f1f5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "20358e1f-409f-4ac5-92d1-41c9e7819bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53781831-40fc-42f2-85b4-cb062aa37272",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1885af9-cfba-4cc7-85d7-73675828b12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3505b52b-d406-45ad-b101-440f4ad68f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26a62c3-985d-4334-9526-7d309c9c2028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "699c33f2-a2e6-49b1-ae55-5be443602460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b8ff30-05f0-4f8c-a3a5-3b8cef483225",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c34f0fb-4740-46a2-8c79-611dab451586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de34b6e-810b-4cac-942e-8f02bfc97cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e302a9-640c-49f8-b431-cb1c6ee75e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31929499-3655-42ae-854b-93648bf7151a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb50be6-b80c-41d1-8c35-120dfd833da6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6afc642-7f3a-4b58-8e6c-ccd3dd85fe36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b5c909-66a1-4c3e-88ad-c988a2f57271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0068a312-3145-49cd-be7a-bdb26f49653c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a78a40db-c793-4228-88b7-4233c37dd798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff67643-be09-433b-be56-3421d0314406",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9053f8-dcfd-4a87-8e20-0d3d90fefdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2de8a4-878e-4cb7-a2cb-86a57e1e9309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3907b42b-a651-4db2-9803-fa2cbc1a61d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46df888c-f6ef-4243-be41-289eee3de9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1919307d-4e97-46bd-84af-f893078c4b62",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e9534e-df43-4f3b-b018-18f9c8536b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63d93c1-5460-415c-93ff-c23ba5f63d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da340b40-15ea-44c1-a9a1-501c4ea8e0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8049ee-f7a3-4b27-96cd-61a09abddc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7a0c55-3f6c-4f6c-9954-6143fcd98a8d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ff10c1-b4e9-4b7d-bb84-5153c2f0294c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce2bc43-49b4-4b51-9259-4142f6ba0172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ab9034-ee9a-4bea-be29-678021eb833a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df727fb8-5dd9-4799-bc3b-16d444bc149f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536fe357-3f39-4527-8ddf-25e09c6a845d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed9195c-5e18-47b3-b325-a57ed6405c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b2b5a0-dc7e-4ff4-900d-b13f457bcc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbe5207-34be-47f7-9c63-74855db70417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84217f3e-3c80-4f4a-963b-f4120cc73e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bbe4c7-2d31-4f72-ab27-b5c6750170dc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83619fd-8aa8-488c-abfa-c455ad09c112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d4b1c3-9f50-481b-8da3-8e317fc514c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9138a983-94b7-47f1-8f50-6035bcead6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0641c845-30eb-45a2-8cc3-9f74ae4f2a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7570aa4f-150e-40d6-be46-0c617eee8d6e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b75573f-c882-4be8-8e89-4d9a2d5d5528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d74408-30a6-4f2f-bc0e-37da5f5c9f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821c4cb0-90be-4f87-97bf-c4cee74ea944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e75f74e0-ff94-40ce-a825-614836cb83c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b7e65d-90a6-4c39-8130-4c983efd6317",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16ac735-5ad6-4522-a373-062530c317b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b60d04-d743-4f24-9dcc-17bcc36fd8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b353f40f-4687-43b2-a950-b52da6c86f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44c6f3ed-c503-40ed-ac71-13b9c8dec184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f19cd37-f237-4c5b-a6e3-8acb88f8a633",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faa5632-d55d-47b5-b2c2-c0d29726d60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021159bc-b548-46b3-80b1-6ae7fe831e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dc7df3-7a04-4b7f-8eeb-88ecffc9d8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "843938aa-4dd8-4a31-9daa-1fb54875a97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bdef86-386f-4af0-bfa5-c5a6fc8e0d14",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5764046c-22d3-4d59-a7c5-401f45ffb668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347647c9-82f5-4703-bc5e-dfa8389c9767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931d2d1f-7cf3-480c-bdc1-67841fb4d875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b88a20-e599-4d79-9446-06fb2dfe61bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f255b82-bfae-4ecf-8f0d-ae4bb5e02f7f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4e17b7-6470-4323-a9df-2691b914bdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f890a72-cfab-4361-a56c-3dc827cb4204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6be9c09-e214-4583-a2a7-685168f7eb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f60af467-81ac-4f09-8d78-51a0b12e1291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de10b63-45a5-4046-b41c-04c5fc9b5e22",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e09c556-06c6-40db-9f8f-69ed2b9ae311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71683be-6495-4373-9d6f-522191b3526b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f5fe3f-7fba-445b-9c62-d7167cf292dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0a6c36-b2de-4c1a-ad9f-5ba6d44a24ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c207f42-6edc-4795-862c-70ecc678f67f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d907111-f6e0-449a-96eb-17c8261719cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3261e31-623d-44f2-966c-d38026497677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d4ee90-bb3c-4ae5-a8e3-077bee1a3988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c462b740-e4c8-4bdb-b28d-3ac1aca81d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b772cd-d229-4040-bd16-22813fc587f6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec02fbd8-daa5-4ad7-b368-0a070c85d2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0b4133-0bee-41ee-b5bb-5eaf54ec9104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789e7519-8aed-4506-a703-f26bf6f74eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f67d8f-1935-4869-88a8-29228b61c9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300674f0-0fa6-4aba-bb5f-5bd336eed538",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e2e5f9-2a96-419b-a2ab-ed40caaab428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ddd642-0f12-4882-9af4-0216de8ea572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dbe04b-7b6b-4665-a2d5-30eea26e5af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe08ffec-10d5-4bd4-914a-8299f0de9890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fde6cca-ead4-41e2-9254-f52fc669eb21",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682d6a94-40f0-4dbb-8ef3-7a8f26308dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbba08c1-f3ba-456b-9034-69011fa61257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5439dabb-688b-4972-8fd7-e93a3b94f37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22495007-bf88-4c5d-94fb-47e9173a02c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3421df9c-5ce8-4289-a9db-cc7ecca5d320",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fabde6-7feb-4807-a75a-31aaf677ccc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207c62c2-b6a7-446f-b335-692a23b5b6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde7fe22-47f4-4dfd-b3b4-7aac491673d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7aed8cb-ebb9-42a8-9afe-bc1c15cceed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbeb0d2-f964-4b8a-a97a-dff45f65b218",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10afd327-91aa-49a4-b51e-c1131b80430d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68efde89-44c2-4623-970a-69e6640e854a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64fd31b-2e5a-4c23-83c1-30fa05196b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c03c5eb-87a9-4641-af59-60987845777f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d7806f-3c3e-4600-b7dc-0e421244cde5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30598c29-37fb-403a-a5c5-ea2fe0da1bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b2fc0a-e26d-4669-af1d-142d17f301e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7130d0-99af-4764-8ddc-cf007b8f4d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d90beb84-f0ec-4d7e-a868-0a593c8e69f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43f5cc4-9923-4928-850d-4782cf97f3b1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10666472-c2d0-4419-a860-25a1f1fd6351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cf70e5-4ace-4fc6-b538-acd31ca181ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57225e8-1002-4399-bf3b-0def3acb91f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a5285a-f564-461e-b094-8c4e8f6acefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daba753-334c-4a4c-8f0e-ed721764a7d6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b8b4dc-8485-40c2-87de-36638ecb94d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9c7732-e544-4ea2-8811-5c59b55707bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045479c9-5ee7-4eac-a0e2-8b8ce596225d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c37c5ade-fc8e-4127-9ec9-552d7157b6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0957637-7d28-4851-963c-5db9207f8265",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363d7c90-39c8-4115-a0d4-9513d484ebb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5b6d74b8-4456-4544-9871-f7ff3b87a9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45c48a9-f249-4cc9-b9ba-926f88d7b65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9f9a7c-a45d-4bf4-b215-88a0359c2c78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58b2c7de-8077-446b-a000-a8ad596ec048",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "365ff88b-1731-41e9-b1c9-d1bd8e0dd334",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c539b5-f2c8-40ad-bc98-982c388bb4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bebfc2da-dbfe-4404-9d61-448b257263ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea71a531-90c8-405a-8e22-cd565302ae93",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cec85699-a356-40f5-889e-9f5e789fe5d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41daebeb-1b0a-49d6-a8f7-01a7adc73239",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "193edbeb-68d5-4ff7-beb6-5331d4432e3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c8c4c65-c02a-4dbb-9257-2dcc64a6d28f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26bf79b6-a18b-40bc-92b0-68c7ef55cd81"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "108e2fff-64b8-47e7-abd2-eadaa7fc0c4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83361755-bad8-4c54-85e5-650d5d30666f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec81b353-829f-41de-8b6e-fad7e3b37c21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3943b4ed-1191-459e-90c0-41ab0f161d1a"
                }
              }
            ]
          },
          {
            "id": "0d568ace-8152-498c-95cb-5ef721964bb4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d908996-fba3-414c-be85-74ec8dd2fc08",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1df9d5d9-6dc4-4bb1-a259-b00a561bcf4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63fff3a1-3342-4f23-90f3-35a5cccd13ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7023680d-6d61-4aed-b7f1-053c93007203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b3cada80-7ada-4a16-9661-437e7632d928"
                    }
                  }
                ]
              },
              {
                "id": "c7c7a277-6efe-4443-88ed-9e5dba7c4531",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e78b2a8-dc63-4961-94d6-2d1049878d97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69331178-ee5f-4685-8490-fd3c91264ef5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9870aa2-709c-49fd-8178-94bbc5379734",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df8ed4d6-7286-4b5f-9dad-db4ca78d0825"
                    }
                  }
                ]
              },
              {
                "id": "0aa8700c-df1e-43a1-b9ae-4042f560eb17",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a95fa2e-bab7-4f0b-8de2-4272a18f1739",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cecbf444-8d2b-415e-a5b8-91d3be943864"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2618a8d8-1a47-4a62-86d7-3ff35c2ee8c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bdabd410-c142-42c0-ade6-7aa14dc04b2f"
                    }
                  }
                ]
              },
              {
                "id": "d7ce8dbb-e24c-4a95-bfbf-d48ff3799058",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15908aa9-4e23-4c48-b02d-9f9dd1c095ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fd1bbb2-45d6-49a8-a567-69f66855cf86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c4cfc1b-27c2-4098-9b02-bf86cb1f8ad6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "aa94fa3a-9670-47fe-ab65-93e90b70fdc3"
                    }
                  }
                ]
              },
              {
                "id": "1c32c4c5-bcc5-48ba-a703-affb0760b00a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05b6589d-449f-42b4-bac1-e40f45650481",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5c269e2-6700-43fd-8c22-6c986fdd6128"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1846ad4a-02a9-41f4-9490-2f63a3601dab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5657f5f0-6f62-4da6-9586-ec78209f40b4"
                    }
                  }
                ]
              },
              {
                "id": "188e0c9e-86a0-4591-ae94-2107d360e20e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4dd4d2a-b724-446c-959d-80733c539897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73e5cbed-0c85-44b6-87e0-f6dcf8123bb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be1f8f2d-d744-46bd-8b46-c91774354f30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "45ff1841-75fa-47d8-944b-a1ff6db93027"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8200f24-880e-4355-ab9f-a29cc2a8ce42",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a37c85a-288f-4a02-98c0-dbdb3b20da4c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c36fda4a-6991-41c1-9023-10a42381ae96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f472a9c9-f67b-4f9b-860b-0a1fdc9ec234"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1df1091-1d74-40fa-84c8-e726d6cc964a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d85ff6e4-3e5d-4eb2-86ca-93a66959d0e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9f882f4-da52-43ac-ab9c-4fb5e8d7b19d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a184f2af-cdc6-44eb-89a1-adca200cc124"
            }
          }
        ]
      },
      {
        "id": "24bc61b7-3715-471a-ab2c-e4f98b411e5c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "61048019-4f91-466f-b372-1d2fb51acc38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b5fdda4-99ec-495a-8760-d104e8a14283",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c380578b-b9ac-47d1-b320-f89f9bc7e229",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a140b62-4f8f-469e-b62f-161197d0510b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cadea33-440c-4ed2-8213-60b8ba57cd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f1468c-921d-43e7-a2d6-69cc0bc3f217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "53ee16a8-0078-4e5a-b7b4-5acab5afbbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd65e60-d6a1-47a9-913b-4f586b70065d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9a3874-cf5c-4993-92f0-2fc2c3cb00c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a3dc35-51ee-483f-badc-b62edb0ef5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a773b21-012e-4e16-ae72-b5be7601d322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a277cda1-8d42-411b-957d-f39e6619afac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75311ca4-57ea-4174-aeb1-5869efb0773a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9916bc-497e-45de-8869-b54044f13c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798c1133-5d56-4230-b6ae-c50e37b7e9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d48717-644d-47ff-8ef0-065dc10871fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d984a45-9c95-491e-844a-5efe5a0ec48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8a1fc6-9fc3-4894-aa89-b8bb18b99990",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f8562f-3f8f-437d-8edd-95fcbd33b0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253925f3-3137-4ad0-b7c6-9ef1f83f9706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9d0952-36c9-412a-b30f-2b398aa3450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b11f219a-1937-47a2-baba-aa1ffbe9ff8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1ddd6d-3f54-48cc-a14e-f6b58a4d2a20",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cded0c3-bfce-4914-83da-ecf54a18c6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3dfaaf-70fe-45a7-8860-beace3319a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4908e3-232c-4db3-8092-38be9fb7eaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50c4a12b-20ea-4914-9831-98300e6e725b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9737b3f6-3ae5-4bbb-8493-997184a9eb58",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94de20ec-1951-4fb3-bb58-68e56f19afe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f2967e-18d6-4363-9fbb-caa67f544333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27d53d1-31eb-409a-ae01-9a2f91e7e5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c618a215-2037-4862-8485-4f9bc7879ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9f249f-427f-4997-9a58-3611d8d2aa2c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef5b122-ee2c-48f0-a238-bffc79b0f7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0408fd-0cf9-4e54-8a18-85b6e65feec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c729b6-00c5-43bd-b8eb-9a2a88bef0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c25cff46-9e42-404f-923a-432865ead165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaf5b3f-7fa3-45ed-bd65-d15700606cf9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb101d14-9554-494e-aba3-a07481781dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133ee4d4-e559-4c32-a823-244336b312a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d8c0aa-3603-4238-8166-10da27e980e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2e1164-8a4a-4279-b966-5ddf7123eab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedecc76-3315-4c69-942d-c8a51719c856",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ca8984-9970-4548-af07-7975cf3d08e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247d78a9-4388-47fd-9177-1e828ba2a452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a17772-1643-4de4-a296-b513c19bf3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11c629cd-d1c6-49ce-b6c9-69290955bb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bb60a6-0237-498f-8712-83ddaf4fcf57",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079f9a1b-e9a8-4b93-a86a-2724d59e4d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf0b20b-7b82-4284-91e9-2d90c94655a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac180cc-418f-4dde-8f1d-8ae589750c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4d2081-54c0-448d-8377-d469a2c8548e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc33f50a-fde7-448b-a155-9bf6c859028c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30775084-9071-4001-ab49-2f59e8270899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ebb8ae-225b-4198-9704-5bd231bba93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845a65cd-bb15-45b8-9b1f-f7e5ac3d4358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1ab3c2-a326-49b5-87c5-feefc66199b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69228c6a-d919-4aa4-abdc-30c67a61fc45",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86455ed9-73f5-4431-a2d7-c040dbc98056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ea5e85-32b7-48bf-a8ff-a9250e4b8eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c79db8e-fedf-4048-a579-7456522fc8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec722ec-c593-414c-88a7-441864901023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8e1045-bf73-42e7-9489-e2c816506ad5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71aa734f-53d0-4ccc-bc69-91534045d6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26417d00-856f-4499-82ce-99a70fcdc2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4900574-982e-4aed-be47-c610c38d8a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e751a1b3-4a78-4670-b4e9-b856cd200dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531c8348-8d39-4b50-aed1-4f5e6a0547de",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3033d8fd-7f9c-4f3f-a09b-30b8bf551c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9fd27a-bc2b-45e1-b407-b2941dde88ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b81754-7779-43ac-b127-a2ddc2bdf173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec24f155-c7c1-463d-90b9-728fcfe8cff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0c0f9f-4d90-449e-b176-fe0c4cdf2cee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98af9efc-8204-4d01-a290-e814f3bf4b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1261038c-2500-451a-b1b4-c6a2d409b41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5cce8c-27c2-42ab-82f4-01f12cb80745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7748962-6a16-4977-bf75-65c7e786ce9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087a31c1-98ad-43ad-8295-ee8e33570f30",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc97db9d-33d0-4895-9fdd-c1b929538fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ea19cd-3b66-47fc-bced-71e45d96ba8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e47f45d-5cb8-462f-a1fd-333385e7e4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "df8eedf4-310a-4145-bcbf-df143d4d5721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a87cf32-a947-481f-a8a9-b05112b29386",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425530e5-1017-4317-affc-66e715a9102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31462a5-f701-4a5b-bb00-dc6bc900f015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2173b9-d81a-46f8-ac0b-5bd4c98156c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3989f1b3-22b6-4f9c-8451-33c91326a5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c0ef9d-4ab6-4300-8e0c-8550c9de3412",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9134918c-2b78-4aab-a886-b937ef3c74c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac42ac4e-2600-4b08-853e-193a281b9cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf19b9a-b300-452d-93af-7c611f08a788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb15a58-f070-4500-863a-e1870373573b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f395d68e-b248-496c-9687-3a58abaa5c50",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda38b60-cac2-4fe3-9c31-6875b19e8e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde5ffcf-f003-4eff-9659-ce063f1041d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deccda59-767b-4c1b-ba3e-74d1433a27d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bd15b7-868a-4d37-bb39-9a5943107a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9481bde1-ba6a-4880-8d3f-a0a8937a3ced",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147b6c96-6f41-47ff-82e7-0a75d89053d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87498f1f-1385-4550-a354-28a317eca598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1ed5cb-c29e-4b6f-ac99-9d2b13c202da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b70d40-cd9f-4d01-b14a-f55b922c2fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03005292-65d6-422c-ad70-ac24f7d6aa0a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19bfe96-2fde-441e-b2ac-acdfe10ec945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b30458-36e5-4efe-81e6-7119bb1caad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839870f6-1d64-4672-a1f6-0220afc3c4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e1aee5-c627-4b6f-8235-c328a354059f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c9bb33-3488-4401-ba3b-b1be18303889",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b32461-113b-463e-91c5-bfaf1c509049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc07c978-1178-4d43-b739-8bb6472816bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d8861f-3cc3-42f0-adac-1749b2a97444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21f6316a-f397-47e4-ade8-3d703319a29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05616ee-4e0e-43f0-96fa-8723b8736572",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af30b4fa-62d2-47a3-94cc-185f102f1228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f20f462-3cad-41e7-8225-80911dedb752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8d4958-70d4-473b-8958-95ab1764f231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8726dfc9-e90d-4788-8fc5-cf7785aac4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4f203a-3ff8-47a2-9523-de89fe9d7c89",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704ada8d-44e0-4624-ab4c-0a43198beabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63833266-2a47-46de-af34-46d556bbe6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1473ca8c-83c4-4d7b-830c-c55301d0a0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01153fe4-2795-4d8e-b965-449611eaed8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309f3407-21fe-435d-9094-6629607b3fe6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cb90c3-247e-44d4-8ade-28f16764e738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187e82bb-fb8d-4da6-805f-1714dbd9f5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc02f721-13db-4f65-8d68-ee978b97e8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "615e65c4-fa28-42e6-b801-471e7243092a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080994a5-7eed-46ee-a0e5-dca7837e4a17",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dcf1b9-2b34-4a00-a502-0c6888048ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac97821-7e74-4989-ad44-33e205dc46da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c0fefa-c29a-444d-8ba5-d3f0215d134b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb649d5-f0e0-404f-bb90-0ed1d3a8ef46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c29ceb3-f8a4-47ed-b9a1-901bf345b51c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3e4d75-35dd-4af5-b315-3163086b491c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5087cd-1802-4791-8acb-5cdaab5e93d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187e5bbd-008e-4785-9ff6-9f9b8b2cc0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "687fd70d-6229-41fa-bcd5-63edb8cd0fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd70c89-80ec-4aab-9e28-c5bb6cc9821b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3b3b4d-9c0c-455f-9b9a-304ae5bf56dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2c2a18-eb29-4547-bc77-1e3bd779aabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65bc594-353f-4c45-b032-f5bcfb4e57da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f53bed3c-6020-4cad-8dd9-ee65c67968ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cd19da-4b9d-4cfc-b907-6393956f93eb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9889c5-17bf-4e35-94ec-875c5c8da5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35767009-51b0-4850-8460-fdba04fa5298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f3f827-5cc7-4db3-91bc-d202ac0eb78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6667c6b-14ff-4ab8-a06b-c675ea1b14d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160a08c6-877c-4c78-87df-cb1df8cc3b04",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c196b473-3ab0-474d-b9d3-0f872161e239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd50cc65-0064-4fab-915c-c869c103f60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb4d99e-79c5-4f1d-9b4f-e74d114d8655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe195906-db18-49cb-8f1d-71aa74ccabdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0d6961-f84a-4182-a895-ca8262af91f1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b47d029-e647-4a3a-bdf5-2f63762af45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d369eec5-ff3f-4198-af11-439c97d0f510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107b6db6-9043-4a4a-bbc5-a8676671fb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6220115e-aa0a-42c6-be76-8593b070db8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fe9b70-1f05-420d-80c2-20a5af595afa",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82001f6d-5185-4984-8405-96786b4040a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b9f144-5dfd-4ea3-a5a7-55dd90d220e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27c6662-9dbd-4218-b4d4-f020f35d02cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fdf5a7-ea07-44be-812e-845797f3e8bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dbed1174-d107-4012-bbb8-59f030e20b78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5665519-88fb-4205-b36b-58047ecf6181",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2825a6-23a6-40b7-8194-96b2bf47e00f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "abfda2a0-c699-46aa-839a-c6db0a18fbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da67befa-800f-4911-a5e0-a90121d3f22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caa0844f-b5f3-46a6-83c4-8a5265f361e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5fd3978-1dea-4266-b0c1-3f0cd30d1f3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55403b36-efbb-453c-bbb3-36555c5cf349"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e3e73f3-8374-4b98-9a5a-c85332b2c29d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad178e46-dd9a-440c-bfe2-70ae3cb280d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21fccda2-7dcd-456c-99b6-89873fa26ead",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd9b338a-fb21-4a2e-b314-4b28d7170366"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6fa5389-715e-42e9-b1d8-a02ce8d7f4ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d16ffee5-867a-4a0a-8fd0-59684e82badc"
            }
          }
        ]
      },
      {
        "id": "2c01e082-5202-4eee-b2ff-9facb349497c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5f827995-ccd9-4a00-a863-601438001e74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26989e09-f2b1-4b1e-8884-0f8cbaa6e54a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c95194e-8e43-498c-99c2-af3b0e219ccb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea814b1f-7e02-462a-98d7-ab413e6dc05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274dba87-c785-47a8-9105-37e880c83199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd11b7d-fe2d-47db-b904-ae92c9eefeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "96eef797-6051-460c-ba77-9e5e37415770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a694aafb-d5aa-477c-8529-fa22bdf0766b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a1fbb1-5cf6-4b18-8a2c-10b8927164e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d73f21d-205b-4861-90d1-9c56043bb1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9350d6-7d48-45e6-843c-882918096dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c026f387-813c-464b-9f5b-3d5ec17747c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0245fb4c-b8bc-4dc7-aeed-7eee47e90914",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048a3e3c-92bf-4877-928a-645d9e89fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8a8c41-3602-4ec9-987c-828f8129bb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dcf7cc-e566-458f-b885-412b6ea30a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d842aa6a-2a46-46c4-a2d2-19b91dd86580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadb2d3e-0e92-4b7d-9387-7e625d0d0ab3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17636ef3-1bf0-4acf-9385-39620ce0eeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f686f64-3ec6-4709-bc22-175e0f7addbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae3fb29-8902-458c-81ac-5693500f873e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1320a14b-b6ee-4de3-b43c-5aaad9c2c66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc023e7-b1ce-4282-a664-c2e348d279c9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdc8e83-3206-4d6b-92c2-e09ddbf0bf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb88a73-6264-47f4-bf73-afac0849861e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a54577-4a26-48f4-a778-414c10ce5df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84a15ffe-f263-4469-b582-fc9991f68398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33faee3f-d8df-4ad3-a38a-be0e27954403",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdedfe1f-852c-4f75-b799-ec29998ab3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2d3812-e4bc-40ab-86e9-d9d813c3dca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9a1792-47ba-4905-bff2-f51736a6aadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e47b7541-a57a-4c78-a096-26d21567a25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3783c28c-054a-46a9-ae30-feef95533310",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7bfcaa-b98d-4d5e-9169-61331e576e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d6868e-110f-40c6-b2fa-63e56d027ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2d881e-c02c-4a16-b07c-538977a7a570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c44c8f7-7900-4125-9ad7-d5f202ffc7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20544b68-8f05-4ad1-925f-3183fff6d8fd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add5b21f-d2b9-4274-a3aa-e590bb8b39b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12107e7-1b7d-40b7-8194-fbb85fe6c197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0144a124-4b08-413a-a5a8-0a71569b29f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b05aee-5b70-41a0-bbbb-28c82dbb2bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c96306-4137-40ee-9265-85de0569b56b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4df4a34-648c-4e79-8688-2275e8790adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6f2761-c0de-4ba0-8092-de37b50690cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8330541-debd-4efd-a962-5817422620a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "539a4345-3c40-4063-a760-8d6c91b9d884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860d64fd-c9bb-4fbd-9052-9646638e959c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4fcf5d-0934-4294-b3f0-06cc6500e3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8561a832-0d06-4235-a743-c9a93db7e90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd5d78d-a1f9-4bec-83c2-e1aa27924577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83101598-9dc5-4671-8b48-2ea18790970e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412fafc4-eee8-4171-9535-8fa3888f6b0a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408e638f-d3e7-4c50-ab03-b8564b8e8282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6fd609-6239-4493-b63a-56ba0c6638af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2ab4b8-ecdf-4124-8be0-d4bd576fccd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1f1057-9342-4055-a28a-1ccd60185da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313a9f9d-c62d-4192-9db8-6d14a6f16d19",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8384cb11-150f-45b5-bd04-58aff885620c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7a4bd0-0caf-49cb-9137-9e049ac79f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1505745-4b53-4866-a140-08b56a905f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c92e4727-59d8-46c3-b3be-4b37be094a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142880a9-7a61-47e1-996a-f85929bcbf37",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cdb78f-7be8-4984-a544-c46cffed483d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bba407a-5a69-44be-beac-7701c1c7b54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c30376-9720-46d3-a533-ce298e68590a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8af5f8-ff40-40c6-9145-944b8df7ea8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ce2270-5b65-4599-90f4-087607aaf6ff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffb771c-9b2e-4a39-985c-1a6913fa77c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573960a7-54aa-4d49-a421-f492d16bd3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ea5e6e-cd18-468c-bef9-1d03f4afeefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8d4279-1d42-45df-9d04-a751825a721c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed892dd2-cbc8-4315-9404-1a4a02292883",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8475858a-0f95-4c24-b2ed-08f86de50946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32daf3d-6a96-40f1-be15-544f89cccbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026fe694-0988-420f-86e6-56b28ff42b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff13f55-604f-474c-8647-404d6f1a198b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ff8178-4b85-493b-a253-ddba7e0ee428",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1963511-bc76-486a-88a8-50d46379809f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c5808c-4f41-4e65-a31d-04fff217ab6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc41152-6e25-4327-bdd0-079ad9dca98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "99def83f-b939-40a5-a9cc-6554dd340925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6757bc-8949-457d-9fb2-1681b3c910df",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47baca37-6b5d-426d-b836-8ffb0d0df9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10020bf4-8dbf-4b89-b682-cf693fd0ed28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194fe812-933e-4b6e-9457-7142a5f7073e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "82ba8131-b23f-439b-9a4d-bd2b459a0abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c09a21b-0a64-471f-8bf0-43abe3fc5e26",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2275a3d1-4a60-4089-8b4a-a980122d4e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cec6bbe-63c3-4342-a912-d3d48dd1f591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97886dc3-5901-40a3-8d7e-b472f8b32267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0d87ac-c231-42c0-88db-3f462cf9454e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7123ea-ba1d-40dd-a5f9-20cf9cb0d87b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d1ce17-400d-4739-ab94-ecaae05247b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785d3228-93f5-4047-9cb7-339d99fb545e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773c2b66-dc63-4773-9c8a-e9dd0d3681bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c21479-f299-4017-b819-07b55d5af62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e86f93d-d7fa-41ad-b8d0-36f6ac091a4c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707bf9a3-eb2f-4a9f-a788-b451818fa9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef342e2-76f9-4ba1-ac3d-fed3821dcceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5288cfb-0a31-4ac6-8dc0-5f1f522a80ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd6d241-1f49-4d6f-a9da-6bfdda8714cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d553bf-8286-41dc-bd5b-52de689790a8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e2fa3f-907a-4cc3-aad8-b6f5c7afa5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769f407e-43da-41ad-9354-8ac25e6fb7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ab1d69-279f-48ed-a87b-c41f5e144f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3910f11a-0d15-479c-ae46-7d02c13bcbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83e2a6e-c738-4d48-afb0-655c251bf230",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffec35a-d221-4db6-a9a4-3012a9b24cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd54cd1-5e88-4b2c-bd9b-0da0aee81670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecc6894-3173-492c-bde5-1601644ca7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f5471c-8460-4537-a0d1-59b1f0d50fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68173bee-00b6-46fd-bfdb-52f5c74f1b2f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45f5779-744a-41d0-8833-051ea40039f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a58786c-3bde-4c90-8460-32779622c37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5df4ae-43d6-456b-a3bd-7f4eaa2ca655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56212265-f33c-4fce-bff3-6632f90b975c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23df053d-51b7-4751-a589-8503c59375c3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fae0c9-5b77-41fa-a036-3f178753ab89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ae74fe-9977-4db9-9fba-e971a8df68db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c54edc1-5804-4399-a69c-208a3428147a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46be8d3d-d09b-4075-91ed-73a1bbb5e7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd41493d-7fa8-4b36-90bb-9cf8334425bc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95697158-e637-4410-a38a-ea839c140e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896ace40-3bc2-4faf-aa48-0290cdc0f81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bed7a29-1a03-40e1-a91c-4a97eb6c3c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0d033f-1b42-47b3-9c5c-d0d04894db14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8357004b-6959-4f3b-b325-87d5a7e3a15b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e07822f-7ab9-4444-8bee-4d29c74e4c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca716eda-0cea-4cf5-9429-de633a71a13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c98eb9-5349-448c-a619-68f3e3659530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0489f18-f5d2-4d73-bf7b-265cf614c102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff92fb3-ffca-42cc-9107-d8918ad62e40",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adafb94-296a-46d2-aee5-4d5e5ea77813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4cb8ab-5606-45a2-8e83-a60e121e379b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03362b6e-2580-494a-abaa-512f72479d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24dc8738-8885-4c08-852b-0383d11d5953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c464cb40-1e22-4158-8708-1a69b82c03c3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e42d87-eeee-429c-b3e2-5965112ebdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6860a1-abd1-4922-b0d8-ce7e7973d59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4098208-eea2-48c6-87d2-d406420c8121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd63f6ee-b1c9-4c00-862c-df30808c5521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e68938b-12e7-4d36-8b79-bbc1e11dff90",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e674f05e-a968-4b8b-ba42-4b8ac2d66b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcea4d2-250e-4c47-88e8-e047f48c023a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df548c1-9ba7-4eae-ad25-285b5613a59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6543ed-5081-47a8-867a-7a43ee0b8f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fd4303-c6c3-43af-b80b-58ffed61956b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439f0fa9-43d2-44bc-967b-efb4a58a2474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a677e7ff-4278-4458-ba5e-b1f298a716c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd44fac-0138-4893-a7b8-ea1958a64065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bda54a8-6f64-4d45-ad96-7907d3fa8394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db8ca83-9224-4904-80c7-28cbf9860c94",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7025ccfa-c88e-4f36-b0b9-ee97185fb19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5395dd5f-9fc1-45cb-bbd9-bf2edb1f6f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6c392c-65b2-4a1f-aaf7-d6993335e6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57d60773-bb96-46a3-82b4-51b138fcd5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce772574-1bd6-4ae4-8e2e-150bda6535a7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9cdb4a-d46a-46d8-8dc2-3ac6c5793f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace2bbee-165c-4a14-973e-5ca88d1dfdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e320dec9-1398-4e2e-9bc3-84ef2eb949dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "243e2091-45b0-46dc-b8f2-7b9bb61e3a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3261fd4a-eb14-4a3a-ad90-54637427b260",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf68655-4723-410e-858a-68c618da114c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e814f878-0cf9-4b9f-a13f-6c9da040a2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758512a0-7030-43a1-b912-f9b8ab442e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee373a4-c72b-4206-a6ee-ddc2d27341b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6259cc-48b2-41e0-892c-75e68487e6ac",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b068efb-dc7d-4aa1-af6d-49e000845276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7214c5dd-7a6f-4c9c-8759-735cd2f58b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a306fa34-c44f-44d2-ae04-b55d02504087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0784ef0-0b4f-44b0-b20d-969427cf96d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaab52c-8bd1-4c24-9183-eefe9838febe",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8776d1d3-77e0-4baa-b8bd-36f09b6690ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4311f709-a97d-4ae9-9ccf-7a98a47d61ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca257ad3-bb4f-48ea-b8f2-86522c477f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7491efb2-a287-401a-a9e1-da52498633bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c84525a-31f1-4fcc-a1be-d016374ebf05",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f0a82c-241c-4021-aca2-8fb13ecda3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17db9b7a-851a-4b39-bf01-07d1a0a354cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7c912e-4149-4ac8-badd-ab6f726b2e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0526a50d-9a78-4499-a76a-6c250ab23a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67617337-4a4a-43cc-be52-86a59a8be0ec",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb81f232-318a-4c89-aa6d-5b7be655a081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f97ffa-3d82-4b98-b994-62b0128db264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79178f48-0a3d-4146-9e72-eed973fdbed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1cbe85-5d11-4b61-9282-690a9932a63a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da75d63d-2306-4b54-b0cb-6dd46b29df3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c31368b-79a6-45d5-834f-299d51786cd0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9802f02a-0b6b-4040-a2b1-b50f770e7f64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bda96878-acba-4010-81e9-ceb267d572c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cb7218-42a1-4d61-9af6-8243b97e1150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed316060-4a6f-4eb2-9089-79eb9128e651"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5185c015-5d51-4c01-b0a9-58a866b420c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5f714c9-ca00-44e0-9f1e-ac4b8b3069fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "891a66c7-f9fb-4cdc-9577-ceea695ca004",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12c7176a-b1ea-4d21-a068-b2f8eef3b236"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f014bdc-a0ab-4e81-883c-36644e9874e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41fb786a-2430-473b-8903-877c1d97b9d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24cd3609-4fc2-4f0a-9a05-55891f072dd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b63c4fa-2665-4518-8395-5690c87ab3e6"
            }
          }
        ]
      },
      {
        "id": "cba724c2-61a3-4aeb-b5d8-406433cc8a77",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7991480b-7115-431f-8a7e-d52ca907df44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "607963ed-4650-430e-9ac0-6f902bcc8557",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4e8ed03b-2ee1-4d5a-9484-ac3af922ae58",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96c87ad-f5b7-4b6e-801d-992f597f36df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde440ce-7228-4598-a2e4-7566995ea1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdb44f2-0a4f-4699-815d-f8bc5a3f85d7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fc7b05-ae18-4128-8114-07445f7ccc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c031f4-18a9-48b0-afb8-27ea3482d448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed28cb9-63bb-4d8a-937b-33be4b74a3ff",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb786b0-0f62-433c-8c1f-9d70a4ce34ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48e83a4-52b6-46b0-83c5-f12cda9165fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73abcaad-cbc2-44f3-96a5-11e39ef5f1fa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b0acc4-fd75-4eb7-ab5e-5f493c4e8c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029bfc46-7eeb-40ce-a33e-e91a60f6c75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2308e935-8ecb-4728-b21c-fdada377d02f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab88e11d-b0e6-4dba-be56-f931bbf6ca6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9857a39-a2d5-45da-bfbe-438935411ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da56235-0812-49ec-9e17-f2a20d88ed2e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0aaf97f-062d-41b8-a732-750e7c8e78cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b53d83-5b5f-44dd-8dec-e22dc60b4305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53014ac-c955-4395-913d-4fbb7a0ae2ee",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5440c89-9c7d-42b0-b44c-1ee33693a2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5852a3-a32a-401c-ba9b-481dc610cfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f787212-96df-4430-88c8-1e8dfcbbc118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd075acd-940b-4052-b0c8-d04c9968c26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d8fddc-56f3-4ca1-9cf5-1ed0d98e80db",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60220b67-1d30-4f44-8a91-0ae2ed0a9af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be11c8a4-b3fc-411d-ba13-ab9235f8de94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10ccfc3-e70f-42d5-93ee-a5d3c9a62148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236c16a8-40c1-4d00-bae9-5113ce63ab91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f637e3-ede3-4138-b3d3-9b237e031d4f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74926f6-2ef2-442d-b215-a4675c7a69f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f00c9f16-258a-4177-83aa-ddf5fa552a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7d7113-17ec-4db9-80f6-018cd1410456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d13a9fd-93c5-4c69-9a6e-e757ea4ae07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3947a033-078a-441f-bc4a-45cbb3b383f4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02d062c-fe15-491f-a2cb-f4fd377bfdd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "589cad18-c3bb-46a5-bada-47bdb83f4a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f7d85d-6799-42d6-85f0-14aa33b35f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64685fa1-4899-4909-901f-4092b134ed18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14822a42-8062-406f-b701-786170ea4eb0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6215f0-e60f-4b35-bb93-d9d4689888bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f885ec-eb0b-4f9f-a052-3b914bd565e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517f7ff1-ae3f-4795-8ec8-7ca8fea71b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f187b33-38ef-458a-a25e-337f4b85b55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c11dfbf-453c-4fd9-a560-5c6d3b5d2de7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646d9f59-1274-426d-8054-eb552abb175e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec28f24-9bbe-42ec-bd89-f416afe0fa84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2156ad2d-28e1-4556-9ebb-b34c9547ad27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1517adb4-3d71-4c60-91a4-0dc7aa962658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2541044-6af3-4297-ab35-37dd6343b138",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd24a3f-3450-4220-9fbd-d4766e73ee89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6923230-d561-450d-919d-63661409509a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48931ad5-7271-434e-ac42-373772a4ff39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d0bf80-5451-4435-8a40-401575d42f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33431b8b-9587-41b2-89aa-10620d3bae7e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2395bd03-4912-4059-bd66-2d8b19f0fca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2bbff0-9026-42f6-b887-f3bcb371ecf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8d07fd-f020-4429-bf2e-cfd5eaca702d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80860194-1223-4535-ae7d-5df932f3eb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad04512-6273-4c85-aff2-9b8fde7beb28",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad69ca35-4ce9-409a-9b5e-49cf314a6325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa7c7a50-a28d-4e2b-813a-8e970a5253d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3d860f-a707-4c36-9955-83d640c98ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18531dc6-0b1d-4191-9722-80443741704d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9b8847-b49f-4572-8141-f3bfaa8b6c43",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cac115-b072-4cae-8011-2cc4a832c4a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed610806-8b5c-47ea-ab41-8634adbb38b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817e9046-e36b-4afc-84ae-596525e7a539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44057e37-ff9e-4001-9886-e56eacbc7e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f030ca13-cfd8-457b-8d39-8a37e16230b1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f9d965-403b-48ed-adf5-55a4bae0c940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fbc4b7-abfe-4f82-86d8-113f80c8a34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476d9a5e-f437-438c-a86e-d1f39313c6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07852cab-1f80-429b-9bdf-f6f282438d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad890ef9-fcb6-47ac-8f6a-2dd620671121",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85504140-ff6c-435e-99d0-af99cd873442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc3a725-b001-4f17-9059-1914d3618cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f323cc-e5f4-4a70-8a1a-b500650b1c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef68b63b-4815-41ee-8b67-3cf301fda330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc478ff-27f0-4ac2-8e78-96d4b7ec910b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e77729e-5f68-4282-979d-df1dfbbb6d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcbcb55-d982-4b0d-a1bf-039c97ff2c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6790c85-d366-4d05-b1dc-8b572d87b8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71947bb8-5684-4ed0-9784-98f10731cf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cf5509-cb6c-4f78-bcd6-3bee9ca1aee1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fd226b-f7a1-4b76-ab15-3ac509144e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530e0b82-cb39-4093-8b50-b09ad19579b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac820c7-3470-436c-9768-b808da6e24e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a207ac-1c07-453f-b40b-0997bc2e64af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884eadb0-3d7c-4a4c-afa9-14fadc2bf258",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2588c82b-303b-4395-9b6c-f975e369fe99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9840fe-7eed-48f6-a807-362869a36828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e35a61-52b8-4f45-9ca0-ecce7a66916a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecee6dbe-3a25-4a22-b6ab-5b5aee0069cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68ef86c-7e08-495e-a017-d9c43b1d4cc4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6b905e-15d0-40bc-b38b-912cafb91356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52717095-41e1-43f8-b408-656ba1d3952b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6fc911-46bc-4b49-8d6e-5cb3a8d092b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7657abc-122e-43b1-ae55-884930eb191d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4897f5-34c3-4ace-9770-f2ac94da3c9c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0805b851-b1d5-414d-a4c8-529609eeb372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58366efe-0f2f-4cfc-8fd5-898d4a19b157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915e3a22-22c5-4ebf-8a5b-77e9dd15fa08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116d3951-e5ca-4b70-b7e2-1d1478c014ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b5d885-ae50-4d1d-a6ba-183c5ba042f5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc08bbc2-a580-4d74-a357-b5f71c5f4ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51beed94-9a9c-41a1-954c-95aa37dbe769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db45687-013c-4523-9e93-d96f57823ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc0d7f8-b95b-4d37-8703-806c62b4c724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceb4a23-812c-4a1f-a5c0-8b1df8083411",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c307fd7f-da96-4b7c-b962-4fb050a0d761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca6b6b41-6193-4529-ae60-f7b84719f85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d66db7-9c14-4324-8296-519dabfa7392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6119e4f6-4a9a-4b2c-a779-65880601e2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f8bd48-da14-47b2-822c-9a370f92a118",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521b3b30-950b-448c-98c8-e6531ca14aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11cc59a8-95ef-484c-8170-554461ea2dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c06e690-1179-4a56-96dc-3bb2c6a85fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65181dd0-3df0-4d04-8645-3f2690ec0cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b333ab1-65fd-4686-b037-5be6fb03b8f8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d54206e-b07e-4690-b538-c1646ffef566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36aea6fc-583e-4673-b202-777cfdef2044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57dc9fb-167b-4fa1-a67d-33fd4dcd6a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624bda76-9b9a-458e-8545-21422211140e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ab4e58-e443-4799-b823-b93fa08a75e4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667142ff-e32a-4e0c-b400-6e17125497b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e09a03-931d-4484-ac81-f6c182aa7c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83863390-717a-44e1-8126-d5bd7aecbbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54a0b0b-af09-4286-9f5f-0201db296753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291a90ef-1be0-4916-a46e-9c175d67e627",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d61fa11-09c7-4c9e-9502-ae4734f00b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1101a232-86e1-4262-b822-2f3a159eee5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9caf38b-8afb-4f42-b9f3-f44112f0a611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b02e69-5c3c-4804-b21a-246f40a945be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594b340d-21f6-4995-9299-71a9bd0f31f8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a740342-64fe-411a-ae07-92b1b9f41051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3daf63-0ac5-42f7-b304-a875d2731ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42684772-bd1a-4e4d-905e-a2bdde27abbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82c6b34-a663-4748-93c8-8e1a1bfc1c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded08c04-3e71-42df-93fe-be9902b62085",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d13d8a-fe1a-458b-9ad5-ad7a4ece7bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf82128-c051-4a5d-9c23-df25fae2d40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f00017-f396-4c09-a8f0-5ebf2911e808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e24c55-694f-42d0-87f3-5f4fddbd9229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a056db36-ee5d-4d2e-a11c-080d6df88afb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a222947b-5f93-4394-a6ba-ec3755d23404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c602df3e-72ec-444c-b2b4-52bafded17cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601e3bd4-76d7-4cb0-a581-c432806ef346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8ecfa4-6dcd-44b4-abc3-c26696f241ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdeb692-8b56-40c7-9d4e-204f1d66e526",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8693394-464c-4232-badc-b5bc2f5167f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41246ccf-ceb9-444c-a322-c638b9b23456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7435e2c3-d6be-4627-9e8f-e723949e1228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f1703f-a4b7-4b0b-9306-d280a28139ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e40be95-a645-4538-adb8-0d8de58203c8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ed03d1-df9e-4bc1-b2a4-a62cba5a9ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc25c6b7-07ab-4df5-aa6f-cd6462fa2694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceacd894-5313-423d-9e0e-15fd0a9a3549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4a6382-109c-4cde-b112-d8afe750e104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be35a8f-1a00-4319-9f8b-4ce0f796319e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0736c1ee-2ca6-4b5c-b368-4345d61738dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762d96f6-acfb-419b-80a9-bce7ef37675c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c761a820-17e2-4218-9f85-c0ddfebdf4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c06f6f4-f0e6-4b1f-b67f-88910a685236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91634ea-3fb6-447a-8b44-79919f3e82e3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b5e0c8-93ca-465e-92fc-6394aba1b2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92997bf-84b2-40e8-bae5-2704fee6314a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1369b403-9ea1-4dd2-8e11-b18f23111ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f2703a-bc34-4091-b7d4-3ad5140189af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8992833-e542-47e5-a220-8a7ca3bbe996",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3767f176-aa9c-406f-b2d4-8ff696509461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede555f5-dd4a-4a5f-8086-27e1ce7119e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d99da7-09b1-4301-8c8b-e05b0dda14e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebff057-5ec3-4d21-812f-a192f19440cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2f04b9-f9c9-4115-9eb0-974f35f8195d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b6b289-cedc-4eb3-b517-8737eb237e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc53e3d-468b-4872-8075-6431dab9ae09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc027561-4446-40a9-86db-7c56f28ece7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f4012a-12bc-421f-b7a7-c82fde773a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4277af9-a2ff-40e6-b2bd-172b94f37e90",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d06cc9-6c90-402b-aec5-63c18656a511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70daa029-c743-4d92-bd99-825a5ee23fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e431d1c-2d37-4a44-8dfe-d6c5ccbaa905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06538e0-fa99-4477-873c-8264247f7109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325d2977-f417-44fd-8d8d-1405850259bc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61121ae5-fad3-48bc-aaca-06eaec1a747f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d0faf4-a6e8-4bed-a879-676438b6ba34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19c7eec-203b-47fd-8e1e-39e2f28359bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf317a3-0fee-4e38-92c6-d9688ccad500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528c2d1c-f816-4a1d-8d97-a8d3ca5864c5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff5f601-4e93-4bed-b562-7b6c67216222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94008ac-e648-4181-b2f8-d9811715b0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f21835-8c1f-460f-8a4f-2cd0f1b79582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e0c6d7-c0ba-4152-9556-23f380b0181d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f591eb-0e52-4951-9f0a-4bfd212ff368",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0385edb8-0ec3-474c-8e10-e6816bf7ec64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c363410a-721b-41fb-9683-6435272fd5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea38203-9127-4c93-adb0-9c4b85e57717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bcf69b-ab65-4066-a61d-6828ab254013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec34327-adcf-4627-b3ed-34262ff5fb24",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8041a4d-7a1a-4d36-8250-b82063227711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0c0a09-2a34-4b9e-92e5-8f51eaab2dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6834676d-e23f-48f6-a281-675d67b28f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90836b18-a684-4772-a212-fcdec647f853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c49f710-0fc6-49d4-8ea8-462aa1da298d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821d6448-d9ab-4ff0-a00e-05bc0539c1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3900c7f5-bd7c-4d37-8f96-c2b8fecabe92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4214841-f2be-4bae-9f38-dc443578b894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9183a2-687c-4a39-9f42-d048d8e574e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c71412-3b79-4ca8-92e4-bb26cb484986",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48c3166-8de7-458f-ac51-4c2cad16d54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8f9ca6-7d85-43b4-b89c-f6de75723197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998ff207-6c09-4726-8d5c-e11b0defb21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa90496a-ed87-4391-905c-4a44c63003bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dcad21-18f1-4df8-80b4-7d49c5c63088",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75b01a6-381e-4187-a1cf-761d8a9c3612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424f6013-83b9-4b96-87ae-76bdea7172ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b72a85-d2ed-42bb-b545-54b0d7537f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d239bf1-4689-4d97-823f-612716d988bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f74a51c-c8fd-4f6d-8b0b-87a3bc37f46e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d86b9c-69db-41fe-9d5e-4bca4557e1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2a36c1-76f9-421f-b8c6-03d91b166f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65e3e6b-e853-45f8-a359-53aa441e725f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8b08fb-82e2-4ec2-99f6-81c2e8cdef38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20da617-8533-4aa6-ae4b-21cb5ddbaefa",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e57c636-13c4-47fa-b50d-5c1bd75c4afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbfeddd-0296-429f-8716-3b1f736410ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7a1b11-c4de-46e8-8758-ded85466e90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f43c78-6599-4b60-91ed-4a52c4486ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ddb5bc-4f27-446d-ab00-41b9879a732b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d054846-aeb1-409a-bfb6-97799fc44282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f07a79-5801-40eb-835c-250c62fedf09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3458e30-d702-4819-87d9-f61918993eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afac527e-5348-45e4-a39c-83c9033c1920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2c59a0-c375-4bad-8203-9ef5b90da7c0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f99f22d-06c0-4eac-ab7d-f93b90b40e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f05f193-e2e8-42bf-996d-7793b51f1bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c07e690-2fc7-43c4-a8a2-adc169d70999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98ecead-dcc3-46a8-a498-06f5f2358c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca9a45b-147e-4c52-9d78-d67d05593cbd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0936ed6-56cf-4e00-8d65-909a6d7d2378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1527ed-6784-4174-af56-976acf8c0205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913892b0-efaf-4e1c-8839-7a67b2b4265d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed388af-ae22-4556-986c-45ea003092b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f221ee-a74c-44e5-8597-05f074a0ebe6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39697003-f0fc-4173-9972-4542ec0950ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbe1678-d1d0-4eba-bae9-c49fb0fec5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1e288a-dd1b-4646-9f9f-077cc41ad209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32804088-96b4-4a39-9e10-f905fa2ef653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c56ac2-40bb-446b-9604-de4b8cdb1600",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8bd9f4-1aaf-4978-bb77-76d25b6c34e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b3c504-f853-434d-be80-bf8899c4b61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e65dd1d-6b41-455f-9451-7a99651b63f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8787ab2-532a-4083-aa15-3d6a9c79ec59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05652d3-473e-4d12-b371-0c7f2f86def3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0144e63e-dbff-4f9e-a9d3-d67b3e77d411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26dffed4-e65f-4e0f-9b8a-841498c56db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3311bf4f-0837-43e7-8926-a6ef179d76b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f524603-2958-498d-ad3e-b1c02914b237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc8cb67-942d-4b1a-b3c1-1c39da8a9095",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40b1244-b6f3-4b72-9ba8-ee03a38c2d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93f4a86-157b-495b-bbd6-a96c2cd79791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5336a5a8-d6b1-4ec8-b3d3-f6416536dcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a235107e-50f7-444b-9c5a-6085d4899091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee148e9-5769-4058-9452-9912e090fefa",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15147211-3b35-4b9a-979f-e050e1c2e058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0dd309-2d63-465a-86a2-f36f6da51de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bf4bdc-db7a-4ca3-bfe1-993eca39ee2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c873f7a7-1488-461a-bf1f-059a68bc4d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac72d181-6c87-4dd5-8dc0-3c4d93cc2266",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04934644-ddc3-44e1-82ae-57f440b6cf21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44136b7-508c-4a62-bfdc-d616e336ea18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e664ee74-0a29-44ff-9079-e1e8373275ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36de57c9-c684-491b-bde4-01a05c36a58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813c03e4-5371-4117-9f34-88825042007e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e974793b-df21-432f-a22a-64fa46d7e285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c182029d-5603-4e9c-983e-4375c4cfa44c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c18edb-094e-4a18-b491-bc7410aed489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d86d378-4851-4b6a-9f93-0044af5cf4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba77065b-94e5-4c59-a1a4-57b93bc18bf8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422e978e-9bf5-4b99-9069-5fe7535de699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3fd471-75ff-4cc1-8e6c-4da3cfc0435b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471e42a6-b7e5-4fb4-92f4-6159e40296c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff07749-7e6b-4caa-87d2-7ed3205a690f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14525a7b-531c-48f7-b36c-2e5bde4534da",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8194b35a-147f-4c31-b11b-c57ef307026e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810b708c-76c7-43bd-9408-7483e43647bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8fbb7b-f58a-4e5c-b1e0-1c4b1c5a9e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee98d63-e797-4e5f-a6b5-b0a965e77492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd08bda-c06e-4b9c-a642-e0719496d72c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be44ce28-b638-4de4-bb38-d32047c603f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5994d31-a9f6-4433-87f2-61f56a2b7d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15f2bbe-9ca2-4272-a291-0755f5ab0f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26eca317-2bc5-4329-85ff-e6755e27ce2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3a2e95-d748-4f86-b22c-773fc38d2c74",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78016b09-87d6-4b66-9e9d-49c6e6980cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f052b0b5-c44d-4d9f-807b-f0cee9494a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf169ee-fb13-41b6-a5ee-2d02f1066b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2af02e3-1e4a-4911-88fd-b9e2e080a27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3c155b-dcb9-4b50-ac41-c2dcfe9fc55b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d753d5-4b6e-4421-9673-2747e2384e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab60320a-4499-46b3-95b8-29dceb9f2e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e240fa8-56e7-4b83-acec-879a1bf9b41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bb7411-ee4b-4c1b-b552-eef29fa9d32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c69f30-875f-4d80-9756-f22de0ed7caa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f2347a-2546-4853-8548-b135a8197c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c51c69a2-ad52-4d7b-8cba-a6d09687b859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef566dae-220d-42bb-8f71-e30031c7c40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0fd77c-5983-41ed-813f-dbc2fba1ff18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e94843-6595-40bd-861a-5472c8a86468",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345be6b4-6cad-41c5-bdd3-f8e4237b7e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd788664-7d10-4f3a-badd-8125e4ea7035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ffc8ff-c93f-4c3c-b238-958e81c977bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9a269f-2135-4303-a591-ef326ceea4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74aeb05-3c4f-4002-8097-b86e6a76086a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f702216c-04b0-4b74-921e-74ce423bbed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "839f3f98-a045-4364-97a8-06bf40fd1812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ef98bc-8498-4563-84a8-b5367405247b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6a5a91-f712-466d-9b64-4cb0d856dc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611f2b95-ee58-4b16-aa6f-b7594fd87a06",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add86663-3c15-41ea-b6fc-ac64d8e49730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0680432-a83d-47bc-b926-433d324bce65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5922fce6-3d7a-4211-af6e-ddc1175bf643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366420ab-66fa-4e46-b6ec-ad92059b3bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dfb9bd-fcf7-4508-98ac-2d57f20efc96",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eba12be-14d8-43fd-97d2-fc589c5b271f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b75828a-2a95-4d93-9388-2e0ab600f6fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea61655e-6ca4-4215-b9aa-572c398ab43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d8060d-43e3-4c72-9820-8dcd3ff2b605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e092c1e2-f963-4328-ba70-ff3ded00c22f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480a70e7-0538-402b-ae86-d2542ac87619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea358014-c6df-4e25-a464-5c8d730e6962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7759cf10-2430-4268-8dbd-a4e8cb566cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01e34e9-f092-4d4a-8708-ae9a4f95cfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ea18cf-05d7-4385-960a-864e7dcf6f7f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601f5079-89b8-4d51-bed4-8a7a10eeb70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74a30ef-90f7-48a5-b20a-76b26cdea4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8051a289-1404-40a7-8064-0d569a1c23be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c98c4b-daa1-4eac-83c5-7576921887a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547d2bbb-1735-4654-9f61-1242345dd8d2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd772efb-a523-4917-b2c0-aa50f9ac085b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931d5ffa-33a6-4c75-acd3-656e9ad802cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd926c83-02d3-455b-a0e7-f5cca194c5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b186d297-094e-4fa8-8f1a-c4bf57e6d2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ad8b1d-b34d-4e12-816d-0f875d089c79",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fad3608-34fb-431b-a25f-29e6d5c31162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d6e302-a551-4e45-8b17-1e010c48420e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0e4f45-0b67-47cd-bd03-85a239f4cae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e911e4f0-3b87-4c06-8f3f-64b4fa3d2541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6dd05f-6621-4f6d-964c-ab1f14b1288d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df73e1a4-0ae9-4ecb-905c-d55ee588ed33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04366ff4-3076-4906-9394-849995585890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66201087-3407-4a5d-9f74-36ff52bb0cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af70620-6761-43b6-b72c-727d47505c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecd2dc7-8f5e-4f46-a0db-2dfbd6c8478b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d7a7cb-9b98-4836-8a27-f570713e7eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8cab33d-5b6b-4af8-90c7-fd806c417dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587a6ac5-f3e2-4c79-a1ee-1a1da4278602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6929fd81-c89e-4795-ab9d-5f82589854ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05868f5-1660-46a4-8f92-36deaeac155e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44d8b6e-15b6-4c7c-8469-0503abbfe4c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4dd914b-2b13-4062-af10-7790b3530223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da549342-e45e-47da-ae94-d8d66252b6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4269da-8b09-45b4-b05f-6b12007243f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df70cbe-a9cb-4a0a-9222-a157c2bc5d41",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9ad6eb-d7bd-4502-9517-bfbad156e578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "228c01b1-5080-4889-92f3-6edfe2456a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112f91b8-f7de-4a1d-be24-36fcc26664dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba4b05a-5736-45c0-89ab-513850d09423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19332e41-afbc-41c2-a253-0a90a00aa0b7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3538324-3e41-4e98-813f-32aa5837d12b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb79dee-a5ce-4dc0-a01e-c1e0cd9c2889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3398572d-784f-45bd-a7a4-f0cfbf8a6af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fc8569-3761-47ee-bb49-24e1f5e03cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2648103d-1610-4ae0-a354-bbd30ffb820a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b35c02-b7b8-42b8-94a8-55bd11dce524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "207b1d06-13f4-4460-9273-388f6968e091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6dce3a-44fc-4b73-b83c-c2969b48d885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6651385d-073d-4f89-9c77-f5aa7189dcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b71ca1-bc1a-4a8e-96fa-c5b6aa141372",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c8d062-ec53-4b0e-be74-23343dfd0655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f067ca50-98a7-4b5d-9272-dfdea7be8070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29723e4d-d520-454e-980f-877b80cc4349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29abd8d-6cdd-4e6e-9f08-1230007bfcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ca303d-953c-4c28-a29c-3405f77828a7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab23570e-487d-40b3-8003-8ecffcc016be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66840532-b050-4975-8b3a-bdfd181ed13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8f5169-682a-488a-8307-67b13611938b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e587f5b3-bb0b-4a17-8ddd-79639cf103c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e838d3-ac91-4314-96e3-df5f62abc56a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6512575e-24c1-4d1d-9063-491b4c7e450f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018cfeae-eeb2-4c42-b867-e53e86dc15db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc46936-57e3-4066-aa2d-f8d4142d3c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0199544d-ba3e-431c-bd59-4b6e79cb84c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bb93b9-f2fa-40d0-99a4-efb54c9d3cef",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2304e121-cf0b-4d40-98b2-b0bb4a289510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf309f2-35a2-405f-8a21-8a3f0e5306da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3238506-05d4-4c84-b3c1-6f36c8bc8d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41140f0c-ee2b-445e-b70f-8889b73cc911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18c55ab-0d7d-4ec8-8851-95408285918d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e516fc-668d-4c09-bac4-64c4cb6bc21e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc18f49b-e02b-49b3-8937-b035caafa1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1968a18-9c2c-4051-be40-5fe71249828c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac06b662-aa7c-4714-9ab9-ad4db71db5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90e0737-72f0-40c6-b62b-c150c2a176c2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2152e6-3b65-43b0-97d3-f7ae66656e7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1390ea45-2edc-422c-bfed-69a04fca1810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb71134d-0d64-412e-9be7-599a2d0d18ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ada6785-270e-4493-97a0-eb7f914450d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39085188-c26e-407c-82a4-f2aff5ef83c4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcaa7dd-4a49-4398-b9a2-974e533d270d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0325e94-79c2-464f-b6ea-8fb5286f7981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3158a0f-3b18-491a-b7a9-ca054cd7861f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18339e2d-1b78-4649-9eee-95531c580576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3747e035-d59b-412f-ba60-18c22dd39e76",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf61a977-cbc7-4734-9a89-8fa891ecf3e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f76ebb-8866-40c7-8419-5e318bd1b2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee553d56-fbe1-4d19-bba6-563b9a993d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8649d7-d434-48eb-a27f-c95801d5ef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2dd4f1-7041-4a40-985e-985c134acbdc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e980a95e-9dde-4bf3-a145-9cd1bcd9f0ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c345ea9-3553-4800-a1da-dcc86f814fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72e192b-374e-4e06-aed7-c794ec9b8195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9855aa6f-da63-4943-ba62-d59ab12767eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e27dd06-8212-47de-a783-be6848a550ab",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4cf4b7-1d72-4273-82d4-cb0b1a45125c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93cb72e3-0c7b-4aa2-a3ea-296a111e5269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f86bfa4-6ef4-46d1-9de0-e1735bb4c893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40ea610-563f-4101-b507-58078acc9f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daf0b25-c720-44c5-9a98-0744a2315b80",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348ddccf-678f-4d9e-90c3-673784fadc62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c829cfa0-9831-43d5-b80b-1a1ccc91cea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c695cfda-3492-4ffd-8630-d4f3c5c2ad6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd6ed0c-0a06-4034-b997-eb9b023ba5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99702fb0-953d-4a1c-82e6-d1ec9a182bfd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a528397b-653f-4b72-a221-e25e3c8a6617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba1938e-b1f2-4a8f-b712-31d4025d2697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec76653-fb09-42fe-8833-7e24635a38ca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd19b60-8952-4775-b0e9-2a4b0fbfaea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bb93c5-b8d8-4183-8de7-b7de58ccca0a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d74395f-b011-472c-bff8-b5341af50b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81494124-40a2-44e7-b779-dce6849fbdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5537f0f-a2d1-4846-93fe-a022cff61d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7d831d-3d3c-4697-b954-45ef6021ab9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f967f738-33ce-4936-9b32-ba7305ef3600",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8648dc-bb53-462e-9395-fc9b3b7cfa0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba59dbeb-9a8d-4074-93d9-bd8a50768932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eb4bbd-da5d-4fec-9e2a-3d5a1287ae66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5349b08e-ca3f-492c-8885-18f12fa8bcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297c282d-117e-4db6-a9d3-75b93628a5f1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aac6a57-6d27-4e78-ac1c-34e195619ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "637ea030-7e88-4103-9b68-ad02979572ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a53b4e-eedc-47ae-be65-0a0345602df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c769602-6cb7-4e74-a20a-d88644613319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f11759-fbcd-4f27-a8a5-8ee5a540488f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ef727a-3e39-4bfe-92d5-59f9f2f765b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b6b0175-1395-4a92-abd8-8e3369424edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704d647e-1b5e-46a2-b5e6-b1db27882914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5545ce89-6df3-438e-bc55-e5e69a51701d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ef0b67-4125-45e0-ae47-3bd513ec7f40",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0d121f-43b8-4c93-aa20-cd642d2db082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "991738a6-6783-47df-9c62-c5fc3761e7ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516cc591-dc02-4bfd-96db-68e3bbf199cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb99403-7339-4b2a-9518-db5ab29d1213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71c48d4-2de4-4df9-a4cc-5d1c9ba4fb67",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3804bc73-22e1-4040-a0cd-6405155d879d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d85003-ca44-4519-a59b-5f90cc90142a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13644271-9cb4-437f-9bce-cf2def0ae0c7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27007aad-c34f-4f9c-85f2-854538c01a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a83dce-a9b3-4975-91ba-cb64032418b2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c027d8c-7140-4467-81fe-90c3a072d9f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4986cdee-8105-40ed-a6c8-9de229c1e4bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4e70b6-112d-4e61-98ee-e335a0058c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08310780-8f35-4177-ab2b-078f27c998f3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "582cee0b-cd95-43e0-bf92-55324f7afc35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4ffb3d0-0b0e-4490-afd1-77a82410d2aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81f0252a-0acf-40c5-8dea-f354188a30f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94f9a018-e094-4d36-b7d1-f0c499df56bf"
                    }
                  }
                ]
              },
              {
                "id": "de5f127a-9dd4-43ca-8075-b191d67ffdbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99da2c91-986f-4f27-ae99-1e24a64e6ea3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897454c9-eef0-44cd-afc8-30e7816acc54",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b27a3b2a-044e-4827-bcf5-2eb1bfe49e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a19fc88-b2cc-403e-9426-817c0c1d91af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5763145c-b9ab-44a1-a42a-c4c35051efbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f284597-72da-4f77-ac49-2f7023b15e9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe110497-20ce-430b-938b-39c6a81042e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a76aadbf-2787-46bb-b35b-43ee2941e05e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20c9354b-6914-4c2a-94aa-5d00268e30e7"
                    }
                  }
                ]
              },
              {
                "id": "1f6f4df3-06d8-4944-9938-9e32b94bc834",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8dca70c1-acd0-48cd-ba05-af86e3646b4f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fb4b6b-0810-438d-8070-ae96cf06413f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a8b38da1-a04c-4d83-9d66-69601ba26570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7d48f7-c9e1-4a8a-977b-f71a5b271edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb701dad-b29c-4956-92cc-f5527764653f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9b2186fc-40f5-4aaf-91ed-cf451e062c8d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "753c6459-a779-48c4-915b-98da85af5b73",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c00d9b83-356a-4bcd-80d3-4bfe99345c67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d92be7e4-f8c0-4a21-9934-9d8d483b1d40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f74c077-46fc-41ad-8206-7442c8847f18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfcb9d67-d9d9-4b3a-9dc5-2d8877f7e473"
                    }
                  }
                ]
              },
              {
                "id": "76fa02e2-6510-461a-8e15-ad1ca357b57e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bacf434-63e2-45ed-b496-d89ec39a5a44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7ba8c412-c133-4442-b0bc-7958df23287e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c84dc227-1e60-41ae-816f-a2cd33d5c9b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1117db76-6bbb-479b-9e2a-42f0ee50482c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82c285be-196a-4908-b73a-13f77ce99707",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9752f615-6b11-44bc-b31b-e890b7372da0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "617e4f02-a302-4b60-ac45-56058004bc88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac086668-75a2-437d-bd55-b58dae7cdecb"
            }
          }
        ]
      },
      {
        "id": "d7890c3c-a490-474b-9e4c-26dcf782dc79",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6d93565a-bd14-4b60-895a-da803333b498",
            "name": "Negative Testing",
            "item": [
              {
                "id": "713ad37f-5788-495e-b9ae-ec6e613e14b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28df4bf2-1df0-44df-bf31-b6e341e77d80",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbde62d3-4d2c-4385-b2f0-962fa1cf13f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d66d8ea7-12ac-49a6-bcbd-d403fcd1d1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcbf348-d4c3-4ea7-bbfa-211784179322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e0648b7-839c-4b7f-b55d-fd692c6a10e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2f48b6b-9e8d-4679-a525-fdc1e6c0b3f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5e00a62-fbbd-4bfb-9901-8308322ddfde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e300c3ba-9ff7-4e8a-8eff-92e0bc56ec2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89372dbe-c6ea-467a-ab77-b9b9a5143b9d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92fddb5e-000a-4f61-832e-5442c7f883ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "affdecf6-000d-46de-b2ee-52e716d54512"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3694ce8e-2b00-4764-9e37-5ccc6d8ce054",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0b1d7ff-1fbf-4cf0-905b-24b49b484c80"
            }
          }
        ]
      },
      {
        "id": "1609c515-73b9-40f1-99f1-51572a779f5a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "94bf589f-5da0-4baa-932a-e70ebdb6de54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af23b1fc-e98a-43f3-8a54-c8c5840bd4c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34100404-6c02-4779-bcba-56ed9e2888e8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be062efe-3bb5-4cb1-8783-b03038de829f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08ba9ab1-17ab-4b5a-9029-f41886a6ecc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4925c678-ae00-45ac-8ee5-abe76066efdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0c3c02f-2e15-4bb8-859f-e0833ce98b47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f60c6fc-1903-4887-8cac-465fb254225b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a55d041e-2fb2-43ae-830c-cf1db9b9fe76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86da8483-fadb-42f4-86dc-35d5219c94cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68509229-ea91-4691-b875-a6344651c873"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1779c2d5-f139-4489-9580-c4d2651c3f01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8bc3db0d-b03f-428c-a1e7-1106b4148b0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52299332-1727-45fa-bd7c-f752ea8e6695",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7adb65b8-640a-42d1-8dc9-831fdbdb536d"
            }
          }
        ]
      },
      {
        "id": "0ab04b4c-cb8a-4288-b102-3dde4b48398b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "79f8ffd5-da97-4ee5-835e-eb72c76c7422",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d65d05c8-d55c-4e14-88aa-3e543853c9ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27a11db4-bcfd-46c0-825e-9188f21a6fb8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a93cf6-d471-41ef-9458-7c084e93334a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24edd9cb-dd38-4e1d-aad6-0a19c605b2dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcaac44-5f96-416b-b577-db2e35921668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d80063e-4359-478d-a3fb-92439818bee9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15d79ca8-711d-4918-8c4d-4e49c54fec4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e844d6a-fc8d-4d09-b243-b3556f0b25d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67c9733a-de14-4103-9a16-0ab9ad5d8834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5043faef-2d1f-433c-ac06-24ef9a0f7517"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82d227d8-705b-4927-8d47-42db1b19281a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ed0c47d-5298-46c4-8bc9-cc17f56f2272"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10e33a17-1c77-40c1-b684-f603496641f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f496eda2-3bdf-40f7-b2b7-61f3e3b96c7c"
            }
          }
        ]
      },
      {
        "id": "b9aba461-2665-4353-9672-683098035c14",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8690e1c-6ac0-49d3-867a-0a39defcd729",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15986268-382d-4a3f-9479-34246435196a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "28515754-c178-4f99-ac15-d4cf7503ee32",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a79e9493-b0af-47c1-b0ea-44478e53ca85",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ae4f4d1-89c7-43d8-9879-ce2557e77fda",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 289.7887323943665,
      "responseMin": 21,
      "responseMax": 5896,
      "responseSd": 743.076696238523,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690504704558,
      "completed": 1690504798585
    },
    "executions": [
      {
        "id": "d759f181-4da1-4f99-9304-f4f6c5ba587a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a5da87f7-a615-4e2c-8bfc-df1679e2652a",
          "httpRequestId": "eb2860e4-9961-49d0-97a0-6506157a7a3c"
        },
        "item": {
          "id": "d759f181-4da1-4f99-9304-f4f6c5ba587a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "21ec4959-d807-4bb7-b744-ec9290f3e0ec",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 0
        }
      },
      {
        "id": "a7fe05ba-4d89-4e1b-bcb6-9180abeebde2",
        "cursor": {
          "ref": "96b3f9ba-dc8f-4b78-ad6a-2ee0117de68d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d7d487bd-94af-4cfa-acb9-ecf8be2d3b47"
        },
        "item": {
          "id": "a7fe05ba-4d89-4e1b-bcb6-9180abeebde2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c17c354a-6163-4ee8-9cf2-4425b91060ef",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "56252d4e-97b1-4279-bf1b-f67264fa841c",
        "cursor": {
          "ref": "bfb24ace-3f3e-4186-9222-10f05c7cd8aa",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ce287fb3-8677-4ad3-9fc8-782e6e33dc69"
        },
        "item": {
          "id": "56252d4e-97b1-4279-bf1b-f67264fa841c",
          "name": "did_json"
        },
        "response": {
          "id": "001e8ded-07a1-4f39-ae79-e98dd12ca5a0",
          "status": "OK",
          "code": 200,
          "responseTime": 407,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bf93f6-15b2-4348-94e8-8c32b4f39733",
        "cursor": {
          "ref": "9c27bd04-5585-4a76-bd98-7f460f1b8af2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a86d7ea9-7915-4fbe-992d-da7748b3eb93"
        },
        "item": {
          "id": "a6bf93f6-15b2-4348-94e8-8c32b4f39733",
          "name": "did:invalid"
        },
        "response": {
          "id": "8385f0d6-81a1-45d7-ac75-06669dbd487b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1148,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bf93f6-15b2-4348-94e8-8c32b4f39733",
        "cursor": {
          "ref": "9c27bd04-5585-4a76-bd98-7f460f1b8af2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a86d7ea9-7915-4fbe-992d-da7748b3eb93"
        },
        "item": {
          "id": "a6bf93f6-15b2-4348-94e8-8c32b4f39733",
          "name": "did:invalid"
        },
        "response": {
          "id": "8385f0d6-81a1-45d7-ac75-06669dbd487b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1148,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ed111a-41a6-4be8-9f3c-666837f27b42",
        "cursor": {
          "ref": "58b72aa0-3052-48a6-bfc5-029a309f8b20",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "17d966ad-dec1-4bca-a924-54e7d0c814e6"
        },
        "item": {
          "id": "c8ed111a-41a6-4be8-9f3c-666837f27b42",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a0d0fb19-9c5e-4081-b6ef-81df9c228b17",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626feb1b-dd23-4fc2-b7b6-c1f49a68e588",
        "cursor": {
          "ref": "9d09983a-a4af-49dd-b6f0-6ff82706564e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "07af2062-051d-4e99-8494-c884047eaa67"
        },
        "item": {
          "id": "626feb1b-dd23-4fc2-b7b6-c1f49a68e588",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a32a18a2-4778-4f27-bea9-4fe9d4424986",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32c39e9-0b18-4c24-8afd-feeafea8306c",
        "cursor": {
          "ref": "9a7feafc-c441-4b4a-b1bb-fabe2e56dbd6",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "63123862-39b8-4359-b559-36a6d01b2bbf"
        },
        "item": {
          "id": "a32c39e9-0b18-4c24-8afd-feeafea8306c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7ab2f5cc-4989-4475-85f4-2e18cf2bf2ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fd9a17-b0e4-4486-89f6-d84f990b4c14",
        "cursor": {
          "ref": "209c2f9c-e4c1-4316-8394-0b0d000fb046",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9b06f186-3000-4ff6-a3bc-5d052cbfd315"
        },
        "item": {
          "id": "f0fd9a17-b0e4-4486-89f6-d84f990b4c14",
          "name": "identifiers"
        },
        "response": {
          "id": "cf16aa2e-a614-4052-acc7-99f8d606da4a",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb393049-9929-4acc-b01b-b2580d3a9186",
        "cursor": {
          "ref": "94a37772-5c78-48c0-97cf-acabe0dfd090",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6d02e478-6a19-4621-8ebc-eeb3380d4c19"
        },
        "item": {
          "id": "bb393049-9929-4acc-b01b-b2580d3a9186",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b9057dd4-1a00-425b-b162-2927f7da3c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae48edfe-5b2a-409e-9836-14a931d4aa98",
        "cursor": {
          "ref": "784d6d4a-2d4c-4a68-bac6-67b67c7b095d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ea5411f7-7045-46b6-b190-434d7bd8d3bc"
        },
        "item": {
          "id": "ae48edfe-5b2a-409e-9836-14a931d4aa98",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "30e82c9a-1e3d-4e68-acab-931828e9752f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c18707b-9f0a-403c-b827-38350d8206e1",
        "cursor": {
          "ref": "c712b02e-963a-4802-a01d-4917286033b3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b4cad676-8e1b-478a-9662-b517b107ca29"
        },
        "item": {
          "id": "5c18707b-9f0a-403c-b827-38350d8206e1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "41bde5ca-e928-4502-9542-a14d3f94477d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1011,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01e30ad-9332-40b1-8de3-9ee6e9b2f0dc",
        "cursor": {
          "ref": "e0eb7656-e223-4189-920d-6ecfd950ca79",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ab8fe1e2-e1ea-439b-a32c-6161bacdebfa"
        },
        "item": {
          "id": "a01e30ad-9332-40b1-8de3-9ee6e9b2f0dc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "af0fd857-8f81-4c45-a890-f7327c44110b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fd3554-c349-4713-859b-24de18c8ce92",
        "cursor": {
          "ref": "379d5ed4-f74e-4f3c-89f3-1c9476ee8c0c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "42f15706-ee6b-459c-9cd6-55788d42a558"
        },
        "item": {
          "id": "e8fd3554-c349-4713-859b-24de18c8ce92",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "74c88552-af60-4f4c-8e05-57a86aa23ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5f897f-43e4-4551-b6e5-cb7953bd3105",
        "cursor": {
          "ref": "2e363168-2e07-4129-86ed-9390bef361e4",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b90ca568-1f34-4a11-b350-579a29dfa4a7"
        },
        "item": {
          "id": "6f5f897f-43e4-4551-b6e5-cb7953bd3105",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1d58cd9a-1bfb-46c4-9dbd-2a0c0a4e0934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269beaf8-35ec-4835-8dbf-a4e587dd6dd8",
        "cursor": {
          "ref": "82294a83-4bce-4da2-80ce-467e0b5156fe",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "94a085a6-a838-452b-aec4-2f13663bb9c9"
        },
        "item": {
          "id": "269beaf8-35ec-4835-8dbf-a4e587dd6dd8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bd0ada50-d2bc-4805-8070-aa7b3fc77757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4c7b0b-adf7-4dc7-bc6d-2d75a364d251",
        "cursor": {
          "ref": "8df9407b-daef-4f54-b654-e9aadcf493c5",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "378d4df8-60c2-4e0c-8045-67f9b3d7f688"
        },
        "item": {
          "id": "9d4c7b0b-adf7-4dc7-bc6d-2d75a364d251",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "470fc75a-a94a-401c-ab2e-db70d5385efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a11b269-524d-49ab-95a0-a212cc2033a9",
        "cursor": {
          "ref": "57fc4cb0-e846-41e9-9e1f-a40bcc1a6e4c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5e931c5e-33e9-4147-970a-a893d96465c5"
        },
        "item": {
          "id": "0a11b269-524d-49ab-95a0-a212cc2033a9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6e5de094-c7af-42ea-9159-5503368ad216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a7b957-835c-44de-aae0-24b9d8823107",
        "cursor": {
          "ref": "8396f912-c468-4375-b1da-e6ff17817e10",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5a4661f3-b68a-47cf-95e7-cfb1d01191f3"
        },
        "item": {
          "id": "94a7b957-835c-44de-aae0-24b9d8823107",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "62a24789-6f61-4405-bf39-fddcdbdca670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20fd354-5740-47fd-8b48-f25fc44da806",
        "cursor": {
          "ref": "2139ecbd-5579-4e5d-a13e-d74d837f0294",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b461db59-99dd-482f-b7ab-0da1b0f54d81"
        },
        "item": {
          "id": "e20fd354-5740-47fd-8b48-f25fc44da806",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "75cb489c-4f97-4761-a277-2cb77ef53072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2acc99-56b5-4ebb-9fdc-4562c09b3a9e",
        "cursor": {
          "ref": "d017ae11-0117-4dfe-a018-6320c5d45416",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "50d8dd03-c9fa-4888-85d4-9061f9acde71"
        },
        "item": {
          "id": "7f2acc99-56b5-4ebb-9fdc-4562c09b3a9e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e23c10cd-762d-45a8-b1b0-6c68eda327fc",
          "status": "Created",
          "code": 201,
          "responseTime": 692,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "ff9acb23-1673-4bd4-b862-a0d4533d7e4f",
        "cursor": {
          "ref": "c37f4e50-1f98-4f55-b10f-4882143fba30",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "22a188d3-ef69-47ff-b184-0079f03df9ac"
        },
        "item": {
          "id": "ff9acb23-1673-4bd4-b862-a0d4533d7e4f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dd94baed-7177-494e-8e76-34a6b9b7c988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d65741-9bbe-4552-bf22-0b2c9d6c3524",
        "cursor": {
          "ref": "09bcfbbb-1737-4c72-b926-651af05b4436",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3719ecdd-93d7-4355-849f-94e0f854f474"
        },
        "item": {
          "id": "75d65741-9bbe-4552-bf22-0b2c9d6c3524",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b8377be0-c18e-409d-bcdb-d76416f9b8ca",
          "status": "Created",
          "code": 201,
          "responseTime": 5896,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "acaaba81-dfef-41ad-bd8f-25f4707a4f8e",
        "cursor": {
          "ref": "469b0c39-ba8b-4a54-a336-7f453141a329",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ba2d1a4a-1986-4474-81b6-3a41c719ab9e"
        },
        "item": {
          "id": "acaaba81-dfef-41ad-bd8f-25f4707a4f8e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8c725145-161f-4cf8-817c-9b6642ca3e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe1c9e2-682b-4814-be5c-8f847c9a0eeb",
        "cursor": {
          "ref": "60a2ea55-b102-4aed-878f-126b46e709bd",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1319e5d8-f3d7-4ad8-bbf7-964f41c5e54a"
        },
        "item": {
          "id": "0fe1c9e2-682b-4814-be5c-8f847c9a0eeb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cd5bf70c-1592-4e43-90af-889e7606a885",
          "status": "Created",
          "code": 201,
          "responseTime": 5090,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "e36f0bf7-f195-4910-bf46-8b4f80e8ef13",
        "cursor": {
          "ref": "bc68dbc8-9415-4868-a14a-4bba19c43570",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ce37fe59-53c0-4691-86e2-7727e626ead6"
        },
        "item": {
          "id": "e36f0bf7-f195-4910-bf46-8b4f80e8ef13",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1da34ea3-1f6d-4fbd-8c46-346593886507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e70bb47-9abe-4a7c-ae36-f877cd543cb2",
        "cursor": {
          "ref": "86105472-1751-4bbd-8b29-380d619a388b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7e284031-1317-4d2a-a32d-8c59aee17743"
        },
        "item": {
          "id": "1e70bb47-9abe-4a7c-ae36-f877cd543cb2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1e784faa-388f-4df8-bde5-8da29896d611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403040b2-38f5-408d-857c-53a4bfb15ebb",
        "cursor": {
          "ref": "940c2479-e57e-4431-9fc7-ea6f3d9abdfd",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "257fa9b7-7ecc-483c-b733-e0e9bb34604b"
        },
        "item": {
          "id": "403040b2-38f5-408d-857c-53a4bfb15ebb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7fcfc22e-e1af-496a-be11-b8bf4c84b61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b861fde5-24f6-47ad-b5f1-869450f5f492",
        "cursor": {
          "ref": "ed45847d-0363-45db-84d5-ed3548d90fd5",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "07954a87-1f1b-41b9-9352-9492a51ae996"
        },
        "item": {
          "id": "b861fde5-24f6-47ad-b5f1-869450f5f492",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e9ef1a8b-cc1e-4b71-8125-2ae97f9111fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0affc66a-2ffb-49fb-8da3-e32d300e8298",
        "cursor": {
          "ref": "bb72680b-869a-4e7d-94a9-3ea60bbd5f00",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e3092f88-081c-485f-83c7-21500de0642a"
        },
        "item": {
          "id": "0affc66a-2ffb-49fb-8da3-e32d300e8298",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4c4ab638-f387-4a07-8c95-02a27a0ce248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22539cf-4300-4ceb-8403-624b9748587d",
        "cursor": {
          "ref": "19972388-1ee2-4b06-9e0d-6d8f01b0c00f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "96f63b44-d288-44d6-997a-c002ce070616"
        },
        "item": {
          "id": "a22539cf-4300-4ceb-8403-624b9748587d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "faae5e44-2653-4f18-80aa-a58ba6784def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5c05a4-c2b7-426b-8758-e10debac80d1",
        "cursor": {
          "ref": "ca916d0c-a502-4d99-822a-8524fa1e0174",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0d28a6fb-92e8-4c04-a59a-1b3c8bfd6fbb"
        },
        "item": {
          "id": "cb5c05a4-c2b7-426b-8758-e10debac80d1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d58a7952-eff1-42e6-887b-552cc3b9111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073aa848-7a75-4526-818a-a1a8dbced2f5",
        "cursor": {
          "ref": "eb46d564-d971-4090-9445-4a6d74c23dd7",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7bf0d24f-390e-41e9-8ad4-51939a033264"
        },
        "item": {
          "id": "073aa848-7a75-4526-818a-a1a8dbced2f5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "164ca519-93c1-4cf7-9950-e8357ef4a623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721c413a-c30e-4fcb-9ba6-869afeddc414",
        "cursor": {
          "ref": "2630db66-9490-4fb3-8f51-906166434d84",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1c097a54-38d2-43ad-97b6-7558a8b2f8f1"
        },
        "item": {
          "id": "721c413a-c30e-4fcb-9ba6-869afeddc414",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cfdbf94e-03f9-4c16-ac46-9d9054a2dcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cedbc7d-1262-4698-a4dd-63b985979fbf",
        "cursor": {
          "ref": "ba72c363-1da8-4cae-8b1d-a7c180151c0a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0f9a84ac-e8d5-4b6b-8623-2e56a512eb91"
        },
        "item": {
          "id": "4cedbc7d-1262-4698-a4dd-63b985979fbf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "659496be-1319-4bb3-b94f-1461a99d51bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3d005c-d6b2-4bd2-98fe-b19f1cfd3839",
        "cursor": {
          "ref": "877d556a-6a32-4d1a-a829-d2b4b07ed917",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "89ea9693-21be-4488-97f9-98b60fc80053"
        },
        "item": {
          "id": "aa3d005c-d6b2-4bd2-98fe-b19f1cfd3839",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "29f0d1af-a9f2-4e5f-b52b-22329842238b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf40f95d-4523-4bc6-aa0a-3fd8f19c45b6",
        "cursor": {
          "ref": "954298d2-ee35-42f5-8454-2a2749f728a8",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c5573301-adc1-4d46-9dfa-ed3b4d9a9843"
        },
        "item": {
          "id": "cf40f95d-4523-4bc6-aa0a-3fd8f19c45b6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0bbb3a32-ef1e-4402-a185-73aee983d424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9914788-c159-44da-b6a9-1dfed305fc77",
        "cursor": {
          "ref": "b65710a6-3133-484f-a998-c1aab7957c88",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d3e676de-9901-46c3-b4d1-3c713c959873"
        },
        "item": {
          "id": "a9914788-c159-44da-b6a9-1dfed305fc77",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "96be3fe1-c6b9-47fb-ad49-1e5c83b5f721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01acfde9-31f1-4deb-a3f9-b1197d5aa67a",
        "cursor": {
          "ref": "c5376668-6c3c-43f5-b0f7-c2681c9ef1ad",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "351cc86a-7e14-43a1-bc45-baa6670f9ab4"
        },
        "item": {
          "id": "01acfde9-31f1-4deb-a3f9-b1197d5aa67a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aa952763-ac82-45ea-923d-8973b1ba4de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbec37dd-eb5e-4c9c-8d29-85edd6a7c91f",
        "cursor": {
          "ref": "2424f9dc-feac-460c-b34d-87dad6129f8e",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0aad8ce5-041c-426f-9d92-15c7474ab6da"
        },
        "item": {
          "id": "dbec37dd-eb5e-4c9c-8d29-85edd6a7c91f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "84a9d7c6-4c22-4211-97b3-21c59551fd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91b7917-1c65-4074-b492-536c24e8621f",
        "cursor": {
          "ref": "5b6e1917-0bf9-471b-9a9d-f65ec662fbda",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3a0eb6c7-6d07-4a78-8940-200063adebe0"
        },
        "item": {
          "id": "a91b7917-1c65-4074-b492-536c24e8621f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a387bc13-8846-4c29-83ce-27b0f7eddcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e581642-6b4d-4557-9c7e-e4e7be5c36ef",
        "cursor": {
          "ref": "7e24eb5a-255d-4787-972a-7d83485be58e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d12631db-dc79-489f-8da7-bf4dabd59fe6"
        },
        "item": {
          "id": "9e581642-6b4d-4557-9c7e-e4e7be5c36ef",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1be28423-c7be-4229-85b1-a01161417725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5b922a-9117-4bbd-8272-99b5cf567a6f",
        "cursor": {
          "ref": "de77c967-56fb-4e96-a4b7-2da6082683ca",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "148d581e-1d76-4b15-8223-ad4edf0152d5"
        },
        "item": {
          "id": "ac5b922a-9117-4bbd-8272-99b5cf567a6f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "56b5a761-38b6-4ba2-92f4-5097fba654b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5a16f2-773c-452c-91e3-1eb81fbbe345",
        "cursor": {
          "ref": "b0666a0d-d52d-49f1-8f79-61047b82199c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a4b34a87-a403-4ca7-97ee-4b5c0a84c439"
        },
        "item": {
          "id": "7f5a16f2-773c-452c-91e3-1eb81fbbe345",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ea10b838-2d03-4587-b4e0-70cb19553bb0",
          "status": "Created",
          "code": 201,
          "responseTime": 2925,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "ceccaf8c-d0ff-4bac-a588-5a28c72b05dd",
        "cursor": {
          "ref": "eb30ac77-1015-40e9-b2a6-b352b58c5b95",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ace77035-bf74-4291-a18d-8cc94b1fc5fd"
        },
        "item": {
          "id": "ceccaf8c-d0ff-4bac-a588-5a28c72b05dd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b0f77ce4-c2a8-47b6-ad8f-1e3969565371",
          "status": "Created",
          "code": 201,
          "responseTime": 2649,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "e81c2ba6-1b89-4605-88cd-d062ca881049",
        "cursor": {
          "ref": "6104fb23-73a8-46f1-b8ce-87bb0f5cff81",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9b30c529-881b-4d39-81a2-f0bb04504fbd"
        },
        "item": {
          "id": "e81c2ba6-1b89-4605-88cd-d062ca881049",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "13a13438-e16e-4806-9454-ee04ba1b68d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10c22e0-0047-4f45-8b36-9a0b2f711bae",
        "cursor": {
          "ref": "4cc8311b-e52b-491e-859a-0d0d6279616d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4be43788-984b-4899-86ee-67c0b8ef5afa"
        },
        "item": {
          "id": "e10c22e0-0047-4f45-8b36-9a0b2f711bae",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8d0456eb-ba94-4c7b-8d11-7398b3d8a58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eae146b-3c65-41fd-aba4-18dea43e434d",
        "cursor": {
          "ref": "75f95d6a-fd84-4dd2-87c6-cee1019c39c9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "27b7389d-6f38-420b-a24d-4588e676be6b"
        },
        "item": {
          "id": "7eae146b-3c65-41fd-aba4-18dea43e434d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e1b15dca-ffb8-4d33-a84e-a99d3ecf5a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76bb121-1bfb-4434-9310-80e85d841c11",
        "cursor": {
          "ref": "7f5eea36-e8c8-4ee6-b093-aa09d0ab9dc8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "86e6c4ea-70af-4736-b1b5-d8a1f3459878"
        },
        "item": {
          "id": "a76bb121-1bfb-4434-9310-80e85d841c11",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9a9fd266-0325-4293-a283-4e6061756c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5dd6d4-a5a2-4597-b643-c99a853cb368",
        "cursor": {
          "ref": "65a825af-b142-4eac-93df-2a9ea6337dbc",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bbc8a9ae-9c77-4812-95bc-6d3d529f19cb"
        },
        "item": {
          "id": "cd5dd6d4-a5a2-4597-b643-c99a853cb368",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c13c492d-faa7-45d0-9246-3ed586bd2f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcac0fe-069f-4f50-9373-f7e52e120f5d",
        "cursor": {
          "ref": "51e04afc-693f-4aa0-9f2c-ea10ca0165c8",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "92010c6a-3ab3-4340-a461-bfcdbda73feb"
        },
        "item": {
          "id": "bdcac0fe-069f-4f50-9373-f7e52e120f5d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "04ae5dc0-9ff5-4545-95d2-26bd9f48c8ac",
          "status": "Created",
          "code": 201,
          "responseTime": 2620,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "34c68b2d-29cb-46e2-9ebd-f4e1f63c20b0",
        "cursor": {
          "ref": "db141b4d-e6df-4ad4-94bc-002ba42e0d38",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e0ccecbf-3395-4f77-aa02-c1c0e771d7e3"
        },
        "item": {
          "id": "34c68b2d-29cb-46e2-9ebd-f4e1f63c20b0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9d345171-c989-434a-95e3-86705db76fa2",
          "status": "Created",
          "code": 201,
          "responseTime": 3035,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "bc6ca289-f0ea-45c4-a776-9130f1fd146d",
        "cursor": {
          "ref": "e4771e15-1622-4d41-9859-e85def8ba100",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6358fd40-4c35-4369-9a17-dad3aa2c4ff1"
        },
        "item": {
          "id": "bc6ca289-f0ea-45c4-a776-9130f1fd146d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0f89b345-f537-4a87-8f88-7d82211d90cc",
          "status": "Created",
          "code": 201,
          "responseTime": 2598,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "3bed923c-9af8-4d4f-94c0-dd2ad66ee63f",
        "cursor": {
          "ref": "453a43fe-a7ae-4626-8b20-dd1dfe6f6a17",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7e2893a9-3de9-43ea-8422-673bbcb21a90"
        },
        "item": {
          "id": "3bed923c-9af8-4d4f-94c0-dd2ad66ee63f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "848b8ecb-91ca-4102-a7d5-7ee871778c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707031c6-86d5-4e7e-993f-f3d2c3af4a49",
        "cursor": {
          "ref": "58fadffe-da9d-4d8a-8600-799b7a6a11fe",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "72399af6-8ddd-4e02-8eda-47f46c16f9a1"
        },
        "item": {
          "id": "707031c6-86d5-4e7e-993f-f3d2c3af4a49",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "640589d5-0b08-469f-9025-91408a32c66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fd9c2e-c9e4-4f9a-844c-ff3acb666eaa",
        "cursor": {
          "ref": "4628ecca-23a5-4085-b7f5-7110e9f4cd1e",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5482130d-0c60-4d5f-b51e-f5ca06c237b6"
        },
        "item": {
          "id": "a0fd9c2e-c9e4-4f9a-844c-ff3acb666eaa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ff629142-1755-4464-8742-945a6d54fd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d316f0e4-7ad5-43af-805f-18530108dd30",
        "cursor": {
          "ref": "a2f8659b-4c09-47e0-a1f8-e896e9c254ec",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3ceb9207-29b8-4d26-8db6-eb0c821dcd92"
        },
        "item": {
          "id": "d316f0e4-7ad5-43af-805f-18530108dd30",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "46b6ac93-8270-4820-b305-4198cdeb6209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfa27ef-a9b4-4542-aa73-9960758d1de5",
        "cursor": {
          "ref": "e687a0d7-1d6e-45b0-8894-d3b22056d489",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a79d5641-d805-4aa5-8c94-8e6af020fcb8"
        },
        "item": {
          "id": "cbfa27ef-a9b4-4542-aa73-9960758d1de5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "243dfba7-5f16-42c8-9699-4239d5537409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7212075-4ab0-41e6-9e37-ede71ac3211e",
        "cursor": {
          "ref": "294030e7-d6e1-4e4a-87d8-6fa1ca3664be",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e0632954-20fe-4349-a41b-aa94826fc009"
        },
        "item": {
          "id": "e7212075-4ab0-41e6-9e37-ede71ac3211e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "182ef569-8279-4a86-ad78-27e4547b1f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee03ad6-b0e4-4128-8e99-eb775c0645e8",
        "cursor": {
          "ref": "23ad2db0-8b53-4035-8939-8fe57b51fca7",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "db80cee3-f161-4c7d-9b31-e9a29eff59ef"
        },
        "item": {
          "id": "3ee03ad6-b0e4-4128-8e99-eb775c0645e8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "48061781-01c1-4eb5-8aa7-5d6da1ea51d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d91da7e-c213-4b8f-ac64-00a999708c55",
        "cursor": {
          "ref": "bb4200a6-334e-43d3-ab2c-2a773b29d6af",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "02916594-e640-4927-8418-16a6f9c99195"
        },
        "item": {
          "id": "6d91da7e-c213-4b8f-ac64-00a999708c55",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c74ca7cc-f181-4c5a-a378-ac228c5e32b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904b79f2-362d-43e6-bb04-a6d579c4c983",
        "cursor": {
          "ref": "927fb6ef-f462-4d13-9409-8765315e2e1d",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "70cd1518-694b-4b43-be88-fe73e4fdb5c7"
        },
        "item": {
          "id": "904b79f2-362d-43e6-bb04-a6d579c4c983",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1d5fd82d-23c4-4c84-8c5d-52e6da0bf957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51113955-6dd4-42e6-be74-c84fa427a012",
        "cursor": {
          "ref": "cbc789cb-18d0-4036-ab72-98cda8fb2ac8",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2749b92d-4c6f-4936-aa97-2b5ce497c938"
        },
        "item": {
          "id": "51113955-6dd4-42e6-be74-c84fa427a012",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "16cb45dd-f925-439d-85db-ba4442ddc50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c14fb50-53e0-44a0-8483-20d1df798b2a",
        "cursor": {
          "ref": "7ec7285f-cb00-407a-9226-c02872ce6215",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a7c1b33c-ba69-4b15-bfee-5b3e37a8e61f"
        },
        "item": {
          "id": "6c14fb50-53e0-44a0-8483-20d1df798b2a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0ca41c82-5372-4d7d-a723-3f7fb04b547f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd49b98a-a2a9-402d-8865-2d872bc970e5",
        "cursor": {
          "ref": "ec17f922-ab1e-4ad6-b485-0c95057c87c5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "24b1d309-a86b-44e1-82a3-3c0e1e97e144"
        },
        "item": {
          "id": "dd49b98a-a2a9-402d-8865-2d872bc970e5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9fa77c07-0f9c-4e3a-acfd-510e2091bc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62887323-32bf-4cfa-b285-3a8176877b54",
        "cursor": {
          "ref": "40e47ae7-d581-41f0-9614-46ddf6b6a5e6",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "77d83ba7-7b72-4514-a7a9-e86c3a43e718"
        },
        "item": {
          "id": "62887323-32bf-4cfa-b285-3a8176877b54",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "00f2a79f-8d55-40fb-874b-7b8930ed449e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054a0a45-40b7-4fbd-b727-d420a75d0e46",
        "cursor": {
          "ref": "70502681-006b-4e82-8d88-842a40d8c0ab",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e5aa3ce3-df85-499e-bb97-d7ee9bf87bbf"
        },
        "item": {
          "id": "054a0a45-40b7-4fbd-b727-d420a75d0e46",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8dc58723-6288-4155-a95c-9d137db033d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95ed5b9-d07b-4d69-8fad-cb24e0c1dbb4",
        "cursor": {
          "ref": "0b8ed0e0-095e-4263-b826-007b2073fd47",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "98faddc0-f923-436f-ac4d-38b1babcc3fc"
        },
        "item": {
          "id": "b95ed5b9-d07b-4d69-8fad-cb24e0c1dbb4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f3cf48bb-6291-4389-9bcf-1e23b86db02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b33ae87-2ee0-4279-91c2-277c088213af",
        "cursor": {
          "ref": "c7be8a53-3db2-4695-9806-9b045dfe79dc",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bdb7dd65-fe2c-4a83-b787-d09ea0b960e8"
        },
        "item": {
          "id": "1b33ae87-2ee0-4279-91c2-277c088213af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5c2cf276-51b1-4c15-b08f-a1e5129cbaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85ac6a7-5b61-440e-b5b0-6e1ad57934bd",
        "cursor": {
          "ref": "c14eae38-a3d9-408a-9ef3-cd18c5795609",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a24b6606-8f4c-4b78-af20-38ecc83aa82c"
        },
        "item": {
          "id": "d85ac6a7-5b61-440e-b5b0-6e1ad57934bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0b8c2524-8f94-492b-aae4-f4253a256c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f890bb08-c591-42de-9aa9-27b61e0435fc",
        "cursor": {
          "ref": "fb8acf0e-a84b-4c92-9384-909f27a26b79",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "245d0866-1314-4384-91a4-b7a17ed10461"
        },
        "item": {
          "id": "f890bb08-c591-42de-9aa9-27b61e0435fc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0496bb4d-f711-4beb-93ba-8be712340b2c",
          "status": "Created",
          "code": 201,
          "responseTime": 3009,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "0681e352-a6c1-4198-8754-061a28ed4ce8",
        "cursor": {
          "ref": "be8798bb-17de-4694-8880-ff49b454aeb0",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "15bc76cc-8a4b-42a7-9dec-f1d139c5600e"
        },
        "item": {
          "id": "0681e352-a6c1-4198-8754-061a28ed4ce8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c030b936-6e81-433a-abd4-67ef5f44e1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdce5a2-b607-40c5-9ca4-bd057bcd875a",
        "cursor": {
          "ref": "2c156702-bdf0-4112-9adc-c6b761432f07",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "37e7af86-633d-49f5-a22c-6832d04c44e3"
        },
        "item": {
          "id": "ccdce5a2-b607-40c5-9ca4-bd057bcd875a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a82a8b39-5f04-4b0c-894a-fe7653c86ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb4eca0-ea83-4ac0-ae68-af16959fbdf8",
        "cursor": {
          "ref": "8c9e62b9-85cd-4416-af92-eab423d4cdc9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "186df27c-be2f-435b-84a4-3064edc9adae"
        },
        "item": {
          "id": "1fb4eca0-ea83-4ac0-ae68-af16959fbdf8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3493f47d-84d8-467f-a64d-4560e2d7a3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac0f2ff-1106-410d-b0dc-0ebcda6b941c",
        "cursor": {
          "ref": "da544f80-8fea-4de6-bf5d-e69dc6cfc52c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c32f157f-223c-4395-a1d5-af8c75eb97c1"
        },
        "item": {
          "id": "3ac0f2ff-1106-410d-b0dc-0ebcda6b941c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fe8ce1ba-3658-4535-b417-58fa5884ae33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a719cba-9c87-498f-ba46-d5fe9ab5c295",
        "cursor": {
          "ref": "a5394f40-3945-41ce-b56d-658db1b4c51a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "60c846f2-7de9-4a6e-9fb9-1310677ed6a2"
        },
        "item": {
          "id": "1a719cba-9c87-498f-ba46-d5fe9ab5c295",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c60699f7-1a1f-45d0-9a58-5c21fe7f5736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdc3c39-4c20-4262-884e-b88147606da9",
        "cursor": {
          "ref": "26853a00-2715-4bc0-8a53-b99c4fdb2793",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a6860a2d-2a95-4898-b29f-0d6ed3eed758"
        },
        "item": {
          "id": "5fdc3c39-4c20-4262-884e-b88147606da9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c08261d5-c0a0-4173-b217-c1f38b6f77fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53781831-40fc-42f2-85b4-cb062aa37272",
        "cursor": {
          "ref": "ed9f5c31-766c-4b06-b03c-1bbe26da1e5e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "baa8625e-0dda-4938-855d-391d2a65bac4"
        },
        "item": {
          "id": "53781831-40fc-42f2-85b4-cb062aa37272",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c881eee0-f1d5-439e-82fb-7e5dd1dfab6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b8ff30-05f0-4f8c-a3a5-3b8cef483225",
        "cursor": {
          "ref": "7cbc2d0d-fad5-4626-a0c1-0c54a1b2e401",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b61fd63e-7e2a-47c7-bc5c-3f2e4d484acd"
        },
        "item": {
          "id": "93b8ff30-05f0-4f8c-a3a5-3b8cef483225",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "59fd3500-4594-4a10-b12b-28c9aaf46169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb50be6-b80c-41d1-8c35-120dfd833da6",
        "cursor": {
          "ref": "786232b3-f941-43d5-93ec-ac0925431dc2",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0752048e-1f5d-4588-a1c1-bca40376f583"
        },
        "item": {
          "id": "ceb50be6-b80c-41d1-8c35-120dfd833da6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7f71dddd-f0c5-4f73-996a-f6fa83898ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff67643-be09-433b-be56-3421d0314406",
        "cursor": {
          "ref": "9588912d-5e22-44a7-a945-85acb7faf81f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cad31ee4-8f70-4119-8d5c-c4d9cd89d92c"
        },
        "item": {
          "id": "3ff67643-be09-433b-be56-3421d0314406",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "09c00f8a-05a9-43d8-a0db-005a93c09ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1919307d-4e97-46bd-84af-f893078c4b62",
        "cursor": {
          "ref": "c6e88c70-9d85-4be0-b9bb-04f9fced2080",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d2e3bc36-3ea2-4568-a467-74ea29ecbd85"
        },
        "item": {
          "id": "1919307d-4e97-46bd-84af-f893078c4b62",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dbef9ede-12da-4df6-9f2e-541062afb06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7a0c55-3f6c-4f6c-9954-6143fcd98a8d",
        "cursor": {
          "ref": "ab5a8538-d08c-40af-9bdb-3df2149bebe3",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4785ccea-9747-41d5-a18b-98e67b956047"
        },
        "item": {
          "id": "ac7a0c55-3f6c-4f6c-9954-6143fcd98a8d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4b78f879-c607-4bcb-be96-6fff388e6c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536fe357-3f39-4527-8ddf-25e09c6a845d",
        "cursor": {
          "ref": "d8fc6e11-57f1-45a6-a445-94451cfca348",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2076dc23-48a8-4e0b-8af1-d2a03fe4f584"
        },
        "item": {
          "id": "536fe357-3f39-4527-8ddf-25e09c6a845d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dae032d8-008d-4292-9d81-a0b726e3546c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bbe4c7-2d31-4f72-ab27-b5c6750170dc",
        "cursor": {
          "ref": "e5313470-1cb6-4b18-a691-01137165ea1b",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6de16b0f-b451-43fa-a42d-4763890ad966"
        },
        "item": {
          "id": "17bbe4c7-2d31-4f72-ab27-b5c6750170dc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4abef597-047f-46e5-9913-053282e51d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7570aa4f-150e-40d6-be46-0c617eee8d6e",
        "cursor": {
          "ref": "0774d79d-a54d-4242-bcfb-c4fda4364f62",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ceae608a-1920-4cec-b19c-a5a695fcd7ea"
        },
        "item": {
          "id": "7570aa4f-150e-40d6-be46-0c617eee8d6e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9c136bc8-2064-4816-9032-67b9638135bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b7e65d-90a6-4c39-8130-4c983efd6317",
        "cursor": {
          "ref": "0f0683db-cf70-4751-b32c-583a0952fa25",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c7a65d71-90be-4ae2-8482-1537f15f3a6e"
        },
        "item": {
          "id": "c3b7e65d-90a6-4c39-8130-4c983efd6317",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b9573504-d2e1-4960-9ae0-04e45b631f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f19cd37-f237-4c5b-a6e3-8acb88f8a633",
        "cursor": {
          "ref": "93f09a96-bd14-4f6e-835b-91070f722ed2",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3e558eeb-14b4-4165-9d7f-282d808dcdbb"
        },
        "item": {
          "id": "0f19cd37-f237-4c5b-a6e3-8acb88f8a633",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "00c10f02-fa25-4ff8-a082-28d14f6686b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bdef86-386f-4af0-bfa5-c5a6fc8e0d14",
        "cursor": {
          "ref": "4688615b-b800-4b00-be2f-5fc36bab4b33",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a0c44fe8-cebd-43d0-93c7-dd3c7d3cdfd4"
        },
        "item": {
          "id": "70bdef86-386f-4af0-bfa5-c5a6fc8e0d14",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f38646d7-eeeb-4f1a-a02d-b0f33e03eed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f255b82-bfae-4ecf-8f0d-ae4bb5e02f7f",
        "cursor": {
          "ref": "07a09c3a-8316-480f-8dc4-e09f1f89ca88",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0845f24e-5642-4cf2-adf5-f77407605d92"
        },
        "item": {
          "id": "1f255b82-bfae-4ecf-8f0d-ae4bb5e02f7f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "be5d549b-ec5d-403a-af97-e8c521c4de78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de10b63-45a5-4046-b41c-04c5fc9b5e22",
        "cursor": {
          "ref": "105d7437-f8f9-4551-a3aa-b7a944906092",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5324fb60-7ac0-4a13-b8cc-11198b659c0c"
        },
        "item": {
          "id": "7de10b63-45a5-4046-b41c-04c5fc9b5e22",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e69028fb-1569-4709-95ca-052b6cc6b243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c207f42-6edc-4795-862c-70ecc678f67f",
        "cursor": {
          "ref": "5f391a55-7c7d-4585-af5f-baed4e2139c7",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c540a5d1-3d6a-4152-b120-3c8eb8c21508"
        },
        "item": {
          "id": "5c207f42-6edc-4795-862c-70ecc678f67f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4cb30a75-eab1-4187-b48c-1f4403026f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b772cd-d229-4040-bd16-22813fc587f6",
        "cursor": {
          "ref": "c72b2a9f-2508-4c2a-aeb0-bbda0d11b09a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7eea2ceb-7aff-4962-b96e-03b865942855"
        },
        "item": {
          "id": "d3b772cd-d229-4040-bd16-22813fc587f6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2ec0d5a9-f3f9-4ad2-98a3-cf65d27e5c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300674f0-0fa6-4aba-bb5f-5bd336eed538",
        "cursor": {
          "ref": "cd78d5b6-443f-4031-b643-15bfcb769cfe",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ce663351-fce0-4cd8-923f-866017a15b6d"
        },
        "item": {
          "id": "300674f0-0fa6-4aba-bb5f-5bd336eed538",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "08d0cee4-a490-455c-898b-edda49f2c275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fde6cca-ead4-41e2-9254-f52fc669eb21",
        "cursor": {
          "ref": "daa7fd91-40f1-4d86-b193-a464bdd75909",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "175f17b6-fe88-4684-af1a-937457b200ce"
        },
        "item": {
          "id": "6fde6cca-ead4-41e2-9254-f52fc669eb21",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d11c31a3-359b-47a5-bc71-c2fb8a3141c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3421df9c-5ce8-4289-a9db-cc7ecca5d320",
        "cursor": {
          "ref": "c911ff74-b3b5-4402-a188-e977afa8d2ce",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c49ac272-81c4-4872-9926-a68baf90653c"
        },
        "item": {
          "id": "3421df9c-5ce8-4289-a9db-cc7ecca5d320",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6f74f2a4-cb04-4a45-af87-62d479a3c96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbeb0d2-f964-4b8a-a97a-dff45f65b218",
        "cursor": {
          "ref": "325f2508-ec6a-4025-84b1-d73573a2bda3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "69694347-fb6b-4853-891e-0adeb8f6ed82"
        },
        "item": {
          "id": "edbeb0d2-f964-4b8a-a97a-dff45f65b218",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cfc92a76-1aa3-40f7-9857-9998cf8dbf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d7806f-3c3e-4600-b7dc-0e421244cde5",
        "cursor": {
          "ref": "f29c0d57-a82c-4035-9743-6b8969e22c26",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "287665f9-a0b2-4715-9e89-57713f374af9"
        },
        "item": {
          "id": "e2d7806f-3c3e-4600-b7dc-0e421244cde5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f5f9d2ea-8ba5-4a22-b5fa-e77d330cc3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43f5cc4-9923-4928-850d-4782cf97f3b1",
        "cursor": {
          "ref": "a27e0cde-fa38-4d6f-84a8-0b6743db5d3b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6132ce53-587b-4322-81cc-c4b234ee680f"
        },
        "item": {
          "id": "f43f5cc4-9923-4928-850d-4782cf97f3b1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "faf593fe-18fe-4956-b245-a2c85e69c9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daba753-334c-4a4c-8f0e-ed721764a7d6",
        "cursor": {
          "ref": "ee8e1fbd-bb1a-48b4-95c0-a082220ee96d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a981b9ee-9e8b-4030-9e3c-5454d3b9568c"
        },
        "item": {
          "id": "2daba753-334c-4a4c-8f0e-ed721764a7d6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "17cf726c-fb6e-4c31-955f-08561412aa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0957637-7d28-4851-963c-5db9207f8265",
        "cursor": {
          "ref": "69339320-42e7-4094-8a2e-e830dc671f3a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f2bf2e00-6db1-49c9-8f9e-559ec947d8e7"
        },
        "item": {
          "id": "d0957637-7d28-4851-963c-5db9207f8265",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1106d32e-701e-40c0-b7d6-8b3da7c53e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365ff88b-1731-41e9-b1c9-d1bd8e0dd334",
        "cursor": {
          "ref": "466898bb-80db-4e40-b8cd-fd0fbb7a0172",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "60174e91-ac06-4cda-a74b-0b35a66d1e01"
        },
        "item": {
          "id": "365ff88b-1731-41e9-b1c9-d1bd8e0dd334",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f555a7a2-065a-40c9-a6b4-884bc2ce47a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d908996-fba3-414c-be85-74ec8dd2fc08",
        "cursor": {
          "ref": "bd2c2fce-db29-44b9-8bb4-539f467bf57c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c11cb0ad-564c-44e9-9f1e-42fd77bf645c"
        },
        "item": {
          "id": "7d908996-fba3-414c-be85-74ec8dd2fc08",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8fb5028b-09b5-4544-b24e-9f196501fa8e",
          "status": "Created",
          "code": 201,
          "responseTime": 2424,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c7a277-6efe-4443-88ed-9e5dba7c4531",
        "cursor": {
          "ref": "acfcce72-a5b6-469e-b5b5-fb48bc9aa622",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bde1b760-7d5a-4c3a-b5b3-bbc5cf7c5db0"
        },
        "item": {
          "id": "c7c7a277-6efe-4443-88ed-9e5dba7c4531",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1a91f455-ebc7-44a0-bea9-5c8186cf4324",
          "status": "Created",
          "code": 201,
          "responseTime": 2575,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa8700c-df1e-43a1-b9ae-4042f560eb17",
        "cursor": {
          "ref": "eb7aa0a3-6fed-4a35-a8ff-715098638e55",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f1be4181-33cc-4956-a725-446cd422effd"
        },
        "item": {
          "id": "0aa8700c-df1e-43a1-b9ae-4042f560eb17",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d815aa4f-aaa4-41c0-8b86-5481474e300a",
          "status": "Created",
          "code": 201,
          "responseTime": 2577,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ce8dbb-e24c-4a95-bfbf-d48ff3799058",
        "cursor": {
          "ref": "dcca725c-81b7-4b09-87c7-9f6e5cc4cd35",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3a4ce1d0-ba0c-4356-949d-bc17b77a5bb1"
        },
        "item": {
          "id": "d7ce8dbb-e24c-4a95-bfbf-d48ff3799058",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3b336cd5-bde7-4137-acb5-2434612ff851",
          "status": "Created",
          "code": 201,
          "responseTime": 2499,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c32c4c5-bcc5-48ba-a703-affb0760b00a",
        "cursor": {
          "ref": "699a5a15-406a-4199-bcc9-839968dd5afa",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a77cd5df-19ff-454d-bc36-13fecca341e6"
        },
        "item": {
          "id": "1c32c4c5-bcc5-48ba-a703-affb0760b00a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5f64f94a-b799-43de-864c-e99461a73ac6",
          "status": "Created",
          "code": 201,
          "responseTime": 2587,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-28T00:39:19Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-28T00:39:19Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "188e0c9e-86a0-4591-ae94-2107d360e20e",
        "cursor": {
          "ref": "5c946202-2055-45d7-8aa9-512c858dd6f5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "70608111-598e-47ec-9484-b8910f8eb6fc"
        },
        "item": {
          "id": "188e0c9e-86a0-4591-ae94-2107d360e20e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9e7a3a79-a8cd-4f58-b63b-1b0454f2e8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "c380578b-b9ac-47d1-b320-f89f9bc7e229",
        "cursor": {
          "ref": "3f57fcaf-2b3b-4efa-9c3c-ec0cbe506da8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e461b1a4-1303-4fd2-b461-0164b53430db"
        },
        "item": {
          "id": "c380578b-b9ac-47d1-b320-f89f9bc7e229",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4084cf8b-9605-437f-b496-fb43260b71db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd65e60-d6a1-47a9-913b-4f586b70065d",
        "cursor": {
          "ref": "e549fdd8-f44f-46f3-944d-c367ca7d60d8",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a6b210ae-02de-4fe6-b557-66ba5e931d66"
        },
        "item": {
          "id": "8bd65e60-d6a1-47a9-913b-4f586b70065d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "879a99dc-4c78-4b12-b21d-67417b52a080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75311ca4-57ea-4174-aeb1-5869efb0773a",
        "cursor": {
          "ref": "1fc3d25c-6476-4a69-a885-fb75205ab10f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "38922a63-5c8a-4a5c-b545-cbf4fce41616"
        },
        "item": {
          "id": "75311ca4-57ea-4174-aeb1-5869efb0773a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1b3d3e87-389b-4256-997d-40668157b018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8a1fc6-9fc3-4894-aa89-b8bb18b99990",
        "cursor": {
          "ref": "67fd1a8d-0fe1-4c25-a68a-992d103313cf",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ae642be4-7ca8-4061-8c10-d6170ebd1450"
        },
        "item": {
          "id": "cd8a1fc6-9fc3-4894-aa89-b8bb18b99990",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "66c8d5e1-6978-4ebd-9321-21048d34055c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1ddd6d-3f54-48cc-a14e-f6b58a4d2a20",
        "cursor": {
          "ref": "25f38360-350a-4502-9473-8c5a29df17c9",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ca2c5963-45f2-4344-bce8-bf078909beec"
        },
        "item": {
          "id": "9a1ddd6d-3f54-48cc-a14e-f6b58a4d2a20",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d0fa4d04-d78b-48cc-84de-9e715e166da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9737b3f6-3ae5-4bbb-8493-997184a9eb58",
        "cursor": {
          "ref": "33e5bce5-baf5-42f2-aa2f-f73f2235e20c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "45443ba3-7c1c-462c-86b2-34e90f9c2c87"
        },
        "item": {
          "id": "9737b3f6-3ae5-4bbb-8493-997184a9eb58",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "28332038-6ef8-4e57-af95-029f4636fc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9f249f-427f-4997-9a58-3611d8d2aa2c",
        "cursor": {
          "ref": "344f7c56-e630-4650-9c92-31e9a4905037",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "182b1d60-a683-47ab-be72-5d648b23965a"
        },
        "item": {
          "id": "0c9f249f-427f-4997-9a58-3611d8d2aa2c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b63e6a26-c59c-4339-a9c3-d6056e3fd1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaf5b3f-7fa3-45ed-bd65-d15700606cf9",
        "cursor": {
          "ref": "ff3ccb15-4983-46e3-88e4-364b4093f3a0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ec653e93-884c-4f04-a389-5f91893831bd"
        },
        "item": {
          "id": "4eaf5b3f-7fa3-45ed-bd65-d15700606cf9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6b374b1d-87e5-47b9-b013-5122cb7c47ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedecc76-3315-4c69-942d-c8a51719c856",
        "cursor": {
          "ref": "775ebcdc-8a2a-4d24-8c0c-29e2dbca6404",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b92d9137-fa9d-4f1c-918d-a8da3718ddd0"
        },
        "item": {
          "id": "eedecc76-3315-4c69-942d-c8a51719c856",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1a0d6ecf-4180-4121-8b29-e41c6a5e0156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bb60a6-0237-498f-8712-83ddaf4fcf57",
        "cursor": {
          "ref": "80e7bb99-9066-465f-b3b9-1314f3bcfe20",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e56b5740-207f-4c2a-b24c-6cc7282a80f9"
        },
        "item": {
          "id": "c1bb60a6-0237-498f-8712-83ddaf4fcf57",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8df00400-2062-4c2b-be48-259b3ca3d729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc33f50a-fde7-448b-a155-9bf6c859028c",
        "cursor": {
          "ref": "4ff61718-7d07-4629-997e-53f955a0eb8d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d6eac4d4-c254-4c33-bdb3-52f053959b3a"
        },
        "item": {
          "id": "fc33f50a-fde7-448b-a155-9bf6c859028c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e4d6f8e4-bde7-418a-84dc-13e0b3ace86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69228c6a-d919-4aa4-abdc-30c67a61fc45",
        "cursor": {
          "ref": "3042ea52-c3f4-4b42-8222-47875d036c5e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1917f1d0-b048-467e-9da5-92cbc6fe01ba"
        },
        "item": {
          "id": "69228c6a-d919-4aa4-abdc-30c67a61fc45",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f4c4a676-2f3b-4b2f-b67c-5f3c5779aea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8e1045-bf73-42e7-9489-e2c816506ad5",
        "cursor": {
          "ref": "f152ffbd-19a9-4f3e-a99c-0c0d73fbcbc6",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e9e360c7-e8d8-4bfe-b074-fc892b583d88"
        },
        "item": {
          "id": "7d8e1045-bf73-42e7-9489-e2c816506ad5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "94efd48f-d0a6-419a-ab79-6badd2ac9776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531c8348-8d39-4b50-aed1-4f5e6a0547de",
        "cursor": {
          "ref": "e6693407-3c8f-4ac1-a2a1-1e0e1932c43c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "66419758-c67b-4dff-8770-43a0ab979e42"
        },
        "item": {
          "id": "531c8348-8d39-4b50-aed1-4f5e6a0547de",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "65edab21-c10a-47ae-8cec-4bbdc1290649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0c0f9f-4d90-449e-b176-fe0c4cdf2cee",
        "cursor": {
          "ref": "5656a21f-8f4a-4507-89e5-e1dad89b8f0b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "73d91caa-baa5-404e-8154-f7d82daa5692"
        },
        "item": {
          "id": "8d0c0f9f-4d90-449e-b176-fe0c4cdf2cee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2180fdc9-c367-43e0-8e16-f1773fe9d96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087a31c1-98ad-43ad-8295-ee8e33570f30",
        "cursor": {
          "ref": "a3225a1a-a4d5-431f-acdc-aeb11eb83a52",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "be26f750-ce28-434b-8c22-54d732d96eb5"
        },
        "item": {
          "id": "087a31c1-98ad-43ad-8295-ee8e33570f30",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "29e8175a-110c-4073-819f-56fc48e46561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a87cf32-a947-481f-a8a9-b05112b29386",
        "cursor": {
          "ref": "f064ced3-34bc-43cf-8034-f7d3777ce71e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "184900cf-acf2-497e-aa86-3578ea545eb1"
        },
        "item": {
          "id": "6a87cf32-a947-481f-a8a9-b05112b29386",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4d84ac09-c63d-4f69-9434-2740c532a4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c0ef9d-4ab6-4300-8e0c-8550c9de3412",
        "cursor": {
          "ref": "dbae3841-12ca-46b2-b90c-e9ac77760aea",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "863977b4-d0bc-4d64-92c9-a87605c4acf5"
        },
        "item": {
          "id": "e9c0ef9d-4ab6-4300-8e0c-8550c9de3412",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cd4f4c2f-aa04-4f18-b75a-6fc91a09d4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f395d68e-b248-496c-9687-3a58abaa5c50",
        "cursor": {
          "ref": "0cf0b34f-e14c-45c6-bf02-fa4795bf86d7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fa26b255-f3a6-4357-a638-b7e81f25c1bc"
        },
        "item": {
          "id": "f395d68e-b248-496c-9687-3a58abaa5c50",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "66902d65-5541-4e5f-a8cd-a4e5feb3f927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9481bde1-ba6a-4880-8d3f-a0a8937a3ced",
        "cursor": {
          "ref": "e2f9c2af-d0ce-470d-91cc-b9fd841ea921",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2e6f1871-ca5e-4905-8856-cb22a51dbf35"
        },
        "item": {
          "id": "9481bde1-ba6a-4880-8d3f-a0a8937a3ced",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "07d9f7fe-343e-4bf4-8e16-ce8c4935dc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03005292-65d6-422c-ad70-ac24f7d6aa0a",
        "cursor": {
          "ref": "208b95bb-f587-48be-80db-880130a630cd",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c82292d6-1877-4b2e-a8b3-f75e31698966"
        },
        "item": {
          "id": "03005292-65d6-422c-ad70-ac24f7d6aa0a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b892f7ca-6292-4376-ac96-d634aab3e2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c9bb33-3488-4401-ba3b-b1be18303889",
        "cursor": {
          "ref": "650fda91-234a-444f-a507-45a20fcf5b16",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f1033b59-43c4-4fe0-9e5c-f7962f83e91e"
        },
        "item": {
          "id": "a4c9bb33-3488-4401-ba3b-b1be18303889",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4d25a621-5435-4173-8c7d-c3cea98b8a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05616ee-4e0e-43f0-96fa-8723b8736572",
        "cursor": {
          "ref": "de13d6c6-a140-4cc3-a4cd-332ae6b61b83",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "926630cb-d16a-4432-87d1-ca45b73b6799"
        },
        "item": {
          "id": "a05616ee-4e0e-43f0-96fa-8723b8736572",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "23ba2e07-0a62-4255-8cb0-e1301a2c4a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4f203a-3ff8-47a2-9523-de89fe9d7c89",
        "cursor": {
          "ref": "a382b0fc-0bea-4da4-bddf-38267026041b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d69de798-9bbc-4bb1-b701-4013137d0aa4"
        },
        "item": {
          "id": "ab4f203a-3ff8-47a2-9523-de89fe9d7c89",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dce74372-802f-4d96-b930-d940e8666a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309f3407-21fe-435d-9094-6629607b3fe6",
        "cursor": {
          "ref": "2c9f3ea4-1b8c-47c7-9521-953802d9536b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4b52f9ca-5f28-42ed-a201-8c2cd8baa41f"
        },
        "item": {
          "id": "309f3407-21fe-435d-9094-6629607b3fe6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fc0c5fea-730b-4057-ac81-a7826c7df350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080994a5-7eed-46ee-a0e5-dca7837e4a17",
        "cursor": {
          "ref": "3bec00b0-bf68-4291-b076-f6b881417be7",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a1e987ba-f7a7-4963-88be-b41a2a33827b"
        },
        "item": {
          "id": "080994a5-7eed-46ee-a0e5-dca7837e4a17",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8ba448f6-1883-42ac-b255-072d15956cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c29ceb3-f8a4-47ed-b9a1-901bf345b51c",
        "cursor": {
          "ref": "3c630ef0-3f1e-4727-a8c2-821482ee11e5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fe127ef7-bc19-448f-8fff-b033eb7f1209"
        },
        "item": {
          "id": "7c29ceb3-f8a4-47ed-b9a1-901bf345b51c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b2fb9f85-e0e8-4234-86a7-3c64911ae4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd70c89-80ec-4aab-9e28-c5bb6cc9821b",
        "cursor": {
          "ref": "dd472eca-bec5-4f66-b8b2-b8956e4945e9",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "eb3f6fc4-c89a-4cae-8b2f-40dab27dff69"
        },
        "item": {
          "id": "1fd70c89-80ec-4aab-9e28-c5bb6cc9821b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8009db78-94c6-4a2f-b12c-a12c30de4e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cd19da-4b9d-4cfc-b907-6393956f93eb",
        "cursor": {
          "ref": "eb77be65-fe37-427e-8d2b-0d399614308f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7920dc9d-a2c5-476d-943a-9fc4343c4a00"
        },
        "item": {
          "id": "c7cd19da-4b9d-4cfc-b907-6393956f93eb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "83d28c79-825d-4ddc-9489-8a8d01b26a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160a08c6-877c-4c78-87df-cb1df8cc3b04",
        "cursor": {
          "ref": "68b22af1-4f0d-4681-8bbd-62f98647bc47",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "889c1db2-f8ad-4835-93ce-c9aadeb4aec8"
        },
        "item": {
          "id": "160a08c6-877c-4c78-87df-cb1df8cc3b04",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "56776641-114e-40db-83bd-a310fb5bd5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0d6961-f84a-4182-a895-ca8262af91f1",
        "cursor": {
          "ref": "2c91be07-14ec-416a-9427-95adf56f3aef",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bc39f1ff-3d06-4192-ab73-4cef8c041116"
        },
        "item": {
          "id": "0c0d6961-f84a-4182-a895-ca8262af91f1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f16731f9-ac16-4af8-a980-7cc393ef0f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fe9b70-1f05-420d-80c2-20a5af595afa",
        "cursor": {
          "ref": "bbb01d28-abdc-455c-a82e-73d402f2be94",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b86013cb-aa25-475e-a0a2-f07618baf54b"
        },
        "item": {
          "id": "a2fe9b70-1f05-420d-80c2-20a5af595afa",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "99ea9d82-b738-408c-bdd2-b16e13c1110d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5665519-88fb-4205-b36b-58047ecf6181",
        "cursor": {
          "ref": "da26c28f-86d7-45b8-9a69-1ed51eddcc8c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e54d2f03-caa9-4816-ad6b-0078b1ef569e"
        },
        "item": {
          "id": "f5665519-88fb-4205-b36b-58047ecf6181",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1eb2e614-0d39-4aad-abf3-154a60142567",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c95194e-8e43-498c-99c2-af3b0e219ccb",
        "cursor": {
          "ref": "3fb44fd3-4b6c-4cb4-9842-f101ad48fd8c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5ed936f8-e659-4197-80d2-0c3ca449b272"
        },
        "item": {
          "id": "1c95194e-8e43-498c-99c2-af3b0e219ccb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6dba670f-af3b-42bf-868a-0765d2c99d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a694aafb-d5aa-477c-8529-fa22bdf0766b",
        "cursor": {
          "ref": "91912ce3-ba27-4bc3-87e4-f9496c06b585",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e7d51036-eb12-4da9-8cb1-52d93d74d5ca"
        },
        "item": {
          "id": "a694aafb-d5aa-477c-8529-fa22bdf0766b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "724bf869-3484-4c26-ae07-ed53958502cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0245fb4c-b8bc-4dc7-aeed-7eee47e90914",
        "cursor": {
          "ref": "a3a05833-4b82-4008-afce-3bf04971ae45",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4bcdaaf7-e1ed-40fe-b850-37bf0113603d"
        },
        "item": {
          "id": "0245fb4c-b8bc-4dc7-aeed-7eee47e90914",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8fd114ab-4f87-4ac2-a7a5-049f3101d943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadb2d3e-0e92-4b7d-9387-7e625d0d0ab3",
        "cursor": {
          "ref": "137a2d26-05d4-414e-8f4d-01ccd06e52eb",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f699b960-ee96-48c9-97a1-bfb0ea9ac913"
        },
        "item": {
          "id": "eadb2d3e-0e92-4b7d-9387-7e625d0d0ab3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "90137609-fad5-4877-96c5-1f88a79c9559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc023e7-b1ce-4282-a664-c2e348d279c9",
        "cursor": {
          "ref": "f7513466-63f9-4adb-9828-c3af1d8d26da",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c58b9ae6-78c1-4d3b-b0c3-409ad1a3584c"
        },
        "item": {
          "id": "1dc023e7-b1ce-4282-a664-c2e348d279c9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "39cc179c-f033-4928-ae64-d3a9b31e05c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33faee3f-d8df-4ad3-a38a-be0e27954403",
        "cursor": {
          "ref": "c66d29c2-4657-4368-b006-1107f9d94833",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "02d4673d-ea2a-428c-872b-297797acb462"
        },
        "item": {
          "id": "33faee3f-d8df-4ad3-a38a-be0e27954403",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f53f9237-2b3c-46c7-bb52-b66fe94d866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3783c28c-054a-46a9-ae30-feef95533310",
        "cursor": {
          "ref": "171ffffc-dc6e-4dfa-96d9-dab2b7836a2d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8fdf2256-51dd-4b7e-985e-ea59435decfc"
        },
        "item": {
          "id": "3783c28c-054a-46a9-ae30-feef95533310",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "de043dbe-58c0-4048-85be-9c0e0309efd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20544b68-8f05-4ad1-925f-3183fff6d8fd",
        "cursor": {
          "ref": "f3ee8189-61e0-4400-aa33-a909ea9ca2c6",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2e3dd5d9-2c8b-4ef3-8ca6-fc893f78c6e1"
        },
        "item": {
          "id": "20544b68-8f05-4ad1-925f-3183fff6d8fd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "aeb7828a-0fd5-48bc-a4c1-9652bdbf58d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c96306-4137-40ee-9265-85de0569b56b",
        "cursor": {
          "ref": "9daa70e6-d7d0-4b0b-bdf0-a10d08dcf3dd",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e26f516b-2b0d-4e0c-8423-9a6d927f9624"
        },
        "item": {
          "id": "e6c96306-4137-40ee-9265-85de0569b56b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3f38f36a-6f35-433c-b7fe-153bdd053100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860d64fd-c9bb-4fbd-9052-9646638e959c",
        "cursor": {
          "ref": "a6227bcc-25d2-42df-9099-45adde2f6724",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "025a8a1d-e35f-472f-8d66-86c8b4819e3c"
        },
        "item": {
          "id": "860d64fd-c9bb-4fbd-9052-9646638e959c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62c9cefb-2804-44dd-aaf7-4852359f37a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412fafc4-eee8-4171-9535-8fa3888f6b0a",
        "cursor": {
          "ref": "10baf354-9df2-4a68-8402-20c66a839d81",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fe0789fa-7c74-4ebf-8b2f-4e8fbd77949c"
        },
        "item": {
          "id": "412fafc4-eee8-4171-9535-8fa3888f6b0a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9d495818-96da-42a0-b476-414cabc95a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313a9f9d-c62d-4192-9db8-6d14a6f16d19",
        "cursor": {
          "ref": "802edccf-0a89-4559-a873-18794f95cac0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "11d4bee7-2cc8-42a1-9c30-56b4e27d44a8"
        },
        "item": {
          "id": "313a9f9d-c62d-4192-9db8-6d14a6f16d19",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e8ef5435-31d6-4dc9-b7be-7ade7b624c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142880a9-7a61-47e1-996a-f85929bcbf37",
        "cursor": {
          "ref": "15eeb325-54e4-4b08-b56c-4c08d803054a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cdbda412-55a9-4408-a1d7-e34c00753cf6"
        },
        "item": {
          "id": "142880a9-7a61-47e1-996a-f85929bcbf37",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0140c1a3-6d3c-409c-b33d-24f4d723e4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ce2270-5b65-4599-90f4-087607aaf6ff",
        "cursor": {
          "ref": "09ece084-5432-46bf-ad26-e1ed5cb29f17",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c40ab8f8-8f6a-4f7f-9da6-966da9768f3f"
        },
        "item": {
          "id": "39ce2270-5b65-4599-90f4-087607aaf6ff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e6e9a221-095c-4e6b-bd98-d33f24ddb555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed892dd2-cbc8-4315-9404-1a4a02292883",
        "cursor": {
          "ref": "cae4ce14-1067-4904-b028-39409ba78519",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5abf3533-4813-4b35-b38f-69e41c275cca"
        },
        "item": {
          "id": "ed892dd2-cbc8-4315-9404-1a4a02292883",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "06fb9ef0-0ef3-47b0-8037-019bbe612f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ff8178-4b85-493b-a253-ddba7e0ee428",
        "cursor": {
          "ref": "3a0b2c43-1e1e-4ae9-9885-8fdc32498583",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "56b5637d-687b-4ac6-a61a-bff5f96b7e37"
        },
        "item": {
          "id": "68ff8178-4b85-493b-a253-ddba7e0ee428",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "93ddd4c9-e966-4f12-9f25-d189fcc6eb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6757bc-8949-457d-9fb2-1681b3c910df",
        "cursor": {
          "ref": "20275778-2040-4000-90b5-68be19ef2ce9",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "315958b5-a5c2-42b2-9254-dd040db63100"
        },
        "item": {
          "id": "4a6757bc-8949-457d-9fb2-1681b3c910df",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ceaa2109-0f12-4198-8644-c8dab389a094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c09a21b-0a64-471f-8bf0-43abe3fc5e26",
        "cursor": {
          "ref": "ec420535-6f0c-4d2c-a4cf-bc7c7129aeee",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "624eb2ab-ca41-469d-a569-63265400240c"
        },
        "item": {
          "id": "3c09a21b-0a64-471f-8bf0-43abe3fc5e26",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b8d16e8e-3fdd-4d75-9fa8-e8056877de5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7123ea-ba1d-40dd-a5f9-20cf9cb0d87b",
        "cursor": {
          "ref": "ba186402-119f-454e-a107-df8277084691",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "69accc53-8ccd-4b7b-b45b-39e8b8171f19"
        },
        "item": {
          "id": "eb7123ea-ba1d-40dd-a5f9-20cf9cb0d87b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2368957a-18aa-4401-b8ea-3f674664a946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e86f93d-d7fa-41ad-b8d0-36f6ac091a4c",
        "cursor": {
          "ref": "ff2334e4-411b-4f05-a620-b5b3e5eaa7bf",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ac5bf319-88aa-4a78-b82d-ef044c183b97"
        },
        "item": {
          "id": "3e86f93d-d7fa-41ad-b8d0-36f6ac091a4c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e98c1446-efd5-4b7e-9bea-74b4ae3f34bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d553bf-8286-41dc-bd5b-52de689790a8",
        "cursor": {
          "ref": "4daa0e1b-7c24-44bc-9d62-8dd57d3832e4",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "580859cc-e86c-4ae0-aa55-7a971671834d"
        },
        "item": {
          "id": "93d553bf-8286-41dc-bd5b-52de689790a8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "daa495be-9a50-4016-b384-0fa9e5bafdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83e2a6e-c738-4d48-afb0-655c251bf230",
        "cursor": {
          "ref": "65062741-a429-4ac8-9064-8555913c9a77",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c8aad707-fa74-4536-97bc-2fbf0e92fc78"
        },
        "item": {
          "id": "a83e2a6e-c738-4d48-afb0-655c251bf230",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "50578236-2f8d-4fa6-9580-5a3a8c0c433c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68173bee-00b6-46fd-bfdb-52f5c74f1b2f",
        "cursor": {
          "ref": "086e7a07-108e-40d0-870f-d44ba01eb415",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "da377c29-c1b5-40e0-8eba-8fa3ece14d6d"
        },
        "item": {
          "id": "68173bee-00b6-46fd-bfdb-52f5c74f1b2f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d11f9f02-4c86-46ea-8330-3afc93631795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23df053d-51b7-4751-a589-8503c59375c3",
        "cursor": {
          "ref": "bde7cfd4-70ab-444e-838a-bccbf48e3c82",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9026a5a1-db49-4e5a-8a30-0372ce34c379"
        },
        "item": {
          "id": "23df053d-51b7-4751-a589-8503c59375c3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "03115740-31cb-4035-b301-daf0b7eee661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd41493d-7fa8-4b36-90bb-9cf8334425bc",
        "cursor": {
          "ref": "aac58717-cee1-429f-8ef2-ae0f3e26be3f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c280c00e-74bf-4ebe-a2fa-ccdb36b5a45a"
        },
        "item": {
          "id": "dd41493d-7fa8-4b36-90bb-9cf8334425bc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6ec30bf9-79e2-4d55-b445-2d9e0237260f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8357004b-6959-4f3b-b325-87d5a7e3a15b",
        "cursor": {
          "ref": "e636a0fd-f247-43be-99c1-d54b0ef54493",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2aabe017-ca9b-47ff-a839-c6a2d498562b"
        },
        "item": {
          "id": "8357004b-6959-4f3b-b325-87d5a7e3a15b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a8ca59e9-50e4-48b8-adf8-dd13a5ebdb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff92fb3-ffca-42cc-9107-d8918ad62e40",
        "cursor": {
          "ref": "45aedf5c-af50-4237-98cb-95052c189923",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "85161f17-ff9c-4999-a6f8-e86165fcd542"
        },
        "item": {
          "id": "6ff92fb3-ffca-42cc-9107-d8918ad62e40",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2985a304-a359-41e4-a27b-913c3b1eaea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c464cb40-1e22-4158-8708-1a69b82c03c3",
        "cursor": {
          "ref": "93a00759-0f7a-42e2-ae50-dc7426002af1",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ddc66d0d-70c7-4597-9ee9-6c5e978f9258"
        },
        "item": {
          "id": "c464cb40-1e22-4158-8708-1a69b82c03c3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "124b3e62-2fb4-495b-93a7-6bcbec3391e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e68938b-12e7-4d36-8b79-bbc1e11dff90",
        "cursor": {
          "ref": "c4fcf0f4-e8ce-4d7d-bd83-2ba3c59418cd",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c6170583-c4ba-40e1-ac26-9c9523b79425"
        },
        "item": {
          "id": "6e68938b-12e7-4d36-8b79-bbc1e11dff90",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ea4c38eb-9aef-4fbb-bafe-bd30b35eede0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fd4303-c6c3-43af-b80b-58ffed61956b",
        "cursor": {
          "ref": "8963dc68-eec8-46c9-b921-f19c280861e7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b1393d5b-172f-4d7f-bc19-51aaab2146ad"
        },
        "item": {
          "id": "20fd4303-c6c3-43af-b80b-58ffed61956b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6a7a9600-6a47-4ebb-af3b-43d81cd55111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db8ca83-9224-4904-80c7-28cbf9860c94",
        "cursor": {
          "ref": "1d7b4fb5-bc3d-4645-bdc8-62776258a98b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "af7ff075-67e4-4fe8-a372-3b9a5afd5651"
        },
        "item": {
          "id": "9db8ca83-9224-4904-80c7-28cbf9860c94",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "27cf21aa-ef1d-4d4d-b40a-e2fac693801b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce772574-1bd6-4ae4-8e2e-150bda6535a7",
        "cursor": {
          "ref": "ca366c48-5f00-47ee-ab9b-790bb0b85761",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cefe5454-7f6b-484c-bb5f-161eaca33b3d"
        },
        "item": {
          "id": "ce772574-1bd6-4ae4-8e2e-150bda6535a7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a6f7eed2-575c-4b5c-aa5b-e3e91e6f6520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3261fd4a-eb14-4a3a-ad90-54637427b260",
        "cursor": {
          "ref": "b41ff818-23a4-4001-9477-efe5b22dd29c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e7cf87d1-7e1f-4b4f-a037-517dfe128347"
        },
        "item": {
          "id": "3261fd4a-eb14-4a3a-ad90-54637427b260",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2c887b9b-18ad-4525-9adf-0bd78a28e13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6259cc-48b2-41e0-892c-75e68487e6ac",
        "cursor": {
          "ref": "b519f37e-2f9f-463c-b10a-8e2511f7ce34",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b6e95e7b-20e5-4256-9433-df7565487078"
        },
        "item": {
          "id": "3c6259cc-48b2-41e0-892c-75e68487e6ac",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4a6d6a8f-d101-40bd-9771-71a13fb6a70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaab52c-8bd1-4c24-9183-eefe9838febe",
        "cursor": {
          "ref": "60589090-76b7-4329-a217-fa98d8965e97",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2e980d85-3ef2-4b12-ad80-bb65bf8fe74e"
        },
        "item": {
          "id": "9eaab52c-8bd1-4c24-9183-eefe9838febe",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9fdfbf70-6ab0-4380-90ef-cb8220b6b7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c84525a-31f1-4fcc-a1be-d016374ebf05",
        "cursor": {
          "ref": "3e9b2e84-5734-47b5-87ed-d2da074fb636",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c7d6e01f-8b65-4969-8019-578ec27017b2"
        },
        "item": {
          "id": "4c84525a-31f1-4fcc-a1be-d016374ebf05",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fa129695-6985-4647-b7bd-3ccd38a17bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67617337-4a4a-43cc-be52-86a59a8be0ec",
        "cursor": {
          "ref": "ff1694ed-bd0d-4ffd-93eb-422badf927e3",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9ab0d465-4d3f-4fe2-b995-7cfa84c9608c"
        },
        "item": {
          "id": "67617337-4a4a-43cc-be52-86a59a8be0ec",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c5682fd6-fb85-4b69-8182-7a1f9016d5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c31368b-79a6-45d5-834f-299d51786cd0",
        "cursor": {
          "ref": "9bac161a-79d1-44b9-9cb4-4372974ae52d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e5617594-faea-47bc-89b8-d95770e93b72"
        },
        "item": {
          "id": "4c31368b-79a6-45d5-834f-299d51786cd0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f1bc2294-77c6-496a-a2dc-8b36744e60c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8ed03b-2ee1-4d5a-9484-ac3af922ae58",
        "cursor": {
          "ref": "dbb0834f-6874-4aaa-a113-ddd325df4f27",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8c09e0dd-613d-43cb-8807-4acafb234eee"
        },
        "item": {
          "id": "4e8ed03b-2ee1-4d5a-9484-ac3af922ae58",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "72cfa167-b21d-4dad-82f1-84528586fc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdb44f2-0a4f-4699-815d-f8bc5a3f85d7",
        "cursor": {
          "ref": "f80db89d-793c-4ae2-a559-3c277864fdad",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5e22eee2-498c-4218-96bc-1b880c388963"
        },
        "item": {
          "id": "bcdb44f2-0a4f-4699-815d-f8bc5a3f85d7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fce11ef3-00b8-4dcb-887d-129562389eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed28cb9-63bb-4d8a-937b-33be4b74a3ff",
        "cursor": {
          "ref": "94ba3a3b-a223-469f-be07-c484e68ceb16",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "168dede8-299d-4e29-a0d7-0b61c399b615"
        },
        "item": {
          "id": "1ed28cb9-63bb-4d8a-937b-33be4b74a3ff",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b3cede51-1dac-464b-b362-82ddd77e5fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73abcaad-cbc2-44f3-96a5-11e39ef5f1fa",
        "cursor": {
          "ref": "13ddd270-dd86-493c-b370-6fae6339e8dc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8b4acb8e-c2af-4030-9534-07d7a508c6e2"
        },
        "item": {
          "id": "73abcaad-cbc2-44f3-96a5-11e39ef5f1fa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "af84e6fd-2ff6-4018-8f6d-89afaaace142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2308e935-8ecb-4728-b21c-fdada377d02f",
        "cursor": {
          "ref": "eef65969-bada-42f6-91fe-b0cc4b7eb295",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "db3f8ed6-343d-4b62-a560-167e63e4e471"
        },
        "item": {
          "id": "2308e935-8ecb-4728-b21c-fdada377d02f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3d82e2b3-802b-4d02-bfda-35c3d9647320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da56235-0812-49ec-9e17-f2a20d88ed2e",
        "cursor": {
          "ref": "c8841fe8-806a-4175-afc2-6735850bcaf0",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c5d024c3-3d36-4db9-aee7-62b668c795a4"
        },
        "item": {
          "id": "5da56235-0812-49ec-9e17-f2a20d88ed2e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ec319737-b4ad-4075-a3f3-f7aab6eb7f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53014ac-c955-4395-913d-4fbb7a0ae2ee",
        "cursor": {
          "ref": "9bdbae52-a158-47ec-9746-97c09dc6bb09",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bf9baf8d-3085-482c-aacb-224cc52dbcf1"
        },
        "item": {
          "id": "e53014ac-c955-4395-913d-4fbb7a0ae2ee",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9344b917-9513-4dcd-85a8-ce961182bfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d8fddc-56f3-4ca1-9cf5-1ed0d98e80db",
        "cursor": {
          "ref": "0baafab0-4120-42e5-bd4d-77408ecc5cbd",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "54f0e1aa-08a6-4ed0-8f18-4e8eab28784c"
        },
        "item": {
          "id": "a6d8fddc-56f3-4ca1-9cf5-1ed0d98e80db",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0da22ce3-11a8-4102-9799-17e1dc9bd8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f637e3-ede3-4138-b3d3-9b237e031d4f",
        "cursor": {
          "ref": "5587312c-0f43-4144-99b0-4e201cb0eadf",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5753bc5f-6d11-499a-95a6-d495f2ca0987"
        },
        "item": {
          "id": "d2f637e3-ede3-4138-b3d3-9b237e031d4f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ddc50cbf-e8a8-41df-b4b8-01911debbb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3947a033-078a-441f-bc4a-45cbb3b383f4",
        "cursor": {
          "ref": "3b2cb5b8-9e04-4206-bad7-4a0c7c9b5899",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "79f3dd96-e54a-4967-b5d9-d48a2cd7780a"
        },
        "item": {
          "id": "3947a033-078a-441f-bc4a-45cbb3b383f4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fbf1dc05-2efe-4a90-9592-d6b8cd7010f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14822a42-8062-406f-b701-786170ea4eb0",
        "cursor": {
          "ref": "8212bac3-91e8-4a3b-a2a3-605702a4feed",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6f057f5e-b0cc-437d-838d-577bbea05b60"
        },
        "item": {
          "id": "14822a42-8062-406f-b701-786170ea4eb0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0300715f-750c-47f6-87ae-53374fddec76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c11dfbf-453c-4fd9-a560-5c6d3b5d2de7",
        "cursor": {
          "ref": "1079676a-10b6-4a48-a37c-a878ab284a40",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a7a8b553-5d10-4ea9-a177-99e40c7a26f6"
        },
        "item": {
          "id": "9c11dfbf-453c-4fd9-a560-5c6d3b5d2de7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9a5e5035-75ee-4ba4-b101-b534babf4bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2541044-6af3-4297-ab35-37dd6343b138",
        "cursor": {
          "ref": "4c297d5e-a624-4e5c-991b-9af88e1ed9fc",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cab2ddb7-6de3-4b49-879e-86e064dbc1b9"
        },
        "item": {
          "id": "a2541044-6af3-4297-ab35-37dd6343b138",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "481dd941-e492-44f5-87f5-b78fa0f92f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33431b8b-9587-41b2-89aa-10620d3bae7e",
        "cursor": {
          "ref": "723f65b5-a3b7-4884-b6c4-2dff4c66ef81",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9c8bcf70-9989-4a3b-bacf-81044052a88c"
        },
        "item": {
          "id": "33431b8b-9587-41b2-89aa-10620d3bae7e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "926a8f31-b835-48ec-a85d-8f5e6a8ebbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad04512-6273-4c85-aff2-9b8fde7beb28",
        "cursor": {
          "ref": "c1f3ff2c-544b-4ecf-98a5-ee328ca3ebbe",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c09ee2fc-5ece-4a80-b5f2-bf9be0cfe3cc"
        },
        "item": {
          "id": "4ad04512-6273-4c85-aff2-9b8fde7beb28",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4347e432-5c4a-4136-b514-b7b3992a69e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9b8847-b49f-4572-8141-f3bfaa8b6c43",
        "cursor": {
          "ref": "ef9be7df-c2da-42f6-a10b-081e7a1fd9aa",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eb359fb9-ce37-42f4-b2a2-df888774dc39"
        },
        "item": {
          "id": "9d9b8847-b49f-4572-8141-f3bfaa8b6c43",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3a1d363c-afbe-4928-a1cf-81a50474a9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f030ca13-cfd8-457b-8d39-8a37e16230b1",
        "cursor": {
          "ref": "ac06cca7-5c79-43e1-93a2-73defb1c82e1",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e066271f-acbd-44e0-a695-fc067939cbf3"
        },
        "item": {
          "id": "f030ca13-cfd8-457b-8d39-8a37e16230b1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4ca7b127-c7b8-45b7-8780-018e7a2e4ff9",
          "status": "OK",
          "code": 200,
          "responseTime": 261,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "ad890ef9-fcb6-47ac-8f6a-2dd620671121",
        "cursor": {
          "ref": "444b39a7-f1f4-40e8-9334-5a3914088c83",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e2fb5dc8-4a9b-4ecb-b1b0-43c5db228079"
        },
        "item": {
          "id": "ad890ef9-fcb6-47ac-8f6a-2dd620671121",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c063d50f-f847-4735-bdb3-15bc1465af7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc478ff-27f0-4ac2-8e78-96d4b7ec910b",
        "cursor": {
          "ref": "d00a1152-2bb7-4971-a9c2-4b465de70a7c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f6a05315-c0a4-4e9a-a555-82e4f4c99853"
        },
        "item": {
          "id": "8bc478ff-27f0-4ac2-8e78-96d4b7ec910b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8d06d7cd-cbdd-4306-8b29-18a650942eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cf5509-cb6c-4f78-bcd6-3bee9ca1aee1",
        "cursor": {
          "ref": "b5f54abf-d87b-43a5-91ae-1d2fb79aea8b",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "167ed8b0-24e3-4c08-9c45-8acf24f44deb"
        },
        "item": {
          "id": "78cf5509-cb6c-4f78-bcd6-3bee9ca1aee1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f2da4191-10d4-4eab-86ac-fbb9ce62c353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884eadb0-3d7c-4a4c-afa9-14fadc2bf258",
        "cursor": {
          "ref": "907b0dbe-4a63-42f9-b142-b855abc2864d",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b9c2222d-ff54-410a-ab4c-3e3dd6e0e845"
        },
        "item": {
          "id": "884eadb0-3d7c-4a4c-afa9-14fadc2bf258",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a4ea7ba6-8376-4edf-8246-c763d350b55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68ef86c-7e08-495e-a017-d9c43b1d4cc4",
        "cursor": {
          "ref": "a29cadf9-93b2-4c57-a803-a72e3068d772",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9176510f-8e76-4f33-ad5a-cef7a79fad6f"
        },
        "item": {
          "id": "a68ef86c-7e08-495e-a017-d9c43b1d4cc4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1add4fa6-fa7e-47fc-8d75-2005ad6ff760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4897f5-34c3-4ace-9770-f2ac94da3c9c",
        "cursor": {
          "ref": "629eef0e-3a1b-4272-8a30-43188f6c2148",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5b3eeaaa-2db5-4e30-92fe-f1ef934818c6"
        },
        "item": {
          "id": "9d4897f5-34c3-4ace-9770-f2ac94da3c9c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d5124140-e252-4672-910e-79d08014b75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b5d885-ae50-4d1d-a6ba-183c5ba042f5",
        "cursor": {
          "ref": "ea4f1894-fc3f-44e8-9d15-edab6b5212f4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2c6d395e-24f5-4a2a-aa9d-45f59a9e164e"
        },
        "item": {
          "id": "e8b5d885-ae50-4d1d-a6ba-183c5ba042f5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7176016b-9598-49bc-afce-8c3e39b0d70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceb4a23-812c-4a1f-a5c0-8b1df8083411",
        "cursor": {
          "ref": "d89a7b77-74d7-4c9e-9897-2efb07be8b0f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9d75fcce-353b-499c-925c-fc4c7ddad9f1"
        },
        "item": {
          "id": "1ceb4a23-812c-4a1f-a5c0-8b1df8083411",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1fd376d5-6566-4b4f-b074-26e84a283bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f8bd48-da14-47b2-822c-9a370f92a118",
        "cursor": {
          "ref": "145e243d-11b1-4bb2-8f53-4fafb98688e1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "884cc0ac-ca42-4b6a-a519-b06dc45b826a"
        },
        "item": {
          "id": "23f8bd48-da14-47b2-822c-9a370f92a118",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "378f8e91-1aa7-474d-99ff-59ce505a7276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b333ab1-65fd-4686-b037-5be6fb03b8f8",
        "cursor": {
          "ref": "fc8be3f4-b4cb-4b14-8277-fc65577d6a1f",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8e3910ac-676f-4eaa-9a4e-dc6dd0c932d5"
        },
        "item": {
          "id": "3b333ab1-65fd-4686-b037-5be6fb03b8f8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "773d0acc-66ed-42cb-844a-49e24c4e4305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ab4e58-e443-4799-b823-b93fa08a75e4",
        "cursor": {
          "ref": "be037694-eba5-4568-8101-ca7774f5390b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "01d8a295-5bbe-4577-b7e4-58174a170d27"
        },
        "item": {
          "id": "83ab4e58-e443-4799-b823-b93fa08a75e4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0985dacd-8d8c-412b-88ed-61972593fbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291a90ef-1be0-4916-a46e-9c175d67e627",
        "cursor": {
          "ref": "50bfd9f9-fcf5-40c5-ba81-d233f57d0754",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "37313c25-483e-4944-bee8-65268f67c84a"
        },
        "item": {
          "id": "291a90ef-1be0-4916-a46e-9c175d67e627",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7e8257cf-1fd6-478a-9a74-bc50580cf78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594b340d-21f6-4995-9299-71a9bd0f31f8",
        "cursor": {
          "ref": "b946a968-8880-44e9-9a71-928282f2be72",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3fc77a12-fb8b-490f-829f-a8bbc1ee4d52"
        },
        "item": {
          "id": "594b340d-21f6-4995-9299-71a9bd0f31f8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "791e1c62-fe23-4ff6-9cd2-40309d17c8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded08c04-3e71-42df-93fe-be9902b62085",
        "cursor": {
          "ref": "c9b8b856-57c7-4f52-8156-18b0993fc811",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d937c8ef-5bbb-4d2d-b42d-4d34262489f8"
        },
        "item": {
          "id": "ded08c04-3e71-42df-93fe-be9902b62085",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4d817c48-b14f-4acc-a17c-e986ae4ab76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a056db36-ee5d-4d2e-a11c-080d6df88afb",
        "cursor": {
          "ref": "652353f1-b7f2-4367-8614-b78924880312",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "67882cde-e3b3-44b3-8f93-19059cfb5b07"
        },
        "item": {
          "id": "a056db36-ee5d-4d2e-a11c-080d6df88afb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6fb3d6d1-d0ed-40bd-883b-4b9d07c5a9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdeb692-8b56-40c7-9d4e-204f1d66e526",
        "cursor": {
          "ref": "ffc697fd-4d2d-4f00-9911-d8f235f5a6ce",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7b9ca399-8c40-4dd1-8a88-39d0644a190c"
        },
        "item": {
          "id": "3bdeb692-8b56-40c7-9d4e-204f1d66e526",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4b6d5546-647f-4e2f-9f2d-c1f3df4fc8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e40be95-a645-4538-adb8-0d8de58203c8",
        "cursor": {
          "ref": "d5787caf-24c2-4b0b-9460-ebbadd07d7bb",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "adf07e42-5bc0-47b4-8e66-dce52fe3f316"
        },
        "item": {
          "id": "8e40be95-a645-4538-adb8-0d8de58203c8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8441c742-0a39-4376-a60b-40332e619d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be35a8f-1a00-4319-9f8b-4ce0f796319e",
        "cursor": {
          "ref": "d99b21a3-9e3c-4097-8323-3d6a8937a184",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "24be9fe0-313a-42cd-ba86-afea0a83abc7"
        },
        "item": {
          "id": "3be35a8f-1a00-4319-9f8b-4ce0f796319e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7541f84e-4d70-42f1-88f1-3a6d5659e674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91634ea-3fb6-447a-8b44-79919f3e82e3",
        "cursor": {
          "ref": "828207c6-6ed0-4fb1-81a9-8dde4b9dc4ef",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7a854178-401a-4445-bbad-e3ae06d049bf"
        },
        "item": {
          "id": "c91634ea-3fb6-447a-8b44-79919f3e82e3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "499308c1-dd97-4605-b0b8-9abd69d844bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8992833-e542-47e5-a220-8a7ca3bbe996",
        "cursor": {
          "ref": "c55b06ac-b4cf-4d07-ab67-b89c5e79cf16",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "de1627cf-559e-4893-bfdb-1ac8434edc50"
        },
        "item": {
          "id": "f8992833-e542-47e5-a220-8a7ca3bbe996",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "25d9e3f4-9bf9-4427-b8dc-1eea16ab988c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2f04b9-f9c9-4115-9eb0-974f35f8195d",
        "cursor": {
          "ref": "1b30fedd-6692-43d7-b54e-93da33602e4d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2c17d4fd-bd1d-4972-a050-6faa17c361e7"
        },
        "item": {
          "id": "5e2f04b9-f9c9-4115-9eb0-974f35f8195d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dacbb5bb-cd4e-4e4d-b6e0-9e25e9aa907b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4277af9-a2ff-40e6-b2bd-172b94f37e90",
        "cursor": {
          "ref": "cb12b2b2-22b7-45d0-ae72-b2144bfc76c2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "817b7a17-0a5c-4cb9-96a3-98e870b3c0fe"
        },
        "item": {
          "id": "a4277af9-a2ff-40e6-b2bd-172b94f37e90",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9febfd73-0330-413d-adb8-5bf059d5f7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325d2977-f417-44fd-8d8d-1405850259bc",
        "cursor": {
          "ref": "68ec46d1-e1f5-45db-b0e3-b8448657f956",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ee471a7c-9f82-47f6-a3fd-a78ac8d6a561"
        },
        "item": {
          "id": "325d2977-f417-44fd-8d8d-1405850259bc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "65200924-e28e-45cd-96ea-30154311b9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528c2d1c-f816-4a1d-8d97-a8d3ca5864c5",
        "cursor": {
          "ref": "821d6e82-f335-405f-9a54-b15a4e0d321e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "36bb8334-3814-426a-8559-7e9839406ba1"
        },
        "item": {
          "id": "528c2d1c-f816-4a1d-8d97-a8d3ca5864c5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4be51d08-1e49-4188-a571-d9359b60ed78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f591eb-0e52-4951-9f0a-4bfd212ff368",
        "cursor": {
          "ref": "8c95bdb7-336e-4a95-8675-427556aaab1f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "034bc74f-7ba4-4360-aa04-c9fd205f6bcb"
        },
        "item": {
          "id": "94f591eb-0e52-4951-9f0a-4bfd212ff368",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2bbd0561-c129-4968-b6bf-673255f9bf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec34327-adcf-4627-b3ed-34262ff5fb24",
        "cursor": {
          "ref": "5ec676d8-78ee-4677-9de5-32ce7640bb70",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1ab45acc-aaf8-4a69-8031-3ef2e92013d1"
        },
        "item": {
          "id": "fec34327-adcf-4627-b3ed-34262ff5fb24",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "882480fa-6454-4b09-bb43-f5a211795bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c49f710-0fc6-49d4-8ea8-462aa1da298d",
        "cursor": {
          "ref": "ae0eb891-fe1d-4d51-b4b8-b58e8531a668",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6c6d10fa-29c9-4448-86b3-026b05ca65e4"
        },
        "item": {
          "id": "7c49f710-0fc6-49d4-8ea8-462aa1da298d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "408689e1-1f71-498e-8634-ca261e919bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c71412-3b79-4ca8-92e4-bb26cb484986",
        "cursor": {
          "ref": "86f8973e-8ee4-45f8-8397-1499b5d446ba",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "29119f79-efc2-4c05-83ee-c0d6165cec78"
        },
        "item": {
          "id": "a6c71412-3b79-4ca8-92e4-bb26cb484986",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b8c1fec5-2c06-4ca3-8b67-23eff858fc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dcad21-18f1-4df8-80b4-7d49c5c63088",
        "cursor": {
          "ref": "3de0889d-1b7b-4b3a-87b0-77311d389611",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "aeba0e8c-46b1-41ac-aa78-7117d47181f9"
        },
        "item": {
          "id": "74dcad21-18f1-4df8-80b4-7d49c5c63088",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "40b4b998-1eda-4255-ab52-b915e6cf5343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f74a51c-c8fd-4f6d-8b0b-87a3bc37f46e",
        "cursor": {
          "ref": "1a444182-cb05-469a-90de-f56368718aaa",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "abb2a217-3fce-4c1b-a797-720c35fd7951"
        },
        "item": {
          "id": "1f74a51c-c8fd-4f6d-8b0b-87a3bc37f46e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "71ac1508-cd0f-43a9-ae06-1b566c697552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20da617-8533-4aa6-ae4b-21cb5ddbaefa",
        "cursor": {
          "ref": "6862c987-f009-41eb-adaf-0b0accb3646a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a857d9cc-36ed-4473-8a91-3e3dce1155dc"
        },
        "item": {
          "id": "f20da617-8533-4aa6-ae4b-21cb5ddbaefa",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fbe70f8e-5496-40ad-a8cc-e322392ccd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ddb5bc-4f27-446d-ab00-41b9879a732b",
        "cursor": {
          "ref": "f3792686-90b3-4c96-9a77-7dd12b2e3d55",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8ea5df09-6984-4f83-9262-14f6e8e5921a"
        },
        "item": {
          "id": "84ddb5bc-4f27-446d-ab00-41b9879a732b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e22c7e90-e41c-423e-bd81-9d2d7aefa671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2c59a0-c375-4bad-8203-9ef5b90da7c0",
        "cursor": {
          "ref": "8e395c59-e87e-4dcc-ada4-caa33ac5fdcf",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bf6df31c-9dcc-453f-aaad-b7d94032ae26"
        },
        "item": {
          "id": "bb2c59a0-c375-4bad-8203-9ef5b90da7c0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b57591c1-a007-44fb-971c-3cdf3cfaa482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca9a45b-147e-4c52-9d78-d67d05593cbd",
        "cursor": {
          "ref": "095efc15-0abb-4afa-aaa8-74332c92fbef",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3791e4cb-5073-4d87-87b9-0edbeffc6518"
        },
        "item": {
          "id": "eca9a45b-147e-4c52-9d78-d67d05593cbd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1939a013-f80e-4c36-8434-183e80e20ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f221ee-a74c-44e5-8597-05f074a0ebe6",
        "cursor": {
          "ref": "89d2498b-b642-43cf-9fb3-95bc55f9e651",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "579e403f-fed5-4f42-9261-306534f4bf46"
        },
        "item": {
          "id": "b1f221ee-a74c-44e5-8597-05f074a0ebe6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ef32fa43-819a-44d1-b410-aed9514d044a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c56ac2-40bb-446b-9604-de4b8cdb1600",
        "cursor": {
          "ref": "8813c811-e7a1-4a23-8389-e17ec52cf8e9",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9739d7bb-f81d-4548-9b2f-e12fe13d8003"
        },
        "item": {
          "id": "94c56ac2-40bb-446b-9604-de4b8cdb1600",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1bf8326d-a058-43a8-8096-4dc787e7c37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05652d3-473e-4d12-b371-0c7f2f86def3",
        "cursor": {
          "ref": "ed076908-100c-4196-ba8d-b676edbe67c6",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c4ddba6f-9909-4d91-af71-0b46791c6041"
        },
        "item": {
          "id": "c05652d3-473e-4d12-b371-0c7f2f86def3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "af8b334a-54b3-4b32-bd26-a95bda3b2b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc8cb67-942d-4b1a-b3c1-1c39da8a9095",
        "cursor": {
          "ref": "7c129249-019f-4aef-bb38-2b8cd968cf96",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4304a7b9-ef22-4f2f-a229-f7bd20eb4c9f"
        },
        "item": {
          "id": "cbc8cb67-942d-4b1a-b3c1-1c39da8a9095",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1fdbc661-28d7-492b-a821-37a640bce573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee148e9-5769-4058-9452-9912e090fefa",
        "cursor": {
          "ref": "9404508e-ee49-4739-b37f-a372b24ae747",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e00adfb7-116c-4f19-9e4f-3a3fbf0ec4f4"
        },
        "item": {
          "id": "5ee148e9-5769-4058-9452-9912e090fefa",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e5666137-dec3-40f8-a0e6-8579ca928abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac72d181-6c87-4dd5-8dc0-3c4d93cc2266",
        "cursor": {
          "ref": "acf4f965-9227-4c9d-9125-7b64561d1016",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "006f3bf3-e837-4a30-91b1-cc89c20b8163"
        },
        "item": {
          "id": "ac72d181-6c87-4dd5-8dc0-3c4d93cc2266",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0549bc06-6857-4aca-ad4c-7c377b44b46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813c03e4-5371-4117-9f34-88825042007e",
        "cursor": {
          "ref": "87df6fce-c808-491d-82a6-42886ff1d6db",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2169a856-a1eb-4552-8222-c9cd7be3db74"
        },
        "item": {
          "id": "813c03e4-5371-4117-9f34-88825042007e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "50bff1fa-b68a-4984-8fab-eba0b20e597d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba77065b-94e5-4c59-a1a4-57b93bc18bf8",
        "cursor": {
          "ref": "1fa91dac-89f2-4aaf-a37d-7588ff2dbecf",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "570feabc-a955-49e9-b7f7-35504aed3b2c"
        },
        "item": {
          "id": "ba77065b-94e5-4c59-a1a4-57b93bc18bf8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "020d31b3-bffa-4db0-9789-ac7b4b8ecb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14525a7b-531c-48f7-b36c-2e5bde4534da",
        "cursor": {
          "ref": "eaac6821-1037-4f3d-92d1-0f6bd15b61bb",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cc15273c-05fa-4e38-be1f-26df8950677b"
        },
        "item": {
          "id": "14525a7b-531c-48f7-b36c-2e5bde4534da",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "db14897c-74ce-4e87-967f-37916ef7d941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd08bda-c06e-4b9c-a642-e0719496d72c",
        "cursor": {
          "ref": "37fbc5c3-7b7d-4afb-8baa-1178d5723e2b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "60e89bca-5752-4996-96a5-e6c2add4054f"
        },
        "item": {
          "id": "8cd08bda-c06e-4b9c-a642-e0719496d72c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "491c5f95-50cc-40d5-b300-b7921eb1eccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3a2e95-d748-4f86-b22c-773fc38d2c74",
        "cursor": {
          "ref": "dab63c3d-e45a-4b82-8271-53dcd09ae716",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5b8e71fb-1fc4-42e0-84f0-e5c9b531b733"
        },
        "item": {
          "id": "bb3a2e95-d748-4f86-b22c-773fc38d2c74",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2b59c637-b4c5-40e9-82cb-010617fd819a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3c155b-dcb9-4b50-ac41-c2dcfe9fc55b",
        "cursor": {
          "ref": "837de3ba-dfd8-4c9d-af5b-6e72f7a7e4e0",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3fea7f71-c386-42db-b04d-61a182ef1058"
        },
        "item": {
          "id": "eb3c155b-dcb9-4b50-ac41-c2dcfe9fc55b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "054f43e3-fee3-417c-ae33-ed29cb7b95c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c69f30-875f-4d80-9756-f22de0ed7caa",
        "cursor": {
          "ref": "30ef1f6c-141e-45b5-b797-e243f198094e",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "500098ed-e105-4772-a7a4-fd9bc9922ad0"
        },
        "item": {
          "id": "e6c69f30-875f-4d80-9756-f22de0ed7caa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0c5019cb-84fb-4346-9bca-e9ff496a36cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e94843-6595-40bd-861a-5472c8a86468",
        "cursor": {
          "ref": "30cf0846-12e0-4f9b-ae24-8a9527c361ad",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b4e9fd02-ebf5-4110-bc40-be7cf6427e0a"
        },
        "item": {
          "id": "76e94843-6595-40bd-861a-5472c8a86468",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "356094a4-d570-4f3b-ace9-ef03ce6f2601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74aeb05-3c4f-4002-8097-b86e6a76086a",
        "cursor": {
          "ref": "a89161ac-682f-4e0c-a78a-28cadfa70cef",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3bec26ee-81d1-440d-bc80-e1af3058a0a4"
        },
        "item": {
          "id": "a74aeb05-3c4f-4002-8097-b86e6a76086a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9355709e-770b-4707-9e16-547e6d664d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611f2b95-ee58-4b16-aa6f-b7594fd87a06",
        "cursor": {
          "ref": "0c334adc-9744-4aeb-bda1-899210a81ebe",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7ff3012b-c9e3-4c63-a9e3-e7570d891b51"
        },
        "item": {
          "id": "611f2b95-ee58-4b16-aa6f-b7594fd87a06",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "15cca942-b52a-4518-92e4-51ad440d5567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dfb9bd-fcf7-4508-98ac-2d57f20efc96",
        "cursor": {
          "ref": "1114afbc-4614-4197-830e-18ba193be78c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6ea2feef-97ac-4e6a-a60c-d9f1a74afeba"
        },
        "item": {
          "id": "73dfb9bd-fcf7-4508-98ac-2d57f20efc96",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "14eb930c-1ffc-4261-b6d3-a3ae49e306b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e092c1e2-f963-4328-ba70-ff3ded00c22f",
        "cursor": {
          "ref": "2be51155-5f71-4efd-a864-c4548e85dd66",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0eec1755-d199-4361-9b63-17c166c8391b"
        },
        "item": {
          "id": "e092c1e2-f963-4328-ba70-ff3ded00c22f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ca69a4d2-f596-4cea-942f-7635cf16d53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ea18cf-05d7-4385-960a-864e7dcf6f7f",
        "cursor": {
          "ref": "ea00c5e7-1e57-4231-8c18-bccc47934961",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "216bf2a8-15f0-43ab-ba89-24b877bfd932"
        },
        "item": {
          "id": "82ea18cf-05d7-4385-960a-864e7dcf6f7f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a9588d7c-b21d-4632-b011-0eabdaef8fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547d2bbb-1735-4654-9f61-1242345dd8d2",
        "cursor": {
          "ref": "9ccbed69-2cad-49bb-a8be-a1850d927942",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "26b83b54-edad-44d8-abce-98510e9249ae"
        },
        "item": {
          "id": "547d2bbb-1735-4654-9f61-1242345dd8d2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "32214657-28a8-473e-bc92-3ffe4f0966a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ad8b1d-b34d-4e12-816d-0f875d089c79",
        "cursor": {
          "ref": "6a6ede2d-6d9c-4874-8418-27a409b7f43d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cf0555f2-06c9-44bb-b5ae-bb24c0050e2a"
        },
        "item": {
          "id": "04ad8b1d-b34d-4e12-816d-0f875d089c79",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3cac140c-e20b-4d37-92c6-972a5829e34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6dd05f-6621-4f6d-964c-ab1f14b1288d",
        "cursor": {
          "ref": "0e94dd1c-6fa3-4dc4-809c-ba78190247db",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "87ee46b1-f863-4117-94ba-625712bbabdc"
        },
        "item": {
          "id": "6e6dd05f-6621-4f6d-964c-ab1f14b1288d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2a6472a6-39b8-450c-bf86-c637e67b0b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecd2dc7-8f5e-4f46-a0db-2dfbd6c8478b",
        "cursor": {
          "ref": "0218af9f-dcda-4e23-9bf6-20f46c2d925c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "42fba6b9-5148-4d20-ab84-c30e023a0f5d"
        },
        "item": {
          "id": "8ecd2dc7-8f5e-4f46-a0db-2dfbd6c8478b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6b0cb823-8d46-4a34-ace5-026c639f0a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05868f5-1660-46a4-8f92-36deaeac155e",
        "cursor": {
          "ref": "42b5feaa-5d97-4abb-8981-3d0256be45ca",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f8289db7-8ec0-4aa9-b476-a3fdb8725fbc"
        },
        "item": {
          "id": "a05868f5-1660-46a4-8f92-36deaeac155e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "55443b3b-e8ec-441b-bd1a-1c2e0710ba71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df70cbe-a9cb-4a0a-9222-a157c2bc5d41",
        "cursor": {
          "ref": "9d738517-71c8-4cb5-8fa4-96e8bc08a8c2",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1c026f31-9181-460c-8b8e-923ee6c8cb29"
        },
        "item": {
          "id": "8df70cbe-a9cb-4a0a-9222-a157c2bc5d41",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c896bbe6-aaf9-40f2-83e2-a13e26e9a0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19332e41-afbc-41c2-a253-0a90a00aa0b7",
        "cursor": {
          "ref": "8d0e8e97-d26c-460d-8e0f-f2df4cf4c81a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7274af44-9339-4370-a3eb-ef0e12c931c2"
        },
        "item": {
          "id": "19332e41-afbc-41c2-a253-0a90a00aa0b7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bf396954-9abb-4855-a49a-4a1279eb8b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2648103d-1610-4ae0-a354-bbd30ffb820a",
        "cursor": {
          "ref": "c6f80276-e227-41ed-88dd-27f31fc461cc",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "42905e22-6aff-419a-b0c9-8aebb1b07caa"
        },
        "item": {
          "id": "2648103d-1610-4ae0-a354-bbd30ffb820a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e5247ee7-0d9f-4f2c-bb47-bb6ddfdc1085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b71ca1-bc1a-4a8e-96fa-c5b6aa141372",
        "cursor": {
          "ref": "490888ea-f1a7-4a15-b444-07ef7d7d4f55",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "202570b6-3cf8-40c0-885f-696d52e51feb"
        },
        "item": {
          "id": "a5b71ca1-bc1a-4a8e-96fa-c5b6aa141372",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "748b134d-2c7d-401e-a6d0-4a479beaf541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ca303d-953c-4c28-a29c-3405f77828a7",
        "cursor": {
          "ref": "54fa24c4-9d31-4afd-b621-86f134155080",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9801dd41-733a-4b32-b830-129448a75601"
        },
        "item": {
          "id": "62ca303d-953c-4c28-a29c-3405f77828a7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e324787e-27a3-4707-b5e7-2015f90bcf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e838d3-ac91-4314-96e3-df5f62abc56a",
        "cursor": {
          "ref": "36634369-a34a-44e4-82ec-99297fff9c59",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c4990193-a210-46eb-bd1a-409fb1deee4c"
        },
        "item": {
          "id": "d9e838d3-ac91-4314-96e3-df5f62abc56a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d4527280-fa0f-40fe-982a-13f19863829b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bb93b9-f2fa-40d0-99a4-efb54c9d3cef",
        "cursor": {
          "ref": "9a549e00-5af0-4587-900a-45b6280ae8b7",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "46717741-8ff0-4115-94b9-c42dc3261e1c"
        },
        "item": {
          "id": "68bb93b9-f2fa-40d0-99a4-efb54c9d3cef",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "96deffb3-a5ca-476e-9530-bcf3e1197676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18c55ab-0d7d-4ec8-8851-95408285918d",
        "cursor": {
          "ref": "d6f84857-b015-4794-aa4f-ba6a1cf484a5",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1087e148-89c4-43be-babc-f30e4c4a9713"
        },
        "item": {
          "id": "d18c55ab-0d7d-4ec8-8851-95408285918d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "21edcbe5-b6d0-47cf-9d80-4c869d3c0ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90e0737-72f0-40c6-b62b-c150c2a176c2",
        "cursor": {
          "ref": "8b627884-fbb9-45e3-aee6-bbb0e51e6b60",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f19c3bb9-989a-4c58-a016-0566b7b682dc"
        },
        "item": {
          "id": "f90e0737-72f0-40c6-b62b-c150c2a176c2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "32458159-42b8-4064-91e2-24bb44157946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39085188-c26e-407c-82a4-f2aff5ef83c4",
        "cursor": {
          "ref": "7cba9d3a-8986-4bf8-944d-227f885e4df0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "985c6604-7294-438b-b5c7-a7bf3dd5d24c"
        },
        "item": {
          "id": "39085188-c26e-407c-82a4-f2aff5ef83c4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fe1b8424-7c0a-4f3a-bdae-e8bf39065b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3747e035-d59b-412f-ba60-18c22dd39e76",
        "cursor": {
          "ref": "80ae6601-9f5b-4553-b383-50b06e00a3af",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "47a230df-213c-4205-8098-7f1c783257c2"
        },
        "item": {
          "id": "3747e035-d59b-412f-ba60-18c22dd39e76",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "82c74240-dfc6-4a08-9009-a0106b98f81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2dd4f1-7041-4a40-985e-985c134acbdc",
        "cursor": {
          "ref": "fd87a5cf-a112-4a87-b826-3a4f70638a39",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c467423a-66fd-4519-b580-eec1e21f8299"
        },
        "item": {
          "id": "5e2dd4f1-7041-4a40-985e-985c134acbdc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ac29511e-f703-4c2e-98e5-b322423caef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e27dd06-8212-47de-a783-be6848a550ab",
        "cursor": {
          "ref": "7fe1dd65-fabe-42dc-9261-cab49c569565",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5b0bcb63-a317-4ae5-a2b8-6eafdaeeb2e9"
        },
        "item": {
          "id": "8e27dd06-8212-47de-a783-be6848a550ab",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dd0a2dc2-ca9a-46a8-b933-3572d2d7a187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daf0b25-c720-44c5-9a98-0744a2315b80",
        "cursor": {
          "ref": "973e017f-a30a-4138-8279-1ed132fbce6a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "23f56c4a-8709-40b9-8091-c7153efc1d86"
        },
        "item": {
          "id": "6daf0b25-c720-44c5-9a98-0744a2315b80",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a68f834e-60b7-41bc-8f2a-9d735cb6e642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99702fb0-953d-4a1c-82e6-d1ec9a182bfd",
        "cursor": {
          "ref": "e1a19691-bfa3-47fe-a0ec-1320e5ae4e12",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "594d1e63-cc01-4eb9-be30-8bde2a24dc6b"
        },
        "item": {
          "id": "99702fb0-953d-4a1c-82e6-d1ec9a182bfd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "61b86c98-e913-4ef8-a8cb-13487ab8e8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bb93c5-b8d8-4183-8de7-b7de58ccca0a",
        "cursor": {
          "ref": "d4338585-643d-4294-9393-5bc3a5d09a20",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "397b4c3e-090b-4c1e-838d-b4414453073a"
        },
        "item": {
          "id": "34bb93c5-b8d8-4183-8de7-b7de58ccca0a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "025d2652-bed3-43a4-9d2a-67bb8b1d6cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f967f738-33ce-4936-9b32-ba7305ef3600",
        "cursor": {
          "ref": "87e1759b-3f68-42ce-8b7c-9927f65e67c2",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "fad1d580-9317-4614-9129-3669c7e6a9e0"
        },
        "item": {
          "id": "f967f738-33ce-4936-9b32-ba7305ef3600",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "43091f9d-e3fd-4d35-bcaa-b6cc4df131de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1155,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297c282d-117e-4db6-a9d3-75b93628a5f1",
        "cursor": {
          "ref": "b3746316-fd12-46e9-aa56-7b32e6eb9ea1",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "eec0d4d0-4c80-426c-a3bc-fa64893b5fe6"
        },
        "item": {
          "id": "297c282d-117e-4db6-a9d3-75b93628a5f1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4f82ce99-7e13-4ca4-8b04-019556aed928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1129,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f11759-fbcd-4f27-a8a5-8ee5a540488f",
        "cursor": {
          "ref": "1f73a9ec-4aac-4909-b43a-3d5c8405eb25",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ab8f23bb-039e-47d8-a226-eaaffe330d50"
        },
        "item": {
          "id": "d2f11759-fbcd-4f27-a8a5-8ee5a540488f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "12ca2657-e1cf-487f-83d6-ba1c512307fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1025,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ef0b67-4125-45e0-ae47-3bd513ec7f40",
        "cursor": {
          "ref": "72252b1f-c9cf-4e44-b948-2d0a2e578524",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8144969a-4792-4bad-908d-0dae9bcb701b"
        },
        "item": {
          "id": "65ef0b67-4125-45e0-ae47-3bd513ec7f40",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4ce888b2-1f2b-4274-b0a9-ec0f009dd3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71c48d4-2de4-4df9-a4cc-5d1c9ba4fb67",
        "cursor": {
          "ref": "1323a956-677f-4c6e-a1e6-726d97938e23",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7633633c-46fe-44f0-a243-3da46f22fb00"
        },
        "item": {
          "id": "b71c48d4-2de4-4df9-a4cc-5d1c9ba4fb67",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "aea0abec-d7a7-442e-8639-1993ba80d525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1005,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a83dce-a9b3-4975-91ba-cb64032418b2",
        "cursor": {
          "ref": "7a8f685a-f3ff-4a59-bab1-7a789568322e",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d4cbfe7b-dcfd-4138-a1bd-74fab38d747b"
        },
        "item": {
          "id": "e2a83dce-a9b3-4975-91ba-cb64032418b2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7bcb29c0-22d2-4115-9300-c89545b5cbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1440,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99da2c91-986f-4f27-ae99-1e24a64e6ea3",
        "cursor": {
          "ref": "d1c0ba47-ed02-4de5-aadb-31aadb220a60",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "05a8f3b9-77c0-4fd5-9ece-b607f74fddcb"
        },
        "item": {
          "id": "99da2c91-986f-4f27-ae99-1e24a64e6ea3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ba1b7312-9ba8-41dd-9e4a-e9ea32f0cf1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 193,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dca70c1-acd0-48cd-ba05-af86e3646b4f",
        "cursor": {
          "ref": "65f457dd-de6c-40c9-8173-ffc4e85e46d5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0cfae23a-c4be-4d15-89d0-ad68322abf69"
        },
        "item": {
          "id": "8dca70c1-acd0-48cd-ba05-af86e3646b4f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3abbe460-044f-4989-a4b1-a64037816f7b",
          "status": "OK",
          "code": 200,
          "responseTime": 288,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "753c6459-a779-48c4-915b-98da85af5b73",
        "cursor": {
          "ref": "042a65b6-6244-4565-aeac-dc6eacba97eb",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c587ae60-e27a-433f-b41b-e6dedfd8c3d7"
        },
        "item": {
          "id": "753c6459-a779-48c4-915b-98da85af5b73",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d02f5b02-7fcd-4546-843e-71dad3505a22",
          "status": "OK",
          "code": 200,
          "responseTime": 2647,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fa02e2-6510-461a-8e15-ad1ca357b57e",
        "cursor": {
          "ref": "d02bc6bd-911b-4374-ad0b-42661edca80e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "16140e49-d727-4cf0-af43-51b1f93a2970"
        },
        "item": {
          "id": "76fa02e2-6510-461a-8e15-ad1ca357b57e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8ac8e428-29fa-4048-bd98-296a57bc8153",
          "status": "OK",
          "code": 200,
          "responseTime": 4168,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "28df4bf2-1df0-44df-bf31-b6e341e77d80",
        "cursor": {
          "ref": "1fd244e0-07bf-4dbd-ad5f-ecfd562d6332",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d550bbd9-27c7-4087-8dd9-d7fc68643b28"
        },
        "item": {
          "id": "28df4bf2-1df0-44df-bf31-b6e341e77d80",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05556d5e-b1cc-453f-952e-f224dc5fda6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28df4bf2-1df0-44df-bf31-b6e341e77d80",
        "cursor": {
          "ref": "1fd244e0-07bf-4dbd-ad5f-ecfd562d6332",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d550bbd9-27c7-4087-8dd9-d7fc68643b28"
        },
        "item": {
          "id": "28df4bf2-1df0-44df-bf31-b6e341e77d80",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05556d5e-b1cc-453f-952e-f224dc5fda6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34100404-6c02-4779-bcba-56ed9e2888e8",
        "cursor": {
          "ref": "efd3ff8e-7c54-4702-a4df-05016b1ac452",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "acb10693-f2f7-4fad-af82-b3ba247c5b75"
        },
        "item": {
          "id": "34100404-6c02-4779-bcba-56ed9e2888e8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "507f7513-c6f3-4dfa-a6d9-73ebd4189c3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 90,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a11db4-bcfd-46c0-825e-9188f21a6fb8",
        "cursor": {
          "ref": "143c8fea-2b01-41d9-ae24-77236773bc1e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "efd80b8f-819c-4e6b-a5a7-4e93b714dff7"
        },
        "item": {
          "id": "27a11db4-bcfd-46c0-825e-9188f21a6fb8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5c72edb8-ed01-40e5-bc0b-3f9fde01419e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}